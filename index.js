#!/usr/bin/env node
(() => {
    var __webpack_modules__ = {
        108: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.version = void 0; B.version = "abi/5.8.0" }, 97: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.defaultAbiCoder = B.AbiCoder = void 0; var L = N(2006); var I = N(1338); var J = N(6127); var H = N(108); var U = new J.Logger(H.version); var X = N(1430); var G = N(7206); var V = N(9811); var Z = N(5238); var W = N(5837); var q = N(5994); var Q = N(5005); var Y = N(8849); var ff = N(9117); var ef = N(8068); var tf = N(5186); var rf = new RegExp(/^bytes([0-9]*)$/); var af = new RegExp(/^(u?int)([0-9]*)$/); var nf = function () { function AbiCoder(T) { (0, I.defineReadOnly)(this, "coerceFunc", T || null) } AbiCoder.prototype._getCoder = function (T) { var B = this; switch (T.baseType) { case "address": return new G.AddressCoder(T.name); case "bool": return new Z.BooleanCoder(T.name); case "string": return new ff.StringCoder(T.name); case "bytes": return new W.BytesCoder(T.name); case "array": return new V.ArrayCoder(this._getCoder(T.arrayChildren), T.arrayLength, T.name); case "tuple": return new ef.TupleCoder((T.components || []).map((function (T) { return B._getCoder(T) })), T.name); case "": return new Q.NullCoder(T.name) }var N = T.type.match(af); if (N) { var L = parseInt(N[2] || "256"); if (L === 0 || L > 256 || L % 8 !== 0) { U.throwArgumentError("invalid " + N[1] + " bit length", "param", T) } return new Y.NumberCoder(L / 8, N[1] === "int", T.name) } N = T.type.match(rf); if (N) { var L = parseInt(N[1]); if (L === 0 || L > 32) { U.throwArgumentError("invalid bytes length", "param", T) } return new q.FixedBytesCoder(L, T.name) } return U.throwArgumentError("invalid type", "type", T.type) }; AbiCoder.prototype._getWordSize = function () { return 32 }; AbiCoder.prototype._getReader = function (T, B) { return new X.Reader(T, this._getWordSize(), this.coerceFunc, B) }; AbiCoder.prototype._getWriter = function () { return new X.Writer(this._getWordSize()) }; AbiCoder.prototype.getDefaultValue = function (T) { var B = this; var N = T.map((function (T) { return B._getCoder(tf.ParamType.from(T)) })); var L = new ef.TupleCoder(N, "_"); return L.defaultValue() }; AbiCoder.prototype.encode = function (T, B) { var N = this; if (T.length !== B.length) { U.throwError("types/values length mismatch", J.Logger.errors.INVALID_ARGUMENT, { count: { types: T.length, values: B.length }, value: { types: T, values: B } }) } var L = T.map((function (T) { return N._getCoder(tf.ParamType.from(T)) })); var I = new ef.TupleCoder(L, "_"); var H = this._getWriter(); I.encode(H, B); return H.data }; AbiCoder.prototype.decode = function (T, B, N) { var I = this; var J = T.map((function (T) { return I._getCoder(tf.ParamType.from(T)) })); var H = new ef.TupleCoder(J, "_"); return H.decode(this._getReader((0, L.arrayify)(B), N)) }; return AbiCoder }(); B.AbiCoder = nf; B.defaultAbiCoder = new nf }, 1430: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.Reader = B.Writer = B.Coder = B.checkResultErrors = void 0; var L = N(2006); var I = N(8202); var J = N(1338); var H = N(6127); var U = N(108); var X = new H.Logger(U.version); function checkResultErrors(T) { var B = []; var checkErrors = function (T, N) { if (!Array.isArray(N)) { return } for (var L in N) { var I = T.slice(); I.push(L); try { checkErrors(I, N[L]) } catch (T) { B.push({ path: I, error: T }) } } }; checkErrors([], T); return B } B.checkResultErrors = checkResultErrors; var G = function () { function Coder(T, B, N, L) { this.name = T; this.type = B; this.localName = N; this.dynamic = L } Coder.prototype._throwError = function (T, B) { X.throwArgumentError(T, this.localName, B) }; return Coder }(); B.Coder = G; var V = function () { function Writer(T) { (0, J.defineReadOnly)(this, "wordSize", T || 32); this._data = []; this._dataLength = 0; this._padding = new Uint8Array(T) } Object.defineProperty(Writer.prototype, "data", { get: function () { return (0, L.hexConcat)(this._data) }, enumerable: false, configurable: true }); Object.defineProperty(Writer.prototype, "length", { get: function () { return this._dataLength }, enumerable: false, configurable: true }); Writer.prototype._writeData = function (T) { this._data.push(T); this._dataLength += T.length; return T.length }; Writer.prototype.appendWriter = function (T) { return this._writeData((0, L.concat)(T._data)) }; Writer.prototype.writeBytes = function (T) { var B = (0, L.arrayify)(T); var N = B.length % this.wordSize; if (N) { B = (0, L.concat)([B, this._padding.slice(N)]) } return this._writeData(B) }; Writer.prototype._getValue = function (T) { var B = (0, L.arrayify)(I.BigNumber.from(T)); if (B.length > this.wordSize) { X.throwError("value out-of-bounds", H.Logger.errors.BUFFER_OVERRUN, { length: this.wordSize, offset: B.length }) } if (B.length % this.wordSize) { B = (0, L.concat)([this._padding.slice(B.length % this.wordSize), B]) } return B }; Writer.prototype.writeValue = function (T) { return this._writeData(this._getValue(T)) }; Writer.prototype.writeUpdatableValue = function () { var T = this; var B = this._data.length; this._data.push(this._padding); this._dataLength += this.wordSize; return function (N) { T._data[B] = T._getValue(N) } }; return Writer }(); B.Writer = V; var Z = function () { function Reader(T, B, N, I) { (0, J.defineReadOnly)(this, "_data", (0, L.arrayify)(T)); (0, J.defineReadOnly)(this, "wordSize", B || 32); (0, J.defineReadOnly)(this, "_coerceFunc", N); (0, J.defineReadOnly)(this, "allowLoose", I); this._offset = 0 } Object.defineProperty(Reader.prototype, "data", { get: function () { return (0, L.hexlify)(this._data) }, enumerable: false, configurable: true }); Object.defineProperty(Reader.prototype, "consumed", { get: function () { return this._offset }, enumerable: false, configurable: true }); Reader.coerce = function (T, B) { var N = T.match("^u?int([0-9]+)$"); if (N && parseInt(N[1]) <= 48) { B = B.toNumber() } return B }; Reader.prototype.coerce = function (T, B) { if (this._coerceFunc) { return this._coerceFunc(T, B) } return Reader.coerce(T, B) }; Reader.prototype._peekBytes = function (T, B, N) { var L = Math.ceil(B / this.wordSize) * this.wordSize; if (this._offset + L > this._data.length) { if (this.allowLoose && N && this._offset + B <= this._data.length) { L = B } else { X.throwError("data out-of-bounds", H.Logger.errors.BUFFER_OVERRUN, { length: this._data.length, offset: this._offset + L }) } } return this._data.slice(this._offset, this._offset + L) }; Reader.prototype.subReader = function (T) { return new Reader(this._data.slice(this._offset + T), this.wordSize, this._coerceFunc, this.allowLoose) }; Reader.prototype.readBytes = function (T, B) { var N = this._peekBytes(0, T, !!B); this._offset += N.length; return N.slice(0, T) }; Reader.prototype.readValue = function () { return I.BigNumber.from(this.readBytes(this.wordSize)) }; return Reader }(); B.Reader = Z }, 7206: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.AddressCoder = void 0; var I = N(5745); var J = N(2006); var H = N(1430); var U = function (T) { L(AddressCoder, T); function AddressCoder(B) { return T.call(this, "address", "address", B, false) || this } AddressCoder.prototype.defaultValue = function () { return "0x0000000000000000000000000000000000000000" }; AddressCoder.prototype.encode = function (T, B) { try { B = (0, I.getAddress)(B) } catch (T) { this._throwError(T.message, B) } return T.writeValue(B) }; AddressCoder.prototype.decode = function (T) { return (0, I.getAddress)((0, J.hexZeroPad)(T.readValue().toHexString(), 20)) }; return AddressCoder }(H.Coder); B.AddressCoder = U }, 8775: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.AnonymousCoder = void 0; var I = N(1430); var J = function (T) { L(AnonymousCoder, T); function AnonymousCoder(B) { var N = T.call(this, B.name, B.type, undefined, B.dynamic) || this; N.coder = B; return N } AnonymousCoder.prototype.defaultValue = function () { return this.coder.defaultValue() }; AnonymousCoder.prototype.encode = function (T, B) { return this.coder.encode(T, B) }; AnonymousCoder.prototype.decode = function (T) { return this.coder.decode(T) }; return AnonymousCoder }(I.Coder); B.AnonymousCoder = J }, 9811: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.ArrayCoder = B.unpack = B.pack = void 0; var I = N(6127); var J = N(108); var H = new I.Logger(J.version); var U = N(1430); var X = N(8775); function pack(T, B, N) { var L = null; if (Array.isArray(N)) { L = N } else if (N && typeof N === "object") { var J = {}; L = B.map((function (T) { var B = T.localName; if (!B) { H.throwError("cannot encode object for signature with missing names", I.Logger.errors.INVALID_ARGUMENT, { argument: "values", coder: T, value: N }) } if (J[B]) { H.throwError("cannot encode object for signature with duplicate names", I.Logger.errors.INVALID_ARGUMENT, { argument: "values", coder: T, value: N }) } J[B] = true; return N[B] })) } else { H.throwArgumentError("invalid tuple value", "tuple", N) } if (B.length !== L.length) { H.throwArgumentError("types/value length mismatch", "tuple", N) } var X = new U.Writer(T.wordSize); var G = new U.Writer(T.wordSize); var V = []; B.forEach((function (T, B) { var N = L[B]; if (T.dynamic) { var I = G.length; T.encode(G, N); var J = X.writeUpdatableValue(); V.push((function (T) { J(T + I) })) } else { T.encode(X, N) } })); V.forEach((function (T) { T(X.length) })); var Z = T.appendWriter(X); Z += T.appendWriter(G); return Z } B.pack = pack; function unpack(T, B) { var N = []; var L = T.subReader(0); B.forEach((function (B) { var J = null; if (B.dynamic) { var H = T.readValue(); var U = L.subReader(H.toNumber()); try { J = B.decode(U) } catch (T) { if (T.code === I.Logger.errors.BUFFER_OVERRUN) { throw T } J = T; J.baseType = B.name; J.name = B.localName; J.type = B.type } } else { try { J = B.decode(T) } catch (T) { if (T.code === I.Logger.errors.BUFFER_OVERRUN) { throw T } J = T; J.baseType = B.name; J.name = B.localName; J.type = B.type } } if (J != undefined) { N.push(J) } })); var J = B.reduce((function (T, B) { var N = B.localName; if (N) { if (!T[N]) { T[N] = 0 } T[N]++ } return T }), {}); B.forEach((function (T, B) { var L = T.localName; if (!L || J[L] !== 1) { return } if (L === "length") { L = "_length" } if (N[L] != null) { return } var I = N[B]; if (I instanceof Error) { Object.defineProperty(N, L, { enumerable: true, get: function () { throw I } }) } else { N[L] = I } })); var _loop_1 = function (T) { var B = N[T]; if (B instanceof Error) { Object.defineProperty(N, T, { enumerable: true, get: function () { throw B } }) } }; for (var H = 0; H < N.length; H++) { _loop_1(H) } return Object.freeze(N) } B.unpack = unpack; var G = function (T) { L(ArrayCoder, T); function ArrayCoder(B, N, L) { var I = this; var J = B.type + "[" + (N >= 0 ? N : "") + "]"; var H = N === -1 || B.dynamic; I = T.call(this, "array", J, L, H) || this; I.coder = B; I.length = N; return I } ArrayCoder.prototype.defaultValue = function () { var T = this.coder.defaultValue(); var B = []; for (var N = 0; N < this.length; N++) { B.push(T) } return B }; ArrayCoder.prototype.encode = function (T, B) { if (!Array.isArray(B)) { this._throwError("expected array value", B) } var N = this.length; if (N === -1) { N = B.length; T.writeValue(B.length) } H.checkArgumentCount(B.length, N, "coder array" + (this.localName ? " " + this.localName : "")); var L = []; for (var I = 0; I < B.length; I++) { L.push(this.coder) } return pack(T, L, B) }; ArrayCoder.prototype.decode = function (T) { var B = this.length; if (B === -1) { B = T.readValue().toNumber(); if (B * 32 > T._data.length) { H.throwError("insufficient data length", I.Logger.errors.BUFFER_OVERRUN, { length: T._data.length, count: B }) } } var N = []; for (var L = 0; L < B; L++) { N.push(new X.AnonymousCoder(this.coder)) } return T.coerce(this.name, unpack(T, N)) }; return ArrayCoder }(U.Coder); B.ArrayCoder = G }, 5238: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.BooleanCoder = void 0; var I = N(1430); var J = function (T) { L(BooleanCoder, T); function BooleanCoder(B) { return T.call(this, "bool", "bool", B, false) || this } BooleanCoder.prototype.defaultValue = function () { return false }; BooleanCoder.prototype.encode = function (T, B) { return T.writeValue(B ? 1 : 0) }; BooleanCoder.prototype.decode = function (T) { return T.coerce(this.type, !T.readValue().isZero()) }; return BooleanCoder }(I.Coder); B.BooleanCoder = J }, 5837: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.BytesCoder = B.DynamicBytesCoder = void 0; var I = N(2006); var J = N(1430); var H = function (T) { L(DynamicBytesCoder, T); function DynamicBytesCoder(B, N) { return T.call(this, B, B, N, true) || this } DynamicBytesCoder.prototype.defaultValue = function () { return "0x" }; DynamicBytesCoder.prototype.encode = function (T, B) { B = (0, I.arrayify)(B); var N = T.writeValue(B.length); N += T.writeBytes(B); return N }; DynamicBytesCoder.prototype.decode = function (T) { return T.readBytes(T.readValue().toNumber(), true) }; return DynamicBytesCoder }(J.Coder); B.DynamicBytesCoder = H; var U = function (T) { L(BytesCoder, T); function BytesCoder(B) { return T.call(this, "bytes", B) || this } BytesCoder.prototype.decode = function (B) { return B.coerce(this.name, (0, I.hexlify)(T.prototype.decode.call(this, B))) }; return BytesCoder }(H); B.BytesCoder = U }, 5994: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.FixedBytesCoder = void 0; var I = N(2006); var J = N(1430); var H = function (T) { L(FixedBytesCoder, T); function FixedBytesCoder(B, N) { var L = this; var I = "bytes" + String(B); L = T.call(this, I, I, N, false) || this; L.size = B; return L } FixedBytesCoder.prototype.defaultValue = function () { return "0x0000000000000000000000000000000000000000000000000000000000000000".substring(0, 2 + this.size * 2) }; FixedBytesCoder.prototype.encode = function (T, B) { var N = (0, I.arrayify)(B); if (N.length !== this.size) { this._throwError("incorrect data length", B) } return T.writeBytes(N) }; FixedBytesCoder.prototype.decode = function (T) { return T.coerce(this.name, (0, I.hexlify)(T.readBytes(this.size))) }; return FixedBytesCoder }(J.Coder); B.FixedBytesCoder = H }, 5005: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.NullCoder = void 0; var I = N(1430); var J = function (T) { L(NullCoder, T); function NullCoder(B) { return T.call(this, "null", "", B, false) || this } NullCoder.prototype.defaultValue = function () { return null }; NullCoder.prototype.encode = function (T, B) { if (B != null) { this._throwError("not null", B) } return T.writeBytes([]) }; NullCoder.prototype.decode = function (T) { T.readBytes(0); return T.coerce(this.name, null) }; return NullCoder }(I.Coder); B.NullCoder = J }, 8849: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.NumberCoder = void 0; var I = N(8202); var J = N(9848); var H = N(1430); var U = function (T) { L(NumberCoder, T); function NumberCoder(B, N, L) { var I = this; var J = (N ? "int" : "uint") + B * 8; I = T.call(this, J, J, L, false) || this; I.size = B; I.signed = N; return I } NumberCoder.prototype.defaultValue = function () { return 0 }; NumberCoder.prototype.encode = function (T, B) { var N = I.BigNumber.from(B); var L = J.MaxUint256.mask(T.wordSize * 8); if (this.signed) { var H = L.mask(this.size * 8 - 1); if (N.gt(H) || N.lt(H.add(J.One).mul(J.NegativeOne))) { this._throwError("value out-of-bounds", B) } } else if (N.lt(J.Zero) || N.gt(L.mask(this.size * 8))) { this._throwError("value out-of-bounds", B) } N = N.toTwos(this.size * 8).mask(this.size * 8); if (this.signed) { N = N.fromTwos(this.size * 8).toTwos(8 * T.wordSize) } return T.writeValue(N) }; NumberCoder.prototype.decode = function (T) { var B = T.readValue().mask(this.size * 8); if (this.signed) { B = B.fromTwos(this.size * 8) } return T.coerce(this.name, B) }; return NumberCoder }(H.Coder); B.NumberCoder = U }, 9117: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.StringCoder = void 0; var I = N(3859); var J = N(5837); var H = function (T) { L(StringCoder, T); function StringCoder(B) { return T.call(this, "string", B) || this } StringCoder.prototype.defaultValue = function () { return "" }; StringCoder.prototype.encode = function (B, N) { return T.prototype.encode.call(this, B, (0, I.toUtf8Bytes)(N)) }; StringCoder.prototype.decode = function (B) { return (0, I.toUtf8String)(T.prototype.decode.call(this, B)) }; return StringCoder }(J.DynamicBytesCoder); B.StringCoder = H }, 8068: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.TupleCoder = void 0; var I = N(1430); var J = N(9811); var H = function (T) { L(TupleCoder, T); function TupleCoder(B, N) { var L = this; var I = false; var J = []; B.forEach((function (T) { if (T.dynamic) { I = true } J.push(T.type) })); var H = "tuple(" + J.join(",") + ")"; L = T.call(this, "tuple", H, N, I) || this; L.coders = B; return L } TupleCoder.prototype.defaultValue = function () { var T = []; this.coders.forEach((function (B) { T.push(B.defaultValue()) })); var B = this.coders.reduce((function (T, B) { var N = B.localName; if (N) { if (!T[N]) { T[N] = 0 } T[N]++ } return T }), {}); this.coders.forEach((function (N, L) { var I = N.localName; if (!I || B[I] !== 1) { return } if (I === "length") { I = "_length" } if (T[I] != null) { return } T[I] = T[L] })); return Object.freeze(T) }; TupleCoder.prototype.encode = function (T, B) { return (0, J.pack)(T, this.coders, B) }; TupleCoder.prototype.decode = function (T) { return T.coerce(this.name, (0, J.unpack)(T, this.coders)) }; return TupleCoder }(I.Coder); B.TupleCoder = H }, 5186: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.ErrorFragment = B.FunctionFragment = B.ConstructorFragment = B.EventFragment = B.Fragment = B.ParamType = B.FormatTypes = void 0; var I = N(8202); var J = N(1338); var H = N(6127); var U = N(108); var X = new H.Logger(U.version); var G = {}; var V = { calldata: true, memory: true, storage: true }; var Z = { calldata: true, memory: true }; function checkModifier(T, B) { if (T === "bytes" || T === "string") { if (V[B]) { return true } } else if (T === "address") { if (B === "payable") { return true } } else if (T.indexOf("[") >= 0 || T === "tuple") { if (Z[B]) { return true } } if (V[B] || B === "payable") { X.throwArgumentError("invalid modifier", "name", B) } return false } function parseParamType(T, B) { var N = T; function throwError(B) { X.throwArgumentError("unexpected character at position " + B, "param", T) } T = T.replace(/\s/g, " "); function newNode(T) { var N = { type: "", name: "", parent: T, state: { allowType: true } }; if (B) { N.indexed = false } return N } var L = { type: "", name: "", state: { allowType: true } }; var I = L; for (var J = 0; J < T.length; J++) { var H = T[J]; switch (H) { case "(": if (I.state.allowType && I.type === "") { I.type = "tuple" } else if (!I.state.allowParams) { throwError(J) } I.state.allowType = false; I.type = verifyType(I.type); I.components = [newNode(I)]; I = I.components[0]; break; case ")": delete I.state; if (I.name === "indexed") { if (!B) { throwError(J) } I.indexed = true; I.name = "" } if (checkModifier(I.type, I.name)) { I.name = "" } I.type = verifyType(I.type); var U = I; I = I.parent; if (!I) { throwError(J) } delete U.parent; I.state.allowParams = false; I.state.allowName = true; I.state.allowArray = true; break; case ",": delete I.state; if (I.name === "indexed") { if (!B) { throwError(J) } I.indexed = true; I.name = "" } if (checkModifier(I.type, I.name)) { I.name = "" } I.type = verifyType(I.type); var G = newNode(I.parent); I.parent.components.push(G); delete I.parent; I = G; break; case " ": if (I.state.allowType) { if (I.type !== "") { I.type = verifyType(I.type); delete I.state.allowType; I.state.allowName = true; I.state.allowParams = true } } if (I.state.allowName) { if (I.name !== "") { if (I.name === "indexed") { if (!B) { throwError(J) } if (I.indexed) { throwError(J) } I.indexed = true; I.name = "" } else if (checkModifier(I.type, I.name)) { I.name = "" } else { I.state.allowName = false } } } break; case "[": if (!I.state.allowArray) { throwError(J) } I.type += H; I.state.allowArray = false; I.state.allowName = false; I.state.readArray = true; break; case "]": if (!I.state.readArray) { throwError(J) } I.type += H; I.state.readArray = false; I.state.allowArray = true; I.state.allowName = true; break; default: if (I.state.allowType) { I.type += H; I.state.allowParams = true; I.state.allowArray = true } else if (I.state.allowName) { I.name += H; delete I.state.allowArray } else if (I.state.readArray) { I.type += H } else { throwError(J) } } } if (I.parent) { X.throwArgumentError("unexpected eof", "param", T) } delete L.state; if (I.name === "indexed") { if (!B) { throwError(N.length - 7) } if (I.indexed) { throwError(N.length - 7) } I.indexed = true; I.name = "" } else if (checkModifier(I.type, I.name)) { I.name = "" } L.type = verifyType(L.type); return L } function populate(T, B) { for (var N in B) { (0, J.defineReadOnly)(T, N, B[N]) } } B.FormatTypes = Object.freeze({ sighash: "sighash", minimal: "minimal", full: "full", json: "json" }); var W = new RegExp(/^(.*)\[([0-9]*)\]$/); var q = function () { function ParamType(T, B) { if (T !== G) { X.throwError("use fromString", H.Logger.errors.UNSUPPORTED_OPERATION, { operation: "new ParamType()" }) } populate(this, B); var N = this.type.match(W); if (N) { populate(this, { arrayLength: parseInt(N[2] || "-1"), arrayChildren: ParamType.fromObject({ type: N[1], components: this.components }), baseType: "array" }) } else { populate(this, { arrayLength: null, arrayChildren: null, baseType: this.components != null ? "tuple" : this.type }) } this._isParamType = true; Object.freeze(this) } ParamType.prototype.format = function (T) { if (!T) { T = B.FormatTypes.sighash } if (!B.FormatTypes[T]) { X.throwArgumentError("invalid format type", "format", T) } if (T === B.FormatTypes.json) { var N = { type: this.baseType === "tuple" ? "tuple" : this.type, name: this.name || undefined }; if (typeof this.indexed === "boolean") { N.indexed = this.indexed } if (this.components) { N.components = this.components.map((function (B) { return JSON.parse(B.format(T)) })) } return JSON.stringify(N) } var L = ""; if (this.baseType === "array") { L += this.arrayChildren.format(T); L += "[" + (this.arrayLength < 0 ? "" : String(this.arrayLength)) + "]" } else { if (this.baseType === "tuple") { if (T !== B.FormatTypes.sighash) { L += this.type } L += "(" + this.components.map((function (B) { return B.format(T) })).join(T === B.FormatTypes.full ? ", " : ",") + ")" } else { L += this.type } } if (T !== B.FormatTypes.sighash) { if (this.indexed === true) { L += " indexed" } if (T === B.FormatTypes.full && this.name) { L += " " + this.name } } return L }; ParamType.from = function (T, B) { if (typeof T === "string") { return ParamType.fromString(T, B) } return ParamType.fromObject(T) }; ParamType.fromObject = function (T) { if (ParamType.isParamType(T)) { return T } return new ParamType(G, { name: T.name || null, type: verifyType(T.type), indexed: T.indexed == null ? null : !!T.indexed, components: T.components ? T.components.map(ParamType.fromObject) : null }) }; ParamType.fromString = function (T, B) { function ParamTypify(T) { return ParamType.fromObject({ name: T.name, type: T.type, indexed: T.indexed, components: T.components }) } return ParamTypify(parseParamType(T, !!B)) }; ParamType.isParamType = function (T) { return !!(T != null && T._isParamType) }; return ParamType }(); B.ParamType = q; function parseParams(T, B) { return splitNesting(T).map((function (T) { return q.fromString(T, B) })) } var Q = function () { function Fragment(T, B) { if (T !== G) { X.throwError("use a static from method", H.Logger.errors.UNSUPPORTED_OPERATION, { operation: "new Fragment()" }) } populate(this, B); this._isFragment = true; Object.freeze(this) } Fragment.from = function (T) { if (Fragment.isFragment(T)) { return T } if (typeof T === "string") { return Fragment.fromString(T) } return Fragment.fromObject(T) }; Fragment.fromObject = function (T) { if (Fragment.isFragment(T)) { return T } switch (T.type) { case "function": return ef.fromObject(T); case "event": return Y.fromObject(T); case "constructor": return ff.fromObject(T); case "error": return tf.fromObject(T); case "fallback": case "receive": return null }return X.throwArgumentError("invalid fragment object", "value", T) }; Fragment.fromString = function (T) { T = T.replace(/\s/g, " "); T = T.replace(/\(/g, " (").replace(/\)/g, ") ").replace(/\s+/g, " "); T = T.trim(); if (T.split(" ")[0] === "event") { return Y.fromString(T.substring(5).trim()) } else if (T.split(" ")[0] === "function") { return ef.fromString(T.substring(8).trim()) } else if (T.split("(")[0].trim() === "constructor") { return ff.fromString(T.trim()) } else if (T.split(" ")[0] === "error") { return tf.fromString(T.substring(5).trim()) } return X.throwArgumentError("unsupported fragment", "value", T) }; Fragment.isFragment = function (T) { return !!(T && T._isFragment) }; return Fragment }(); B.Fragment = Q; var Y = function (T) { L(EventFragment, T); function EventFragment() { return T !== null && T.apply(this, arguments) || this } EventFragment.prototype.format = function (T) { if (!T) { T = B.FormatTypes.sighash } if (!B.FormatTypes[T]) { X.throwArgumentError("invalid format type", "format", T) } if (T === B.FormatTypes.json) { return JSON.stringify({ type: "event", anonymous: this.anonymous, name: this.name, inputs: this.inputs.map((function (B) { return JSON.parse(B.format(T)) })) }) } var N = ""; if (T !== B.FormatTypes.sighash) { N += "event " } N += this.name + "(" + this.inputs.map((function (B) { return B.format(T) })).join(T === B.FormatTypes.full ? ", " : ",") + ") "; if (T !== B.FormatTypes.sighash) { if (this.anonymous) { N += "anonymous " } } return N.trim() }; EventFragment.from = function (T) { if (typeof T === "string") { return EventFragment.fromString(T) } return EventFragment.fromObject(T) }; EventFragment.fromObject = function (T) { if (EventFragment.isEventFragment(T)) { return T } if (T.type !== "event") { X.throwArgumentError("invalid event object", "value", T) } var B = { name: verifyIdentifier(T.name), anonymous: T.anonymous, inputs: T.inputs ? T.inputs.map(q.fromObject) : [], type: "event" }; return new EventFragment(G, B) }; EventFragment.fromString = function (T) { var B = T.match(af); if (!B) { X.throwArgumentError("invalid event string", "value", T) } var N = false; B[3].split(" ").forEach((function (T) { switch (T.trim()) { case "anonymous": N = true; break; case "": break; default: X.warn("unknown modifier: " + T) } })); return EventFragment.fromObject({ name: B[1].trim(), anonymous: N, inputs: parseParams(B[2], true), type: "event" }) }; EventFragment.isEventFragment = function (T) { return T && T._isFragment && T.type === "event" }; return EventFragment }(Q); B.EventFragment = Y; function parseGas(T, B) { B.gas = null; var N = T.split("@"); if (N.length !== 1) { if (N.length > 2) { X.throwArgumentError("invalid human-readable ABI signature", "value", T) } if (!N[1].match(/^[0-9]+$/)) { X.throwArgumentError("invalid human-readable ABI signature gas", "value", T) } B.gas = I.BigNumber.from(N[1]); return N[0] } return T } function parseModifiers(T, B) { B.constant = false; B.payable = false; B.stateMutability = "nonpayable"; T.split(" ").forEach((function (T) { switch (T.trim()) { case "constant": B.constant = true; break; case "payable": B.payable = true; B.stateMutability = "payable"; break; case "nonpayable": B.payable = false; B.stateMutability = "nonpayable"; break; case "pure": B.constant = true; B.stateMutability = "pure"; break; case "view": B.constant = true; B.stateMutability = "view"; break; case "external": case "public": case "": break; default: console.log("unknown modifier: " + T) } })) } function verifyState(T) { var B = { constant: false, payable: true, stateMutability: "payable" }; if (T.stateMutability != null) { B.stateMutability = T.stateMutability; B.constant = B.stateMutability === "view" || B.stateMutability === "pure"; if (T.constant != null) { if (!!T.constant !== B.constant) { X.throwArgumentError("cannot have constant function with mutability " + B.stateMutability, "value", T) } } B.payable = B.stateMutability === "payable"; if (T.payable != null) { if (!!T.payable !== B.payable) { X.throwArgumentError("cannot have payable function with mutability " + B.stateMutability, "value", T) } } } else if (T.payable != null) { B.payable = !!T.payable; if (T.constant == null && !B.payable && T.type !== "constructor") { X.throwArgumentError("unable to determine stateMutability", "value", T) } B.constant = !!T.constant; if (B.constant) { B.stateMutability = "view" } else { B.stateMutability = B.payable ? "payable" : "nonpayable" } if (B.payable && B.constant) { X.throwArgumentError("cannot have constant payable function", "value", T) } } else if (T.constant != null) { B.constant = !!T.constant; B.payable = !B.constant; B.stateMutability = B.constant ? "view" : "payable" } else if (T.type !== "constructor") { X.throwArgumentError("unable to determine stateMutability", "value", T) } return B } var ff = function (T) { L(ConstructorFragment, T); function ConstructorFragment() { return T !== null && T.apply(this, arguments) || this } ConstructorFragment.prototype.format = function (T) { if (!T) { T = B.FormatTypes.sighash } if (!B.FormatTypes[T]) { X.throwArgumentError("invalid format type", "format", T) } if (T === B.FormatTypes.json) { return JSON.stringify({ type: "constructor", stateMutability: this.stateMutability !== "nonpayable" ? this.stateMutability : undefined, payable: this.payable, gas: this.gas ? this.gas.toNumber() : undefined, inputs: this.inputs.map((function (B) { return JSON.parse(B.format(T)) })) }) } if (T === B.FormatTypes.sighash) { X.throwError("cannot format a constructor for sighash", H.Logger.errors.UNSUPPORTED_OPERATION, { operation: "format(sighash)" }) } var N = "constructor(" + this.inputs.map((function (B) { return B.format(T) })).join(T === B.FormatTypes.full ? ", " : ",") + ") "; if (this.stateMutability && this.stateMutability !== "nonpayable") { N += this.stateMutability + " " } return N.trim() }; ConstructorFragment.from = function (T) { if (typeof T === "string") { return ConstructorFragment.fromString(T) } return ConstructorFragment.fromObject(T) }; ConstructorFragment.fromObject = function (T) { if (ConstructorFragment.isConstructorFragment(T)) { return T } if (T.type !== "constructor") { X.throwArgumentError("invalid constructor object", "value", T) } var B = verifyState(T); if (B.constant) { X.throwArgumentError("constructor cannot be constant", "value", T) } var N = { name: null, type: T.type, inputs: T.inputs ? T.inputs.map(q.fromObject) : [], payable: B.payable, stateMutability: B.stateMutability, gas: T.gas ? I.BigNumber.from(T.gas) : null }; return new ConstructorFragment(G, N) }; ConstructorFragment.fromString = function (T) { var B = { type: "constructor" }; T = parseGas(T, B); var N = T.match(af); if (!N || N[1].trim() !== "constructor") { X.throwArgumentError("invalid constructor string", "value", T) } B.inputs = parseParams(N[2].trim(), false); parseModifiers(N[3].trim(), B); return ConstructorFragment.fromObject(B) }; ConstructorFragment.isConstructorFragment = function (T) { return T && T._isFragment && T.type === "constructor" }; return ConstructorFragment }(Q); B.ConstructorFragment = ff; var ef = function (T) { L(FunctionFragment, T); function FunctionFragment() { return T !== null && T.apply(this, arguments) || this } FunctionFragment.prototype.format = function (T) { if (!T) { T = B.FormatTypes.sighash } if (!B.FormatTypes[T]) { X.throwArgumentError("invalid format type", "format", T) } if (T === B.FormatTypes.json) { return JSON.stringify({ type: "function", name: this.name, constant: this.constant, stateMutability: this.stateMutability !== "nonpayable" ? this.stateMutability : undefined, payable: this.payable, gas: this.gas ? this.gas.toNumber() : undefined, inputs: this.inputs.map((function (B) { return JSON.parse(B.format(T)) })), outputs: this.outputs.map((function (B) { return JSON.parse(B.format(T)) })) }) } var N = ""; if (T !== B.FormatTypes.sighash) { N += "function " } N += this.name + "(" + this.inputs.map((function (B) { return B.format(T) })).join(T === B.FormatTypes.full ? ", " : ",") + ") "; if (T !== B.FormatTypes.sighash) { if (this.stateMutability) { if (this.stateMutability !== "nonpayable") { N += this.stateMutability + " " } } else if (this.constant) { N += "view " } if (this.outputs && this.outputs.length) { N += "returns (" + this.outputs.map((function (B) { return B.format(T) })).join(", ") + ") " } if (this.gas != null) { N += "@" + this.gas.toString() + " " } } return N.trim() }; FunctionFragment.from = function (T) { if (typeof T === "string") { return FunctionFragment.fromString(T) } return FunctionFragment.fromObject(T) }; FunctionFragment.fromObject = function (T) { if (FunctionFragment.isFunctionFragment(T)) { return T } if (T.type !== "function") { X.throwArgumentError("invalid function object", "value", T) } var B = verifyState(T); var N = { type: T.type, name: verifyIdentifier(T.name), constant: B.constant, inputs: T.inputs ? T.inputs.map(q.fromObject) : [], outputs: T.outputs ? T.outputs.map(q.fromObject) : [], payable: B.payable, stateMutability: B.stateMutability, gas: T.gas ? I.BigNumber.from(T.gas) : null }; return new FunctionFragment(G, N) }; FunctionFragment.fromString = function (T) { var B = { type: "function" }; T = parseGas(T, B); var N = T.split(" returns "); if (N.length > 2) { X.throwArgumentError("invalid function string", "value", T) } var L = N[0].match(af); if (!L) { X.throwArgumentError("invalid function signature", "value", T) } B.name = L[1].trim(); if (B.name) { verifyIdentifier(B.name) } B.inputs = parseParams(L[2], false); parseModifiers(L[3].trim(), B); if (N.length > 1) { var I = N[1].match(af); if (I[1].trim() != "" || I[3].trim() != "") { X.throwArgumentError("unexpected tokens", "value", T) } B.outputs = parseParams(I[2], false) } else { B.outputs = [] } return FunctionFragment.fromObject(B) }; FunctionFragment.isFunctionFragment = function (T) { return T && T._isFragment && T.type === "function" }; return FunctionFragment }(ff); B.FunctionFragment = ef; function checkForbidden(T) { var B = T.format(); if (B === "Error(string)" || B === "Panic(uint256)") { X.throwArgumentError("cannot specify user defined " + B + " error", "fragment", T) } return T } var tf = function (T) { L(ErrorFragment, T); function ErrorFragment() { return T !== null && T.apply(this, arguments) || this } ErrorFragment.prototype.format = function (T) { if (!T) { T = B.FormatTypes.sighash } if (!B.FormatTypes[T]) { X.throwArgumentError("invalid format type", "format", T) } if (T === B.FormatTypes.json) { return JSON.stringify({ type: "error", name: this.name, inputs: this.inputs.map((function (B) { return JSON.parse(B.format(T)) })) }) } var N = ""; if (T !== B.FormatTypes.sighash) { N += "error " } N += this.name + "(" + this.inputs.map((function (B) { return B.format(T) })).join(T === B.FormatTypes.full ? ", " : ",") + ") "; return N.trim() }; ErrorFragment.from = function (T) { if (typeof T === "string") { return ErrorFragment.fromString(T) } return ErrorFragment.fromObject(T) }; ErrorFragment.fromObject = function (T) { if (ErrorFragment.isErrorFragment(T)) { return T } if (T.type !== "error") { X.throwArgumentError("invalid error object", "value", T) } var B = { type: T.type, name: verifyIdentifier(T.name), inputs: T.inputs ? T.inputs.map(q.fromObject) : [] }; return checkForbidden(new ErrorFragment(G, B)) }; ErrorFragment.fromString = function (T) { var B = { type: "error" }; var N = T.match(af); if (!N) { X.throwArgumentError("invalid error signature", "value", T) } B.name = N[1].trim(); if (B.name) { verifyIdentifier(B.name) } B.inputs = parseParams(N[2], false); return checkForbidden(ErrorFragment.fromObject(B)) }; ErrorFragment.isErrorFragment = function (T) { return T && T._isFragment && T.type === "error" }; return ErrorFragment }(Q); B.ErrorFragment = tf; function verifyType(T) { if (T.match(/^uint($|[^1-9])/)) { T = "uint256" + T.substring(4) } else if (T.match(/^int($|[^1-9])/)) { T = "int256" + T.substring(3) } return T } var rf = new RegExp("^[a-zA-Z$_][a-zA-Z0-9$_]*$"); function verifyIdentifier(T) { if (!T || !T.match(rf)) { X.throwArgumentError('invalid identifier "' + T + '"', "value", T) } return T } var af = new RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$"); function splitNesting(T) { T = T.trim(); var B = []; var N = ""; var L = 0; for (var I = 0; I < T.length; I++) { var J = T[I]; if (J === "," && L === 0) { B.push(N); N = "" } else { N += J; if (J === "(") { L++ } else if (J === ")") { L--; if (L === -1) { X.throwArgumentError("unbalanced parenthesis", "value", T) } } } } if (N) { B.push(N) } return B } }, 219: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.TransactionDescription = B.LogDescription = B.checkResultErrors = B.Indexed = B.Interface = B.defaultAbiCoder = B.AbiCoder = B.FormatTypes = B.ParamType = B.FunctionFragment = B.Fragment = B.EventFragment = B.ErrorFragment = B.ConstructorFragment = void 0; var L = N(5186); Object.defineProperty(B, "ConstructorFragment", { enumerable: true, get: function () { return L.ConstructorFragment } }); Object.defineProperty(B, "ErrorFragment", { enumerable: true, get: function () { return L.ErrorFragment } }); Object.defineProperty(B, "EventFragment", { enumerable: true, get: function () { return L.EventFragment } }); Object.defineProperty(B, "FormatTypes", { enumerable: true, get: function () { return L.FormatTypes } }); Object.defineProperty(B, "Fragment", { enumerable: true, get: function () { return L.Fragment } }); Object.defineProperty(B, "FunctionFragment", { enumerable: true, get: function () { return L.FunctionFragment } }); Object.defineProperty(B, "ParamType", { enumerable: true, get: function () { return L.ParamType } }); var I = N(97); Object.defineProperty(B, "AbiCoder", { enumerable: true, get: function () { return I.AbiCoder } }); Object.defineProperty(B, "defaultAbiCoder", { enumerable: true, get: function () { return I.defaultAbiCoder } }); var J = N(9472); Object.defineProperty(B, "checkResultErrors", { enumerable: true, get: function () { return J.checkResultErrors } }); Object.defineProperty(B, "Indexed", { enumerable: true, get: function () { return J.Indexed } }); Object.defineProperty(B, "Interface", { enumerable: true, get: function () { return J.Interface } }); Object.defineProperty(B, "LogDescription", { enumerable: true, get: function () { return J.LogDescription } }); Object.defineProperty(B, "TransactionDescription", { enumerable: true, get: function () { return J.TransactionDescription } }) }, 9472: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.Interface = B.Indexed = B.ErrorDescription = B.TransactionDescription = B.LogDescription = B.checkResultErrors = void 0; var I = N(5745); var J = N(8202); var H = N(2006); var U = N(1839); var X = N(6938); var G = N(1338); var V = N(97); var Z = N(1430); Object.defineProperty(B, "checkResultErrors", { enumerable: true, get: function () { return Z.checkResultErrors } }); var W = N(5186); var q = N(6127); var Q = N(108); var Y = new q.Logger(Q.version); var ff = function (T) { L(LogDescription, T); function LogDescription() { return T !== null && T.apply(this, arguments) || this } return LogDescription }(G.Description); B.LogDescription = ff; var ef = function (T) { L(TransactionDescription, T); function TransactionDescription() { return T !== null && T.apply(this, arguments) || this } return TransactionDescription }(G.Description); B.TransactionDescription = ef; var tf = function (T) { L(ErrorDescription, T); function ErrorDescription() { return T !== null && T.apply(this, arguments) || this } return ErrorDescription }(G.Description); B.ErrorDescription = tf; var rf = function (T) { L(Indexed, T); function Indexed() { return T !== null && T.apply(this, arguments) || this } Indexed.isIndexed = function (T) { return !!(T && T._isIndexed) }; return Indexed }(G.Description); B.Indexed = rf; var af = { "0x08c379a0": { signature: "Error(string)", name: "Error", inputs: ["string"], reason: true }, "0x4e487b71": { signature: "Panic(uint256)", name: "Panic", inputs: ["uint256"] } }; function wrapAccessError(T, B) { var N = new Error("deferred error during ABI decoding triggered accessing " + T); N.error = B; return N } var nf = function () { function Interface(T) { var B = this.constructor; var N = this; var L = []; if (typeof T === "string") { L = JSON.parse(T) } else { L = T } (0, G.defineReadOnly)(this, "fragments", L.map((function (T) { return W.Fragment.from(T) })).filter((function (T) { return T != null }))); (0, G.defineReadOnly)(this, "_abiCoder", (0, G.getStatic)(B, "getAbiCoder")()); (0, G.defineReadOnly)(this, "functions", {}); (0, G.defineReadOnly)(this, "errors", {}); (0, G.defineReadOnly)(this, "events", {}); (0, G.defineReadOnly)(this, "structs", {}); this.fragments.forEach((function (T) { var B = null; switch (T.type) { case "constructor": if (N.deploy) { Y.warn("duplicate definition - constructor"); return } (0, G.defineReadOnly)(N, "deploy", T); return; case "function": B = N.functions; break; case "event": B = N.events; break; case "error": B = N.errors; break; default: return }var L = T.format(); if (B[L]) { Y.warn("duplicate definition - " + L); return } B[L] = T })); if (!this.deploy) { (0, G.defineReadOnly)(this, "deploy", W.ConstructorFragment.from({ payable: false, type: "constructor" })) } (0, G.defineReadOnly)(this, "_isInterface", true) } Interface.prototype.format = function (T) { if (!T) { T = W.FormatTypes.full } if (T === W.FormatTypes.sighash) { Y.throwArgumentError("interface does not support formatting sighash", "format", T) } var B = this.fragments.map((function (B) { return B.format(T) })); if (T === W.FormatTypes.json) { return JSON.stringify(B.map((function (T) { return JSON.parse(T) }))) } return B }; Interface.getAbiCoder = function () { return V.defaultAbiCoder }; Interface.getAddress = function (T) { return (0, I.getAddress)(T) }; Interface.getSighash = function (T) { return (0, H.hexDataSlice)((0, U.id)(T.format()), 0, 4) }; Interface.getEventTopic = function (T) { return (0, U.id)(T.format()) }; Interface.prototype.getFunction = function (T) { if ((0, H.isHexString)(T)) { for (var B in this.functions) { if (T === this.getSighash(B)) { return this.functions[B] } } Y.throwArgumentError("no matching function", "sighash", T) } if (T.indexOf("(") === -1) { var N = T.trim(); var L = Object.keys(this.functions).filter((function (T) { return T.split("(")[0] === N })); if (L.length === 0) { Y.throwArgumentError("no matching function", "name", N) } else if (L.length > 1) { Y.throwArgumentError("multiple matching functions", "name", N) } return this.functions[L[0]] } var I = this.functions[W.FunctionFragment.fromString(T).format()]; if (!I) { Y.throwArgumentError("no matching function", "signature", T) } return I }; Interface.prototype.getEvent = function (T) { if ((0, H.isHexString)(T)) { var B = T.toLowerCase(); for (var N in this.events) { if (B === this.getEventTopic(N)) { return this.events[N] } } Y.throwArgumentError("no matching event", "topichash", B) } if (T.indexOf("(") === -1) { var L = T.trim(); var I = Object.keys(this.events).filter((function (T) { return T.split("(")[0] === L })); if (I.length === 0) { Y.throwArgumentError("no matching event", "name", L) } else if (I.length > 1) { Y.throwArgumentError("multiple matching events", "name", L) } return this.events[I[0]] } var J = this.events[W.EventFragment.fromString(T).format()]; if (!J) { Y.throwArgumentError("no matching event", "signature", T) } return J }; Interface.prototype.getError = function (T) { if ((0, H.isHexString)(T)) { var B = (0, G.getStatic)(this.constructor, "getSighash"); for (var N in this.errors) { var L = this.errors[N]; if (T === B(L)) { return this.errors[N] } } Y.throwArgumentError("no matching error", "sighash", T) } if (T.indexOf("(") === -1) { var I = T.trim(); var J = Object.keys(this.errors).filter((function (T) { return T.split("(")[0] === I })); if (J.length === 0) { Y.throwArgumentError("no matching error", "name", I) } else if (J.length > 1) { Y.throwArgumentError("multiple matching errors", "name", I) } return this.errors[J[0]] } var U = this.errors[W.FunctionFragment.fromString(T).format()]; if (!U) { Y.throwArgumentError("no matching error", "signature", T) } return U }; Interface.prototype.getSighash = function (T) { if (typeof T === "string") { try { T = this.getFunction(T) } catch (B) { try { T = this.getError(T) } catch (T) { throw B } } } return (0, G.getStatic)(this.constructor, "getSighash")(T) }; Interface.prototype.getEventTopic = function (T) { if (typeof T === "string") { T = this.getEvent(T) } return (0, G.getStatic)(this.constructor, "getEventTopic")(T) }; Interface.prototype._decodeParams = function (T, B) { return this._abiCoder.decode(T, B) }; Interface.prototype._encodeParams = function (T, B) { return this._abiCoder.encode(T, B) }; Interface.prototype.encodeDeploy = function (T) { return this._encodeParams(this.deploy.inputs, T || []) }; Interface.prototype.decodeErrorResult = function (T, B) { if (typeof T === "string") { T = this.getError(T) } var N = (0, H.arrayify)(B); if ((0, H.hexlify)(N.slice(0, 4)) !== this.getSighash(T)) { Y.throwArgumentError("data signature does not match error " + T.name + ".", "data", (0, H.hexlify)(N)) } return this._decodeParams(T.inputs, N.slice(4)) }; Interface.prototype.encodeErrorResult = function (T, B) { if (typeof T === "string") { T = this.getError(T) } return (0, H.hexlify)((0, H.concat)([this.getSighash(T), this._encodeParams(T.inputs, B || [])])) }; Interface.prototype.decodeFunctionData = function (T, B) { if (typeof T === "string") { T = this.getFunction(T) } var N = (0, H.arrayify)(B); if ((0, H.hexlify)(N.slice(0, 4)) !== this.getSighash(T)) { Y.throwArgumentError("data signature does not match function " + T.name + ".", "data", (0, H.hexlify)(N)) } return this._decodeParams(T.inputs, N.slice(4)) }; Interface.prototype.encodeFunctionData = function (T, B) { if (typeof T === "string") { T = this.getFunction(T) } return (0, H.hexlify)((0, H.concat)([this.getSighash(T), this._encodeParams(T.inputs, B || [])])) }; Interface.prototype.decodeFunctionResult = function (T, B) { if (typeof T === "string") { T = this.getFunction(T) } var N = (0, H.arrayify)(B); var L = null; var I = ""; var J = null; var U = null; var X = null; switch (N.length % this._abiCoder._getWordSize()) { case 0: try { return this._abiCoder.decode(T.outputs, N) } catch (Z) { } break; case 4: { var G = (0, H.hexlify)(N.slice(0, 4)); var V = af[G]; if (V) { J = this._abiCoder.decode(V.inputs, N.slice(4)); U = V.name; X = V.signature; if (V.reason) { L = J[0] } if (U === "Error") { I = "; VM Exception while processing transaction: reverted with reason string " + JSON.stringify(J[0]) } else if (U === "Panic") { I = "; VM Exception while processing transaction: reverted with panic code " + J[0] } } else { try { var Z = this.getError(G); J = this._abiCoder.decode(Z.inputs, N.slice(4)); U = Z.name; X = Z.format() } catch (Z) { } } break } }return Y.throwError("call revert exception" + I, q.Logger.errors.CALL_EXCEPTION, { method: T.format(), data: (0, H.hexlify)(B), errorArgs: J, errorName: U, errorSignature: X, reason: L }) }; Interface.prototype.encodeFunctionResult = function (T, B) { if (typeof T === "string") { T = this.getFunction(T) } return (0, H.hexlify)(this._abiCoder.encode(T.outputs, B || [])) }; Interface.prototype.encodeFilterTopics = function (T, B) { var N = this; if (typeof T === "string") { T = this.getEvent(T) } if (B.length > T.inputs.length) { Y.throwError("too many arguments for " + T.format(), q.Logger.errors.UNEXPECTED_ARGUMENT, { argument: "values", value: B }) } var L = []; if (!T.anonymous) { L.push(this.getEventTopic(T)) } var encodeTopic = function (T, B) { if (T.type === "string") { return (0, U.id)(B) } else if (T.type === "bytes") { return (0, X.keccak256)((0, H.hexlify)(B)) } if (T.type === "bool" && typeof B === "boolean") { B = B ? "0x01" : "0x00" } if (T.type.match(/^u?int/)) { B = J.BigNumber.from(B).toHexString() } if (T.type === "address") { N._abiCoder.encode(["address"], [B]) } return (0, H.hexZeroPad)((0, H.hexlify)(B), 32) }; B.forEach((function (B, N) { var I = T.inputs[N]; if (!I.indexed) { if (B != null) { Y.throwArgumentError("cannot filter non-indexed parameters; must be null", "contract." + I.name, B) } return } if (B == null) { L.push(null) } else if (I.baseType === "array" || I.baseType === "tuple") { Y.throwArgumentError("filtering with tuples or arrays not supported", "contract." + I.name, B) } else if (Array.isArray(B)) { L.push(B.map((function (T) { return encodeTopic(I, T) }))) } else { L.push(encodeTopic(I, B)) } })); while (L.length && L[L.length - 1] === null) { L.pop() } return L }; Interface.prototype.encodeEventLog = function (T, B) { var N = this; if (typeof T === "string") { T = this.getEvent(T) } var L = []; var I = []; var J = []; if (!T.anonymous) { L.push(this.getEventTopic(T)) } if (B.length !== T.inputs.length) { Y.throwArgumentError("event arguments/values mismatch", "values", B) } T.inputs.forEach((function (T, H) { var G = B[H]; if (T.indexed) { if (T.type === "string") { L.push((0, U.id)(G)) } else if (T.type === "bytes") { L.push((0, X.keccak256)(G)) } else if (T.baseType === "tuple" || T.baseType === "array") { throw new Error("not implemented") } else { L.push(N._abiCoder.encode([T.type], [G])) } } else { I.push(T); J.push(G) } })); return { data: this._abiCoder.encode(I, J), topics: L } }; Interface.prototype.decodeEventLog = function (T, B, N) { if (typeof T === "string") { T = this.getEvent(T) } if (N != null && !T.anonymous) { var L = this.getEventTopic(T); if (!(0, H.isHexString)(N[0], 32) || N[0].toLowerCase() !== L) { Y.throwError("fragment/topic mismatch", q.Logger.errors.INVALID_ARGUMENT, { argument: "topics[0]", expected: L, value: N[0] }) } N = N.slice(1) } var I = []; var J = []; var U = []; T.inputs.forEach((function (T, B) { if (T.indexed) { if (T.type === "string" || T.type === "bytes" || T.baseType === "tuple" || T.baseType === "array") { I.push(W.ParamType.fromObject({ type: "bytes32", name: T.name })); U.push(true) } else { I.push(T); U.push(false) } } else { J.push(T); U.push(false) } })); var X = N != null ? this._abiCoder.decode(I, (0, H.concat)(N)) : null; var G = this._abiCoder.decode(J, B, true); var V = []; var Z = 0, Q = 0; T.inputs.forEach((function (T, B) { if (T.indexed) { if (X == null) { V[B] = new rf({ _isIndexed: true, hash: null }) } else if (U[B]) { V[B] = new rf({ _isIndexed: true, hash: X[Q++] }) } else { try { V[B] = X[Q++] } catch (T) { V[B] = T } } } else { try { V[B] = G[Z++] } catch (T) { V[B] = T } } if (T.name && V[T.name] == null) { var N = V[B]; if (N instanceof Error) { Object.defineProperty(V, T.name, { enumerable: true, get: function () { throw wrapAccessError("property " + JSON.stringify(T.name), N) } }) } else { V[T.name] = N } } })); var _loop_1 = function (T) { var B = V[T]; if (B instanceof Error) { Object.defineProperty(V, T, { enumerable: true, get: function () { throw wrapAccessError("index " + T, B) } }) } }; for (var ff = 0; ff < V.length; ff++) { _loop_1(ff) } return Object.freeze(V) }; Interface.prototype.parseTransaction = function (T) { var B = this.getFunction(T.data.substring(0, 10).toLowerCase()); if (!B) { return null } return new ef({ args: this._abiCoder.decode(B.inputs, "0x" + T.data.substring(10)), functionFragment: B, name: B.name, signature: B.format(), sighash: this.getSighash(B), value: J.BigNumber.from(T.value || "0") }) }; Interface.prototype.parseLog = function (T) { var B = this.getEvent(T.topics[0]); if (!B || B.anonymous) { return null } return new ff({ eventFragment: B, name: B.name, signature: B.format(), topic: this.getEventTopic(B), args: this.decodeEventLog(B, T.data, T.topics) }) }; Interface.prototype.parseError = function (T) { var B = (0, H.hexlify)(T); var N = this.getError(B.substring(0, 10).toLowerCase()); if (!N) { return null } return new tf({ args: this._abiCoder.decode(N.inputs, "0x" + B.substring(10)), errorFragment: N, name: N.name, signature: N.format(), sighash: this.getSighash(N) }) }; Interface.isInterface = function (T) { return !!(T && T._isInterface) }; return Interface }(); B.Interface = nf }, 5122: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.version = void 0; B.version = "abstract-provider/5.8.0" }, 2825: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); var I = this && this.__awaiter || function (T, B, N, L) { function adopt(T) { return T instanceof N ? T : new N((function (B) { B(T) })) } return new (N || (N = Promise))((function (N, I) { function fulfilled(T) { try { step(L.next(T)) } catch (T) { I(T) } } function rejected(T) { try { step(L["throw"](T)) } catch (T) { I(T) } } function step(T) { T.done ? N(T.value) : adopt(T.value).then(fulfilled, rejected) } step((L = L.apply(T, B || [])).next()) })) }; var J = this && this.__generator || function (T, B) { var N = { label: 0, sent: function () { if (J[0] & 1) throw J[1]; return J[1] }, trys: [], ops: [] }, L, I, J, H; return H = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (H[Symbol.iterator] = function () { return this }), H; function verb(T) { return function (B) { return step([T, B]) } } function step(H) { if (L) throw new TypeError("Generator is already executing."); while (N) try { if (L = 1, I && (J = H[0] & 2 ? I["return"] : H[0] ? I["throw"] || ((J = I["return"]) && J.call(I), 0) : I.next) && !(J = J.call(I, H[1])).done) return J; if (I = 0, J) H = [H[0] & 2, J.value]; switch (H[0]) { case 0: case 1: J = H; break; case 4: N.label++; return { value: H[1], done: false }; case 5: N.label++; I = H[1]; H = [0]; continue; case 7: H = N.ops.pop(); N.trys.pop(); continue; default: if (!(J = N.trys, J = J.length > 0 && J[J.length - 1]) && (H[0] === 6 || H[0] === 2)) { N = 0; continue } if (H[0] === 3 && (!J || H[1] > J[0] && H[1] < J[3])) { N.label = H[1]; break } if (H[0] === 6 && N.label < J[1]) { N.label = J[1]; J = H; break } if (J && N.label < J[2]) { N.label = J[2]; N.ops.push(H); break } if (J[2]) N.ops.pop(); N.trys.pop(); continue }H = B.call(T, N) } catch (T) { H = [6, T]; I = 0 } finally { L = J = 0 } if (H[0] & 5) throw H[1]; return { value: H[0] ? H[1] : void 0, done: true } } }; Object.defineProperty(B, "__esModule", { value: true }); B.Provider = B.TransactionOrderForkEvent = B.TransactionForkEvent = B.BlockForkEvent = B.ForkEvent = void 0; var H = N(8202); var U = N(2006); var X = N(1338); var G = N(6127); var V = N(5122); var Z = new G.Logger(V.version); var W = function (T) { L(ForkEvent, T); function ForkEvent() { return T !== null && T.apply(this, arguments) || this } ForkEvent.isForkEvent = function (T) { return !!(T && T._isForkEvent) }; return ForkEvent }(X.Description); B.ForkEvent = W; var q = function (T) { L(BlockForkEvent, T); function BlockForkEvent(B, N) { var L = this; if (!(0, U.isHexString)(B, 32)) { Z.throwArgumentError("invalid blockHash", "blockHash", B) } L = T.call(this, { _isForkEvent: true, _isBlockForkEvent: true, expiry: N || 0, blockHash: B }) || this; return L } return BlockForkEvent }(W); B.BlockForkEvent = q; var Q = function (T) { L(TransactionForkEvent, T); function TransactionForkEvent(B, N) { var L = this; if (!(0, U.isHexString)(B, 32)) { Z.throwArgumentError("invalid transaction hash", "hash", B) } L = T.call(this, { _isForkEvent: true, _isTransactionForkEvent: true, expiry: N || 0, hash: B }) || this; return L } return TransactionForkEvent }(W); B.TransactionForkEvent = Q; var Y = function (T) { L(TransactionOrderForkEvent, T); function TransactionOrderForkEvent(B, N, L) { var I = this; if (!(0, U.isHexString)(B, 32)) { Z.throwArgumentError("invalid transaction hash", "beforeHash", B) } if (!(0, U.isHexString)(N, 32)) { Z.throwArgumentError("invalid transaction hash", "afterHash", N) } I = T.call(this, { _isForkEvent: true, _isTransactionOrderForkEvent: true, expiry: L || 0, beforeHash: B, afterHash: N }) || this; return I } return TransactionOrderForkEvent }(W); B.TransactionOrderForkEvent = Y; var ff = function () { function Provider() { var T = this.constructor; Z.checkAbstract(T, Provider); (0, X.defineReadOnly)(this, "_isProvider", true) } Provider.prototype.getFeeData = function () { return I(this, void 0, void 0, (function () { var T, B, N, L, I, U; return J(this, (function (J) { switch (J.label) { case 0: return [4, (0, X.resolveProperties)({ block: this.getBlock("latest"), gasPrice: this.getGasPrice().catch((function (T) { return null })) })]; case 1: T = J.sent(), B = T.block, N = T.gasPrice; L = null, I = null, U = null; if (B && B.baseFeePerGas) { L = B.baseFeePerGas; U = H.BigNumber.from("1500000000"); I = B.baseFeePerGas.mul(2).add(U) } return [2, { lastBaseFeePerGas: L, maxFeePerGas: I, maxPriorityFeePerGas: U, gasPrice: N }] } })) })) }; Provider.prototype.addListener = function (T, B) { return this.on(T, B) }; Provider.prototype.removeListener = function (T, B) { return this.off(T, B) }; Provider.isProvider = function (T) { return !!(T && T._isProvider) }; return Provider }(); B.Provider = ff }, 99: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.version = void 0; B.version = "abstract-signer/5.8.0" }, 3870: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); var I = this && this.__awaiter || function (T, B, N, L) { function adopt(T) { return T instanceof N ? T : new N((function (B) { B(T) })) } return new (N || (N = Promise))((function (N, I) { function fulfilled(T) { try { step(L.next(T)) } catch (T) { I(T) } } function rejected(T) { try { step(L["throw"](T)) } catch (T) { I(T) } } function step(T) { T.done ? N(T.value) : adopt(T.value).then(fulfilled, rejected) } step((L = L.apply(T, B || [])).next()) })) }; var J = this && this.__generator || function (T, B) { var N = { label: 0, sent: function () { if (J[0] & 1) throw J[1]; return J[1] }, trys: [], ops: [] }, L, I, J, H; return H = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (H[Symbol.iterator] = function () { return this }), H; function verb(T) { return function (B) { return step([T, B]) } } function step(H) { if (L) throw new TypeError("Generator is already executing."); while (N) try { if (L = 1, I && (J = H[0] & 2 ? I["return"] : H[0] ? I["throw"] || ((J = I["return"]) && J.call(I), 0) : I.next) && !(J = J.call(I, H[1])).done) return J; if (I = 0, J) H = [H[0] & 2, J.value]; switch (H[0]) { case 0: case 1: J = H; break; case 4: N.label++; return { value: H[1], done: false }; case 5: N.label++; I = H[1]; H = [0]; continue; case 7: H = N.ops.pop(); N.trys.pop(); continue; default: if (!(J = N.trys, J = J.length > 0 && J[J.length - 1]) && (H[0] === 6 || H[0] === 2)) { N = 0; continue } if (H[0] === 3 && (!J || H[1] > J[0] && H[1] < J[3])) { N.label = H[1]; break } if (H[0] === 6 && N.label < J[1]) { N.label = J[1]; J = H; break } if (J && N.label < J[2]) { N.label = J[2]; N.ops.push(H); break } if (J[2]) N.ops.pop(); N.trys.pop(); continue }H = B.call(T, N) } catch (T) { H = [6, T]; I = 0 } finally { L = J = 0 } if (H[0] & 5) throw H[1]; return { value: H[0] ? H[1] : void 0, done: true } } }; Object.defineProperty(B, "__esModule", { value: true }); B.VoidSigner = B.Signer = void 0; var H = N(1338); var U = N(6127); var X = N(99); var G = new U.Logger(X.version); var V = ["accessList", "ccipReadEnabled", "chainId", "customData", "data", "from", "gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "to", "type", "value"]; var Z = [U.Logger.errors.INSUFFICIENT_FUNDS, U.Logger.errors.NONCE_EXPIRED, U.Logger.errors.REPLACEMENT_UNDERPRICED]; var W = function () { function Signer() { var T = this.constructor; G.checkAbstract(T, Signer); (0, H.defineReadOnly)(this, "_isSigner", true) } Signer.prototype.getBalance = function (T) { return I(this, void 0, void 0, (function () { return J(this, (function (B) { switch (B.label) { case 0: this._checkProvider("getBalance"); return [4, this.provider.getBalance(this.getAddress(), T)]; case 1: return [2, B.sent()] } })) })) }; Signer.prototype.getTransactionCount = function (T) { return I(this, void 0, void 0, (function () { return J(this, (function (B) { switch (B.label) { case 0: this._checkProvider("getTransactionCount"); return [4, this.provider.getTransactionCount(this.getAddress(), T)]; case 1: return [2, B.sent()] } })) })) }; Signer.prototype.estimateGas = function (T) { return I(this, void 0, void 0, (function () { var B; return J(this, (function (N) { switch (N.label) { case 0: this._checkProvider("estimateGas"); return [4, (0, H.resolveProperties)(this.checkTransaction(T))]; case 1: B = N.sent(); return [4, this.provider.estimateGas(B)]; case 2: return [2, N.sent()] } })) })) }; Signer.prototype.call = function (T, B) { return I(this, void 0, void 0, (function () { var N; return J(this, (function (L) { switch (L.label) { case 0: this._checkProvider("call"); return [4, (0, H.resolveProperties)(this.checkTransaction(T))]; case 1: N = L.sent(); return [4, this.provider.call(N, B)]; case 2: return [2, L.sent()] } })) })) }; Signer.prototype.sendTransaction = function (T) { return I(this, void 0, void 0, (function () { var B, N; return J(this, (function (L) { switch (L.label) { case 0: this._checkProvider("sendTransaction"); return [4, this.populateTransaction(T)]; case 1: B = L.sent(); return [4, this.signTransaction(B)]; case 2: N = L.sent(); return [4, this.provider.sendTransaction(N)]; case 3: return [2, L.sent()] } })) })) }; Signer.prototype.getChainId = function () { return I(this, void 0, void 0, (function () { var T; return J(this, (function (B) { switch (B.label) { case 0: this._checkProvider("getChainId"); return [4, this.provider.getNetwork()]; case 1: T = B.sent(); return [2, T.chainId] } })) })) }; Signer.prototype.getGasPrice = function () { return I(this, void 0, void 0, (function () { return J(this, (function (T) { switch (T.label) { case 0: this._checkProvider("getGasPrice"); return [4, this.provider.getGasPrice()]; case 1: return [2, T.sent()] } })) })) }; Signer.prototype.getFeeData = function () { return I(this, void 0, void 0, (function () { return J(this, (function (T) { switch (T.label) { case 0: this._checkProvider("getFeeData"); return [4, this.provider.getFeeData()]; case 1: return [2, T.sent()] } })) })) }; Signer.prototype.resolveName = function (T) { return I(this, void 0, void 0, (function () { return J(this, (function (B) { switch (B.label) { case 0: this._checkProvider("resolveName"); return [4, this.provider.resolveName(T)]; case 1: return [2, B.sent()] } })) })) }; Signer.prototype.checkTransaction = function (T) { for (var B in T) { if (V.indexOf(B) === -1) { G.throwArgumentError("invalid transaction key: " + B, "transaction", T) } } var N = (0, H.shallowCopy)(T); if (N.from == null) { N.from = this.getAddress() } else { N.from = Promise.all([Promise.resolve(N.from), this.getAddress()]).then((function (B) { if (B[0].toLowerCase() !== B[1].toLowerCase()) { G.throwArgumentError("from address mismatch", "transaction", T) } return B[0] })) } return N }; Signer.prototype.populateTransaction = function (T) { return I(this, void 0, void 0, (function () { var B, N, L, X; var V = this; return J(this, (function (W) { switch (W.label) { case 0: return [4, (0, H.resolveProperties)(this.checkTransaction(T))]; case 1: B = W.sent(); if (B.to != null) { B.to = Promise.resolve(B.to).then((function (T) { return I(V, void 0, void 0, (function () { var B; return J(this, (function (N) { switch (N.label) { case 0: if (T == null) { return [2, null] } return [4, this.resolveName(T)]; case 1: B = N.sent(); if (B == null) { G.throwArgumentError("provided ENS name resolves to null", "tx.to", T) } return [2, B] } })) })) })); B.to.catch((function (T) { })) } N = B.maxFeePerGas != null || B.maxPriorityFeePerGas != null; if (B.gasPrice != null && (B.type === 2 || N)) { G.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", T) } else if ((B.type === 0 || B.type === 1) && N) { G.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", T) } if (!((B.type === 2 || B.type == null) && (B.maxFeePerGas != null && B.maxPriorityFeePerGas != null))) return [3, 2]; B.type = 2; return [3, 5]; case 2: if (!(B.type === 0 || B.type === 1)) return [3, 3]; if (B.gasPrice == null) { B.gasPrice = this.getGasPrice() } return [3, 5]; case 3: return [4, this.getFeeData()]; case 4: L = W.sent(); if (B.type == null) { if (L.maxFeePerGas != null && L.maxPriorityFeePerGas != null) { B.type = 2; if (B.gasPrice != null) { X = B.gasPrice; delete B.gasPrice; B.maxFeePerGas = X; B.maxPriorityFeePerGas = X } else { if (B.maxFeePerGas == null) { B.maxFeePerGas = L.maxFeePerGas } if (B.maxPriorityFeePerGas == null) { B.maxPriorityFeePerGas = L.maxPriorityFeePerGas } } } else if (L.gasPrice != null) { if (N) { G.throwError("network does not support EIP-1559", U.Logger.errors.UNSUPPORTED_OPERATION, { operation: "populateTransaction" }) } if (B.gasPrice == null) { B.gasPrice = L.gasPrice } B.type = 0 } else { G.throwError("failed to get consistent fee data", U.Logger.errors.UNSUPPORTED_OPERATION, { operation: "signer.getFeeData" }) } } else if (B.type === 2) { if (B.maxFeePerGas == null) { B.maxFeePerGas = L.maxFeePerGas } if (B.maxPriorityFeePerGas == null) { B.maxPriorityFeePerGas = L.maxPriorityFeePerGas } } W.label = 5; case 5: if (B.nonce == null) { B.nonce = this.getTransactionCount("pending") } if (B.gasLimit == null) { B.gasLimit = this.estimateGas(B).catch((function (T) { if (Z.indexOf(T.code) >= 0) { throw T } return G.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", U.Logger.errors.UNPREDICTABLE_GAS_LIMIT, { error: T, tx: B }) })) } if (B.chainId == null) { B.chainId = this.getChainId() } else { B.chainId = Promise.all([Promise.resolve(B.chainId), this.getChainId()]).then((function (B) { if (B[1] !== 0 && B[0] !== B[1]) { G.throwArgumentError("chainId address mismatch", "transaction", T) } return B[0] })) } return [4, (0, H.resolveProperties)(B)]; case 6: return [2, W.sent()] } })) })) }; Signer.prototype._checkProvider = function (T) { if (!this.provider) { G.throwError("missing provider", U.Logger.errors.UNSUPPORTED_OPERATION, { operation: T || "_checkProvider" }) } }; Signer.isSigner = function (T) { return !!(T && T._isSigner) }; return Signer }(); B.Signer = W; var q = function (T) { L(VoidSigner, T); function VoidSigner(B, N) { var L = T.call(this) || this; (0, H.defineReadOnly)(L, "address", B); (0, H.defineReadOnly)(L, "provider", N || null); return L } VoidSigner.prototype.getAddress = function () { return Promise.resolve(this.address) }; VoidSigner.prototype._fail = function (T, B) { return Promise.resolve().then((function () { G.throwError(T, U.Logger.errors.UNSUPPORTED_OPERATION, { operation: B }) })) }; VoidSigner.prototype.signMessage = function (T) { return this._fail("VoidSigner cannot sign messages", "signMessage") }; VoidSigner.prototype.signTransaction = function (T) { return this._fail("VoidSigner cannot sign transactions", "signTransaction") }; VoidSigner.prototype._signTypedData = function (T, B, N) { return this._fail("VoidSigner cannot sign typed data", "signTypedData") }; VoidSigner.prototype.connect = function (T) { return new VoidSigner(this.address, T) }; return VoidSigner }(W); B.VoidSigner = q }, 810: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.version = void 0; B.version = "address/5.8.0" }, 5745: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.getCreate2Address = B.getContractAddress = B.getIcapAddress = B.isAddress = B.getAddress = void 0; var L = N(2006); var I = N(8202); var J = N(6938); var H = N(7659); var U = N(6127); var X = N(810); var G = new U.Logger(X.version); function getChecksumAddress(T) { if (!(0, L.isHexString)(T, 20)) { G.throwArgumentError("invalid address", "address", T) } T = T.toLowerCase(); var B = T.substring(2).split(""); var N = new Uint8Array(40); for (var I = 0; I < 40; I++) { N[I] = B[I].charCodeAt(0) } var H = (0, L.arrayify)((0, J.keccak256)(N)); for (var I = 0; I < 40; I += 2) { if (H[I >> 1] >> 4 >= 8) { B[I] = B[I].toUpperCase() } if ((H[I >> 1] & 15) >= 8) { B[I + 1] = B[I + 1].toUpperCase() } } return "0x" + B.join("") } var V = 9007199254740991; function log10(T) { if (Math.log10) { return Math.log10(T) } return Math.log(T) / Math.LN10 } var Z = {}; for (var W = 0; W < 10; W++) { Z[String(W)] = String(W) } for (var W = 0; W < 26; W++) { Z[String.fromCharCode(65 + W)] = String(10 + W) } var q = Math.floor(log10(V)); function ibanChecksum(T) { T = T.toUpperCase(); T = T.substring(4) + T.substring(0, 2) + "00"; var B = T.split("").map((function (T) { return Z[T] })).join(""); while (B.length >= q) { var N = B.substring(0, q); B = parseInt(N, 10) % 97 + B.substring(N.length) } var L = String(98 - parseInt(B, 10) % 97); while (L.length < 2) { L = "0" + L } return L } function getAddress(T) { var B = null; if (typeof T !== "string") { G.throwArgumentError("invalid address", "address", T) } if (T.match(/^(0x)?[0-9a-fA-F]{40}$/)) { if (T.substring(0, 2) !== "0x") { T = "0x" + T } B = getChecksumAddress(T); if (T.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && B !== T) { G.throwArgumentError("bad address checksum", "address", T) } } else if (T.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) { if (T.substring(2, 4) !== ibanChecksum(T)) { G.throwArgumentError("bad icap checksum", "address", T) } B = (0, I._base36To16)(T.substring(4)); while (B.length < 40) { B = "0" + B } B = getChecksumAddress("0x" + B) } else { G.throwArgumentError("invalid address", "address", T) } return B } B.getAddress = getAddress; function isAddress(T) { try { getAddress(T); return true } catch (T) { } return false } B.isAddress = isAddress; function getIcapAddress(T) { var B = (0, I._base16To36)(getAddress(T).substring(2)).toUpperCase(); while (B.length < 30) { B = "0" + B } return "XE" + ibanChecksum("XE00" + B) + B } B.getIcapAddress = getIcapAddress; function getContractAddress(T) { var B = null; try { B = getAddress(T.from) } catch (B) { G.throwArgumentError("missing from address", "transaction", T) } var N = (0, L.stripZeros)((0, L.arrayify)(I.BigNumber.from(T.nonce).toHexString())); return getAddress((0, L.hexDataSlice)((0, J.keccak256)((0, H.encode)([B, N])), 12)) } B.getContractAddress = getContractAddress; function getCreate2Address(T, B, N) { if ((0, L.hexDataLength)(B) !== 32) { G.throwArgumentError("salt must be 32 bytes", "salt", B) } if ((0, L.hexDataLength)(N) !== 32) { G.throwArgumentError("initCodeHash must be 32 bytes", "initCodeHash", N) } return getAddress((0, L.hexDataSlice)((0, J.keccak256)((0, L.concat)(["0xff", getAddress(T), B, N])), 12)) } B.getCreate2Address = getCreate2Address }, 6957: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.encode = B.decode = void 0; var L = N(2006); function decode(T) { return (0, L.arrayify)(new Uint8Array(Buffer.from(T, "base64"))) } B.decode = decode; function encode(T) { return Buffer.from((0, L.arrayify)(T)).toString("base64") } B.encode = encode }, 9032: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.encode = B.decode = void 0; var L = N(6957); Object.defineProperty(B, "decode", { enumerable: true, get: function () { return L.decode } }); Object.defineProperty(B, "encode", { enumerable: true, get: function () { return L.encode } }) }, 1426: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.Base58 = B.Base32 = B.BaseX = void 0; var L = N(2006); var I = N(1338); var J = function () { function BaseX(T) { (0, I.defineReadOnly)(this, "alphabet", T); (0, I.defineReadOnly)(this, "base", T.length); (0, I.defineReadOnly)(this, "_alphabetMap", {}); (0, I.defineReadOnly)(this, "_leader", T.charAt(0)); for (var B = 0; B < T.length; B++) { this._alphabetMap[T.charAt(B)] = B } } BaseX.prototype.encode = function (T) { var B = (0, L.arrayify)(T); if (B.length === 0) { return "" } var N = [0]; for (var I = 0; I < B.length; ++I) { var J = B[I]; for (var H = 0; H < N.length; ++H) { J += N[H] << 8; N[H] = J % this.base; J = J / this.base | 0 } while (J > 0) { N.push(J % this.base); J = J / this.base | 0 } } var U = ""; for (var X = 0; B[X] === 0 && X < B.length - 1; ++X) { U += this._leader } for (var G = N.length - 1; G >= 0; --G) { U += this.alphabet[N[G]] } return U }; BaseX.prototype.decode = function (T) { if (typeof T !== "string") { throw new TypeError("Expected String") } var B = []; if (T.length === 0) { return new Uint8Array(B) } B.push(0); for (var N = 0; N < T.length; N++) { var I = this._alphabetMap[T[N]]; if (I === undefined) { throw new Error("Non-base" + this.base + " character") } var J = I; for (var H = 0; H < B.length; ++H) { J += B[H] * this.base; B[H] = J & 255; J >>= 8 } while (J > 0) { B.push(J & 255); J >>= 8 } } for (var U = 0; T[U] === this._leader && U < T.length - 1; ++U) { B.push(0) } return (0, L.arrayify)(new Uint8Array(B.reverse())) }; return BaseX }(); B.BaseX = J; var H = new J("abcdefghijklmnopqrstuvwxyz234567"); B.Base32 = H; var U = new J("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"); B.Base58 = U }, 6151: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.version = void 0; B.version = "bignumber/5.8.0" }, 1157: function (T, B, N) { "use strict"; var L = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); B._base16To36 = B._base36To16 = B.BigNumber = B.isBigNumberish = void 0; var I = L(N(633)); var J = I.default.BN; var H = N(2006); var U = N(6127); var X = N(6151); var G = new U.Logger(X.version); var V = {}; var Z = 9007199254740991; function isBigNumberish(T) { return T != null && (q.isBigNumber(T) || typeof T === "number" && T % 1 === 0 || typeof T === "string" && !!T.match(/^-?[0-9]+$/) || (0, H.isHexString)(T) || typeof T === "bigint" || (0, H.isBytes)(T)) } B.isBigNumberish = isBigNumberish; var W = false; var q = function () { function BigNumber(T, B) { if (T !== V) { G.throwError("cannot call constructor directly; use BigNumber.from", U.Logger.errors.UNSUPPORTED_OPERATION, { operation: "new (BigNumber)" }) } this._hex = B; this._isBigNumber = true; Object.freeze(this) } BigNumber.prototype.fromTwos = function (T) { return toBigNumber(toBN(this).fromTwos(T)) }; BigNumber.prototype.toTwos = function (T) { return toBigNumber(toBN(this).toTwos(T)) }; BigNumber.prototype.abs = function () { if (this._hex[0] === "-") { return BigNumber.from(this._hex.substring(1)) } return this }; BigNumber.prototype.add = function (T) { return toBigNumber(toBN(this).add(toBN(T))) }; BigNumber.prototype.sub = function (T) { return toBigNumber(toBN(this).sub(toBN(T))) }; BigNumber.prototype.div = function (T) { var B = BigNumber.from(T); if (B.isZero()) { throwFault("division-by-zero", "div") } return toBigNumber(toBN(this).div(toBN(T))) }; BigNumber.prototype.mul = function (T) { return toBigNumber(toBN(this).mul(toBN(T))) }; BigNumber.prototype.mod = function (T) { var B = toBN(T); if (B.isNeg()) { throwFault("division-by-zero", "mod") } return toBigNumber(toBN(this).umod(B)) }; BigNumber.prototype.pow = function (T) { var B = toBN(T); if (B.isNeg()) { throwFault("negative-power", "pow") } return toBigNumber(toBN(this).pow(B)) }; BigNumber.prototype.and = function (T) { var B = toBN(T); if (this.isNegative() || B.isNeg()) { throwFault("unbound-bitwise-result", "and") } return toBigNumber(toBN(this).and(B)) }; BigNumber.prototype.or = function (T) { var B = toBN(T); if (this.isNegative() || B.isNeg()) { throwFault("unbound-bitwise-result", "or") } return toBigNumber(toBN(this).or(B)) }; BigNumber.prototype.xor = function (T) { var B = toBN(T); if (this.isNegative() || B.isNeg()) { throwFault("unbound-bitwise-result", "xor") } return toBigNumber(toBN(this).xor(B)) }; BigNumber.prototype.mask = function (T) { if (this.isNegative() || T < 0) { throwFault("negative-width", "mask") } return toBigNumber(toBN(this).maskn(T)) }; BigNumber.prototype.shl = function (T) { if (this.isNegative() || T < 0) { throwFault("negative-width", "shl") } return toBigNumber(toBN(this).shln(T)) }; BigNumber.prototype.shr = function (T) { if (this.isNegative() || T < 0) { throwFault("negative-width", "shr") } return toBigNumber(toBN(this).shrn(T)) }; BigNumber.prototype.eq = function (T) { return toBN(this).eq(toBN(T)) }; BigNumber.prototype.lt = function (T) { return toBN(this).lt(toBN(T)) }; BigNumber.prototype.lte = function (T) { return toBN(this).lte(toBN(T)) }; BigNumber.prototype.gt = function (T) { return toBN(this).gt(toBN(T)) }; BigNumber.prototype.gte = function (T) { return toBN(this).gte(toBN(T)) }; BigNumber.prototype.isNegative = function () { return this._hex[0] === "-" }; BigNumber.prototype.isZero = function () { return toBN(this).isZero() }; BigNumber.prototype.toNumber = function () { try { return toBN(this).toNumber() } catch (T) { throwFault("overflow", "toNumber", this.toString()) } return null }; BigNumber.prototype.toBigInt = function () { try { return BigInt(this.toString()) } catch (T) { } return G.throwError("this platform does not support BigInt", U.Logger.errors.UNSUPPORTED_OPERATION, { value: this.toString() }) }; BigNumber.prototype.toString = function () { if (arguments.length > 0) { if (arguments[0] === 10) { if (!W) { W = true; G.warn("BigNumber.toString does not accept any parameters; base-10 is assumed") } } else if (arguments[0] === 16) { G.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", U.Logger.errors.UNEXPECTED_ARGUMENT, {}) } else { G.throwError("BigNumber.toString does not accept parameters", U.Logger.errors.UNEXPECTED_ARGUMENT, {}) } } return toBN(this).toString(10) }; BigNumber.prototype.toHexString = function () { return this._hex }; BigNumber.prototype.toJSON = function (T) { return { type: "BigNumber", hex: this.toHexString() } }; BigNumber.from = function (T) { if (T instanceof BigNumber) { return T } if (typeof T === "string") { if (T.match(/^-?0x[0-9a-f]+$/i)) { return new BigNumber(V, toHex(T)) } if (T.match(/^-?[0-9]+$/)) { return new BigNumber(V, toHex(new J(T))) } return G.throwArgumentError("invalid BigNumber string", "value", T) } if (typeof T === "number") { if (T % 1) { throwFault("underflow", "BigNumber.from", T) } if (T >= Z || T <= -Z) { throwFault("overflow", "BigNumber.from", T) } return BigNumber.from(String(T)) } var B = T; if (typeof B === "bigint") { return BigNumber.from(B.toString()) } if ((0, H.isBytes)(B)) { return BigNumber.from((0, H.hexlify)(B)) } if (B) { if (B.toHexString) { var N = B.toHexString(); if (typeof N === "string") { return BigNumber.from(N) } } else { var N = B._hex; if (N == null && B.type === "BigNumber") { N = B.hex } if (typeof N === "string") { if ((0, H.isHexString)(N) || N[0] === "-" && (0, H.isHexString)(N.substring(1))) { return BigNumber.from(N) } } } } return G.throwArgumentError("invalid BigNumber value", "value", T) }; BigNumber.isBigNumber = function (T) { return !!(T && T._isBigNumber) }; return BigNumber }(); B.BigNumber = q; function toHex(T) { if (typeof T !== "string") { return toHex(T.toString(16)) } if (T[0] === "-") { T = T.substring(1); if (T[0] === "-") { G.throwArgumentError("invalid hex", "value", T) } T = toHex(T); if (T === "0x00") { return T } return "-" + T } if (T.substring(0, 2) !== "0x") { T = "0x" + T } if (T === "0x") { return "0x00" } if (T.length % 2) { T = "0x0" + T.substring(2) } while (T.length > 4 && T.substring(0, 4) === "0x00") { T = "0x" + T.substring(4) } return T } function toBigNumber(T) { return q.from(toHex(T)) } function toBN(T) { var B = q.from(T).toHexString(); if (B[0] === "-") { return new J("-" + B.substring(3), 16) } return new J(B.substring(2), 16) } function throwFault(T, B, N) { var L = { fault: T, operation: B }; if (N != null) { L.value = N } return G.throwError(T, U.Logger.errors.NUMERIC_FAULT, L) } function _base36To16(T) { return new J(T, 36).toString(16) } B._base36To16 = _base36To16; function _base16To36(T) { return new J(T, 16).toString(36) } B._base16To36 = _base16To36 }, 1297: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.FixedNumber = B.FixedFormat = B.parseFixed = B.formatFixed = void 0; var L = N(2006); var I = N(6127); var J = N(6151); var H = new I.Logger(J.version); var U = N(1157); var X = {}; var G = U.BigNumber.from(0); var V = U.BigNumber.from(-1); function throwFault(T, B, N, L) { var J = { fault: B, operation: N }; if (L !== undefined) { J.value = L } return H.throwError(T, I.Logger.errors.NUMERIC_FAULT, J) } var Z = "0"; while (Z.length < 256) { Z += Z } function getMultiplier(T) { if (typeof T !== "number") { try { T = U.BigNumber.from(T).toNumber() } catch (T) { } } if (typeof T === "number" && T >= 0 && T <= 256 && !(T % 1)) { return "1" + Z.substring(0, T) } return H.throwArgumentError("invalid decimal size", "decimals", T) } function formatFixed(T, B) { if (B == null) { B = 0 } var N = getMultiplier(B); T = U.BigNumber.from(T); var L = T.lt(G); if (L) { T = T.mul(V) } var I = T.mod(N).toString(); while (I.length < N.length - 1) { I = "0" + I } I = I.match(/^([0-9]*[1-9]|0)(0*)/)[1]; var J = T.div(N).toString(); if (N.length === 1) { T = J } else { T = J + "." + I } if (L) { T = "-" + T } return T } B.formatFixed = formatFixed; function parseFixed(T, B) { if (B == null) { B = 0 } var N = getMultiplier(B); if (typeof T !== "string" || !T.match(/^-?[0-9.]+$/)) { H.throwArgumentError("invalid decimal value", "value", T) } var L = T.substring(0, 1) === "-"; if (L) { T = T.substring(1) } if (T === ".") { H.throwArgumentError("missing value", "value", T) } var I = T.split("."); if (I.length > 2) { H.throwArgumentError("too many decimal points", "value", T) } var J = I[0], X = I[1]; if (!J) { J = "0" } if (!X) { X = "0" } while (X[X.length - 1] === "0") { X = X.substring(0, X.length - 1) } if (X.length > N.length - 1) { throwFault("fractional component exceeds decimals", "underflow", "parseFixed") } if (X === "") { X = "0" } while (X.length < N.length - 1) { X += "0" } var G = U.BigNumber.from(J); var Z = U.BigNumber.from(X); var W = G.mul(N).add(Z); if (L) { W = W.mul(V) } return W } B.parseFixed = parseFixed; var W = function () { function FixedFormat(T, B, N, L) { if (T !== X) { H.throwError("cannot use FixedFormat constructor; use FixedFormat.from", I.Logger.errors.UNSUPPORTED_OPERATION, { operation: "new FixedFormat" }) } this.signed = B; this.width = N; this.decimals = L; this.name = (B ? "" : "u") + "fixed" + String(N) + "x" + String(L); this._multiplier = getMultiplier(L); Object.freeze(this) } FixedFormat.from = function (T) { if (T instanceof FixedFormat) { return T } if (typeof T === "number") { T = "fixed128x" + T } var B = true; var N = 128; var L = 18; if (typeof T === "string") { if (T === "fixed") { } else if (T === "ufixed") { B = false } else { var I = T.match(/^(u?)fixed([0-9]+)x([0-9]+)$/); if (!I) { H.throwArgumentError("invalid fixed format", "format", T) } B = I[1] !== "u"; N = parseInt(I[2]); L = parseInt(I[3]) } } else if (T) { var check = function (B, N, L) { if (T[B] == null) { return L } if (typeof T[B] !== N) { H.throwArgumentError("invalid fixed format (" + B + " not " + N + ")", "format." + B, T[B]) } return T[B] }; B = check("signed", "boolean", B); N = check("width", "number", N); L = check("decimals", "number", L) } if (N % 8) { H.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", N) } if (L > 80) { H.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", L) } return new FixedFormat(X, B, N, L) }; return FixedFormat }(); B.FixedFormat = W; var q = function () { function FixedNumber(T, B, N, L) { if (T !== X) { H.throwError("cannot use FixedNumber constructor; use FixedNumber.from", I.Logger.errors.UNSUPPORTED_OPERATION, { operation: "new FixedFormat" }) } this.format = L; this._hex = B; this._value = N; this._isFixedNumber = true; Object.freeze(this) } FixedNumber.prototype._checkFormat = function (T) { if (this.format.name !== T.format.name) { H.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", T) } }; FixedNumber.prototype.addUnsafe = function (T) { this._checkFormat(T); var B = parseFixed(this._value, this.format.decimals); var N = parseFixed(T._value, T.format.decimals); return FixedNumber.fromValue(B.add(N), this.format.decimals, this.format) }; FixedNumber.prototype.subUnsafe = function (T) { this._checkFormat(T); var B = parseFixed(this._value, this.format.decimals); var N = parseFixed(T._value, T.format.decimals); return FixedNumber.fromValue(B.sub(N), this.format.decimals, this.format) }; FixedNumber.prototype.mulUnsafe = function (T) { this._checkFormat(T); var B = parseFixed(this._value, this.format.decimals); var N = parseFixed(T._value, T.format.decimals); return FixedNumber.fromValue(B.mul(N).div(this.format._multiplier), this.format.decimals, this.format) }; FixedNumber.prototype.divUnsafe = function (T) { this._checkFormat(T); var B = parseFixed(this._value, this.format.decimals); var N = parseFixed(T._value, T.format.decimals); return FixedNumber.fromValue(B.mul(this.format._multiplier).div(N), this.format.decimals, this.format) }; FixedNumber.prototype.floor = function () { var T = this.toString().split("."); if (T.length === 1) { T.push("0") } var B = FixedNumber.from(T[0], this.format); var N = !T[1].match(/^(0*)$/); if (this.isNegative() && N) { B = B.subUnsafe(Q.toFormat(B.format)) } return B }; FixedNumber.prototype.ceiling = function () { var T = this.toString().split("."); if (T.length === 1) { T.push("0") } var B = FixedNumber.from(T[0], this.format); var N = !T[1].match(/^(0*)$/); if (!this.isNegative() && N) { B = B.addUnsafe(Q.toFormat(B.format)) } return B }; FixedNumber.prototype.round = function (T) { if (T == null) { T = 0 } var B = this.toString().split("."); if (B.length === 1) { B.push("0") } if (T < 0 || T > 80 || T % 1) { H.throwArgumentError("invalid decimal count", "decimals", T) } if (B[1].length <= T) { return this } var N = FixedNumber.from("1" + Z.substring(0, T), this.format); var L = Y.toFormat(this.format); return this.mulUnsafe(N).addUnsafe(L).floor().divUnsafe(N) }; FixedNumber.prototype.isZero = function () { return this._value === "0.0" || this._value === "0" }; FixedNumber.prototype.isNegative = function () { return this._value[0] === "-" }; FixedNumber.prototype.toString = function () { return this._value }; FixedNumber.prototype.toHexString = function (T) { if (T == null) { return this._hex } if (T % 8) { H.throwArgumentError("invalid byte width", "width", T) } var B = U.BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(T).toHexString(); return (0, L.hexZeroPad)(B, T / 8) }; FixedNumber.prototype.toUnsafeFloat = function () { return parseFloat(this.toString()) }; FixedNumber.prototype.toFormat = function (T) { return FixedNumber.fromString(this._value, T) }; FixedNumber.fromValue = function (T, B, N) { if (N == null && B != null && !(0, U.isBigNumberish)(B)) { N = B; B = null } if (B == null) { B = 0 } if (N == null) { N = "fixed" } return FixedNumber.fromString(formatFixed(T, B), W.from(N)) }; FixedNumber.fromString = function (T, B) { if (B == null) { B = "fixed" } var N = W.from(B); var I = parseFixed(T, N.decimals); if (!N.signed && I.lt(G)) { throwFault("unsigned value cannot be negative", "overflow", "value", T) } var J = null; if (N.signed) { J = I.toTwos(N.width).toHexString() } else { J = I.toHexString(); J = (0, L.hexZeroPad)(J, N.width / 8) } var H = formatFixed(I, N.decimals); return new FixedNumber(X, J, H, N) }; FixedNumber.fromBytes = function (T, B) { if (B == null) { B = "fixed" } var N = W.from(B); if ((0, L.arrayify)(T).length > N.width / 8) { throw new Error("overflow") } var I = U.BigNumber.from(T); if (N.signed) { I = I.fromTwos(N.width) } var J = I.toTwos((N.signed ? 0 : 1) + N.width).toHexString(); var H = formatFixed(I, N.decimals); return new FixedNumber(X, J, H, N) }; FixedNumber.from = function (T, B) { if (typeof T === "string") { return FixedNumber.fromString(T, B) } if ((0, L.isBytes)(T)) { return FixedNumber.fromBytes(T, B) } try { return FixedNumber.fromValue(T, 0, B) } catch (T) { if (T.code !== I.Logger.errors.INVALID_ARGUMENT) { throw T } } return H.throwArgumentError("invalid FixedNumber value", "value", T) }; FixedNumber.isFixedNumber = function (T) { return !!(T && T._isFixedNumber) }; return FixedNumber }(); B.FixedNumber = q; var Q = q.from(1); var Y = q.from("0.5") }, 8202: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B._base36To16 = B._base16To36 = B.parseFixed = B.FixedNumber = B.FixedFormat = B.formatFixed = B.BigNumber = void 0; var L = N(1157); Object.defineProperty(B, "BigNumber", { enumerable: true, get: function () { return L.BigNumber } }); var I = N(1297); Object.defineProperty(B, "formatFixed", { enumerable: true, get: function () { return I.formatFixed } }); Object.defineProperty(B, "FixedFormat", { enumerable: true, get: function () { return I.FixedFormat } }); Object.defineProperty(B, "FixedNumber", { enumerable: true, get: function () { return I.FixedNumber } }); Object.defineProperty(B, "parseFixed", { enumerable: true, get: function () { return I.parseFixed } }); var J = N(1157); Object.defineProperty(B, "_base16To36", { enumerable: true, get: function () { return J._base16To36 } }); Object.defineProperty(B, "_base36To16", { enumerable: true, get: function () { return J._base36To16 } }) }, 8539: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.version = void 0; B.version = "bytes/5.8.0" }, 2006: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.joinSignature = B.splitSignature = B.hexZeroPad = B.hexStripZeros = B.hexValue = B.hexConcat = B.hexDataSlice = B.hexDataLength = B.hexlify = B.isHexString = B.zeroPad = B.stripZeros = B.concat = B.arrayify = B.isBytes = B.isBytesLike = void 0; var L = N(6127); var I = N(8539); var J = new L.Logger(I.version); function isHexable(T) { return !!T.toHexString } function addSlice(T) { if (T.slice) { return T } T.slice = function () { var B = Array.prototype.slice.call(arguments); return addSlice(new Uint8Array(Array.prototype.slice.apply(T, B))) }; return T } function isBytesLike(T) { return isHexString(T) && !(T.length % 2) || isBytes(T) } B.isBytesLike = isBytesLike; function isInteger(T) { return typeof T === "number" && T == T && T % 1 === 0 } function isBytes(T) { if (T == null) { return false } if (T.constructor === Uint8Array) { return true } if (typeof T === "string") { return false } if (!isInteger(T.length) || T.length < 0) { return false } for (var B = 0; B < T.length; B++) { var N = T[B]; if (!isInteger(N) || N < 0 || N >= 256) { return false } } return true } B.isBytes = isBytes; function arrayify(T, B) { if (!B) { B = {} } if (typeof T === "number") { J.checkSafeUint53(T, "invalid arrayify value"); var N = []; while (T) { N.unshift(T & 255); T = parseInt(String(T / 256)) } if (N.length === 0) { N.push(0) } return addSlice(new Uint8Array(N)) } if (B.allowMissingPrefix && typeof T === "string" && T.substring(0, 2) !== "0x") { T = "0x" + T } if (isHexable(T)) { T = T.toHexString() } if (isHexString(T)) { var L = T.substring(2); if (L.length % 2) { if (B.hexPad === "left") { L = "0" + L } else if (B.hexPad === "right") { L += "0" } else { J.throwArgumentError("hex data is odd-length", "value", T) } } var N = []; for (var I = 0; I < L.length; I += 2) { N.push(parseInt(L.substring(I, I + 2), 16)) } return addSlice(new Uint8Array(N)) } if (isBytes(T)) { return addSlice(new Uint8Array(T)) } return J.throwArgumentError("invalid arrayify value", "value", T) } B.arrayify = arrayify; function concat(T) { var B = T.map((function (T) { return arrayify(T) })); var N = B.reduce((function (T, B) { return T + B.length }), 0); var L = new Uint8Array(N); B.reduce((function (T, B) { L.set(B, T); return T + B.length }), 0); return addSlice(L) } B.concat = concat; function stripZeros(T) { var B = arrayify(T); if (B.length === 0) { return B } var N = 0; while (N < B.length && B[N] === 0) { N++ } if (N) { B = B.slice(N) } return B } B.stripZeros = stripZeros; function zeroPad(T, B) { T = arrayify(T); if (T.length > B) { J.throwArgumentError("value out of range", "value", arguments[0]) } var N = new Uint8Array(B); N.set(T, B - T.length); return addSlice(N) } B.zeroPad = zeroPad; function isHexString(T, B) { if (typeof T !== "string" || !T.match(/^0x[0-9A-Fa-f]*$/)) { return false } if (B && T.length !== 2 + 2 * B) { return false } return true } B.isHexString = isHexString; var H = "0123456789abcdef"; function hexlify(T, B) { if (!B) { B = {} } if (typeof T === "number") { J.checkSafeUint53(T, "invalid hexlify value"); var N = ""; while (T) { N = H[T & 15] + N; T = Math.floor(T / 16) } if (N.length) { if (N.length % 2) { N = "0" + N } return "0x" + N } return "0x00" } if (typeof T === "bigint") { T = T.toString(16); if (T.length % 2) { return "0x0" + T } return "0x" + T } if (B.allowMissingPrefix && typeof T === "string" && T.substring(0, 2) !== "0x") { T = "0x" + T } if (isHexable(T)) { return T.toHexString() } if (isHexString(T)) { if (T.length % 2) { if (B.hexPad === "left") { T = "0x0" + T.substring(2) } else if (B.hexPad === "right") { T += "0" } else { J.throwArgumentError("hex data is odd-length", "value", T) } } return T.toLowerCase() } if (isBytes(T)) { var L = "0x"; for (var I = 0; I < T.length; I++) { var U = T[I]; L += H[(U & 240) >> 4] + H[U & 15] } return L } return J.throwArgumentError("invalid hexlify value", "value", T) } B.hexlify = hexlify; function hexDataLength(T) { if (typeof T !== "string") { T = hexlify(T) } else if (!isHexString(T) || T.length % 2) { return null } return (T.length - 2) / 2 } B.hexDataLength = hexDataLength; function hexDataSlice(T, B, N) { if (typeof T !== "string") { T = hexlify(T) } else if (!isHexString(T) || T.length % 2) { J.throwArgumentError("invalid hexData", "value", T) } B = 2 + 2 * B; if (N != null) { return "0x" + T.substring(B, 2 + 2 * N) } return "0x" + T.substring(B) } B.hexDataSlice = hexDataSlice; function hexConcat(T) { var B = "0x"; T.forEach((function (T) { B += hexlify(T).substring(2) })); return B } B.hexConcat = hexConcat; function hexValue(T) { var B = hexStripZeros(hexlify(T, { hexPad: "left" })); if (B === "0x") { return "0x0" } return B } B.hexValue = hexValue; function hexStripZeros(T) { if (typeof T !== "string") { T = hexlify(T) } if (!isHexString(T)) { J.throwArgumentError("invalid hex string", "value", T) } T = T.substring(2); var B = 0; while (B < T.length && T[B] === "0") { B++ } return "0x" + T.substring(B) } B.hexStripZeros = hexStripZeros; function hexZeroPad(T, B) { if (typeof T !== "string") { T = hexlify(T) } else if (!isHexString(T)) { J.throwArgumentError("invalid hex string", "value", T) } if (T.length > 2 * B + 2) { J.throwArgumentError("value out of range", "value", arguments[1]) } while (T.length < 2 * B + 2) { T = "0x0" + T.substring(2) } return T } B.hexZeroPad = hexZeroPad; function splitSignature(T) { var B = { r: "0x", s: "0x", _vs: "0x", recoveryParam: 0, v: 0, yParityAndS: "0x", compact: "0x" }; if (isBytesLike(T)) { var N = arrayify(T); if (N.length === 64) { B.v = 27 + (N[32] >> 7); N[32] &= 127; B.r = hexlify(N.slice(0, 32)); B.s = hexlify(N.slice(32, 64)) } else if (N.length === 65) { B.r = hexlify(N.slice(0, 32)); B.s = hexlify(N.slice(32, 64)); B.v = N[64] } else { J.throwArgumentError("invalid signature string", "signature", T) } if (B.v < 27) { if (B.v === 0 || B.v === 1) { B.v += 27 } else { J.throwArgumentError("signature invalid v byte", "signature", T) } } B.recoveryParam = 1 - B.v % 2; if (B.recoveryParam) { N[32] |= 128 } B._vs = hexlify(N.slice(32, 64)) } else { B.r = T.r; B.s = T.s; B.v = T.v; B.recoveryParam = T.recoveryParam; B._vs = T._vs; if (B._vs != null) { var L = zeroPad(arrayify(B._vs), 32); B._vs = hexlify(L); var I = L[0] >= 128 ? 1 : 0; if (B.recoveryParam == null) { B.recoveryParam = I } else if (B.recoveryParam !== I) { J.throwArgumentError("signature recoveryParam mismatch _vs", "signature", T) } L[0] &= 127; var H = hexlify(L); if (B.s == null) { B.s = H } else if (B.s !== H) { J.throwArgumentError("signature v mismatch _vs", "signature", T) } } if (B.recoveryParam == null) { if (B.v == null) { J.throwArgumentError("signature missing v and recoveryParam", "signature", T) } else if (B.v === 0 || B.v === 1) { B.recoveryParam = B.v } else { B.recoveryParam = 1 - B.v % 2 } } else { if (B.v == null) { B.v = 27 + B.recoveryParam } else { var U = B.v === 0 || B.v === 1 ? B.v : 1 - B.v % 2; if (B.recoveryParam !== U) { J.throwArgumentError("signature recoveryParam mismatch v", "signature", T) } } } if (B.r == null || !isHexString(B.r)) { J.throwArgumentError("signature missing or invalid r", "signature", T) } else { B.r = hexZeroPad(B.r, 32) } if (B.s == null || !isHexString(B.s)) { J.throwArgumentError("signature missing or invalid s", "signature", T) } else { B.s = hexZeroPad(B.s, 32) } var X = arrayify(B.s); if (X[0] >= 128) { J.throwArgumentError("signature s out of range", "signature", T) } if (B.recoveryParam) { X[0] |= 128 } var G = hexlify(X); if (B._vs) { if (!isHexString(B._vs)) { J.throwArgumentError("signature invalid _vs", "signature", T) } B._vs = hexZeroPad(B._vs, 32) } if (B._vs == null) { B._vs = G } else if (B._vs !== G) { J.throwArgumentError("signature _vs mismatch v and s", "signature", T) } } B.yParityAndS = B._vs; B.compact = B.r + B.yParityAndS.substring(2); return B } B.splitSignature = splitSignature; function joinSignature(T) { T = splitSignature(T); return hexlify(concat([T.r, T.s, T.recoveryParam ? "0x1c" : "0x1b"])) } B.joinSignature = joinSignature }, 9224: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.AddressZero = void 0; B.AddressZero = "0x0000000000000000000000000000000000000000" }, 662: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.MaxInt256 = B.MinInt256 = B.MaxUint256 = B.WeiPerEther = B.Two = B.One = B.Zero = B.NegativeOne = void 0; var L = N(8202); var I = L.BigNumber.from(-1); B.NegativeOne = I; var J = L.BigNumber.from(0); B.Zero = J; var H = L.BigNumber.from(1); B.One = H; var U = L.BigNumber.from(2); B.Two = U; var X = L.BigNumber.from("1000000000000000000"); B.WeiPerEther = X; var G = L.BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"); B.MaxUint256 = G; var V = L.BigNumber.from("-0x8000000000000000000000000000000000000000000000000000000000000000"); B.MinInt256 = V; var Z = L.BigNumber.from("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"); B.MaxInt256 = Z }, 5550: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.HashZero = void 0; B.HashZero = "0x0000000000000000000000000000000000000000000000000000000000000000" }, 9848: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.EtherSymbol = B.HashZero = B.MaxInt256 = B.MinInt256 = B.MaxUint256 = B.WeiPerEther = B.Two = B.One = B.Zero = B.NegativeOne = B.AddressZero = void 0; var L = N(9224); Object.defineProperty(B, "AddressZero", { enumerable: true, get: function () { return L.AddressZero } }); var I = N(662); Object.defineProperty(B, "NegativeOne", { enumerable: true, get: function () { return I.NegativeOne } }); Object.defineProperty(B, "Zero", { enumerable: true, get: function () { return I.Zero } }); Object.defineProperty(B, "One", { enumerable: true, get: function () { return I.One } }); Object.defineProperty(B, "Two", { enumerable: true, get: function () { return I.Two } }); Object.defineProperty(B, "WeiPerEther", { enumerable: true, get: function () { return I.WeiPerEther } }); Object.defineProperty(B, "MaxUint256", { enumerable: true, get: function () { return I.MaxUint256 } }); Object.defineProperty(B, "MinInt256", { enumerable: true, get: function () { return I.MinInt256 } }); Object.defineProperty(B, "MaxInt256", { enumerable: true, get: function () { return I.MaxInt256 } }); var J = N(5550); Object.defineProperty(B, "HashZero", { enumerable: true, get: function () { return J.HashZero } }); var H = N(8178); Object.defineProperty(B, "EtherSymbol", { enumerable: true, get: function () { return H.EtherSymbol } }) }, 8178: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.EtherSymbol = void 0; B.EtherSymbol = "Ξ" }, 6511: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.version = void 0; B.version = "contracts/5.8.0" }, 8322: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); var I = this && this.__awaiter || function (T, B, N, L) { function adopt(T) { return T instanceof N ? T : new N((function (B) { B(T) })) } return new (N || (N = Promise))((function (N, I) { function fulfilled(T) { try { step(L.next(T)) } catch (T) { I(T) } } function rejected(T) { try { step(L["throw"](T)) } catch (T) { I(T) } } function step(T) { T.done ? N(T.value) : adopt(T.value).then(fulfilled, rejected) } step((L = L.apply(T, B || [])).next()) })) }; var J = this && this.__generator || function (T, B) { var N = { label: 0, sent: function () { if (J[0] & 1) throw J[1]; return J[1] }, trys: [], ops: [] }, L, I, J, H; return H = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (H[Symbol.iterator] = function () { return this }), H; function verb(T) { return function (B) { return step([T, B]) } } function step(H) { if (L) throw new TypeError("Generator is already executing."); while (N) try { if (L = 1, I && (J = H[0] & 2 ? I["return"] : H[0] ? I["throw"] || ((J = I["return"]) && J.call(I), 0) : I.next) && !(J = J.call(I, H[1])).done) return J; if (I = 0, J) H = [H[0] & 2, J.value]; switch (H[0]) { case 0: case 1: J = H; break; case 4: N.label++; return { value: H[1], done: false }; case 5: N.label++; I = H[1]; H = [0]; continue; case 7: H = N.ops.pop(); N.trys.pop(); continue; default: if (!(J = N.trys, J = J.length > 0 && J[J.length - 1]) && (H[0] === 6 || H[0] === 2)) { N = 0; continue } if (H[0] === 3 && (!J || H[1] > J[0] && H[1] < J[3])) { N.label = H[1]; break } if (H[0] === 6 && N.label < J[1]) { N.label = J[1]; J = H; break } if (J && N.label < J[2]) { N.label = J[2]; N.ops.push(H); break } if (J[2]) N.ops.pop(); N.trys.pop(); continue }H = B.call(T, N) } catch (T) { H = [6, T]; I = 0 } finally { L = J = 0 } if (H[0] & 5) throw H[1]; return { value: H[0] ? H[1] : void 0, done: true } } }; var H = this && this.__spreadArray || function (T, B, N) { if (N || arguments.length === 2) for (var L = 0, I = B.length, J; L < I; L++) { if (J || !(L in B)) { if (!J) J = Array.prototype.slice.call(B, 0, L); J[L] = B[L] } } return T.concat(J || Array.prototype.slice.call(B)) }; Object.defineProperty(B, "__esModule", { value: true }); B.ContractFactory = B.Contract = B.BaseContract = void 0; var U = N(219); var X = N(2825); var G = N(3870); var V = N(5745); var Z = N(8202); var W = N(2006); var q = N(1338); var Q = N(2394); var Y = N(6127); var ff = N(6511); var ef = new Y.Logger(ff.version); var tf = { chainId: true, data: true, from: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true, type: true, accessList: true, maxFeePerGas: true, maxPriorityFeePerGas: true, customData: true, ccipReadEnabled: true }; function resolveName(T, B) { return I(this, void 0, void 0, (function () { var N, L; return J(this, (function (I) { switch (I.label) { case 0: return [4, B]; case 1: N = I.sent(); if (typeof N !== "string") { ef.throwArgumentError("invalid address or ENS name", "name", N) } try { return [2, (0, V.getAddress)(N)] } catch (T) { } if (!T) { ef.throwError("a provider or signer is needed to resolve ENS names", Y.Logger.errors.UNSUPPORTED_OPERATION, { operation: "resolveName" }) } return [4, T.resolveName(N)]; case 2: L = I.sent(); if (L == null) { ef.throwArgumentError("resolver or addr is not configured for ENS name", "name", N) } return [2, L] } })) })) } function resolveAddresses(T, B, N) { return I(this, void 0, void 0, (function () { return J(this, (function (L) { switch (L.label) { case 0: if (!Array.isArray(N)) return [3, 2]; return [4, Promise.all(N.map((function (N, L) { return resolveAddresses(T, Array.isArray(B) ? B[L] : B[N.name], N) })))]; case 1: return [2, L.sent()]; case 2: if (!(N.type === "address")) return [3, 4]; return [4, resolveName(T, B)]; case 3: return [2, L.sent()]; case 4: if (!(N.type === "tuple")) return [3, 6]; return [4, resolveAddresses(T, B, N.components)]; case 5: return [2, L.sent()]; case 6: if (!(N.baseType === "array")) return [3, 8]; if (!Array.isArray(B)) { return [2, Promise.reject(ef.makeError("invalid value for array", Y.Logger.errors.INVALID_ARGUMENT, { argument: "value", value: B }))] } return [4, Promise.all(B.map((function (B) { return resolveAddresses(T, B, N.arrayChildren) })))]; case 7: return [2, L.sent()]; case 8: return [2, B] } })) })) } function populateTransaction(T, B, N) { return I(this, void 0, void 0, (function () { var L, H, U, X, G, ff, tf, rf, af, nf; var of = this; return J(this, (function (sf) { switch (sf.label) { case 0: L = {}; if (N.length === B.inputs.length + 1 && typeof N[N.length - 1] === "object") { L = (0, q.shallowCopy)(N.pop()) } ef.checkArgumentCount(N.length, B.inputs.length, "passed to contract"); if (T.signer) { if (L.from) { L.from = (0, q.resolveProperties)({ override: resolveName(T.signer, L.from), signer: T.signer.getAddress() }).then((function (T) { return I(of, void 0, void 0, (function () { return J(this, (function (B) { if ((0, V.getAddress)(T.signer) !== T.override) { ef.throwError("Contract with a Signer cannot override from", Y.Logger.errors.UNSUPPORTED_OPERATION, { operation: "overrides.from" }) } return [2, T.override] })) })) })) } else { L.from = T.signer.getAddress() } } else if (L.from) { L.from = resolveName(T.provider, L.from) } return [4, (0, q.resolveProperties)({ args: resolveAddresses(T.signer || T.provider, N, B.inputs), address: T.resolvedAddress, overrides: (0, q.resolveProperties)(L) || {} })]; case 1: H = sf.sent(); U = T.interface.encodeFunctionData(B, H.args); X = { data: U, to: H.address }; G = H.overrides; if (G.nonce != null) { X.nonce = Z.BigNumber.from(G.nonce).toNumber() } if (G.gasLimit != null) { X.gasLimit = Z.BigNumber.from(G.gasLimit) } if (G.gasPrice != null) { X.gasPrice = Z.BigNumber.from(G.gasPrice) } if (G.maxFeePerGas != null) { X.maxFeePerGas = Z.BigNumber.from(G.maxFeePerGas) } if (G.maxPriorityFeePerGas != null) { X.maxPriorityFeePerGas = Z.BigNumber.from(G.maxPriorityFeePerGas) } if (G.from != null) { X.from = G.from } if (G.type != null) { X.type = G.type } if (G.accessList != null) { X.accessList = (0, Q.accessListify)(G.accessList) } if (X.gasLimit == null && B.gas != null) { ff = 21e3; tf = (0, W.arrayify)(U); for (rf = 0; rf < tf.length; rf++) { ff += 4; if (tf[rf]) { ff += 64 } } X.gasLimit = Z.BigNumber.from(B.gas).add(ff) } if (G.value) { af = Z.BigNumber.from(G.value); if (!af.isZero() && !B.payable) { ef.throwError("non-payable method cannot override value", Y.Logger.errors.UNSUPPORTED_OPERATION, { operation: "overrides.value", value: L.value }) } X.value = af } if (G.customData) { X.customData = (0, q.shallowCopy)(G.customData) } if (G.ccipReadEnabled) { X.ccipReadEnabled = !!G.ccipReadEnabled } delete L.nonce; delete L.gasLimit; delete L.gasPrice; delete L.from; delete L.value; delete L.type; delete L.accessList; delete L.maxFeePerGas; delete L.maxPriorityFeePerGas; delete L.customData; delete L.ccipReadEnabled; nf = Object.keys(L).filter((function (T) { return L[T] != null })); if (nf.length) { ef.throwError("cannot override " + nf.map((function (T) { return JSON.stringify(T) })).join(","), Y.Logger.errors.UNSUPPORTED_OPERATION, { operation: "overrides", overrides: nf }) } return [2, X] } })) })) } function buildPopulate(T, B) { return function () { var N = []; for (var L = 0; L < arguments.length; L++) { N[L] = arguments[L] } return populateTransaction(T, B, N) } } function buildEstimate(T, B) { var N = T.signer || T.provider; return function () { var L = []; for (var H = 0; H < arguments.length; H++) { L[H] = arguments[H] } return I(this, void 0, void 0, (function () { var I; return J(this, (function (J) { switch (J.label) { case 0: if (!N) { ef.throwError("estimate require a provider or signer", Y.Logger.errors.UNSUPPORTED_OPERATION, { operation: "estimateGas" }) } return [4, populateTransaction(T, B, L)]; case 1: I = J.sent(); return [4, N.estimateGas(I)]; case 2: return [2, J.sent()] } })) })) } } function addContractWait(T, B) { var N = B.wait.bind(B); B.wait = function (B) { return N(B).then((function (B) { B.events = B.logs.map((function (N) { var L = (0, q.deepCopy)(N); var I = null; try { I = T.interface.parseLog(N) } catch (T) { } if (I) { L.args = I.args; L.decode = function (B, N) { return T.interface.decodeEventLog(I.eventFragment, B, N) }; L.event = I.name; L.eventSignature = I.signature } L.removeListener = function () { return T.provider }; L.getBlock = function () { return T.provider.getBlock(B.blockHash) }; L.getTransaction = function () { return T.provider.getTransaction(B.transactionHash) }; L.getTransactionReceipt = function () { return Promise.resolve(B) }; return L })); return B })) } } function buildCall(T, B, N) { var L = T.signer || T.provider; return function () { var H = []; for (var U = 0; U < arguments.length; U++) { H[U] = arguments[U] } return I(this, void 0, void 0, (function () { var I, U, X, G, V; return J(this, (function (J) { switch (J.label) { case 0: I = undefined; if (!(H.length === B.inputs.length + 1 && typeof H[H.length - 1] === "object")) return [3, 3]; U = (0, q.shallowCopy)(H.pop()); if (!(U.blockTag != null)) return [3, 2]; return [4, U.blockTag]; case 1: I = J.sent(); J.label = 2; case 2: delete U.blockTag; H.push(U); J.label = 3; case 3: if (!(T.deployTransaction != null)) return [3, 5]; return [4, T._deployed(I)]; case 4: J.sent(); J.label = 5; case 5: return [4, populateTransaction(T, B, H)]; case 6: X = J.sent(); return [4, L.call(X, I)]; case 7: G = J.sent(); try { V = T.interface.decodeFunctionResult(B, G); if (N && B.outputs.length === 1) { V = V[0] } return [2, V] } catch (B) { if (B.code === Y.Logger.errors.CALL_EXCEPTION) { B.address = T.address; B.args = H; B.transaction = X } throw B } return [2] } })) })) } } function buildSend(T, B) { return function () { var N = []; for (var L = 0; L < arguments.length; L++) { N[L] = arguments[L] } return I(this, void 0, void 0, (function () { var L, I; return J(this, (function (J) { switch (J.label) { case 0: if (!T.signer) { ef.throwError("sending a transaction requires a signer", Y.Logger.errors.UNSUPPORTED_OPERATION, { operation: "sendTransaction" }) } if (!(T.deployTransaction != null)) return [3, 2]; return [4, T._deployed()]; case 1: J.sent(); J.label = 2; case 2: return [4, populateTransaction(T, B, N)]; case 3: L = J.sent(); return [4, T.signer.sendTransaction(L)]; case 4: I = J.sent(); addContractWait(T, I); return [2, I] } })) })) } } function buildDefault(T, B, N) { if (B.constant) { return buildCall(T, B, N) } return buildSend(T, B) } function getEventTag(T) { if (T.address && (T.topics == null || T.topics.length === 0)) { return "*" } return (T.address || "*") + "@" + (T.topics ? T.topics.map((function (T) { if (Array.isArray(T)) { return T.join("|") } return T })).join(":") : "") } var rf = function () { function RunningEvent(T, B) { (0, q.defineReadOnly)(this, "tag", T); (0, q.defineReadOnly)(this, "filter", B); this._listeners = [] } RunningEvent.prototype.addListener = function (T, B) { this._listeners.push({ listener: T, once: B }) }; RunningEvent.prototype.removeListener = function (T) { var B = false; this._listeners = this._listeners.filter((function (N) { if (B || N.listener !== T) { return true } B = true; return false })) }; RunningEvent.prototype.removeAllListeners = function () { this._listeners = [] }; RunningEvent.prototype.listeners = function () { return this._listeners.map((function (T) { return T.listener })) }; RunningEvent.prototype.listenerCount = function () { return this._listeners.length }; RunningEvent.prototype.run = function (T) { var B = this; var N = this.listenerCount(); this._listeners = this._listeners.filter((function (N) { var L = T.slice(); setTimeout((function () { N.listener.apply(B, L) }), 0); return !N.once })); return N }; RunningEvent.prototype.prepareEvent = function (T) { }; RunningEvent.prototype.getEmit = function (T) { return [T] }; return RunningEvent }(); var af = function (T) { L(ErrorRunningEvent, T); function ErrorRunningEvent() { return T.call(this, "error", null) || this } return ErrorRunningEvent }(rf); var nf = function (T) { L(FragmentRunningEvent, T); function FragmentRunningEvent(B, N, L, I) { var J = this; var H = { address: B }; var U = N.getEventTopic(L); if (I) { if (U !== I[0]) { ef.throwArgumentError("topic mismatch", "topics", I) } H.topics = I.slice() } else { H.topics = [U] } J = T.call(this, getEventTag(H), H) || this; (0, q.defineReadOnly)(J, "address", B); (0, q.defineReadOnly)(J, "interface", N); (0, q.defineReadOnly)(J, "fragment", L); return J } FragmentRunningEvent.prototype.prepareEvent = function (B) { var N = this; T.prototype.prepareEvent.call(this, B); B.event = this.fragment.name; B.eventSignature = this.fragment.format(); B.decode = function (T, B) { return N.interface.decodeEventLog(N.fragment, T, B) }; try { B.args = this.interface.decodeEventLog(this.fragment, B.data, B.topics) } catch (T) { B.args = null; B.decodeError = T } }; FragmentRunningEvent.prototype.getEmit = function (T) { var B = (0, U.checkResultErrors)(T.args); if (B.length) { throw B[0].error } var N = (T.args || []).slice(); N.push(T); return N }; return FragmentRunningEvent }(rf); var of = function (T) { L(WildcardRunningEvent, T); function WildcardRunningEvent(B, N) { var L = T.call(this, "*", { address: B }) || this; (0, q.defineReadOnly)(L, "address", B); (0, q.defineReadOnly)(L, "interface", N); return L } WildcardRunningEvent.prototype.prepareEvent = function (B) { var N = this; T.prototype.prepareEvent.call(this, B); try { var L = this.interface.parseLog(B); B.event = L.name; B.eventSignature = L.signature; B.decode = function (T, B) { return N.interface.decodeEventLog(L.eventFragment, T, B) }; B.args = L.args } catch (T) { } }; return WildcardRunningEvent }(rf); var sf = function () { function BaseContract(T, B, N) { var L = this.constructor; var I = this; (0, q.defineReadOnly)(this, "interface", (0, q.getStatic)(L, "getInterface")(B)); if (N == null) { (0, q.defineReadOnly)(this, "provider", null); (0, q.defineReadOnly)(this, "signer", null) } else if (G.Signer.isSigner(N)) { (0, q.defineReadOnly)(this, "provider", N.provider || null); (0, q.defineReadOnly)(this, "signer", N) } else if (X.Provider.isProvider(N)) { (0, q.defineReadOnly)(this, "provider", N); (0, q.defineReadOnly)(this, "signer", null) } else { ef.throwArgumentError("invalid signer or provider", "signerOrProvider", N) } (0, q.defineReadOnly)(this, "callStatic", {}); (0, q.defineReadOnly)(this, "estimateGas", {}); (0, q.defineReadOnly)(this, "functions", {}); (0, q.defineReadOnly)(this, "populateTransaction", {}); (0, q.defineReadOnly)(this, "filters", {}); { var J = {}; Object.keys(this.interface.events).forEach((function (T) { var B = I.interface.events[T]; (0, q.defineReadOnly)(I.filters, T, (function () { var T = []; for (var N = 0; N < arguments.length; N++) { T[N] = arguments[N] } return { address: I.address, topics: I.interface.encodeFilterTopics(B, T) } })); if (!J[B.name]) { J[B.name] = [] } J[B.name].push(T) })); Object.keys(J).forEach((function (T) { var B = J[T]; if (B.length === 1) { (0, q.defineReadOnly)(I.filters, T, I.filters[B[0]]) } else { ef.warn("Duplicate definition of " + T + " (" + B.join(", ") + ")") } })) } (0, q.defineReadOnly)(this, "_runningEvents", {}); (0, q.defineReadOnly)(this, "_wrappedEmits", {}); if (T == null) { ef.throwArgumentError("invalid contract address or ENS name", "addressOrName", T) } (0, q.defineReadOnly)(this, "address", T); if (this.provider) { (0, q.defineReadOnly)(this, "resolvedAddress", resolveName(this.provider, T)) } else { try { (0, q.defineReadOnly)(this, "resolvedAddress", Promise.resolve((0, V.getAddress)(T))) } catch (T) { ef.throwError("provider is required to use ENS name as contract address", Y.Logger.errors.UNSUPPORTED_OPERATION, { operation: "new Contract" }) } } this.resolvedAddress.catch((function (T) { })); var H = {}; var U = {}; Object.keys(this.interface.functions).forEach((function (T) { var B = I.interface.functions[T]; if (U[T]) { ef.warn("Duplicate ABI entry for " + JSON.stringify(T)); return } U[T] = true; { var N = B.name; if (!H["%" + N]) { H["%" + N] = [] } H["%" + N].push(T) } if (I[T] == null) { (0, q.defineReadOnly)(I, T, buildDefault(I, B, true)) } if (I.functions[T] == null) { (0, q.defineReadOnly)(I.functions, T, buildDefault(I, B, false)) } if (I.callStatic[T] == null) { (0, q.defineReadOnly)(I.callStatic, T, buildCall(I, B, true)) } if (I.populateTransaction[T] == null) { (0, q.defineReadOnly)(I.populateTransaction, T, buildPopulate(I, B)) } if (I.estimateGas[T] == null) { (0, q.defineReadOnly)(I.estimateGas, T, buildEstimate(I, B)) } })); Object.keys(H).forEach((function (T) { var B = H[T]; if (B.length > 1) { return } T = T.substring(1); var N = B[0]; try { if (I[T] == null) { (0, q.defineReadOnly)(I, T, I[N]) } } catch (T) { } if (I.functions[T] == null) { (0, q.defineReadOnly)(I.functions, T, I.functions[N]) } if (I.callStatic[T] == null) { (0, q.defineReadOnly)(I.callStatic, T, I.callStatic[N]) } if (I.populateTransaction[T] == null) { (0, q.defineReadOnly)(I.populateTransaction, T, I.populateTransaction[N]) } if (I.estimateGas[T] == null) { (0, q.defineReadOnly)(I.estimateGas, T, I.estimateGas[N]) } })) } BaseContract.getContractAddress = function (T) { return (0, V.getContractAddress)(T) }; BaseContract.getInterface = function (T) { if (U.Interface.isInterface(T)) { return T } return new U.Interface(T) }; BaseContract.prototype.deployed = function () { return this._deployed() }; BaseContract.prototype._deployed = function (T) { var B = this; if (!this._deployedPromise) { if (this.deployTransaction) { this._deployedPromise = this.deployTransaction.wait().then((function () { return B })) } else { this._deployedPromise = this.provider.getCode(this.address, T).then((function (T) { if (T === "0x") { ef.throwError("contract not deployed", Y.Logger.errors.UNSUPPORTED_OPERATION, { contractAddress: B.address, operation: "getDeployed" }) } return B })) } } return this._deployedPromise }; BaseContract.prototype.fallback = function (T) { var B = this; if (!this.signer) { ef.throwError("sending a transactions require a signer", Y.Logger.errors.UNSUPPORTED_OPERATION, { operation: "sendTransaction(fallback)" }) } var N = (0, q.shallowCopy)(T || {});["from", "to"].forEach((function (T) { if (N[T] == null) { return } ef.throwError("cannot override " + T, Y.Logger.errors.UNSUPPORTED_OPERATION, { operation: T }) })); N.to = this.resolvedAddress; return this.deployed().then((function () { return B.signer.sendTransaction(N) })) }; BaseContract.prototype.connect = function (T) { if (typeof T === "string") { T = new G.VoidSigner(T, this.provider) } var B = new this.constructor(this.address, this.interface, T); if (this.deployTransaction) { (0, q.defineReadOnly)(B, "deployTransaction", this.deployTransaction) } return B }; BaseContract.prototype.attach = function (T) { return new this.constructor(T, this.interface, this.signer || this.provider) }; BaseContract.isIndexed = function (T) { return U.Indexed.isIndexed(T) }; BaseContract.prototype._normalizeRunningEvent = function (T) { if (this._runningEvents[T.tag]) { return this._runningEvents[T.tag] } return T }; BaseContract.prototype._getRunningEvent = function (T) { if (typeof T === "string") { if (T === "error") { return this._normalizeRunningEvent(new af) } if (T === "event") { return this._normalizeRunningEvent(new rf("event", null)) } if (T === "*") { return this._normalizeRunningEvent(new of(this.address, this.interface)) } var B = this.interface.getEvent(T); return this._normalizeRunningEvent(new nf(this.address, this.interface, B)) } if (T.topics && T.topics.length > 0) { try { var N = T.topics[0]; if (typeof N !== "string") { throw new Error("invalid topic") } var B = this.interface.getEvent(N); return this._normalizeRunningEvent(new nf(this.address, this.interface, B, T.topics)) } catch (T) { } var L = { address: this.address, topics: T.topics }; return this._normalizeRunningEvent(new rf(getEventTag(L), L)) } return this._normalizeRunningEvent(new of(this.address, this.interface)) }; BaseContract.prototype._checkRunningEvents = function (T) { if (T.listenerCount() === 0) { delete this._runningEvents[T.tag]; var B = this._wrappedEmits[T.tag]; if (B && T.filter) { this.provider.off(T.filter, B); delete this._wrappedEmits[T.tag] } } }; BaseContract.prototype._wrapEvent = function (T, B, N) { var L = this; var I = (0, q.deepCopy)(B); I.removeListener = function () { if (!N) { return } T.removeListener(N); L._checkRunningEvents(T) }; I.getBlock = function () { return L.provider.getBlock(B.blockHash) }; I.getTransaction = function () { return L.provider.getTransaction(B.transactionHash) }; I.getTransactionReceipt = function () { return L.provider.getTransactionReceipt(B.transactionHash) }; T.prepareEvent(I); return I }; BaseContract.prototype._addEventListener = function (T, B, N) { var L = this; if (!this.provider) { ef.throwError("events require a provider or a signer with a provider", Y.Logger.errors.UNSUPPORTED_OPERATION, { operation: "once" }) } T.addListener(B, N); this._runningEvents[T.tag] = T; if (!this._wrappedEmits[T.tag]) { var wrappedEmit = function (N) { var I = L._wrapEvent(T, N, B); if (I.decodeError == null) { try { var J = T.getEmit(I); L.emit.apply(L, H([T.filter], J, false)) } catch (T) { I.decodeError = T.error } } if (T.filter != null) { L.emit("event", I) } if (I.decodeError != null) { L.emit("error", I.decodeError, I) } }; this._wrappedEmits[T.tag] = wrappedEmit; if (T.filter != null) { this.provider.on(T.filter, wrappedEmit) } } }; BaseContract.prototype.queryFilter = function (T, B, N) { var L = this; var I = this._getRunningEvent(T); var J = (0, q.shallowCopy)(I.filter); if (typeof B === "string" && (0, W.isHexString)(B, 32)) { if (N != null) { ef.throwArgumentError("cannot specify toBlock with blockhash", "toBlock", N) } J.blockHash = B } else { J.fromBlock = B != null ? B : 0; J.toBlock = N != null ? N : "latest" } return this.provider.getLogs(J).then((function (T) { return T.map((function (T) { return L._wrapEvent(I, T, null) })) })) }; BaseContract.prototype.on = function (T, B) { this._addEventListener(this._getRunningEvent(T), B, false); return this }; BaseContract.prototype.once = function (T, B) { this._addEventListener(this._getRunningEvent(T), B, true); return this }; BaseContract.prototype.emit = function (T) { var B = []; for (var N = 1; N < arguments.length; N++) { B[N - 1] = arguments[N] } if (!this.provider) { return false } var L = this._getRunningEvent(T); var I = L.run(B) > 0; this._checkRunningEvents(L); return I }; BaseContract.prototype.listenerCount = function (T) { var B = this; if (!this.provider) { return 0 } if (T == null) { return Object.keys(this._runningEvents).reduce((function (T, N) { return T + B._runningEvents[N].listenerCount() }), 0) } return this._getRunningEvent(T).listenerCount() }; BaseContract.prototype.listeners = function (T) { if (!this.provider) { return [] } if (T == null) { var B = []; for (var N in this._runningEvents) { this._runningEvents[N].listeners().forEach((function (T) { B.push(T) })) } return B } return this._getRunningEvent(T).listeners() }; BaseContract.prototype.removeAllListeners = function (T) { if (!this.provider) { return this } if (T == null) { for (var B in this._runningEvents) { var N = this._runningEvents[B]; N.removeAllListeners(); this._checkRunningEvents(N) } return this } var L = this._getRunningEvent(T); L.removeAllListeners(); this._checkRunningEvents(L); return this }; BaseContract.prototype.off = function (T, B) { if (!this.provider) { return this } var N = this._getRunningEvent(T); N.removeListener(B); this._checkRunningEvents(N); return this }; BaseContract.prototype.removeListener = function (T, B) { return this.off(T, B) }; return BaseContract }(); B.BaseContract = sf; var cf = function (T) { L(Contract, T); function Contract() { return T !== null && T.apply(this, arguments) || this } return Contract }(sf); B.Contract = cf; var bf = function () { function ContractFactory(T, B, N) { var L = this.constructor; var I = null; if (typeof B === "string") { I = B } else if ((0, W.isBytes)(B)) { I = (0, W.hexlify)(B) } else if (B && typeof B.object === "string") { I = B.object } else { I = "!" } if (I.substring(0, 2) !== "0x") { I = "0x" + I } if (!(0, W.isHexString)(I) || I.length % 2) { ef.throwArgumentError("invalid bytecode", "bytecode", B) } if (N && !G.Signer.isSigner(N)) { ef.throwArgumentError("invalid signer", "signer", N) } (0, q.defineReadOnly)(this, "bytecode", I); (0, q.defineReadOnly)(this, "interface", (0, q.getStatic)(L, "getInterface")(T)); (0, q.defineReadOnly)(this, "signer", N || null) } ContractFactory.prototype.getDeployTransaction = function () { var T = []; for (var B = 0; B < arguments.length; B++) { T[B] = arguments[B] } var N = {}; if (T.length === this.interface.deploy.inputs.length + 1 && typeof T[T.length - 1] === "object") { N = (0, q.shallowCopy)(T.pop()); for (var L in N) { if (!tf[L]) { throw new Error("unknown transaction override " + L) } } } ["data", "from", "to"].forEach((function (T) { if (N[T] == null) { return } ef.throwError("cannot override " + T, Y.Logger.errors.UNSUPPORTED_OPERATION, { operation: T }) })); if (N.value) { var I = Z.BigNumber.from(N.value); if (!I.isZero() && !this.interface.deploy.payable) { ef.throwError("non-payable constructor cannot override value", Y.Logger.errors.UNSUPPORTED_OPERATION, { operation: "overrides.value", value: N.value }) } } ef.checkArgumentCount(T.length, this.interface.deploy.inputs.length, " in Contract constructor"); N.data = (0, W.hexlify)((0, W.concat)([this.bytecode, this.interface.encodeDeploy(T)])); return N }; ContractFactory.prototype.deploy = function () { var T = []; for (var B = 0; B < arguments.length; B++) { T[B] = arguments[B] } return I(this, void 0, void 0, (function () { var B, N, L, I, H, U; return J(this, (function (J) { switch (J.label) { case 0: B = {}; if (T.length === this.interface.deploy.inputs.length + 1) { B = T.pop() } ef.checkArgumentCount(T.length, this.interface.deploy.inputs.length, " in Contract constructor"); return [4, resolveAddresses(this.signer, T, this.interface.deploy.inputs)]; case 1: N = J.sent(); N.push(B); L = this.getDeployTransaction.apply(this, N); return [4, this.signer.sendTransaction(L)]; case 2: I = J.sent(); H = (0, q.getStatic)(this.constructor, "getContractAddress")(I); U = (0, q.getStatic)(this.constructor, "getContract")(H, this.interface, this.signer); addContractWait(U, I); (0, q.defineReadOnly)(U, "deployTransaction", I); return [2, U] } })) })) }; ContractFactory.prototype.attach = function (T) { return this.constructor.getContract(T, this.interface, this.signer) }; ContractFactory.prototype.connect = function (T) { return new this.constructor(this.interface, this.bytecode, T) }; ContractFactory.fromSolidity = function (T, B) { if (T == null) { ef.throwError("missing compiler output", Y.Logger.errors.MISSING_ARGUMENT, { argument: "compilerOutput" }) } if (typeof T === "string") { T = JSON.parse(T) } var N = T.abi; var L = null; if (T.bytecode) { L = T.bytecode } else if (T.evm && T.evm.bytecode) { L = T.evm.bytecode } return new this(N, L, B) }; ContractFactory.getInterface = function (T) { return cf.getInterface(T) }; ContractFactory.getContractAddress = function (T) { return (0, V.getContractAddress)(T) }; ContractFactory.getContract = function (T, B, N) { return new cf(T, B, N) }; return ContractFactory }(); B.ContractFactory = bf }, 7272: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.version = void 0; B.version = "hash/5.8.0" }, 2302: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.read_emoji_trie = B.read_zero_terminated_array = B.read_mapped_map = B.read_member_array = B.signed = B.read_compressed_payload = B.read_payload = B.decode_arithmetic = void 0; function flat(T, B) { if (B == null) { B = 1 } var N = []; var L = N.forEach; var flatDeep = function (T, B) { L.call(T, (function (T) { if (B > 0 && Array.isArray(T)) { flatDeep(T, B - 1) } else { N.push(T) } })) }; flatDeep(T, B); return N } function fromEntries(T) { var B = {}; for (var N = 0; N < T.length; N++) { var L = T[N]; B[L[0]] = L[1] } return B } function decode_arithmetic(T) { var B = 0; function u16() { return T[B++] << 8 | T[B++] } var N = u16(); var L = 1; var I = [0, 1]; for (var J = 1; J < N; J++) { I.push(L += u16()) } var H = u16(); var U = B; B += H; var X = 0; var G = 0; function read_bit() { if (X == 0) { G = G << 8 | T[B++]; X = 8 } return G >> --X & 1 } var V = 31; var Z = Math.pow(2, V); var W = Z >>> 1; var q = W >> 1; var Q = Z - 1; var Y = 0; for (var J = 0; J < V; J++)Y = Y << 1 | read_bit(); var ff = []; var ef = 0; var tf = Z; while (true) { var rf = Math.floor(((Y - ef + 1) * L - 1) / tf); var af = 0; var nf = N; while (nf - af > 1) { var of = af + nf >>> 1; if (rf < I[of]) { nf = of } else { af = of } } if (af == 0) break; ff.push(af); var sf = ef + Math.floor(tf * I[af] / L); var cf = ef + Math.floor(tf * I[af + 1] / L) - 1; while (((sf ^ cf) & W) == 0) { Y = Y << 1 & Q | read_bit(); sf = sf << 1 & Q; cf = cf << 1 & Q | 1 } while (sf & ~cf & q) { Y = Y & W | Y << 1 & Q >>> 1 | read_bit(); sf = sf << 1 ^ W; cf = (cf ^ W) << 1 | W | 1 } ef = sf; tf = 1 + cf - sf } var bf = N - 4; return ff.map((function (B) { switch (B - bf) { case 3: return bf + 65792 + (T[U++] << 16 | T[U++] << 8 | T[U++]); case 2: return bf + 256 + (T[U++] << 8 | T[U++]); case 1: return bf + T[U++]; default: return B - 1 } })) } B.decode_arithmetic = decode_arithmetic; function read_payload(T) { var B = 0; return function () { return T[B++] } } B.read_payload = read_payload; function read_compressed_payload(T) { return read_payload(decode_arithmetic(T)) } B.read_compressed_payload = read_compressed_payload; function signed(T) { return T & 1 ? ~T >> 1 : T >> 1 } B.signed = signed; function read_counts(T, B) { var N = Array(T); for (var L = 0; L < T; L++)N[L] = 1 + B(); return N } function read_ascending(T, B) { var N = Array(T); for (var L = 0, I = -1; L < T; L++)N[L] = I += 1 + B(); return N } function read_deltas(T, B) { var N = Array(T); for (var L = 0, I = 0; L < T; L++)N[L] = I += signed(B()); return N } function read_member_array(T, B) { var N = read_ascending(T(), T); var L = T(); var I = read_ascending(L, T); var J = read_counts(L, T); for (var H = 0; H < L; H++) { for (var U = 0; U < J[H]; U++) { N.push(I[H] + U) } } return B ? N.map((function (T) { return B[T] })) : N } B.read_member_array = read_member_array; function read_mapped_map(T) { var B = []; while (true) { var N = T(); if (N == 0) break; B.push(read_linear_table(N, T)) } while (true) { var N = T() - 1; if (N < 0) break; B.push(read_replacement_table(N, T)) } return fromEntries(flat(B)) } B.read_mapped_map = read_mapped_map; function read_zero_terminated_array(T) { var B = []; while (true) { var N = T(); if (N == 0) break; B.push(N) } return B } B.read_zero_terminated_array = read_zero_terminated_array; function read_transposed(T, B, N) { var L = Array(T).fill(undefined).map((function () { return [] })); for (var I = 0; I < B; I++) { read_deltas(T, N).forEach((function (T, B) { return L[B].push(T) })) } return L } function read_linear_table(T, B) { var N = 1 + B(); var L = B(); var I = read_zero_terminated_array(B); var J = read_transposed(I.length, 1 + T, B); return flat(J.map((function (T, B) { var J = T[0], H = T.slice(1); return Array(I[B]).fill(undefined).map((function (T, B) { var I = B * L; return [J + B * N, H.map((function (T) { return T + I }))] })) }))) } function read_replacement_table(T, B) { var N = 1 + B(); var L = read_transposed(N, 1 + T, B); return L.map((function (T) { return [T[0], T.slice(1)] })) } function read_emoji_trie(T) { var B = read_member_array(T).sort((function (T, B) { return T - B })); return read(); function read() { var N = []; while (true) { var L = read_member_array(T, B); if (L.length == 0) break; N.push({ set: new Set(L), node: read() }) } N.sort((function (T, B) { return B.set.size - T.set.size })); var I = T(); var J = I % 3; I = I / 3 | 0; var H = !!(I & 1); I >>= 1; var U = I == 1; var X = I == 2; return { branches: N, valid: J, fe0f: H, save: U, check: X } } } B.read_emoji_trie = read_emoji_trie }, 7666: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.getData = void 0; var L = N(9032); var I = N(2302); function getData() { return (0, I.read_compressed_payload)((0, L.decode)("")) } B.getData = getData }, 9365: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.ens_normalize = B.ens_normalize_post_check = void 0; var L = N(3859); var I = N(7666); var J = (0, I.getData)(); var H = N(2302); var U = new Set((0, H.read_member_array)(J)); var X = new Set((0, H.read_member_array)(J)); var G = (0, H.read_mapped_map)(J); var V = (0, H.read_emoji_trie)(J); var Z = 45; var W = 95; function explode_cp(T) { return (0, L.toUtf8CodePoints)(T) } function filter_fe0f(T) { return T.filter((function (T) { return T != 65039 })) } function ens_normalize_post_check(T) { for (var B = 0, N = T.split("."); B < N.length; B++) { var L = N[B]; var I = explode_cp(L); try { for (var J = I.lastIndexOf(W) - 1; J >= 0; J--) { if (I[J] !== W) { throw new Error("underscore only allowed at start") } } if (I.length >= 4 && I.every((function (T) { return T < 128 })) && I[2] === Z && I[3] === Z) { throw new Error("invalid label extension") } } catch (T) { throw new Error('Invalid label "' + L + '": ' + T.message) } } return T } B.ens_normalize_post_check = ens_normalize_post_check; function ens_normalize(T) { return ens_normalize_post_check(normalize(T, filter_fe0f)) } B.ens_normalize = ens_normalize; function normalize(T, B) { var N = explode_cp(T).reverse(); var L = []; while (N.length) { var I = consume_emoji_reversed(N); if (I) { L.push.apply(L, B(I)); continue } var J = N.pop(); if (U.has(J)) { L.push(J); continue } if (X.has(J)) { continue } var H = G[J]; if (H) { L.push.apply(L, H); continue } throw new Error("Disallowed codepoint: 0x" + J.toString(16).toUpperCase()) } return ens_normalize_post_check(nfc(String.fromCodePoint.apply(String, L))) } function nfc(T) { return T.normalize("NFC") } function consume_emoji_reversed(T, B) { var N; var L = V; var I; var J; var H = []; var U = T.length; if (B) B.length = 0; var _loop_1 = function () { var X = T[--U]; L = (N = L.branches.find((function (T) { return T.set.has(X) }))) === null || N === void 0 ? void 0 : N.node; if (!L) return "break"; if (L.save) { J = X } else if (L.check) { if (X === J) return "break" } H.push(X); if (L.fe0f) { H.push(65039); if (U > 0 && T[U - 1] == 65039) U-- } if (L.valid) { I = H.slice(); if (L.valid == 2) I.splice(1, 1); if (B) B.push.apply(B, T.slice(U).reverse()); T.length = U } }; while (U) { var X = _loop_1(); if (X === "break") break } return I } }, 3562: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.id = void 0; var L = N(6938); var I = N(3859); function id(T) { return (0, L.keccak256)((0, I.toUtf8Bytes)(T)) } B.id = id }, 1839: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B._TypedDataEncoder = B.hashMessage = B.messagePrefix = B.ensNormalize = B.isValidName = B.namehash = B.dnsEncode = B.id = void 0; var L = N(3562); Object.defineProperty(B, "id", { enumerable: true, get: function () { return L.id } }); var I = N(2292); Object.defineProperty(B, "dnsEncode", { enumerable: true, get: function () { return I.dnsEncode } }); Object.defineProperty(B, "isValidName", { enumerable: true, get: function () { return I.isValidName } }); Object.defineProperty(B, "namehash", { enumerable: true, get: function () { return I.namehash } }); var J = N(2976); Object.defineProperty(B, "hashMessage", { enumerable: true, get: function () { return J.hashMessage } }); Object.defineProperty(B, "messagePrefix", { enumerable: true, get: function () { return J.messagePrefix } }); var H = N(2292); Object.defineProperty(B, "ensNormalize", { enumerable: true, get: function () { return H.ensNormalize } }); var U = N(4516); Object.defineProperty(B, "_TypedDataEncoder", { enumerable: true, get: function () { return U.TypedDataEncoder } }) }, 2976: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.hashMessage = B.messagePrefix = void 0; var L = N(2006); var I = N(6938); var J = N(3859); B.messagePrefix = "Ethereum Signed Message:\n"; function hashMessage(T) { if (typeof T === "string") { T = (0, J.toUtf8Bytes)(T) } return (0, I.keccak256)((0, L.concat)([(0, J.toUtf8Bytes)(B.messagePrefix), (0, J.toUtf8Bytes)(String(T.length)), T])) } B.hashMessage = hashMessage }, 2292: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.dnsEncode = B.namehash = B.isValidName = B.ensNormalize = void 0; var L = N(2006); var I = N(3859); var J = N(6938); var H = N(6127); var U = N(7272); var X = new H.Logger(U.version); var G = N(9365); var V = new Uint8Array(32); V.fill(0); function checkComponent(T) { if (T.length === 0) { throw new Error("invalid ENS name; empty component") } return T } function ensNameSplit(T) { var B = (0, I.toUtf8Bytes)((0, G.ens_normalize)(T)); var N = []; if (T.length === 0) { return N } var L = 0; for (var J = 0; J < B.length; J++) { var H = B[J]; if (H === 46) { N.push(checkComponent(B.slice(L, J))); L = J + 1 } } if (L >= B.length) { throw new Error("invalid ENS name; empty component") } N.push(checkComponent(B.slice(L))); return N } function ensNormalize(T) { return ensNameSplit(T).map((function (T) { return (0, I.toUtf8String)(T) })).join(".") } B.ensNormalize = ensNormalize; function isValidName(T) { try { return ensNameSplit(T).length !== 0 } catch (T) { } return false } B.isValidName = isValidName; function namehash(T) { if (typeof T !== "string") { X.throwArgumentError("invalid ENS name; not a string", "name", T) } var B = V; var N = ensNameSplit(T); while (N.length) { B = (0, J.keccak256)((0, L.concat)([B, (0, J.keccak256)(N.pop())])) } return (0, L.hexlify)(B) } B.namehash = namehash; function dnsEncode(T) { return (0, L.hexlify)((0, L.concat)(ensNameSplit(T).map((function (T) { if (T.length > 63) { throw new Error("invalid DNS encoded entry; length exceeds 63 bytes") } var B = new Uint8Array(T.length + 1); B.set(T, 1); B[0] = B.length - 1; return B })))) + "00" } B.dnsEncode = dnsEncode }, 4516: function (T, B, N) { "use strict"; var L = this && this.__awaiter || function (T, B, N, L) { function adopt(T) { return T instanceof N ? T : new N((function (B) { B(T) })) } return new (N || (N = Promise))((function (N, I) { function fulfilled(T) { try { step(L.next(T)) } catch (T) { I(T) } } function rejected(T) { try { step(L["throw"](T)) } catch (T) { I(T) } } function step(T) { T.done ? N(T.value) : adopt(T.value).then(fulfilled, rejected) } step((L = L.apply(T, B || [])).next()) })) }; var I = this && this.__generator || function (T, B) { var N = { label: 0, sent: function () { if (J[0] & 1) throw J[1]; return J[1] }, trys: [], ops: [] }, L, I, J, H; return H = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (H[Symbol.iterator] = function () { return this }), H; function verb(T) { return function (B) { return step([T, B]) } } function step(H) { if (L) throw new TypeError("Generator is already executing."); while (N) try { if (L = 1, I && (J = H[0] & 2 ? I["return"] : H[0] ? I["throw"] || ((J = I["return"]) && J.call(I), 0) : I.next) && !(J = J.call(I, H[1])).done) return J; if (I = 0, J) H = [H[0] & 2, J.value]; switch (H[0]) { case 0: case 1: J = H; break; case 4: N.label++; return { value: H[1], done: false }; case 5: N.label++; I = H[1]; H = [0]; continue; case 7: H = N.ops.pop(); N.trys.pop(); continue; default: if (!(J = N.trys, J = J.length > 0 && J[J.length - 1]) && (H[0] === 6 || H[0] === 2)) { N = 0; continue } if (H[0] === 3 && (!J || H[1] > J[0] && H[1] < J[3])) { N.label = H[1]; break } if (H[0] === 6 && N.label < J[1]) { N.label = J[1]; J = H; break } if (J && N.label < J[2]) { N.label = J[2]; N.ops.push(H); break } if (J[2]) N.ops.pop(); N.trys.pop(); continue }H = B.call(T, N) } catch (T) { H = [6, T]; I = 0 } finally { L = J = 0 } if (H[0] & 5) throw H[1]; return { value: H[0] ? H[1] : void 0, done: true } } }; Object.defineProperty(B, "__esModule", { value: true }); B.TypedDataEncoder = void 0; var J = N(5745); var H = N(8202); var U = N(2006); var X = N(6938); var G = N(1338); var V = N(6127); var Z = N(7272); var W = new V.Logger(Z.version); var q = N(3562); var Q = new Uint8Array(32); Q.fill(0); var Y = H.BigNumber.from(-1); var ff = H.BigNumber.from(0); var ef = H.BigNumber.from(1); var tf = H.BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"); function hexPadRight(T) { var B = (0, U.arrayify)(T); var N = B.length % 32; if (N) { return (0, U.hexConcat)([B, Q.slice(N)]) } return (0, U.hexlify)(B) } var rf = (0, U.hexZeroPad)(ef.toHexString(), 32); var af = (0, U.hexZeroPad)(ff.toHexString(), 32); var nf = { name: "string", version: "string", chainId: "uint256", verifyingContract: "address", salt: "bytes32" }; var of = ["name", "version", "chainId", "verifyingContract", "salt"]; function checkString(T) { return function (B) { if (typeof B !== "string") { W.throwArgumentError("invalid domain value for " + JSON.stringify(T), "domain." + T, B) } return B } } var sf = { name: checkString("name"), version: checkString("version"), chainId: function (T) { try { return H.BigNumber.from(T).toString() } catch (T) { } return W.throwArgumentError('invalid domain value for "chainId"', "domain.chainId", T) }, verifyingContract: function (T) { try { return (0, J.getAddress)(T).toLowerCase() } catch (T) { } return W.throwArgumentError('invalid domain value "verifyingContract"', "domain.verifyingContract", T) }, salt: function (T) { try { var B = (0, U.arrayify)(T); if (B.length !== 32) { throw new Error("bad length") } return (0, U.hexlify)(B) } catch (T) { } return W.throwArgumentError('invalid domain value "salt"', "domain.salt", T) } }; function getBaseEncoder(T) { { var B = T.match(/^(u?)int(\d*)$/); if (B) { var N = B[1] === ""; var L = parseInt(B[2] || "256"); if (L % 8 !== 0 || L > 256 || B[2] && B[2] !== String(L)) { W.throwArgumentError("invalid numeric width", "type", T) } var I = tf.mask(N ? L - 1 : L); var G = N ? I.add(ef).mul(Y) : ff; return function (B) { var N = H.BigNumber.from(B); if (N.lt(G) || N.gt(I)) { W.throwArgumentError("value out-of-bounds for " + T, "value", B) } return (0, U.hexZeroPad)(N.toTwos(256).toHexString(), 32) } } } { var B = T.match(/^bytes(\d+)$/); if (B) { var V = parseInt(B[1]); if (V === 0 || V > 32 || B[1] !== String(V)) { W.throwArgumentError("invalid bytes width", "type", T) } return function (B) { var N = (0, U.arrayify)(B); if (N.length !== V) { W.throwArgumentError("invalid length for " + T, "value", B) } return hexPadRight(B) } } } switch (T) { case "address": return function (T) { return (0, U.hexZeroPad)((0, J.getAddress)(T), 32) }; case "bool": return function (T) { return !T ? af : rf }; case "bytes": return function (T) { return (0, X.keccak256)(T) }; case "string": return function (T) { return (0, q.id)(T) } }return null } function encodeType(T, B) { return T + "(" + B.map((function (T) { var B = T.name, N = T.type; return N + " " + B })).join(",") + ")" } var cf = function () { function TypedDataEncoder(T) { (0, G.defineReadOnly)(this, "types", Object.freeze((0, G.deepCopy)(T))); (0, G.defineReadOnly)(this, "_encoderCache", {}); (0, G.defineReadOnly)(this, "_types", {}); var B = {}; var N = {}; var L = {}; Object.keys(T).forEach((function (T) { B[T] = {}; N[T] = []; L[T] = {} })); var _loop_1 = function (L) { var I = {}; T[L].forEach((function (J) { if (I[J.name]) { W.throwArgumentError("duplicate variable name " + JSON.stringify(J.name) + " in " + JSON.stringify(L), "types", T) } I[J.name] = true; var H = J.type.match(/^([^\x5b]*)(\x5b|$)/)[1]; if (H === L) { W.throwArgumentError("circular type reference to " + JSON.stringify(H), "types", T) } var U = getBaseEncoder(H); if (U) { return } if (!N[H]) { W.throwArgumentError("unknown type " + JSON.stringify(H), "types", T) } N[H].push(L); B[L][H] = true })) }; for (var I in T) { _loop_1(I) } var J = Object.keys(N).filter((function (T) { return N[T].length === 0 })); if (J.length === 0) { W.throwArgumentError("missing primary type", "types", T) } else if (J.length > 1) { W.throwArgumentError("ambiguous primary types or unused types: " + J.map((function (T) { return JSON.stringify(T) })).join(", "), "types", T) } (0, G.defineReadOnly)(this, "primaryType", J[0]); function checkCircular(I, J) { if (J[I]) { W.throwArgumentError("circular type reference to " + JSON.stringify(I), "types", T) } J[I] = true; Object.keys(B[I]).forEach((function (T) { if (!N[T]) { return } checkCircular(T, J); Object.keys(J).forEach((function (B) { L[B][T] = true })) })); delete J[I] } checkCircular(this.primaryType, {}); for (var H in L) { var U = Object.keys(L[H]); U.sort(); this._types[H] = encodeType(H, T[H]) + U.map((function (B) { return encodeType(B, T[B]) })).join("") } } TypedDataEncoder.prototype.getEncoder = function (T) { var B = this._encoderCache[T]; if (!B) { B = this._encoderCache[T] = this._getEncoder(T) } return B }; TypedDataEncoder.prototype._getEncoder = function (T) { var B = this; { var N = getBaseEncoder(T); if (N) { return N } } var L = T.match(/^(.*)(\x5b(\d*)\x5d)$/); if (L) { var I = L[1]; var J = this.getEncoder(I); var H = parseInt(L[3]); return function (T) { if (H >= 0 && T.length !== H) { W.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", T) } var N = T.map(J); if (B._types[I]) { N = N.map(X.keccak256) } return (0, X.keccak256)((0, U.hexConcat)(N)) } } var G = this.types[T]; if (G) { var V = (0, q.id)(this._types[T]); return function (T) { var N = G.map((function (N) { var L = N.name, I = N.type; var J = B.getEncoder(I)(T[L]); if (B._types[I]) { return (0, X.keccak256)(J) } return J })); N.unshift(V); return (0, U.hexConcat)(N) } } return W.throwArgumentError("unknown type: " + T, "type", T) }; TypedDataEncoder.prototype.encodeType = function (T) { var B = this._types[T]; if (!B) { W.throwArgumentError("unknown type: " + JSON.stringify(T), "name", T) } return B }; TypedDataEncoder.prototype.encodeData = function (T, B) { return this.getEncoder(T)(B) }; TypedDataEncoder.prototype.hashStruct = function (T, B) { return (0, X.keccak256)(this.encodeData(T, B)) }; TypedDataEncoder.prototype.encode = function (T) { return this.encodeData(this.primaryType, T) }; TypedDataEncoder.prototype.hash = function (T) { return this.hashStruct(this.primaryType, T) }; TypedDataEncoder.prototype._visit = function (T, B, N) { var L = this; { var I = getBaseEncoder(T); if (I) { return N(T, B) } } var J = T.match(/^(.*)(\x5b(\d*)\x5d)$/); if (J) { var H = J[1]; var U = parseInt(J[3]); if (U >= 0 && B.length !== U) { W.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", B) } return B.map((function (T) { return L._visit(H, T, N) })) } var X = this.types[T]; if (X) { return X.reduce((function (T, I) { var J = I.name, H = I.type; T[J] = L._visit(H, B[J], N); return T }), {}) } return W.throwArgumentError("unknown type: " + T, "type", T) }; TypedDataEncoder.prototype.visit = function (T, B) { return this._visit(this.primaryType, T, B) }; TypedDataEncoder.from = function (T) { return new TypedDataEncoder(T) }; TypedDataEncoder.getPrimaryType = function (T) { return TypedDataEncoder.from(T).primaryType }; TypedDataEncoder.hashStruct = function (T, B, N) { return TypedDataEncoder.from(B).hashStruct(T, N) }; TypedDataEncoder.hashDomain = function (T) { var B = []; for (var N in T) { var L = nf[N]; if (!L) { W.throwArgumentError("invalid typed-data domain key: " + JSON.stringify(N), "domain", T) } B.push({ name: N, type: L }) } B.sort((function (T, B) { return of.indexOf(T.name) - of.indexOf(B.name) })); return TypedDataEncoder.hashStruct("EIP712Domain", { EIP712Domain: B }, T) }; TypedDataEncoder.encode = function (T, B, N) { return (0, U.hexConcat)(["0x1901", TypedDataEncoder.hashDomain(T), TypedDataEncoder.from(B).hash(N)]) }; TypedDataEncoder.hash = function (T, B, N) { return (0, X.keccak256)(TypedDataEncoder.encode(T, B, N)) }; TypedDataEncoder.resolveNames = function (T, B, N, J) { return L(this, void 0, void 0, (function () { var L, H, X, V, Z, W, q, Q; return I(this, (function (I) { switch (I.label) { case 0: T = (0, G.shallowCopy)(T); L = {}; if (T.verifyingContract && !(0, U.isHexString)(T.verifyingContract, 20)) { L[T.verifyingContract] = "0x" } H = TypedDataEncoder.from(B); H.visit(N, (function (T, B) { if (T === "address" && !(0, U.isHexString)(B, 20)) { L[B] = "0x" } return B })); X = []; for (V in L) X.push(V); Z = 0; I.label = 1; case 1: if (!(Z < X.length)) return [3, 4]; W = X[Z]; q = L; Q = W; return [4, J(W)]; case 2: q[Q] = I.sent(); I.label = 3; case 3: Z++; return [3, 1]; case 4: if (T.verifyingContract && L[T.verifyingContract]) { T.verifyingContract = L[T.verifyingContract] } N = H.visit(N, (function (T, B) { if (T === "address" && L[B]) { return L[B] } return B })); return [2, { domain: T, value: N }] } })) })) }; TypedDataEncoder.getPayload = function (T, B, N) { TypedDataEncoder.hashDomain(T); var L = {}; var I = []; of.forEach((function (B) { var N = T[B]; if (N == null) { return } L[B] = sf[B](N); I.push({ name: B, type: nf[B] }) })); var J = TypedDataEncoder.from(B); var X = (0, G.shallowCopy)(B); if (X.EIP712Domain) { W.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", B) } else { X.EIP712Domain = I } J.encode(N); return { types: X, domain: L, primaryType: J.primaryType, message: J.visit(N, (function (T, B) { if (T.match(/^bytes(\d*)/)) { return (0, U.hexlify)((0, U.arrayify)(B)) } if (T.match(/^u?int/)) { return H.BigNumber.from(B).toString() } switch (T) { case "address": return B.toLowerCase(); case "bool": return !!B; case "string": if (typeof B !== "string") { W.throwArgumentError("invalid string", "value", B) } return B }return W.throwArgumentError("unsupported type", "type", T) })) } }; return TypedDataEncoder }(); B.TypedDataEncoder = cf }, 4620: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.version = void 0; B.version = "hdnode/5.8.0" }, 3067: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.getAccountPath = B.isValidMnemonic = B.entropyToMnemonic = B.mnemonicToEntropy = B.mnemonicToSeed = B.HDNode = B.defaultPath = void 0; var L = N(1426); var I = N(2006); var J = N(8202); var H = N(3859); var U = N(5686); var X = N(1338); var G = N(3928); var V = N(6935); var Z = N(2394); var W = N(8168); var q = N(6127); var Q = N(4620); var Y = new q.Logger(Q.version); var ff = J.BigNumber.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"); var ef = (0, H.toUtf8Bytes)("Bitcoin seed"); var tf = 2147483648; function getUpperMask(T) { return (1 << T) - 1 << 8 - T } function getLowerMask(T) { return (1 << T) - 1 } function bytes32(T) { return (0, I.hexZeroPad)((0, I.hexlify)(T), 32) } function base58check(T) { return L.Base58.encode((0, I.concat)([T, (0, I.hexDataSlice)((0, V.sha256)((0, V.sha256)(T)), 0, 4)])) } function getWordlist(T) { if (T == null) { return W.wordlists["en"] } if (typeof T === "string") { var B = W.wordlists[T]; if (B == null) { Y.throwArgumentError("unknown locale", "wordlist", T) } return B } return T } var rf = {}; B.defaultPath = "m/44'/60'/0'/0/0"; var af = function () { function HDNode(T, B, N, L, J, H, U, W) { if (T !== rf) { throw new Error("HDNode constructor cannot be called directly") } if (B) { var q = new G.SigningKey(B); (0, X.defineReadOnly)(this, "privateKey", q.privateKey); (0, X.defineReadOnly)(this, "publicKey", q.compressedPublicKey) } else { (0, X.defineReadOnly)(this, "privateKey", null); (0, X.defineReadOnly)(this, "publicKey", (0, I.hexlify)(N)) } (0, X.defineReadOnly)(this, "parentFingerprint", L); (0, X.defineReadOnly)(this, "fingerprint", (0, I.hexDataSlice)((0, V.ripemd160)((0, V.sha256)(this.publicKey)), 0, 4)); (0, X.defineReadOnly)(this, "address", (0, Z.computeAddress)(this.publicKey)); (0, X.defineReadOnly)(this, "chainCode", J); (0, X.defineReadOnly)(this, "index", H); (0, X.defineReadOnly)(this, "depth", U); if (W == null) { (0, X.defineReadOnly)(this, "mnemonic", null); (0, X.defineReadOnly)(this, "path", null) } else if (typeof W === "string") { (0, X.defineReadOnly)(this, "mnemonic", null); (0, X.defineReadOnly)(this, "path", W) } else { (0, X.defineReadOnly)(this, "mnemonic", W); (0, X.defineReadOnly)(this, "path", W.path) } } Object.defineProperty(HDNode.prototype, "extendedKey", { get: function () { if (this.depth >= 256) { throw new Error("Depth too large!") } return base58check((0, I.concat)([this.privateKey != null ? "0x0488ADE4" : "0x0488B21E", (0, I.hexlify)(this.depth), this.parentFingerprint, (0, I.hexZeroPad)((0, I.hexlify)(this.index), 4), this.chainCode, this.privateKey != null ? (0, I.concat)(["0x00", this.privateKey]) : this.publicKey])) }, enumerable: false, configurable: true }); HDNode.prototype.neuter = function () { return new HDNode(rf, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path) }; HDNode.prototype._derive = function (T) { if (T > 4294967295) { throw new Error("invalid index - " + String(T)) } var B = this.path; if (B) { B += "/" + (T & ~tf) } var N = new Uint8Array(37); if (T & tf) { if (!this.privateKey) { throw new Error("cannot derive child of neutered node") } N.set((0, I.arrayify)(this.privateKey), 1); if (B) { B += "'" } } else { N.set((0, I.arrayify)(this.publicKey)) } for (var L = 24; L >= 0; L -= 8) { N[33 + (L >> 3)] = T >> 24 - L & 255 } var H = (0, I.arrayify)((0, V.computeHmac)(V.SupportedAlgorithm.sha512, this.chainCode, N)); var U = H.slice(0, 32); var X = H.slice(32); var Z = null; var W = null; if (this.privateKey) { Z = bytes32(J.BigNumber.from(U).add(this.privateKey).mod(ff)) } else { var q = new G.SigningKey((0, I.hexlify)(U)); W = q._addPoint(this.publicKey) } var Q = B; var Y = this.mnemonic; if (Y) { Q = Object.freeze({ phrase: Y.phrase, path: B, locale: Y.locale || "en" }) } return new HDNode(rf, Z, W, this.fingerprint, bytes32(X), T, this.depth + 1, Q) }; HDNode.prototype.derivePath = function (T) { var B = T.split("/"); if (B.length === 0 || B[0] === "m" && this.depth !== 0) { throw new Error("invalid path - " + T) } if (B[0] === "m") { B.shift() } var N = this; for (var L = 0; L < B.length; L++) { var I = B[L]; if (I.match(/^[0-9]+'$/)) { var J = parseInt(I.substring(0, I.length - 1)); if (J >= tf) { throw new Error("invalid path index - " + I) } N = N._derive(tf + J) } else if (I.match(/^[0-9]+$/)) { var J = parseInt(I); if (J >= tf) { throw new Error("invalid path index - " + I) } N = N._derive(J) } else { throw new Error("invalid path component - " + I) } } return N }; HDNode._fromSeed = function (T, B) { var N = (0, I.arrayify)(T); if (N.length < 16 || N.length > 64) { throw new Error("invalid seed") } var L = (0, I.arrayify)((0, V.computeHmac)(V.SupportedAlgorithm.sha512, ef, N)); return new HDNode(rf, bytes32(L.slice(0, 32)), null, "0x00000000", bytes32(L.slice(32)), 0, 0, B) }; HDNode.fromMnemonic = function (T, B, N) { N = getWordlist(N); T = entropyToMnemonic(mnemonicToEntropy(T, N), N); return HDNode._fromSeed(mnemonicToSeed(T, B), { phrase: T, path: "m", locale: N.locale }) }; HDNode.fromSeed = function (T) { return HDNode._fromSeed(T, null) }; HDNode.fromExtendedKey = function (T) { var B = L.Base58.decode(T); if (B.length !== 82 || base58check(B.slice(0, 78)) !== T) { Y.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]") } var N = B[4]; var J = (0, I.hexlify)(B.slice(5, 9)); var H = parseInt((0, I.hexlify)(B.slice(9, 13)).substring(2), 16); var U = (0, I.hexlify)(B.slice(13, 45)); var X = B.slice(45, 78); switch ((0, I.hexlify)(B.slice(0, 4))) { case "0x0488b21e": case "0x043587cf": return new HDNode(rf, null, (0, I.hexlify)(X), J, U, H, N, null); case "0x0488ade4": case "0x04358394 ": if (X[0] !== 0) { break } return new HDNode(rf, (0, I.hexlify)(X.slice(1)), null, J, U, H, N, null) }return Y.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]") }; return HDNode }(); B.HDNode = af; function mnemonicToSeed(T, B) { if (!B) { B = "" } var N = (0, H.toUtf8Bytes)("mnemonic" + B, H.UnicodeNormalizationForm.NFKD); return (0, U.pbkdf2)((0, H.toUtf8Bytes)(T, H.UnicodeNormalizationForm.NFKD), N, 2048, 64, "sha512") } B.mnemonicToSeed = mnemonicToSeed; function mnemonicToEntropy(T, B) { B = getWordlist(B); Y.checkNormalize(); var N = B.split(T); if (N.length % 3 !== 0) { throw new Error("invalid mnemonic") } var L = (0, I.arrayify)(new Uint8Array(Math.ceil(11 * N.length / 8))); var J = 0; for (var H = 0; H < N.length; H++) { var U = B.getWordIndex(N[H].normalize("NFKD")); if (U === -1) { throw new Error("invalid mnemonic") } for (var X = 0; X < 11; X++) { if (U & 1 << 10 - X) { L[J >> 3] |= 1 << 7 - J % 8 } J++ } } var G = 32 * N.length / 3; var Z = N.length / 3; var W = getUpperMask(Z); var q = (0, I.arrayify)((0, V.sha256)(L.slice(0, G / 8)))[0] & W; if (q !== (L[L.length - 1] & W)) { throw new Error("invalid checksum") } return (0, I.hexlify)(L.slice(0, G / 8)) } B.mnemonicToEntropy = mnemonicToEntropy; function entropyToMnemonic(T, B) { B = getWordlist(B); T = (0, I.arrayify)(T); if (T.length % 4 !== 0 || T.length < 16 || T.length > 32) { throw new Error("invalid entropy") } var N = [0]; var L = 11; for (var J = 0; J < T.length; J++) { if (L > 8) { N[N.length - 1] <<= 8; N[N.length - 1] |= T[J]; L -= 8 } else { N[N.length - 1] <<= L; N[N.length - 1] |= T[J] >> 8 - L; N.push(T[J] & getLowerMask(8 - L)); L += 3 } } var H = T.length / 4; var U = (0, I.arrayify)((0, V.sha256)(T))[0] & getUpperMask(H); N[N.length - 1] <<= H; N[N.length - 1] |= U >> 8 - H; return B.join(N.map((function (T) { return B.getWord(T) }))) } B.entropyToMnemonic = entropyToMnemonic; function isValidMnemonic(T, B) { try { mnemonicToEntropy(T, B); return true } catch (T) { } return false } B.isValidMnemonic = isValidMnemonic; function getAccountPath(T) { if (typeof T !== "number" || T < 0 || T >= tf || T % 1) { Y.throwArgumentError("invalid account index", "index", T) } return "m/44'/60'/" + T + "'/0/0" } B.getAccountPath = getAccountPath }, 771: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.version = void 0; B.version = "json-wallets/5.8.0" }, 1340: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); var I = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); B.decrypt = B.CrowdsaleAccount = void 0; var J = I(N(1965)); var H = N(5745); var U = N(2006); var X = N(6938); var G = N(5686); var V = N(3859); var Z = N(1338); var W = N(6127); var q = N(771); var Q = new W.Logger(q.version); var Y = N(3503); var ff = function (T) { L(CrowdsaleAccount, T); function CrowdsaleAccount() { return T !== null && T.apply(this, arguments) || this } CrowdsaleAccount.prototype.isCrowdsaleAccount = function (T) { return !!(T && T._isCrowdsaleAccount) }; return CrowdsaleAccount }(Z.Description); B.CrowdsaleAccount = ff; function decrypt(T, B) { var N = JSON.parse(T); B = (0, Y.getPassword)(B); var L = (0, H.getAddress)((0, Y.searchPath)(N, "ethaddr")); var I = (0, Y.looseArrayify)((0, Y.searchPath)(N, "encseed")); if (!I || I.length % 16 !== 0) { Q.throwArgumentError("invalid encseed", "json", T) } var Z = (0, U.arrayify)((0, G.pbkdf2)(B, B, 2e3, 32, "sha256")).slice(0, 16); var W = I.slice(0, 16); var q = I.slice(16); var ef = new J.default.ModeOfOperation.cbc(Z, W); var tf = J.default.padding.pkcs7.strip((0, U.arrayify)(ef.decrypt(q))); var rf = ""; for (var af = 0; af < tf.length; af++) { rf += String.fromCharCode(tf[af]) } var nf = (0, V.toUtf8Bytes)(rf); var of = (0, X.keccak256)(nf); return new ff({ _isCrowdsaleAccount: true, address: L, privateKey: of }) } B.decrypt = decrypt }, 3582: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.decryptJsonWalletSync = B.decryptJsonWallet = B.getJsonWalletAddress = B.isKeystoreWallet = B.isCrowdsaleWallet = B.encryptKeystore = B.decryptKeystoreSync = B.decryptKeystore = B.decryptCrowdsale = void 0; var L = N(1340); Object.defineProperty(B, "decryptCrowdsale", { enumerable: true, get: function () { return L.decrypt } }); var I = N(7610); Object.defineProperty(B, "getJsonWalletAddress", { enumerable: true, get: function () { return I.getJsonWalletAddress } }); Object.defineProperty(B, "isCrowdsaleWallet", { enumerable: true, get: function () { return I.isCrowdsaleWallet } }); Object.defineProperty(B, "isKeystoreWallet", { enumerable: true, get: function () { return I.isKeystoreWallet } }); var J = N(1692); Object.defineProperty(B, "decryptKeystore", { enumerable: true, get: function () { return J.decrypt } }); Object.defineProperty(B, "decryptKeystoreSync", { enumerable: true, get: function () { return J.decryptSync } }); Object.defineProperty(B, "encryptKeystore", { enumerable: true, get: function () { return J.encrypt } }); function decryptJsonWallet(T, B, N) { if ((0, I.isCrowdsaleWallet)(T)) { if (N) { N(0) } var H = (0, L.decrypt)(T, B); if (N) { N(1) } return Promise.resolve(H) } if ((0, I.isKeystoreWallet)(T)) { return (0, J.decrypt)(T, B, N) } return Promise.reject(new Error("invalid JSON wallet")) } B.decryptJsonWallet = decryptJsonWallet; function decryptJsonWalletSync(T, B) { if ((0, I.isCrowdsaleWallet)(T)) { return (0, L.decrypt)(T, B) } if ((0, I.isKeystoreWallet)(T)) { return (0, J.decryptSync)(T, B) } throw new Error("invalid JSON wallet") } B.decryptJsonWalletSync = decryptJsonWalletSync }, 7610: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.getJsonWalletAddress = B.isKeystoreWallet = B.isCrowdsaleWallet = void 0; var L = N(5745); function isCrowdsaleWallet(T) { var B = null; try { B = JSON.parse(T) } catch (T) { return false } return B.encseed && B.ethaddr } B.isCrowdsaleWallet = isCrowdsaleWallet; function isKeystoreWallet(T) { var B = null; try { B = JSON.parse(T) } catch (T) { return false } if (!B.version || parseInt(B.version) !== B.version || parseInt(B.version) !== 3) { return false } return true } B.isKeystoreWallet = isKeystoreWallet; function getJsonWalletAddress(T) { if (isCrowdsaleWallet(T)) { try { return (0, L.getAddress)(JSON.parse(T).ethaddr) } catch (T) { return null } } if (isKeystoreWallet(T)) { try { return (0, L.getAddress)(JSON.parse(T).address) } catch (T) { return null } } return null } B.getJsonWalletAddress = getJsonWalletAddress }, 1692: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); var I = this && this.__awaiter || function (T, B, N, L) { function adopt(T) { return T instanceof N ? T : new N((function (B) { B(T) })) } return new (N || (N = Promise))((function (N, I) { function fulfilled(T) { try { step(L.next(T)) } catch (T) { I(T) } } function rejected(T) { try { step(L["throw"](T)) } catch (T) { I(T) } } function step(T) { T.done ? N(T.value) : adopt(T.value).then(fulfilled, rejected) } step((L = L.apply(T, B || [])).next()) })) }; var J = this && this.__generator || function (T, B) { var N = { label: 0, sent: function () { if (J[0] & 1) throw J[1]; return J[1] }, trys: [], ops: [] }, L, I, J, H; return H = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (H[Symbol.iterator] = function () { return this }), H; function verb(T) { return function (B) { return step([T, B]) } } function step(H) { if (L) throw new TypeError("Generator is already executing."); while (N) try { if (L = 1, I && (J = H[0] & 2 ? I["return"] : H[0] ? I["throw"] || ((J = I["return"]) && J.call(I), 0) : I.next) && !(J = J.call(I, H[1])).done) return J; if (I = 0, J) H = [H[0] & 2, J.value]; switch (H[0]) { case 0: case 1: J = H; break; case 4: N.label++; return { value: H[1], done: false }; case 5: N.label++; I = H[1]; H = [0]; continue; case 7: H = N.ops.pop(); N.trys.pop(); continue; default: if (!(J = N.trys, J = J.length > 0 && J[J.length - 1]) && (H[0] === 6 || H[0] === 2)) { N = 0; continue } if (H[0] === 3 && (!J || H[1] > J[0] && H[1] < J[3])) { N.label = H[1]; break } if (H[0] === 6 && N.label < J[1]) { N.label = J[1]; J = H; break } if (J && N.label < J[2]) { N.label = J[2]; N.ops.push(H); break } if (J[2]) N.ops.pop(); N.trys.pop(); continue }H = B.call(T, N) } catch (T) { H = [6, T]; I = 0 } finally { L = J = 0 } if (H[0] & 5) throw H[1]; return { value: H[0] ? H[1] : void 0, done: true } } }; var H = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); B.encrypt = B.decrypt = B.decryptSync = B.KeystoreAccount = void 0; var U = H(N(1965)); var X = H(N(6606)); var G = N(5745); var V = N(2006); var Z = N(3067); var W = N(6938); var q = N(5686); var Q = N(3728); var Y = N(1338); var ff = N(2394); var ef = N(3503); var tf = N(6127); var rf = N(771); var af = new tf.Logger(rf.version); function hasMnemonic(T) { return T != null && T.mnemonic && T.mnemonic.phrase } var nf = function (T) { L(KeystoreAccount, T); function KeystoreAccount() { return T !== null && T.apply(this, arguments) || this } KeystoreAccount.prototype.isKeystoreAccount = function (T) { return !!(T && T._isKeystoreAccount) }; return KeystoreAccount }(Y.Description); B.KeystoreAccount = nf; function _decrypt(T, B, N) { var L = (0, ef.searchPath)(T, "crypto/cipher"); if (L === "aes-128-ctr") { var I = (0, ef.looseArrayify)((0, ef.searchPath)(T, "crypto/cipherparams/iv")); var J = new U.default.Counter(I); var H = new U.default.ModeOfOperation.ctr(B, J); return (0, V.arrayify)(H.decrypt(N)) } return null } function _getAccount(T, B) { var N = (0, ef.looseArrayify)((0, ef.searchPath)(T, "crypto/ciphertext")); var L = (0, V.hexlify)((0, W.keccak256)((0, V.concat)([B.slice(16, 32), N]))).substring(2); if (L !== (0, ef.searchPath)(T, "crypto/mac").toLowerCase()) { throw new Error("invalid password") } var I = _decrypt(T, B.slice(0, 16), N); if (!I) { af.throwError("unsupported cipher", tf.Logger.errors.UNSUPPORTED_OPERATION, { operation: "decrypt" }) } var J = B.slice(32, 64); var H = (0, ff.computeAddress)(I); if (T.address) { var X = T.address.toLowerCase(); if (X.substring(0, 2) !== "0x") { X = "0x" + X } if ((0, G.getAddress)(X) !== H) { throw new Error("address mismatch") } } var q = { _isKeystoreAccount: true, address: H, privateKey: (0, V.hexlify)(I) }; if ((0, ef.searchPath)(T, "x-ethers/version") === "0.1") { var Q = (0, ef.looseArrayify)((0, ef.searchPath)(T, "x-ethers/mnemonicCiphertext")); var Y = (0, ef.looseArrayify)((0, ef.searchPath)(T, "x-ethers/mnemonicCounter")); var rf = new U.default.Counter(Y); var of = new U.default.ModeOfOperation.ctr(J, rf); var sf = (0, ef.searchPath)(T, "x-ethers/path") || Z.defaultPath; var cf = (0, ef.searchPath)(T, "x-ethers/locale") || "en"; var bf = (0, V.arrayify)(of.decrypt(Q)); try { var df = (0, Z.entropyToMnemonic)(bf, cf); var uf = Z.HDNode.fromMnemonic(df, null, cf).derivePath(sf); if (uf.privateKey != q.privateKey) { throw new Error("mnemonic mismatch") } q.mnemonic = uf.mnemonic } catch (T) { if (T.code !== tf.Logger.errors.INVALID_ARGUMENT || T.argument !== "wordlist") { throw T } } } return new nf(q) } function pbkdf2Sync(T, B, N, L, I) { return (0, V.arrayify)((0, q.pbkdf2)(T, B, N, L, I)) } function pbkdf2(T, B, N, L, I) { return Promise.resolve(pbkdf2Sync(T, B, N, L, I)) } function _computeKdfKey(T, B, N, L, I) { var J = (0, ef.getPassword)(B); var H = (0, ef.searchPath)(T, "crypto/kdf"); if (H && typeof H === "string") { var throwError = function (T, B) { return af.throwArgumentError("invalid key-derivation function parameters", T, B) }; if (H.toLowerCase() === "scrypt") { var U = (0, ef.looseArrayify)((0, ef.searchPath)(T, "crypto/kdfparams/salt")); var X = parseInt((0, ef.searchPath)(T, "crypto/kdfparams/n")); var G = parseInt((0, ef.searchPath)(T, "crypto/kdfparams/r")); var V = parseInt((0, ef.searchPath)(T, "crypto/kdfparams/p")); if (!X || !G || !V) { throwError("kdf", H) } if ((X & X - 1) !== 0) { throwError("N", X) } var Z = parseInt((0, ef.searchPath)(T, "crypto/kdfparams/dklen")); if (Z !== 32) { throwError("dklen", Z) } return L(J, U, X, G, V, 64, I) } else if (H.toLowerCase() === "pbkdf2") { var U = (0, ef.looseArrayify)((0, ef.searchPath)(T, "crypto/kdfparams/salt")); var W = null; var q = (0, ef.searchPath)(T, "crypto/kdfparams/prf"); if (q === "hmac-sha256") { W = "sha256" } else if (q === "hmac-sha512") { W = "sha512" } else { throwError("prf", q) } var Q = parseInt((0, ef.searchPath)(T, "crypto/kdfparams/c")); var Z = parseInt((0, ef.searchPath)(T, "crypto/kdfparams/dklen")); if (Z !== 32) { throwError("dklen", Z) } return N(J, U, Q, Z, W) } } return af.throwArgumentError("unsupported key-derivation function", "kdf", H) } function decryptSync(T, B) { var N = JSON.parse(T); var L = _computeKdfKey(N, B, pbkdf2Sync, X.default.syncScrypt); return _getAccount(N, L) } B.decryptSync = decryptSync; function decrypt(T, B, N) { return I(this, void 0, void 0, (function () { var L, I; return J(this, (function (J) { switch (J.label) { case 0: L = JSON.parse(T); return [4, _computeKdfKey(L, B, pbkdf2, X.default.scrypt, N)]; case 1: I = J.sent(); return [2, _getAccount(L, I)] } })) })) } B.decrypt = decrypt; function encrypt(T, B, N, L) { try { if ((0, G.getAddress)(T.address) !== (0, ff.computeAddress)(T.privateKey)) { throw new Error("address/privateKey mismatch") } if (hasMnemonic(T)) { var I = T.mnemonic; var J = Z.HDNode.fromMnemonic(I.phrase, null, I.locale).derivePath(I.path || Z.defaultPath); if (J.privateKey != T.privateKey) { throw new Error("mnemonic mismatch") } } } catch (T) { return Promise.reject(T) } if (typeof N === "function" && !L) { L = N; N = {} } if (!N) { N = {} } var H = (0, V.arrayify)(T.privateKey); var q = (0, ef.getPassword)(B); var Y = null; var tf = null; var rf = null; if (hasMnemonic(T)) { var af = T.mnemonic; Y = (0, V.arrayify)((0, Z.mnemonicToEntropy)(af.phrase, af.locale || "en")); tf = af.path || Z.defaultPath; rf = af.locale || "en" } var nf = N.client; if (!nf) { nf = "ethers.js" } var of = null; if (N.salt) { of = (0, V.arrayify)(N.salt) } else { of = (0, Q.randomBytes)(32) } var sf = null; if (N.iv) { sf = (0, V.arrayify)(N.iv); if (sf.length !== 16) { throw new Error("invalid iv") } } else { sf = (0, Q.randomBytes)(16) } var cf = null; if (N.uuid) { cf = (0, V.arrayify)(N.uuid); if (cf.length !== 16) { throw new Error("invalid uuid") } } else { cf = (0, Q.randomBytes)(16) } var bf = 1 << 17, df = 8, uf = 1; if (N.scrypt) { if (N.scrypt.N) { bf = N.scrypt.N } if (N.scrypt.r) { df = N.scrypt.r } if (N.scrypt.p) { uf = N.scrypt.p } } return X.default.scrypt(q, of, bf, df, uf, 64, L).then((function (B) { B = (0, V.arrayify)(B); var N = B.slice(0, 16); var L = B.slice(16, 32); var I = B.slice(32, 64); var J = new U.default.Counter(sf); var X = new U.default.ModeOfOperation.ctr(N, J); var G = (0, V.arrayify)(X.encrypt(H)); var Z = (0, W.keccak256)((0, V.concat)([L, G])); var q = { address: T.address.substring(2).toLowerCase(), id: (0, ef.uuidV4)(cf), version: 3, crypto: { cipher: "aes-128-ctr", cipherparams: { iv: (0, V.hexlify)(sf).substring(2) }, ciphertext: (0, V.hexlify)(G).substring(2), kdf: "scrypt", kdfparams: { salt: (0, V.hexlify)(of).substring(2), n: bf, dklen: 32, p: uf, r: df }, mac: Z.substring(2) } }; if (Y) { var ff = (0, Q.randomBytes)(16); var af = new U.default.Counter(ff); var lf = new U.default.ModeOfOperation.ctr(I, af); var hf = (0, V.arrayify)(lf.encrypt(Y)); var pf = new Date; var vf = pf.getUTCFullYear() + "-" + (0, ef.zpad)(pf.getUTCMonth() + 1, 2) + "-" + (0, ef.zpad)(pf.getUTCDate(), 2) + "T" + (0, ef.zpad)(pf.getUTCHours(), 2) + "-" + (0, ef.zpad)(pf.getUTCMinutes(), 2) + "-" + (0, ef.zpad)(pf.getUTCSeconds(), 2) + ".0Z"; q["x-ethers"] = { client: nf, gethFilename: "UTC--" + vf + "--" + q.address, mnemonicCounter: (0, V.hexlify)(ff).substring(2), mnemonicCiphertext: (0, V.hexlify)(hf).substring(2), path: tf, locale: rf, version: "0.1" } } return JSON.stringify(q) })) } B.encrypt = encrypt }, 3503: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.uuidV4 = B.searchPath = B.getPassword = B.zpad = B.looseArrayify = void 0; var L = N(2006); var I = N(3859); function looseArrayify(T) { if (typeof T === "string" && T.substring(0, 2) !== "0x") { T = "0x" + T } return (0, L.arrayify)(T) } B.looseArrayify = looseArrayify; function zpad(T, B) { T = String(T); while (T.length < B) { T = "0" + T } return T } B.zpad = zpad; function getPassword(T) { if (typeof T === "string") { return (0, I.toUtf8Bytes)(T, I.UnicodeNormalizationForm.NFKC) } return (0, L.arrayify)(T) } B.getPassword = getPassword; function searchPath(T, B) { var N = T; var L = B.toLowerCase().split("/"); for (var I = 0; I < L.length; I++) { var J = null; for (var H in N) { if (H.toLowerCase() === L[I]) { J = N[H]; break } } if (J === null) { return null } N = J } return N } B.searchPath = searchPath; function uuidV4(T) { var B = (0, L.arrayify)(T); B[6] = B[6] & 15 | 64; B[8] = B[8] & 63 | 128; var N = (0, L.hexlify)(B); return [N.substring(2, 10), N.substring(10, 14), N.substring(14, 18), N.substring(18, 22), N.substring(22, 34)].join("-") } B.uuidV4 = uuidV4 }, 6938: function (T, B, N) { "use strict"; var L = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); B.keccak256 = void 0; var I = L(N(2157)); var J = N(2006); function keccak256(T) { return "0x" + I.default.keccak_256((0, J.arrayify)(T)) } B.keccak256 = keccak256 }, 7688: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.version = void 0; B.version = "logger/5.8.0" }, 6127: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.Logger = B.ErrorCode = B.LogLevel = void 0; var L = false; var I = false; var J = { debug: 1, default: 2, info: 2, warning: 3, error: 4, off: 5 }; var H = J["default"]; var U = N(7688); var X = null; function _checkNormalize() { try { var T = [];["NFD", "NFC", "NFKD", "NFKC"].forEach((function (B) { try { if ("test".normalize(B) !== "test") { throw new Error("bad normalize") } } catch (N) { T.push(B) } })); if (T.length) { throw new Error("missing " + T.join(", ")) } if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) { throw new Error("broken implementation") } } catch (T) { return T.message } return null } var G = _checkNormalize(); var V; (function (T) { T["DEBUG"] = "DEBUG"; T["INFO"] = "INFO"; T["WARNING"] = "WARNING"; T["ERROR"] = "ERROR"; T["OFF"] = "OFF" })(V = B.LogLevel || (B.LogLevel = {})); var Z; (function (T) { T["UNKNOWN_ERROR"] = "UNKNOWN_ERROR"; T["NOT_IMPLEMENTED"] = "NOT_IMPLEMENTED"; T["UNSUPPORTED_OPERATION"] = "UNSUPPORTED_OPERATION"; T["NETWORK_ERROR"] = "NETWORK_ERROR"; T["SERVER_ERROR"] = "SERVER_ERROR"; T["TIMEOUT"] = "TIMEOUT"; T["BUFFER_OVERRUN"] = "BUFFER_OVERRUN"; T["NUMERIC_FAULT"] = "NUMERIC_FAULT"; T["MISSING_NEW"] = "MISSING_NEW"; T["INVALID_ARGUMENT"] = "INVALID_ARGUMENT"; T["MISSING_ARGUMENT"] = "MISSING_ARGUMENT"; T["UNEXPECTED_ARGUMENT"] = "UNEXPECTED_ARGUMENT"; T["CALL_EXCEPTION"] = "CALL_EXCEPTION"; T["INSUFFICIENT_FUNDS"] = "INSUFFICIENT_FUNDS"; T["NONCE_EXPIRED"] = "NONCE_EXPIRED"; T["REPLACEMENT_UNDERPRICED"] = "REPLACEMENT_UNDERPRICED"; T["UNPREDICTABLE_GAS_LIMIT"] = "UNPREDICTABLE_GAS_LIMIT"; T["TRANSACTION_REPLACED"] = "TRANSACTION_REPLACED"; T["ACTION_REJECTED"] = "ACTION_REJECTED" })(Z = B.ErrorCode || (B.ErrorCode = {})); var W = "0123456789abcdef"; var q = function () { function Logger(T) { Object.defineProperty(this, "version", { enumerable: true, value: T, writable: false }) } Logger.prototype._log = function (T, B) { var N = T.toLowerCase(); if (J[N] == null) { this.throwArgumentError("invalid log level name", "logLevel", T) } if (H > J[N]) { return } console.log.apply(console, B) }; Logger.prototype.debug = function () { var T = []; for (var B = 0; B < arguments.length; B++) { T[B] = arguments[B] } this._log(Logger.levels.DEBUG, T) }; Logger.prototype.info = function () { var T = []; for (var B = 0; B < arguments.length; B++) { T[B] = arguments[B] } this._log(Logger.levels.INFO, T) }; Logger.prototype.warn = function () { var T = []; for (var B = 0; B < arguments.length; B++) { T[B] = arguments[B] } this._log(Logger.levels.WARNING, T) }; Logger.prototype.makeError = function (T, B, N) { if (I) { return this.makeError("censored error", B, {}) } if (!B) { B = Logger.errors.UNKNOWN_ERROR } if (!N) { N = {} } var L = []; Object.keys(N).forEach((function (T) { var B = N[T]; try { if (B instanceof Uint8Array) { var I = ""; for (var J = 0; J < B.length; J++) { I += W[B[J] >> 4]; I += W[B[J] & 15] } L.push(T + "=Uint8Array(0x" + I + ")") } else { L.push(T + "=" + JSON.stringify(B)) } } catch (B) { L.push(T + "=" + JSON.stringify(N[T].toString())) } })); L.push("code=" + B); L.push("version=" + this.version); var J = T; var H = ""; switch (B) { case Z.NUMERIC_FAULT: { H = "NUMERIC_FAULT"; var U = T; switch (U) { case "overflow": case "underflow": case "division-by-zero": H += "-" + U; break; case "negative-power": case "negative-width": H += "-unsupported"; break; case "unbound-bitwise-result": H += "-unbound-result"; break }break } case Z.CALL_EXCEPTION: case Z.INSUFFICIENT_FUNDS: case Z.MISSING_NEW: case Z.NONCE_EXPIRED: case Z.REPLACEMENT_UNDERPRICED: case Z.TRANSACTION_REPLACED: case Z.UNPREDICTABLE_GAS_LIMIT: H = B; break }if (H) { T += " [ See: https://links.ethers.org/v5-errors-" + H + " ]" } if (L.length) { T += " (" + L.join(", ") + ")" } var X = new Error(T); X.reason = J; X.code = B; Object.keys(N).forEach((function (T) { X[T] = N[T] })); return X }; Logger.prototype.throwError = function (T, B, N) { throw this.makeError(T, B, N) }; Logger.prototype.throwArgumentError = function (T, B, N) { return this.throwError(T, Logger.errors.INVALID_ARGUMENT, { argument: B, value: N }) }; Logger.prototype.assert = function (T, B, N, L) { if (!!T) { return } this.throwError(B, N, L) }; Logger.prototype.assertArgument = function (T, B, N, L) { if (!!T) { return } this.throwArgumentError(B, N, L) }; Logger.prototype.checkNormalize = function (T) { if (T == null) { T = "platform missing String.prototype.normalize" } if (G) { this.throwError("platform missing String.prototype.normalize", Logger.errors.UNSUPPORTED_OPERATION, { operation: "String.prototype.normalize", form: G }) } }; Logger.prototype.checkSafeUint53 = function (T, B) { if (typeof T !== "number") { return } if (B == null) { B = "value not safe" } if (T < 0 || T >= 9007199254740991) { this.throwError(B, Logger.errors.NUMERIC_FAULT, { operation: "checkSafeInteger", fault: "out-of-safe-range", value: T }) } if (T % 1) { this.throwError(B, Logger.errors.NUMERIC_FAULT, { operation: "checkSafeInteger", fault: "non-integer", value: T }) } }; Logger.prototype.checkArgumentCount = function (T, B, N) { if (N) { N = ": " + N } else { N = "" } if (T < B) { this.throwError("missing argument" + N, Logger.errors.MISSING_ARGUMENT, { count: T, expectedCount: B }) } if (T > B) { this.throwError("too many arguments" + N, Logger.errors.UNEXPECTED_ARGUMENT, { count: T, expectedCount: B }) } }; Logger.prototype.checkNew = function (T, B) { if (T === Object || T == null) { this.throwError("missing new", Logger.errors.MISSING_NEW, { name: B.name }) } }; Logger.prototype.checkAbstract = function (T, B) { if (T === B) { this.throwError("cannot instantiate abstract class " + JSON.stringify(B.name) + " directly; use a sub-class", Logger.errors.UNSUPPORTED_OPERATION, { name: T.name, operation: "new" }) } else if (T === Object || T == null) { this.throwError("missing new", Logger.errors.MISSING_NEW, { name: B.name }) } }; Logger.globalLogger = function () { if (!X) { X = new Logger(U.version) } return X }; Logger.setCensorship = function (T, B) { if (!T && B) { this.globalLogger().throwError("cannot permanently disable censorship", Logger.errors.UNSUPPORTED_OPERATION, { operation: "setCensorship" }) } if (L) { if (!T) { return } this.globalLogger().throwError("error censorship permanent", Logger.errors.UNSUPPORTED_OPERATION, { operation: "setCensorship" }) } I = !!T; L = !!B }; Logger.setLogLevel = function (T) { var B = J[T.toLowerCase()]; if (B == null) { Logger.globalLogger().warn("invalid log level - " + T); return } H = B }; Logger.from = function (T) { return new Logger(T) }; Logger.errors = Z; Logger.levels = V; return Logger }(); B.Logger = q }, 6809: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.version = void 0; B.version = "networks/5.8.0" }, 3044: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.getNetwork = void 0; var L = N(6127); var I = N(6809); var J = new L.Logger(I.version); function isRenetworkable(T) { return T && typeof T.renetwork === "function" } function ethDefaultProvider(T) { var func = function (B, N) { if (N == null) { N = {} } var L = []; if (B.InfuraProvider && N.infura !== "-") { try { L.push(new B.InfuraProvider(T, N.infura)) } catch (T) { } } if (B.EtherscanProvider && N.etherscan !== "-") { try { L.push(new B.EtherscanProvider(T, N.etherscan)) } catch (T) { } } if (B.AlchemyProvider && N.alchemy !== "-") { try { L.push(new B.AlchemyProvider(T, N.alchemy)) } catch (T) { } } if (B.PocketProvider && N.pocket !== "-") { var I = ["goerli", "ropsten", "rinkeby", "sepolia"]; try { var J = new B.PocketProvider(T, N.pocket); if (J.network && I.indexOf(J.network.name) === -1) { L.push(J) } } catch (T) { } } if (B.CloudflareProvider && N.cloudflare !== "-") { try { L.push(new B.CloudflareProvider(T)) } catch (T) { } } if (B.AnkrProvider && N.ankr !== "-") { try { var I = ["ropsten"]; var J = new B.AnkrProvider(T, N.ankr); if (J.network && I.indexOf(J.network.name) === -1) { L.push(J) } } catch (T) { } } if (B.QuickNodeProvider && N.quicknode !== "-") { try { L.push(new B.QuickNodeProvider(T, N.quicknode)) } catch (T) { } } if (L.length === 0) { return null } if (B.FallbackProvider) { var H = 1; if (N.quorum != null) { H = N.quorum } else if (T === "homestead") { H = 2 } return new B.FallbackProvider(L, H) } return L[0] }; func.renetwork = function (T) { return ethDefaultProvider(T) }; return func } function etcDefaultProvider(T, B) { var func = function (N, L) { if (N.JsonRpcProvider) { return new N.JsonRpcProvider(T, B) } return null }; func.renetwork = function (B) { return etcDefaultProvider(T, B) }; return func } var H = { chainId: 1, ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e", name: "homestead", _defaultProvider: ethDefaultProvider("homestead") }; var U = { chainId: 3, ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e", name: "ropsten", _defaultProvider: ethDefaultProvider("ropsten") }; var X = { chainId: 63, name: "classicMordor", _defaultProvider: etcDefaultProvider("https://www.ethercluster.com/mordor", "classicMordor") }; var G = { unspecified: { chainId: 0, name: "unspecified" }, homestead: H, mainnet: H, morden: { chainId: 2, name: "morden" }, ropsten: U, testnet: U, rinkeby: { chainId: 4, ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e", name: "rinkeby", _defaultProvider: ethDefaultProvider("rinkeby") }, kovan: { chainId: 42, name: "kovan", _defaultProvider: ethDefaultProvider("kovan") }, goerli: { chainId: 5, ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e", name: "goerli", _defaultProvider: ethDefaultProvider("goerli") }, kintsugi: { chainId: 1337702, name: "kintsugi" }, sepolia: { chainId: 11155111, ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e", name: "sepolia", _defaultProvider: ethDefaultProvider("sepolia") }, holesky: { chainId: 17e3, name: "holesky", _defaultProvider: ethDefaultProvider("holesky") }, classic: { chainId: 61, name: "classic", _defaultProvider: etcDefaultProvider("https://www.ethercluster.com/etc", "classic") }, classicMorden: { chainId: 62, name: "classicMorden" }, classicMordor: X, classicTestnet: X, classicKotti: { chainId: 6, name: "classicKotti", _defaultProvider: etcDefaultProvider("https://www.ethercluster.com/kotti", "classicKotti") }, xdai: { chainId: 100, name: "xdai" }, matic: { chainId: 137, name: "matic", _defaultProvider: ethDefaultProvider("matic") }, maticmum: { chainId: 80001, name: "maticmum", _defaultProvider: ethDefaultProvider("maticmum") }, optimism: { chainId: 10, name: "optimism", _defaultProvider: ethDefaultProvider("optimism") }, "optimism-kovan": { chainId: 69, name: "optimism-kovan" }, "optimism-goerli": { chainId: 420, name: "optimism-goerli" }, "optimism-sepolia": { chainId: 11155420, name: "optimism-sepolia" }, arbitrum: { chainId: 42161, name: "arbitrum" }, "arbitrum-rinkeby": { chainId: 421611, name: "arbitrum-rinkeby" }, "arbitrum-goerli": { chainId: 421613, name: "arbitrum-goerli" }, "arbitrum-sepolia": { chainId: 421614, name: "arbitrum-sepolia" }, bnb: { chainId: 56, name: "bnb" }, bnbt: { chainId: 97, name: "bnbt" } }; function getNetwork(T) { if (T == null) { return null } if (typeof T === "number") { for (var B in G) { var N = G[B]; if (N.chainId === T) { return { name: N.name, chainId: N.chainId, ensAddress: N.ensAddress || null, _defaultProvider: N._defaultProvider || null } } } return { chainId: T, name: "unknown" } } if (typeof T === "string") { var L = G[T]; if (L == null) { return null } return { name: L.name, chainId: L.chainId, ensAddress: L.ensAddress, _defaultProvider: L._defaultProvider || null } } var I = G[T.name]; if (!I) { if (typeof T.chainId !== "number") { J.throwArgumentError("invalid network chainId", "network", T) } return T } if (T.chainId !== 0 && T.chainId !== I.chainId) { J.throwArgumentError("network chainId mismatch", "network", T) } var H = T._defaultProvider || null; if (H == null && I._defaultProvider) { if (isRenetworkable(I._defaultProvider)) { H = I._defaultProvider.renetwork(T) } else { H = I._defaultProvider } } return { name: T.name, chainId: I.chainId, ensAddress: T.ensAddress || I.ensAddress || null, _defaultProvider: H } } B.getNetwork = getNetwork }, 5686: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.pbkdf2 = void 0; var L = N(5565); Object.defineProperty(B, "pbkdf2", { enumerable: true, get: function () { return L.pbkdf2 } }) }, 5565: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.pbkdf2 = void 0; var L = N(6982); var I = N(2006); function bufferify(T) { return Buffer.from((0, I.arrayify)(T)) } function pbkdf2(T, B, N, J, H) { return (0, I.hexlify)((0, L.pbkdf2Sync)(bufferify(T), bufferify(B), N, J, H)) } B.pbkdf2 = pbkdf2 }, 5511: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.version = void 0; B.version = "properties/5.8.0" }, 1338: function (T, B, N) { "use strict"; var L = this && this.__awaiter || function (T, B, N, L) { function adopt(T) { return T instanceof N ? T : new N((function (B) { B(T) })) } return new (N || (N = Promise))((function (N, I) { function fulfilled(T) { try { step(L.next(T)) } catch (T) { I(T) } } function rejected(T) { try { step(L["throw"](T)) } catch (T) { I(T) } } function step(T) { T.done ? N(T.value) : adopt(T.value).then(fulfilled, rejected) } step((L = L.apply(T, B || [])).next()) })) }; var I = this && this.__generator || function (T, B) { var N = { label: 0, sent: function () { if (J[0] & 1) throw J[1]; return J[1] }, trys: [], ops: [] }, L, I, J, H; return H = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (H[Symbol.iterator] = function () { return this }), H; function verb(T) { return function (B) { return step([T, B]) } } function step(H) { if (L) throw new TypeError("Generator is already executing."); while (N) try { if (L = 1, I && (J = H[0] & 2 ? I["return"] : H[0] ? I["throw"] || ((J = I["return"]) && J.call(I), 0) : I.next) && !(J = J.call(I, H[1])).done) return J; if (I = 0, J) H = [H[0] & 2, J.value]; switch (H[0]) { case 0: case 1: J = H; break; case 4: N.label++; return { value: H[1], done: false }; case 5: N.label++; I = H[1]; H = [0]; continue; case 7: H = N.ops.pop(); N.trys.pop(); continue; default: if (!(J = N.trys, J = J.length > 0 && J[J.length - 1]) && (H[0] === 6 || H[0] === 2)) { N = 0; continue } if (H[0] === 3 && (!J || H[1] > J[0] && H[1] < J[3])) { N.label = H[1]; break } if (H[0] === 6 && N.label < J[1]) { N.label = J[1]; J = H; break } if (J && N.label < J[2]) { N.label = J[2]; N.ops.push(H); break } if (J[2]) N.ops.pop(); N.trys.pop(); continue }H = B.call(T, N) } catch (T) { H = [6, T]; I = 0 } finally { L = J = 0 } if (H[0] & 5) throw H[1]; return { value: H[0] ? H[1] : void 0, done: true } } }; Object.defineProperty(B, "__esModule", { value: true }); B.Description = B.deepCopy = B.shallowCopy = B.checkProperties = B.resolveProperties = B.getStatic = B.defineReadOnly = void 0; var J = N(6127); var H = N(5511); var U = new J.Logger(H.version); function defineReadOnly(T, B, N) { Object.defineProperty(T, B, { enumerable: true, value: N, writable: false }) } B.defineReadOnly = defineReadOnly; function getStatic(T, B) { for (var N = 0; N < 32; N++) { if (T[B]) { return T[B] } if (!T.prototype || typeof T.prototype !== "object") { break } T = Object.getPrototypeOf(T.prototype).constructor } return null } B.getStatic = getStatic; function resolveProperties(T) { return L(this, void 0, void 0, (function () { var B, N; return I(this, (function (L) { switch (L.label) { case 0: B = Object.keys(T).map((function (B) { var N = T[B]; return Promise.resolve(N).then((function (T) { return { key: B, value: T } })) })); return [4, Promise.all(B)]; case 1: N = L.sent(); return [2, N.reduce((function (T, B) { T[B.key] = B.value; return T }), {})] } })) })) } B.resolveProperties = resolveProperties; function checkProperties(T, B) { if (!T || typeof T !== "object") { U.throwArgumentError("invalid object", "object", T) } Object.keys(T).forEach((function (N) { if (!B[N]) { U.throwArgumentError("invalid object key - " + N, "transaction:" + N, T) } })) } B.checkProperties = checkProperties; function shallowCopy(T) { var B = {}; for (var N in T) { B[N] = T[N] } return B } B.shallowCopy = shallowCopy; var X = { bigint: true, boolean: true, function: true, number: true, string: true }; function _isFrozen(T) { if (T === undefined || T === null || X[typeof T]) { return true } if (Array.isArray(T) || typeof T === "object") { if (!Object.isFrozen(T)) { return false } var B = Object.keys(T); for (var N = 0; N < B.length; N++) { var L = null; try { L = T[B[N]] } catch (T) { continue } if (!_isFrozen(L)) { return false } } return true } return U.throwArgumentError("Cannot deepCopy " + typeof T, "object", T) } function _deepCopy(T) { if (_isFrozen(T)) { return T } if (Array.isArray(T)) { return Object.freeze(T.map((function (T) { return deepCopy(T) }))) } if (typeof T === "object") { var B = {}; for (var N in T) { var L = T[N]; if (L === undefined) { continue } defineReadOnly(B, N, deepCopy(L)) } return B } return U.throwArgumentError("Cannot deepCopy " + typeof T, "object", T) } function deepCopy(T) { return _deepCopy(T) } B.deepCopy = deepCopy; var G = function () { function Description(T) { for (var B in T) { this[B] = deepCopy(T[B]) } } return Description }(); B.Description = G }, 5408: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.version = void 0; B.version = "providers/5.8.0" }, 5372: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.AlchemyProvider = B.AlchemyWebSocketProvider = void 0; var I = N(1338); var J = N(4293); var H = N(3607); var U = N(6127); var X = N(5408); var G = new U.Logger(X.version); var V = N(6717); var Z = "_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC"; var W = function (T) { L(AlchemyWebSocketProvider, T); function AlchemyWebSocketProvider(B, N) { var L = this; var J = new q(B, N); var H = J.connection.url.replace(/^http/i, "ws").replace(".alchemyapi.", ".ws.alchemyapi."); L = T.call(this, H, J.network) || this; (0, I.defineReadOnly)(L, "apiKey", J.apiKey); return L } AlchemyWebSocketProvider.prototype.isCommunityResource = function () { return this.apiKey === Z }; return AlchemyWebSocketProvider }(H.WebSocketProvider); B.AlchemyWebSocketProvider = W; var q = function (T) { L(AlchemyProvider, T); function AlchemyProvider() { return T !== null && T.apply(this, arguments) || this } AlchemyProvider.getWebSocketProvider = function (T, B) { return new W(T, B) }; AlchemyProvider.getApiKey = function (T) { if (T == null) { return Z } if (T && typeof T !== "string") { G.throwArgumentError("invalid apiKey", "apiKey", T) } return T }; AlchemyProvider.getUrl = function (T, B) { var N = null; switch (T.name) { case "homestead": N = "eth-mainnet.alchemyapi.io/v2/"; break; case "goerli": N = "eth-goerli.g.alchemy.com/v2/"; break; case "sepolia": N = "eth-sepolia.g.alchemy.com/v2/"; break; case "matic": N = "polygon-mainnet.g.alchemy.com/v2/"; break; case "maticmum": N = "polygon-mumbai.g.alchemy.com/v2/"; break; case "arbitrum": N = "arb-mainnet.g.alchemy.com/v2/"; break; case "arbitrum-goerli": N = "arb-goerli.g.alchemy.com/v2/"; break; case "arbitrum-sepolia": N = "arb-sepolia.g.alchemy.com/v2/"; break; case "optimism": N = "opt-mainnet.g.alchemy.com/v2/"; break; case "optimism-goerli": N = "opt-goerli.g.alchemy.com/v2/"; break; case "optimism-sepolia": N = "opt-sepolia.g.alchemy.com/v2/"; break; default: G.throwArgumentError("unsupported network", "network", arguments[0]) }return { allowGzip: true, url: "https:/" + "/" + N + B, throttleCallback: function (T, N) { if (B === Z) { (0, J.showThrottleMessage)() } return Promise.resolve(true) } } }; AlchemyProvider.prototype.isCommunityResource = function () { return this.apiKey === Z }; return AlchemyProvider }(V.UrlJsonRpcProvider); B.AlchemyProvider = q }, 2319: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.AnkrProvider = void 0; var I = N(4293); var J = N(6717); var H = N(6127); var U = N(5408); var X = new H.Logger(U.version); var G = "9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972"; function getHost(T) { switch (T) { case "homestead": return "rpc.ankr.com/eth/"; case "ropsten": return "rpc.ankr.com/eth_ropsten/"; case "rinkeby": return "rpc.ankr.com/eth_rinkeby/"; case "goerli": return "rpc.ankr.com/eth_goerli/"; case "sepolia": return "rpc.ankr.com/eth_sepolia/"; case "matic": return "rpc.ankr.com/polygon/"; case "maticmum": return "rpc.ankr.com/polygon_mumbai/"; case "optimism": return "rpc.ankr.com/optimism/"; case "optimism-goerli": return "rpc.ankr.com/optimism_testnet/"; case "optimism-sepolia": return "rpc.ankr.com/optimism_sepolia/"; case "arbitrum": return "rpc.ankr.com/arbitrum/" }return X.throwArgumentError("unsupported network", "name", T) } var V = function (T) { L(AnkrProvider, T); function AnkrProvider() { return T !== null && T.apply(this, arguments) || this } AnkrProvider.prototype.isCommunityResource = function () { return this.apiKey === G }; AnkrProvider.getApiKey = function (T) { if (T == null) { return G } return T }; AnkrProvider.getUrl = function (T, B) { if (B == null) { B = G } var N = { allowGzip: true, url: "https://" + getHost(T.name) + B, throttleCallback: function (T, N) { if (B.apiKey === G) { (0, I.showThrottleMessage)() } return Promise.resolve(true) } }; if (B.projectSecret != null) { N.user = ""; N.password = B.projectSecret } return N }; return AnkrProvider }(J.UrlJsonRpcProvider); B.AnkrProvider = V }, 8090: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); var I = this && this.__awaiter || function (T, B, N, L) { function adopt(T) { return T instanceof N ? T : new N((function (B) { B(T) })) } return new (N || (N = Promise))((function (N, I) { function fulfilled(T) { try { step(L.next(T)) } catch (T) { I(T) } } function rejected(T) { try { step(L["throw"](T)) } catch (T) { I(T) } } function step(T) { T.done ? N(T.value) : adopt(T.value).then(fulfilled, rejected) } step((L = L.apply(T, B || [])).next()) })) }; var J = this && this.__generator || function (T, B) { var N = { label: 0, sent: function () { if (J[0] & 1) throw J[1]; return J[1] }, trys: [], ops: [] }, L, I, J, H; return H = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (H[Symbol.iterator] = function () { return this }), H; function verb(T) { return function (B) { return step([T, B]) } } function step(H) { if (L) throw new TypeError("Generator is already executing."); while (N) try { if (L = 1, I && (J = H[0] & 2 ? I["return"] : H[0] ? I["throw"] || ((J = I["return"]) && J.call(I), 0) : I.next) && !(J = J.call(I, H[1])).done) return J; if (I = 0, J) H = [H[0] & 2, J.value]; switch (H[0]) { case 0: case 1: J = H; break; case 4: N.label++; return { value: H[1], done: false }; case 5: N.label++; I = H[1]; H = [0]; continue; case 7: H = N.ops.pop(); N.trys.pop(); continue; default: if (!(J = N.trys, J = J.length > 0 && J[J.length - 1]) && (H[0] === 6 || H[0] === 2)) { N = 0; continue } if (H[0] === 3 && (!J || H[1] > J[0] && H[1] < J[3])) { N.label = H[1]; break } if (H[0] === 6 && N.label < J[1]) { N.label = J[1]; J = H; break } if (J && N.label < J[2]) { N.label = J[2]; N.ops.push(H); break } if (J[2]) N.ops.pop(); N.trys.pop(); continue }H = B.call(T, N) } catch (T) { H = [6, T]; I = 0 } finally { L = J = 0 } if (H[0] & 5) throw H[1]; return { value: H[0] ? H[1] : void 0, done: true } } }; var H = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); B.BaseProvider = B.Resolver = B.Event = void 0; var U = N(2825); var X = N(9032); var G = N(1426); var V = N(8202); var Z = N(2006); var W = N(9848); var q = N(1839); var Q = N(3044); var Y = N(1338); var ff = N(6935); var ef = N(3859); var tf = N(2239); var rf = H(N(5051)); var af = N(6127); var nf = N(5408); var of = new af.Logger(nf.version); var sf = N(4293); var cf = 10; function checkTopic(T) { if (T == null) { return "null" } if ((0, Z.hexDataLength)(T) !== 32) { of.throwArgumentError("invalid topic", "topic", T) } return T.toLowerCase() } function serializeTopics(T) { T = T.slice(); while (T.length > 0 && T[T.length - 1] == null) { T.pop() } return T.map((function (T) { if (Array.isArray(T)) { var B = {}; T.forEach((function (T) { B[checkTopic(T)] = true })); var N = Object.keys(B); N.sort(); return N.join("|") } else { return checkTopic(T) } })).join("&") } function deserializeTopics(T) { if (T === "") { return [] } return T.split(/&/g).map((function (T) { if (T === "") { return [] } var B = T.split("|").map((function (T) { return T === "null" ? null : T })); return B.length === 1 ? B[0] : B })) } function getEventTag(T) { if (typeof T === "string") { T = T.toLowerCase(); if ((0, Z.hexDataLength)(T) === 32) { return "tx:" + T } if (T.indexOf(":") === -1) { return T } } else if (Array.isArray(T)) { return "filter:*:" + serializeTopics(T) } else if (U.ForkEvent.isForkEvent(T)) { of.warn("not implemented"); throw new Error("not implemented") } else if (T && typeof T === "object") { return "filter:" + (T.address || "*") + ":" + serializeTopics(T.topics || []) } throw new Error("invalid event - " + T) } function getTime() { return (new Date).getTime() } function stall(T) { return new Promise((function (B) { setTimeout(B, T) })) } var bf = ["block", "network", "pending", "poll"]; var df = function () { function Event(T, B, N) { (0, Y.defineReadOnly)(this, "tag", T); (0, Y.defineReadOnly)(this, "listener", B); (0, Y.defineReadOnly)(this, "once", N); this._lastBlockNumber = -2; this._inflight = false } Object.defineProperty(Event.prototype, "event", { get: function () { switch (this.type) { case "tx": return this.hash; case "filter": return this.filter }return this.tag }, enumerable: false, configurable: true }); Object.defineProperty(Event.prototype, "type", { get: function () { return this.tag.split(":")[0] }, enumerable: false, configurable: true }); Object.defineProperty(Event.prototype, "hash", { get: function () { var T = this.tag.split(":"); if (T[0] !== "tx") { return null } return T[1] }, enumerable: false, configurable: true }); Object.defineProperty(Event.prototype, "filter", { get: function () { var T = this.tag.split(":"); if (T[0] !== "filter") { return null } var B = T[1]; var N = deserializeTopics(T[2]); var L = {}; if (N.length > 0) { L.topics = N } if (B && B !== "*") { L.address = B } return L }, enumerable: false, configurable: true }); Event.prototype.pollable = function () { return this.tag.indexOf(":") >= 0 || bf.indexOf(this.tag) >= 0 }; return Event }(); B.Event = df; var uf = { 0: { symbol: "btc", p2pkh: 0, p2sh: 5, prefix: "bc" }, 2: { symbol: "ltc", p2pkh: 48, p2sh: 50, prefix: "ltc" }, 3: { symbol: "doge", p2pkh: 30, p2sh: 22 }, 60: { symbol: "eth", ilk: "eth" }, 61: { symbol: "etc", ilk: "eth" }, 700: { symbol: "xdai", ilk: "eth" } }; function bytes32ify(T) { return (0, Z.hexZeroPad)(V.BigNumber.from(T).toHexString(), 32) } function base58Encode(T) { return G.Base58.encode((0, Z.concat)([T, (0, Z.hexDataSlice)((0, ff.sha256)((0, ff.sha256)(T)), 0, 4)])) } var lf = new RegExp("^(ipfs)://(.*)$", "i"); var hf = [new RegExp("^(https)://(.*)$", "i"), new RegExp("^(data):(.*)$", "i"), lf, new RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$", "i")]; function _parseString(T, B) { try { return (0, ef.toUtf8String)(_parseBytes(T, B)) } catch (T) { } return null } function _parseBytes(T, B) { if (T === "0x") { return null } var N = V.BigNumber.from((0, Z.hexDataSlice)(T, B, B + 32)).toNumber(); var L = V.BigNumber.from((0, Z.hexDataSlice)(T, N, N + 32)).toNumber(); return (0, Z.hexDataSlice)(T, N + 32, N + 32 + L) } function getIpfsLink(T) { if (T.match(/^ipfs:\/\/ipfs\//i)) { T = T.substring(12) } else if (T.match(/^ipfs:\/\//i)) { T = T.substring(7) } else { of.throwArgumentError("unsupported IPFS format", "link", T) } return "https://gateway.ipfs.io/ipfs/" + T } function numPad(T) { var B = (0, Z.arrayify)(T); if (B.length > 32) { throw new Error("internal; should not happen") } var N = new Uint8Array(32); N.set(B, 32 - B.length); return N } function bytesPad(T) { if (T.length % 32 === 0) { return T } var B = new Uint8Array(Math.ceil(T.length / 32) * 32); B.set(T); return B } function encodeBytes(T) { var B = []; var N = 0; for (var L = 0; L < T.length; L++) { B.push(null); N += 32 } for (var L = 0; L < T.length; L++) { var I = (0, Z.arrayify)(T[L]); B[L] = numPad(N); B.push(numPad(I.length)); B.push(bytesPad(I)); N += 32 + Math.ceil(I.length / 32) * 32 } return (0, Z.hexConcat)(B) } var pf = function () { function Resolver(T, B, N, L) { (0, Y.defineReadOnly)(this, "provider", T); (0, Y.defineReadOnly)(this, "name", N); (0, Y.defineReadOnly)(this, "address", T.formatter.address(B)); (0, Y.defineReadOnly)(this, "_resolvedAddress", L) } Resolver.prototype.supportsWildcard = function () { var T = this; if (!this._supportsEip2544) { this._supportsEip2544 = this.provider.call({ to: this.address, data: "0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000" }).then((function (T) { return V.BigNumber.from(T).eq(1) })).catch((function (B) { if (B.code === af.Logger.errors.CALL_EXCEPTION) { return false } T._supportsEip2544 = null; throw B })) } return this._supportsEip2544 }; Resolver.prototype._fetch = function (T, B) { return I(this, void 0, void 0, (function () { var N, L, I, H; return J(this, (function (J) { switch (J.label) { case 0: N = { to: this.address, ccipReadEnabled: true, data: (0, Z.hexConcat)([T, (0, q.namehash)(this.name), B || "0x"]) }; L = false; return [4, this.supportsWildcard()]; case 1: if (J.sent()) { L = true; N.data = (0, Z.hexConcat)(["0x9061b923", encodeBytes([(0, q.dnsEncode)(this.name), N.data])]) } J.label = 2; case 2: J.trys.push([2, 4, , 5]); return [4, this.provider.call(N)]; case 3: I = J.sent(); if ((0, Z.arrayify)(I).length % 32 === 4) { of.throwError("resolver threw error", af.Logger.errors.CALL_EXCEPTION, { transaction: N, data: I }) } if (L) { I = _parseBytes(I, 0) } return [2, I]; case 4: H = J.sent(); if (H.code === af.Logger.errors.CALL_EXCEPTION) { return [2, null] } throw H; case 5: return [2] } })) })) }; Resolver.prototype._fetchBytes = function (T, B) { return I(this, void 0, void 0, (function () { var N; return J(this, (function (L) { switch (L.label) { case 0: return [4, this._fetch(T, B)]; case 1: N = L.sent(); if (N != null) { return [2, _parseBytes(N, 0)] } return [2, null] } })) })) }; Resolver.prototype._getAddress = function (T, B) { var N = uf[String(T)]; if (N == null) { of.throwError("unsupported coin type: " + T, af.Logger.errors.UNSUPPORTED_OPERATION, { operation: "getAddress(" + T + ")" }) } if (N.ilk === "eth") { return this.provider.formatter.address(B) } var L = (0, Z.arrayify)(B); if (N.p2pkh != null) { var I = B.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/); if (I) { var J = parseInt(I[1], 16); if (I[2].length === J * 2 && J >= 1 && J <= 75) { return base58Encode((0, Z.concat)([[N.p2pkh], "0x" + I[2]])) } } } if (N.p2sh != null) { var H = B.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/); if (H) { var U = parseInt(H[1], 16); if (H[2].length === U * 2 && U >= 1 && U <= 75) { return base58Encode((0, Z.concat)([[N.p2sh], "0x" + H[2]])) } } } if (N.prefix != null) { var X = L[1]; var G = L[0]; if (G === 0) { if (X !== 20 && X !== 32) { G = -1 } } else { G = -1 } if (G >= 0 && L.length === 2 + X && X >= 1 && X <= 75) { var V = rf.default.toWords(L.slice(2)); V.unshift(G); return rf.default.encode(N.prefix, V) } } return null }; Resolver.prototype.getAddress = function (T) { return I(this, void 0, void 0, (function () { var B, N, L, I; return J(this, (function (J) { switch (J.label) { case 0: if (T == null) { T = 60 } if (!(T === 60)) return [3, 4]; J.label = 1; case 1: J.trys.push([1, 3, , 4]); return [4, this._fetch("0x3b3b57de")]; case 2: B = J.sent(); if (B === "0x" || B === W.HashZero) { return [2, null] } return [2, this.provider.formatter.callAddress(B)]; case 3: N = J.sent(); if (N.code === af.Logger.errors.CALL_EXCEPTION) { return [2, null] } throw N; case 4: return [4, this._fetchBytes("0xf1cb7e06", bytes32ify(T))]; case 5: L = J.sent(); if (L == null || L === "0x") { return [2, null] } I = this._getAddress(T, L); if (I == null) { of.throwError("invalid or unsupported coin data", af.Logger.errors.UNSUPPORTED_OPERATION, { operation: "getAddress(" + T + ")", coinType: T, data: L }) } return [2, I] } })) })) }; Resolver.prototype.getAvatar = function () { return I(this, void 0, void 0, (function () { var T, B, N, L, I, H, U, X, G, W, q, Q, Y, ff, ef, rf, af, nf, of, sf, cf, bf, df, uf, pf; return J(this, (function (J) { switch (J.label) { case 0: T = [{ type: "name", content: this.name }]; J.label = 1; case 1: J.trys.push([1, 19, , 20]); return [4, this.getText("avatar")]; case 2: B = J.sent(); if (B == null) { return [2, null] } N = 0; J.label = 3; case 3: if (!(N < hf.length)) return [3, 18]; L = B.match(hf[N]); if (L == null) { return [3, 17] } I = L[1].toLowerCase(); H = I; switch (H) { case "https": return [3, 4]; case "data": return [3, 5]; case "ipfs": return [3, 6]; case "erc721": return [3, 7]; case "erc1155": return [3, 7] }return [3, 17]; case 4: T.push({ type: "url", content: B }); return [2, { linkage: T, url: B }]; case 5: T.push({ type: "data", content: B }); return [2, { linkage: T, url: B }]; case 6: T.push({ type: "ipfs", content: B }); return [2, { linkage: T, url: getIpfsLink(B) }]; case 7: U = I === "erc721" ? "0xc87b56dd" : "0x0e89341c"; T.push({ type: I, content: B }); G = this._resolvedAddress; if (G) return [3, 9]; return [4, this.getAddress()]; case 8: G = J.sent(); J.label = 9; case 9: X = G; W = (L[2] || "").split("/"); if (W.length !== 2) { return [2, null] } return [4, this.provider.formatter.address(W[0])]; case 10: q = J.sent(); Q = (0, Z.hexZeroPad)(V.BigNumber.from(W[1]).toHexString(), 32); if (!(I === "erc721")) return [3, 12]; ef = (ff = this.provider.formatter).callAddress; return [4, this.provider.call({ to: q, data: (0, Z.hexConcat)(["0x6352211e", Q]) })]; case 11: Y = ef.apply(ff, [J.sent()]); if (X !== Y) { return [2, null] } T.push({ type: "owner", content: Y }); return [3, 14]; case 12: if (!(I === "erc1155")) return [3, 14]; nf = (af = V.BigNumber).from; return [4, this.provider.call({ to: q, data: (0, Z.hexConcat)(["0x00fdd58e", (0, Z.hexZeroPad)(X, 32), Q]) })]; case 13: rf = nf.apply(af, [J.sent()]); if (rf.isZero()) { return [2, null] } T.push({ type: "balance", content: rf.toString() }); J.label = 14; case 14: of = { to: this.provider.formatter.address(W[0]), data: (0, Z.hexConcat)([U, Q]) }; cf = _parseString; return [4, this.provider.call(of)]; case 15: sf = cf.apply(void 0, [J.sent(), 0]); if (sf == null) { return [2, null] } T.push({ type: "metadata-url-base", content: sf }); if (I === "erc1155") { sf = sf.replace("{id}", Q.substring(2)); T.push({ type: "metadata-url-expanded", content: sf }) } if (sf.match(/^ipfs:/i)) { sf = getIpfsLink(sf) } T.push({ type: "metadata-url", content: sf }); return [4, (0, tf.fetchJson)(sf)]; case 16: bf = J.sent(); if (!bf) { return [2, null] } T.push({ type: "metadata", content: JSON.stringify(bf) }); df = bf.image; if (typeof df !== "string") { return [2, null] } if (df.match(/^(https:\/\/|data:)/i)) { } else { uf = df.match(lf); if (uf == null) { return [2, null] } T.push({ type: "url-ipfs", content: df }); df = getIpfsLink(df) } T.push({ type: "url", content: df }); return [2, { linkage: T, url: df }]; case 17: N++; return [3, 3]; case 18: return [3, 20]; case 19: pf = J.sent(); return [3, 20]; case 20: return [2, null] } })) })) }; Resolver.prototype.getContentHash = function () { return I(this, void 0, void 0, (function () { var T, B, N, L, I, H, U, V, Z; return J(this, (function (J) { switch (J.label) { case 0: return [4, this._fetchBytes("0xbc1c58d1")]; case 1: T = J.sent(); if (T == null || T === "0x") { return [2, null] } B = T.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/); if (B) { N = parseInt(B[3], 16); if (B[4].length === N * 2) { return [2, "ipfs://" + G.Base58.encode("0x" + B[1])] } } L = T.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/); if (L) { I = parseInt(L[3], 16); if (L[4].length === I * 2) { return [2, "ipns://" + G.Base58.encode("0x" + L[1])] } } H = T.match(/^0xe40101fa011b20([0-9a-f]*)$/); if (H) { if (H[1].length === 32 * 2) { return [2, "bzz://" + H[1]] } } U = T.match(/^0x90b2c605([0-9a-f]*)$/); if (U) { if (U[1].length === 34 * 2) { V = { "=": "", "+": "-", "/": "_" }; Z = (0, X.encode)("0x" + U[1]).replace(/[=+\/]/g, (function (T) { return V[T] })); return [2, "sia://" + Z] } } return [2, of.throwError("invalid or unsupported content hash data", af.Logger.errors.UNSUPPORTED_OPERATION, { operation: "getContentHash()", data: T })] } })) })) }; Resolver.prototype.getText = function (T) { return I(this, void 0, void 0, (function () { var B, N; return J(this, (function (L) { switch (L.label) { case 0: B = (0, ef.toUtf8Bytes)(T); B = (0, Z.concat)([bytes32ify(64), bytes32ify(B.length), B]); if (B.length % 32 !== 0) { B = (0, Z.concat)([B, (0, Z.hexZeroPad)("0x", 32 - T.length % 32)]) } return [4, this._fetchBytes("0x59d1d43c", (0, Z.hexlify)(B))]; case 1: N = L.sent(); if (N == null || N === "0x") { return [2, null] } return [2, (0, ef.toUtf8String)(N)] } })) })) }; return Resolver }(); B.Resolver = pf; var vf = null; var mf = 1; var yf = function (T) { L(BaseProvider, T); function BaseProvider(B) { var N = this.constructor; var L = T.call(this) || this; L._events = []; L._emitted = { block: -2 }; L.disableCcipRead = false; L.formatter = N.getFormatter(); (0, Y.defineReadOnly)(L, "anyNetwork", B === "any"); if (L.anyNetwork) { B = L.detectNetwork() } if (B instanceof Promise) { L._networkPromise = B; B.catch((function (T) { })); L._ready().catch((function (T) { })) } else { var I = (0, Y.getStatic)(N, "getNetwork")(B); if (I) { (0, Y.defineReadOnly)(L, "_network", I); L.emit("network", I, null) } else { of.throwArgumentError("invalid network", "network", B) } } L._maxInternalBlockNumber = -1024; L._lastBlockNumber = -2; L._maxFilterBlockRange = 10; L._pollingInterval = 4e3; L._fastQueryDate = 0; return L } BaseProvider.prototype._ready = function () { return I(this, void 0, void 0, (function () { var T, B; return J(this, (function (N) { switch (N.label) { case 0: if (!(this._network == null)) return [3, 7]; T = null; if (!this._networkPromise) return [3, 4]; N.label = 1; case 1: N.trys.push([1, 3, , 4]); return [4, this._networkPromise]; case 2: T = N.sent(); return [3, 4]; case 3: B = N.sent(); return [3, 4]; case 4: if (!(T == null)) return [3, 6]; return [4, this.detectNetwork()]; case 5: T = N.sent(); N.label = 6; case 6: if (!T) { of.throwError("no network detected", af.Logger.errors.UNKNOWN_ERROR, {}) } if (this._network == null) { if (this.anyNetwork) { this._network = T } else { (0, Y.defineReadOnly)(this, "_network", T) } this.emit("network", T, null) } N.label = 7; case 7: return [2, this._network] } })) })) }; Object.defineProperty(BaseProvider.prototype, "ready", { get: function () { var T = this; return (0, tf.poll)((function () { return T._ready().then((function (T) { return T }), (function (T) { if (T.code === af.Logger.errors.NETWORK_ERROR && T.event === "noNetwork") { return undefined } throw T })) })) }, enumerable: false, configurable: true }); BaseProvider.getFormatter = function () { if (vf == null) { vf = new sf.Formatter } return vf }; BaseProvider.getNetwork = function (T) { return (0, Q.getNetwork)(T == null ? "homestead" : T) }; BaseProvider.prototype.ccipReadFetch = function (T, B, N) { return I(this, void 0, void 0, (function () { var L, I, H, U, X, G, V, Z, W; return J(this, (function (J) { switch (J.label) { case 0: if (this.disableCcipRead || N.length === 0) { return [2, null] } L = T.to.toLowerCase(); I = B.toLowerCase(); H = []; U = 0; J.label = 1; case 1: if (!(U < N.length)) return [3, 4]; X = N[U]; G = X.replace("{sender}", L).replace("{data}", I); V = X.indexOf("{data}") >= 0 ? null : JSON.stringify({ data: I, sender: L }); return [4, (0, tf.fetchJson)({ url: G, errorPassThrough: true }, V, (function (T, B) { T.status = B.statusCode; return T }))]; case 2: Z = J.sent(); if (Z.data) { return [2, Z.data] } W = Z.message || "unknown error"; if (Z.status >= 400 && Z.status < 500) { return [2, of.throwError("response not found during CCIP fetch: " + W, af.Logger.errors.SERVER_ERROR, { url: X, errorMessage: W })] } H.push(W); J.label = 3; case 3: U++; return [3, 1]; case 4: return [2, of.throwError("error encountered during CCIP fetch: " + H.map((function (T) { return JSON.stringify(T) })).join(", "), af.Logger.errors.SERVER_ERROR, { urls: N, errorMessages: H })] } })) })) }; BaseProvider.prototype._getInternalBlockNumber = function (T) { return I(this, void 0, void 0, (function () { var B, N, L, I, H; var U = this; return J(this, (function (J) { switch (J.label) { case 0: return [4, this._ready()]; case 1: J.sent(); if (!(T > 0)) return [3, 7]; J.label = 2; case 2: if (!this._internalBlockNumber) return [3, 7]; B = this._internalBlockNumber; J.label = 3; case 3: J.trys.push([3, 5, , 6]); return [4, B]; case 4: N = J.sent(); if (getTime() - N.respTime <= T) { return [2, N.blockNumber] } return [3, 7]; case 5: L = J.sent(); if (this._internalBlockNumber === B) { return [3, 7] } return [3, 6]; case 6: return [3, 2]; case 7: I = getTime(); H = (0, Y.resolveProperties)({ blockNumber: this.perform("getBlockNumber", {}), networkError: this.getNetwork().then((function (T) { return null }), (function (T) { return T })) }).then((function (T) { var B = T.blockNumber, N = T.networkError; if (N) { if (U._internalBlockNumber === H) { U._internalBlockNumber = null } throw N } var L = getTime(); B = V.BigNumber.from(B).toNumber(); if (B < U._maxInternalBlockNumber) { B = U._maxInternalBlockNumber } U._maxInternalBlockNumber = B; U._setFastBlockNumber(B); return { blockNumber: B, reqTime: I, respTime: L } })); this._internalBlockNumber = H; H.catch((function (T) { if (U._internalBlockNumber === H) { U._internalBlockNumber = null } })); return [4, H]; case 8: return [2, J.sent().blockNumber] } })) })) }; BaseProvider.prototype.poll = function () { return I(this, void 0, void 0, (function () { var T, B, N, L, I; var H = this; return J(this, (function (J) { switch (J.label) { case 0: T = mf++; B = []; N = null; J.label = 1; case 1: J.trys.push([1, 3, , 4]); return [4, this._getInternalBlockNumber(100 + this.pollingInterval / 2)]; case 2: N = J.sent(); return [3, 4]; case 3: L = J.sent(); this.emit("error", L); return [2]; case 4: this._setFastBlockNumber(N); this.emit("poll", T, N); if (N === this._lastBlockNumber) { this.emit("didPoll", T); return [2] } if (this._emitted.block === -2) { this._emitted.block = N - 1 } if (Math.abs(this._emitted.block - N) > 1e3) { of.warn("network block skew detected; skipping block events (emitted=" + this._emitted.block + " blockNumber" + N + ")"); this.emit("error", of.makeError("network block skew detected", af.Logger.errors.NETWORK_ERROR, { blockNumber: N, event: "blockSkew", previousBlockNumber: this._emitted.block })); this.emit("block", N) } else { for (I = this._emitted.block + 1; I <= N; I++) { this.emit("block", I) } } if (this._emitted.block !== N) { this._emitted.block = N; Object.keys(this._emitted).forEach((function (T) { if (T === "block") { return } var B = H._emitted[T]; if (B === "pending") { return } if (N - B > 12) { delete H._emitted[T] } })) } if (this._lastBlockNumber === -2) { this._lastBlockNumber = N - 1 } this._events.forEach((function (T) { switch (T.type) { case "tx": { var L = T.hash; var I = H.getTransactionReceipt(L).then((function (T) { if (!T || T.blockNumber == null) { return null } H._emitted["t:" + L] = T.blockNumber; H.emit(L, T); return null })).catch((function (T) { H.emit("error", T) })); B.push(I); break } case "filter": { if (!T._inflight) { T._inflight = true; if (T._lastBlockNumber === -2) { T._lastBlockNumber = N - 1 } var J = T.filter; J.fromBlock = T._lastBlockNumber + 1; J.toBlock = N; var U = J.toBlock - H._maxFilterBlockRange; if (U > J.fromBlock) { J.fromBlock = U } if (J.fromBlock < 0) { J.fromBlock = 0 } var I = H.getLogs(J).then((function (B) { T._inflight = false; if (B.length === 0) { return } B.forEach((function (B) { if (B.blockNumber > T._lastBlockNumber) { T._lastBlockNumber = B.blockNumber } H._emitted["b:" + B.blockHash] = B.blockNumber; H._emitted["t:" + B.transactionHash] = B.blockNumber; H.emit(J, B) })) })).catch((function (B) { H.emit("error", B); T._inflight = false })); B.push(I) } break } } })); this._lastBlockNumber = N; Promise.all(B).then((function () { H.emit("didPoll", T) })).catch((function (T) { H.emit("error", T) })); return [2] } })) })) }; BaseProvider.prototype.resetEventsBlock = function (T) { this._lastBlockNumber = T - 1; if (this.polling) { this.poll() } }; Object.defineProperty(BaseProvider.prototype, "network", { get: function () { return this._network }, enumerable: false, configurable: true }); BaseProvider.prototype.detectNetwork = function () { return I(this, void 0, void 0, (function () { return J(this, (function (T) { return [2, of.throwError("provider does not support network detection", af.Logger.errors.UNSUPPORTED_OPERATION, { operation: "provider.detectNetwork" })] })) })) }; BaseProvider.prototype.getNetwork = function () { return I(this, void 0, void 0, (function () { var T, B, N; return J(this, (function (L) { switch (L.label) { case 0: return [4, this._ready()]; case 1: T = L.sent(); return [4, this.detectNetwork()]; case 2: B = L.sent(); if (!(T.chainId !== B.chainId)) return [3, 5]; if (!this.anyNetwork) return [3, 4]; this._network = B; this._lastBlockNumber = -2; this._fastBlockNumber = null; this._fastBlockNumberPromise = null; this._fastQueryDate = 0; this._emitted.block = -2; this._maxInternalBlockNumber = -1024; this._internalBlockNumber = null; this.emit("network", B, T); return [4, stall(0)]; case 3: L.sent(); return [2, this._network]; case 4: N = of.makeError("underlying network changed", af.Logger.errors.NETWORK_ERROR, { event: "changed", network: T, detectedNetwork: B }); this.emit("error", N); throw N; case 5: return [2, T] } })) })) }; Object.defineProperty(BaseProvider.prototype, "blockNumber", { get: function () { var T = this; this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((function (B) { T._setFastBlockNumber(B) }), (function (T) { })); return this._fastBlockNumber != null ? this._fastBlockNumber : -1 }, enumerable: false, configurable: true }); Object.defineProperty(BaseProvider.prototype, "polling", { get: function () { return this._poller != null }, set: function (T) { var B = this; if (T && !this._poller) { this._poller = setInterval((function () { B.poll() }), this.pollingInterval); if (!this._bootstrapPoll) { this._bootstrapPoll = setTimeout((function () { B.poll(); B._bootstrapPoll = setTimeout((function () { if (!B._poller) { B.poll() } B._bootstrapPoll = null }), B.pollingInterval) }), 0) } } else if (!T && this._poller) { clearInterval(this._poller); this._poller = null } }, enumerable: false, configurable: true }); Object.defineProperty(BaseProvider.prototype, "pollingInterval", { get: function () { return this._pollingInterval }, set: function (T) { var B = this; if (typeof T !== "number" || T <= 0 || parseInt(String(T)) != T) { throw new Error("invalid polling interval") } this._pollingInterval = T; if (this._poller) { clearInterval(this._poller); this._poller = setInterval((function () { B.poll() }), this._pollingInterval) } }, enumerable: false, configurable: true }); BaseProvider.prototype._getFastBlockNumber = function () { var T = this; var B = getTime(); if (B - this._fastQueryDate > 2 * this._pollingInterval) { this._fastQueryDate = B; this._fastBlockNumberPromise = this.getBlockNumber().then((function (B) { if (T._fastBlockNumber == null || B > T._fastBlockNumber) { T._fastBlockNumber = B } return T._fastBlockNumber })) } return this._fastBlockNumberPromise }; BaseProvider.prototype._setFastBlockNumber = function (T) { if (this._fastBlockNumber != null && T < this._fastBlockNumber) { return } this._fastQueryDate = getTime(); if (this._fastBlockNumber == null || T > this._fastBlockNumber) { this._fastBlockNumber = T; this._fastBlockNumberPromise = Promise.resolve(T) } }; BaseProvider.prototype.waitForTransaction = function (T, B, N) { return I(this, void 0, void 0, (function () { return J(this, (function (L) { return [2, this._waitForTransaction(T, B == null ? 1 : B, N || 0, null)] })) })) }; BaseProvider.prototype._waitForTransaction = function (T, B, N, L) { return I(this, void 0, void 0, (function () { var H; var U = this; return J(this, (function (X) { switch (X.label) { case 0: return [4, this.getTransactionReceipt(T)]; case 1: H = X.sent(); if ((H ? H.confirmations : 0) >= B) { return [2, H] } return [2, new Promise((function (H, X) { var G = []; var V = false; var alreadyDone = function () { if (V) { return true } V = true; G.forEach((function (T) { T() })); return false }; var minedHandler = function (T) { if (T.confirmations < B) { return } if (alreadyDone()) { return } H(T) }; U.on(T, minedHandler); G.push((function () { U.removeListener(T, minedHandler) })); if (L) { var Z = L.startBlock; var W = null; var replaceHandler_1 = function (N) { return I(U, void 0, void 0, (function () { var H = this; return J(this, (function (U) { switch (U.label) { case 0: if (V) { return [2] } return [4, stall(1e3)]; case 1: U.sent(); this.getTransactionCount(L.from).then((function (U) { return I(H, void 0, void 0, (function () { var I, H, G, q, Q, Y; return J(this, (function (J) { switch (J.label) { case 0: if (V) { return [2] } if (!(U <= L.nonce)) return [3, 1]; Z = N; return [3, 9]; case 1: return [4, this.getTransaction(T)]; case 2: I = J.sent(); if (I && I.blockNumber != null) { return [2] } if (W == null) { W = Z - 3; if (W < L.startBlock) { W = L.startBlock } } J.label = 3; case 3: if (!(W <= N)) return [3, 9]; if (V) { return [2] } return [4, this.getBlockWithTransactions(W)]; case 4: H = J.sent(); G = 0; J.label = 5; case 5: if (!(G < H.transactions.length)) return [3, 8]; q = H.transactions[G]; if (q.hash === T) { return [2] } if (!(q.from === L.from && q.nonce === L.nonce)) return [3, 7]; if (V) { return [2] } return [4, this.waitForTransaction(q.hash, B)]; case 6: Q = J.sent(); if (alreadyDone()) { return [2] } Y = "replaced"; if (q.data === L.data && q.to === L.to && q.value.eq(L.value)) { Y = "repriced" } else if (q.data === "0x" && q.from === q.to && q.value.isZero()) { Y = "cancelled" } X(of.makeError("transaction was replaced", af.Logger.errors.TRANSACTION_REPLACED, { cancelled: Y === "replaced" || Y === "cancelled", reason: Y, replacement: this._wrapTransaction(q), hash: T, receipt: Q })); return [2]; case 7: G++; return [3, 5]; case 8: W++; return [3, 3]; case 9: if (V) { return [2] } this.once("block", replaceHandler_1); return [2] } })) })) }), (function (T) { if (V) { return } H.once("block", replaceHandler_1) })); return [2] } })) })) }; if (V) { return } U.once("block", replaceHandler_1); G.push((function () { U.removeListener("block", replaceHandler_1) })) } if (typeof N === "number" && N > 0) { var q = setTimeout((function () { if (alreadyDone()) { return } X(of.makeError("timeout exceeded", af.Logger.errors.TIMEOUT, { timeout: N })) }), N); if (q.unref) { q.unref() } G.push((function () { clearTimeout(q) })) } }))] } })) })) }; BaseProvider.prototype.getBlockNumber = function () { return I(this, void 0, void 0, (function () { return J(this, (function (T) { return [2, this._getInternalBlockNumber(0)] })) })) }; BaseProvider.prototype.getGasPrice = function () { return I(this, void 0, void 0, (function () { var T; return J(this, (function (B) { switch (B.label) { case 0: return [4, this.getNetwork()]; case 1: B.sent(); return [4, this.perform("getGasPrice", {})]; case 2: T = B.sent(); try { return [2, V.BigNumber.from(T)] } catch (B) { return [2, of.throwError("bad result from backend", af.Logger.errors.SERVER_ERROR, { method: "getGasPrice", result: T, error: B })] } return [2] } })) })) }; BaseProvider.prototype.getBalance = function (T, B) { return I(this, void 0, void 0, (function () { var N, L; return J(this, (function (I) { switch (I.label) { case 0: return [4, this.getNetwork()]; case 1: I.sent(); return [4, (0, Y.resolveProperties)({ address: this._getAddress(T), blockTag: this._getBlockTag(B) })]; case 2: N = I.sent(); return [4, this.perform("getBalance", N)]; case 3: L = I.sent(); try { return [2, V.BigNumber.from(L)] } catch (T) { return [2, of.throwError("bad result from backend", af.Logger.errors.SERVER_ERROR, { method: "getBalance", params: N, result: L, error: T })] } return [2] } })) })) }; BaseProvider.prototype.getTransactionCount = function (T, B) { return I(this, void 0, void 0, (function () { var N, L; return J(this, (function (I) { switch (I.label) { case 0: return [4, this.getNetwork()]; case 1: I.sent(); return [4, (0, Y.resolveProperties)({ address: this._getAddress(T), blockTag: this._getBlockTag(B) })]; case 2: N = I.sent(); return [4, this.perform("getTransactionCount", N)]; case 3: L = I.sent(); try { return [2, V.BigNumber.from(L).toNumber()] } catch (T) { return [2, of.throwError("bad result from backend", af.Logger.errors.SERVER_ERROR, { method: "getTransactionCount", params: N, result: L, error: T })] } return [2] } })) })) }; BaseProvider.prototype.getCode = function (T, B) { return I(this, void 0, void 0, (function () { var N, L; return J(this, (function (I) { switch (I.label) { case 0: return [4, this.getNetwork()]; case 1: I.sent(); return [4, (0, Y.resolveProperties)({ address: this._getAddress(T), blockTag: this._getBlockTag(B) })]; case 2: N = I.sent(); return [4, this.perform("getCode", N)]; case 3: L = I.sent(); try { return [2, (0, Z.hexlify)(L)] } catch (T) { return [2, of.throwError("bad result from backend", af.Logger.errors.SERVER_ERROR, { method: "getCode", params: N, result: L, error: T })] } return [2] } })) })) }; BaseProvider.prototype.getStorageAt = function (T, B, N) { return I(this, void 0, void 0, (function () { var L, I; return J(this, (function (J) { switch (J.label) { case 0: return [4, this.getNetwork()]; case 1: J.sent(); return [4, (0, Y.resolveProperties)({ address: this._getAddress(T), blockTag: this._getBlockTag(N), position: Promise.resolve(B).then((function (T) { return (0, Z.hexValue)(T) })) })]; case 2: L = J.sent(); return [4, this.perform("getStorageAt", L)]; case 3: I = J.sent(); try { return [2, (0, Z.hexlify)(I)] } catch (T) { return [2, of.throwError("bad result from backend", af.Logger.errors.SERVER_ERROR, { method: "getStorageAt", params: L, result: I, error: T })] } return [2] } })) })) }; BaseProvider.prototype._wrapTransaction = function (T, B, N) { var L = this; if (B != null && (0, Z.hexDataLength)(B) !== 32) { throw new Error("invalid response - sendTransaction") } var H = T; if (B != null && T.hash !== B) { of.throwError("Transaction hash mismatch from Provider.sendTransaction.", af.Logger.errors.UNKNOWN_ERROR, { expectedHash: T.hash, returnedHash: B }) } H.wait = function (B, H) { return I(L, void 0, void 0, (function () { var L, I; return J(this, (function (J) { switch (J.label) { case 0: if (B == null) { B = 1 } if (H == null) { H = 0 } L = undefined; if (B !== 0 && N != null) { L = { data: T.data, from: T.from, nonce: T.nonce, to: T.to, value: T.value, startBlock: N } } return [4, this._waitForTransaction(T.hash, B, H, L)]; case 1: I = J.sent(); if (I == null && B === 0) { return [2, null] } this._emitted["t:" + T.hash] = I.blockNumber; if (I.status === 0) { of.throwError("transaction failed", af.Logger.errors.CALL_EXCEPTION, { transactionHash: T.hash, transaction: T, receipt: I }) } return [2, I] } })) })) }; return H }; BaseProvider.prototype.sendTransaction = function (T) { return I(this, void 0, void 0, (function () { var B, N, L, I, H; return J(this, (function (J) { switch (J.label) { case 0: return [4, this.getNetwork()]; case 1: J.sent(); return [4, Promise.resolve(T).then((function (T) { return (0, Z.hexlify)(T) }))]; case 2: B = J.sent(); N = this.formatter.transaction(T); if (N.confirmations == null) { N.confirmations = 0 } return [4, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)]; case 3: L = J.sent(); J.label = 4; case 4: J.trys.push([4, 6, , 7]); return [4, this.perform("sendTransaction", { signedTransaction: B })]; case 5: I = J.sent(); return [2, this._wrapTransaction(N, I, L)]; case 6: H = J.sent(); H.transaction = N; H.transactionHash = N.hash; throw H; case 7: return [2] } })) })) }; BaseProvider.prototype._getTransactionRequest = function (T) { return I(this, void 0, void 0, (function () { var B, N, L, I; var H = this; return J(this, (function (J) { switch (J.label) { case 0: return [4, T]; case 1: B = J.sent(); N = {};["from", "to"].forEach((function (T) { if (B[T] == null) { return } N[T] = Promise.resolve(B[T]).then((function (T) { return T ? H._getAddress(T) : null })) }));["gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "value"].forEach((function (T) { if (B[T] == null) { return } N[T] = Promise.resolve(B[T]).then((function (T) { return T ? V.BigNumber.from(T) : null })) }));["type"].forEach((function (T) { if (B[T] == null) { return } N[T] = Promise.resolve(B[T]).then((function (T) { return T != null ? T : null })) })); if (B.accessList) { N.accessList = this.formatter.accessList(B.accessList) } ["data"].forEach((function (T) { if (B[T] == null) { return } N[T] = Promise.resolve(B[T]).then((function (T) { return T ? (0, Z.hexlify)(T) : null })) })); I = (L = this.formatter).transactionRequest; return [4, (0, Y.resolveProperties)(N)]; case 2: return [2, I.apply(L, [J.sent()])] } })) })) }; BaseProvider.prototype._getFilter = function (T) { return I(this, void 0, void 0, (function () { var B, N, L; var I = this; return J(this, (function (J) { switch (J.label) { case 0: return [4, T]; case 1: T = J.sent(); B = {}; if (T.address != null) { B.address = this._getAddress(T.address) } ["blockHash", "topics"].forEach((function (N) { if (T[N] == null) { return } B[N] = T[N] }));["fromBlock", "toBlock"].forEach((function (N) { if (T[N] == null) { return } B[N] = I._getBlockTag(T[N]) })); L = (N = this.formatter).filter; return [4, (0, Y.resolveProperties)(B)]; case 2: return [2, L.apply(N, [J.sent()])] } })) })) }; BaseProvider.prototype._call = function (T, B, N) { return I(this, void 0, void 0, (function () { var L, I, H, U, X, G, W, q, Q, Y, ff, ef, tf, rf, nf, sf; return J(this, (function (J) { switch (J.label) { case 0: if (N >= cf) { of.throwError("CCIP read exceeded maximum redirections", af.Logger.errors.SERVER_ERROR, { redirects: N, transaction: T }) } L = T.to; return [4, this.perform("call", { transaction: T, blockTag: B })]; case 1: I = J.sent(); if (!(N >= 0 && B === "latest" && L != null && I.substring(0, 10) === "0x556f1830" && (0, Z.hexDataLength)(I) % 32 === 4)) return [3, 5]; J.label = 2; case 2: J.trys.push([2, 4, , 5]); H = (0, Z.hexDataSlice)(I, 4); U = (0, Z.hexDataSlice)(H, 0, 32); if (!V.BigNumber.from(U).eq(L)) { of.throwError("CCIP Read sender did not match", af.Logger.errors.CALL_EXCEPTION, { name: "OffchainLookup", signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)", transaction: T, data: I }) } X = []; G = V.BigNumber.from((0, Z.hexDataSlice)(H, 32, 64)).toNumber(); W = V.BigNumber.from((0, Z.hexDataSlice)(H, G, G + 32)).toNumber(); q = (0, Z.hexDataSlice)(H, G + 32); for (Q = 0; Q < W; Q++) { Y = _parseString(q, Q * 32); if (Y == null) { of.throwError("CCIP Read contained corrupt URL string", af.Logger.errors.CALL_EXCEPTION, { name: "OffchainLookup", signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)", transaction: T, data: I }) } X.push(Y) } ff = _parseBytes(H, 64); if (!V.BigNumber.from((0, Z.hexDataSlice)(H, 100, 128)).isZero()) { of.throwError("CCIP Read callback selector included junk", af.Logger.errors.CALL_EXCEPTION, { name: "OffchainLookup", signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)", transaction: T, data: I }) } ef = (0, Z.hexDataSlice)(H, 96, 100); tf = _parseBytes(H, 128); return [4, this.ccipReadFetch(T, ff, X)]; case 3: rf = J.sent(); if (rf == null) { of.throwError("CCIP Read disabled or provided no URLs", af.Logger.errors.CALL_EXCEPTION, { name: "OffchainLookup", signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)", transaction: T, data: I }) } nf = { to: L, data: (0, Z.hexConcat)([ef, encodeBytes([rf, tf])]) }; return [2, this._call(nf, B, N + 1)]; case 4: sf = J.sent(); if (sf.code === af.Logger.errors.SERVER_ERROR) { throw sf } return [3, 5]; case 5: try { return [2, (0, Z.hexlify)(I)] } catch (N) { return [2, of.throwError("bad result from backend", af.Logger.errors.SERVER_ERROR, { method: "call", params: { transaction: T, blockTag: B }, result: I, error: N })] } return [2] } })) })) }; BaseProvider.prototype.call = function (T, B) { return I(this, void 0, void 0, (function () { var N; return J(this, (function (L) { switch (L.label) { case 0: return [4, this.getNetwork()]; case 1: L.sent(); return [4, (0, Y.resolveProperties)({ transaction: this._getTransactionRequest(T), blockTag: this._getBlockTag(B), ccipReadEnabled: Promise.resolve(T.ccipReadEnabled) })]; case 2: N = L.sent(); return [2, this._call(N.transaction, N.blockTag, N.ccipReadEnabled ? 0 : -1)] } })) })) }; BaseProvider.prototype.estimateGas = function (T) { return I(this, void 0, void 0, (function () { var B, N; return J(this, (function (L) { switch (L.label) { case 0: return [4, this.getNetwork()]; case 1: L.sent(); return [4, (0, Y.resolveProperties)({ transaction: this._getTransactionRequest(T) })]; case 2: B = L.sent(); return [4, this.perform("estimateGas", B)]; case 3: N = L.sent(); try { return [2, V.BigNumber.from(N)] } catch (T) { return [2, of.throwError("bad result from backend", af.Logger.errors.SERVER_ERROR, { method: "estimateGas", params: B, result: N, error: T })] } return [2] } })) })) }; BaseProvider.prototype._getAddress = function (T) { return I(this, void 0, void 0, (function () { var B; return J(this, (function (N) { switch (N.label) { case 0: return [4, T]; case 1: T = N.sent(); if (typeof T !== "string") { of.throwArgumentError("invalid address or ENS name", "name", T) } return [4, this.resolveName(T)]; case 2: B = N.sent(); if (B == null) { of.throwError("ENS name not configured", af.Logger.errors.UNSUPPORTED_OPERATION, { operation: "resolveName(" + JSON.stringify(T) + ")" }) } return [2, B] } })) })) }; BaseProvider.prototype._getBlock = function (T, B) { return I(this, void 0, void 0, (function () { var N, L, H, U; var X = this; return J(this, (function (G) { switch (G.label) { case 0: return [4, this.getNetwork()]; case 1: G.sent(); return [4, T]; case 2: T = G.sent(); N = -128; L = { includeTransactions: !!B }; if (!(0, Z.isHexString)(T, 32)) return [3, 3]; L.blockHash = T; return [3, 6]; case 3: G.trys.push([3, 5, , 6]); H = L; return [4, this._getBlockTag(T)]; case 4: H.blockTag = G.sent(); if ((0, Z.isHexString)(L.blockTag)) { N = parseInt(L.blockTag.substring(2), 16) } return [3, 6]; case 5: U = G.sent(); of.throwArgumentError("invalid block hash or block tag", "blockHashOrBlockTag", T); return [3, 6]; case 6: return [2, (0, tf.poll)((function () { return I(X, void 0, void 0, (function () { var T, I, H, U, X, G; var V = this; return J(this, (function (J) { switch (J.label) { case 0: return [4, this.perform("getBlock", L)]; case 1: T = J.sent(); if (T == null) { if (L.blockHash != null) { if (this._emitted["b:" + L.blockHash] == null) { return [2, null] } } if (L.blockTag != null) { if (N > this._emitted.block) { return [2, null] } } return [2, undefined] } if (!B) return [3, 8]; I = null; H = 0; J.label = 2; case 2: if (!(H < T.transactions.length)) return [3, 7]; U = T.transactions[H]; if (!(U.blockNumber == null)) return [3, 3]; U.confirmations = 0; return [3, 6]; case 3: if (!(U.confirmations == null)) return [3, 6]; if (!(I == null)) return [3, 5]; return [4, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)]; case 4: I = J.sent(); J.label = 5; case 5: X = I - U.blockNumber + 1; if (X <= 0) { X = 1 } U.confirmations = X; J.label = 6; case 6: H++; return [3, 2]; case 7: G = this.formatter.blockWithTransactions(T); G.transactions = G.transactions.map((function (T) { return V._wrapTransaction(T) })); return [2, G]; case 8: return [2, this.formatter.block(T)] } })) })) }), { oncePoll: this })] } })) })) }; BaseProvider.prototype.getBlock = function (T) { return this._getBlock(T, false) }; BaseProvider.prototype.getBlockWithTransactions = function (T) { return this._getBlock(T, true) }; BaseProvider.prototype.getTransaction = function (T) { return I(this, void 0, void 0, (function () { var B; var N = this; return J(this, (function (L) { switch (L.label) { case 0: return [4, this.getNetwork()]; case 1: L.sent(); return [4, T]; case 2: T = L.sent(); B = { transactionHash: this.formatter.hash(T, true) }; return [2, (0, tf.poll)((function () { return I(N, void 0, void 0, (function () { var N, L, I, H; return J(this, (function (J) { switch (J.label) { case 0: return [4, this.perform("getTransaction", B)]; case 1: N = J.sent(); if (N == null) { if (this._emitted["t:" + T] == null) { return [2, null] } return [2, undefined] } L = this.formatter.transactionResponse(N); if (!(L.blockNumber == null)) return [3, 2]; L.confirmations = 0; return [3, 4]; case 2: if (!(L.confirmations == null)) return [3, 4]; return [4, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)]; case 3: I = J.sent(); H = I - L.blockNumber + 1; if (H <= 0) { H = 1 } L.confirmations = H; J.label = 4; case 4: return [2, this._wrapTransaction(L)] } })) })) }), { oncePoll: this })] } })) })) }; BaseProvider.prototype.getTransactionReceipt = function (T) { return I(this, void 0, void 0, (function () { var B; var N = this; return J(this, (function (L) { switch (L.label) { case 0: return [4, this.getNetwork()]; case 1: L.sent(); return [4, T]; case 2: T = L.sent(); B = { transactionHash: this.formatter.hash(T, true) }; return [2, (0, tf.poll)((function () { return I(N, void 0, void 0, (function () { var N, L, I, H; return J(this, (function (J) { switch (J.label) { case 0: return [4, this.perform("getTransactionReceipt", B)]; case 1: N = J.sent(); if (N == null) { if (this._emitted["t:" + T] == null) { return [2, null] } return [2, undefined] } if (N.blockHash == null) { return [2, undefined] } L = this.formatter.receipt(N); if (!(L.blockNumber == null)) return [3, 2]; L.confirmations = 0; return [3, 4]; case 2: if (!(L.confirmations == null)) return [3, 4]; return [4, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)]; case 3: I = J.sent(); H = I - L.blockNumber + 1; if (H <= 0) { H = 1 } L.confirmations = H; J.label = 4; case 4: return [2, L] } })) })) }), { oncePoll: this })] } })) })) }; BaseProvider.prototype.getLogs = function (T) { return I(this, void 0, void 0, (function () { var B, N; return J(this, (function (L) { switch (L.label) { case 0: return [4, this.getNetwork()]; case 1: L.sent(); return [4, (0, Y.resolveProperties)({ filter: this._getFilter(T) })]; case 2: B = L.sent(); return [4, this.perform("getLogs", B)]; case 3: N = L.sent(); N.forEach((function (T) { if (T.removed == null) { T.removed = false } })); return [2, sf.Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(N)] } })) })) }; BaseProvider.prototype.getEtherPrice = function () { return I(this, void 0, void 0, (function () { return J(this, (function (T) { switch (T.label) { case 0: return [4, this.getNetwork()]; case 1: T.sent(); return [2, this.perform("getEtherPrice", {})] } })) })) }; BaseProvider.prototype._getBlockTag = function (T) { return I(this, void 0, void 0, (function () { var B; return J(this, (function (N) { switch (N.label) { case 0: return [4, T]; case 1: T = N.sent(); if (!(typeof T === "number" && T < 0)) return [3, 3]; if (T % 1) { of.throwArgumentError("invalid BlockTag", "blockTag", T) } return [4, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)]; case 2: B = N.sent(); B += T; if (B < 0) { B = 0 } return [2, this.formatter.blockTag(B)]; case 3: return [2, this.formatter.blockTag(T)] } })) })) }; BaseProvider.prototype.getResolver = function (T) { return I(this, void 0, void 0, (function () { var B, N, L, I; return J(this, (function (J) { switch (J.label) { case 0: B = T; J.label = 1; case 1: if (false) { } if (B === "" || B === ".") { return [2, null] } if (T !== "eth" && B === "eth") { return [2, null] } return [4, this._getResolver(B, "getResolver")]; case 2: N = J.sent(); if (!(N != null)) return [3, 5]; L = new pf(this, N, T); I = B !== T; if (!I) return [3, 4]; return [4, L.supportsWildcard()]; case 3: I = !J.sent(); J.label = 4; case 4: if (I) { return [2, null] } return [2, L]; case 5: B = B.split(".").slice(1).join("."); return [3, 1]; case 6: return [2] } })) })) }; BaseProvider.prototype._getResolver = function (T, B) { return I(this, void 0, void 0, (function () { var N, L, I; return J(this, (function (J) { switch (J.label) { case 0: if (B == null) { B = "ENS" } return [4, this.getNetwork()]; case 1: N = J.sent(); if (!N.ensAddress) { of.throwError("network does not support ENS", af.Logger.errors.UNSUPPORTED_OPERATION, { operation: B, network: N.name }) } J.label = 2; case 2: J.trys.push([2, 4, , 5]); return [4, this.call({ to: N.ensAddress, data: "0x0178b8bf" + (0, q.namehash)(T).substring(2) })]; case 3: L = J.sent(); return [2, this.formatter.callAddress(L)]; case 4: I = J.sent(); return [3, 5]; case 5: return [2, null] } })) })) }; BaseProvider.prototype.resolveName = function (T) { return I(this, void 0, void 0, (function () { var B; return J(this, (function (N) { switch (N.label) { case 0: return [4, T]; case 1: T = N.sent(); try { return [2, Promise.resolve(this.formatter.address(T))] } catch (B) { if ((0, Z.isHexString)(T)) { throw B } } if (typeof T !== "string") { of.throwArgumentError("invalid ENS name", "name", T) } return [4, this.getResolver(T)]; case 2: B = N.sent(); if (!B) { return [2, null] } return [4, B.getAddress()]; case 3: return [2, N.sent()] } })) })) }; BaseProvider.prototype.lookupAddress = function (T) { return I(this, void 0, void 0, (function () { var B, N, L, I, H; return J(this, (function (J) { switch (J.label) { case 0: return [4, T]; case 1: T = J.sent(); T = this.formatter.address(T); B = T.substring(2).toLowerCase() + ".addr.reverse"; return [4, this._getResolver(B, "lookupAddress")]; case 2: N = J.sent(); if (N == null) { return [2, null] } I = _parseString; return [4, this.call({ to: N, data: "0x691f3431" + (0, q.namehash)(B).substring(2) })]; case 3: L = I.apply(void 0, [J.sent(), 0]); return [4, this.resolveName(L)]; case 4: H = J.sent(); if (H != T) { return [2, null] } return [2, L] } })) })) }; BaseProvider.prototype.getAvatar = function (T) { return I(this, void 0, void 0, (function () { var B, N, L, I, H, U, X, G, V, W; return J(this, (function (J) { switch (J.label) { case 0: B = null; if (!(0, Z.isHexString)(T)) return [3, 10]; N = this.formatter.address(T); L = N.substring(2).toLowerCase() + ".addr.reverse"; return [4, this._getResolver(L, "getAvatar")]; case 1: I = J.sent(); if (!I) { return [2, null] } B = new pf(this, I, L); J.label = 2; case 2: J.trys.push([2, 4, , 5]); return [4, B.getAvatar()]; case 3: H = J.sent(); if (H) { return [2, H.url] } return [3, 5]; case 4: U = J.sent(); if (U.code !== af.Logger.errors.CALL_EXCEPTION) { throw U } return [3, 5]; case 5: J.trys.push([5, 8, , 9]); G = _parseString; return [4, this.call({ to: I, data: "0x691f3431" + (0, q.namehash)(L).substring(2) })]; case 6: X = G.apply(void 0, [J.sent(), 0]); return [4, this.getResolver(X)]; case 7: B = J.sent(); return [3, 9]; case 8: V = J.sent(); if (V.code !== af.Logger.errors.CALL_EXCEPTION) { throw V } return [2, null]; case 9: return [3, 12]; case 10: return [4, this.getResolver(T)]; case 11: B = J.sent(); if (!B) { return [2, null] } J.label = 12; case 12: return [4, B.getAvatar()]; case 13: W = J.sent(); if (W == null) { return [2, null] } return [2, W.url] } })) })) }; BaseProvider.prototype.perform = function (T, B) { return of.throwError(T + " not implemented", af.Logger.errors.NOT_IMPLEMENTED, { operation: T }) }; BaseProvider.prototype._startEvent = function (T) { this.polling = this._events.filter((function (T) { return T.pollable() })).length > 0 }; BaseProvider.prototype._stopEvent = function (T) { this.polling = this._events.filter((function (T) { return T.pollable() })).length > 0 }; BaseProvider.prototype._addEventListener = function (T, B, N) { var L = new df(getEventTag(T), B, N); this._events.push(L); this._startEvent(L); return this }; BaseProvider.prototype.on = function (T, B) { return this._addEventListener(T, B, false) }; BaseProvider.prototype.once = function (T, B) { return this._addEventListener(T, B, true) }; BaseProvider.prototype.emit = function (T) { var B = this; var N = []; for (var L = 1; L < arguments.length; L++) { N[L - 1] = arguments[L] } var I = false; var J = []; var H = getEventTag(T); this._events = this._events.filter((function (T) { if (T.tag !== H) { return true } setTimeout((function () { T.listener.apply(B, N) }), 0); I = true; if (T.once) { J.push(T); return false } return true })); J.forEach((function (T) { B._stopEvent(T) })); return I }; BaseProvider.prototype.listenerCount = function (T) { if (!T) { return this._events.length } var B = getEventTag(T); return this._events.filter((function (T) { return T.tag === B })).length }; BaseProvider.prototype.listeners = function (T) { if (T == null) { return this._events.map((function (T) { return T.listener })) } var B = getEventTag(T); return this._events.filter((function (T) { return T.tag === B })).map((function (T) { return T.listener })) }; BaseProvider.prototype.off = function (T, B) { var N = this; if (B == null) { return this.removeAllListeners(T) } var L = []; var I = false; var J = getEventTag(T); this._events = this._events.filter((function (T) { if (T.tag !== J || T.listener != B) { return true } if (I) { return true } I = true; L.push(T); return false })); L.forEach((function (T) { N._stopEvent(T) })); return this }; BaseProvider.prototype.removeAllListeners = function (T) { var B = this; var N = []; if (T == null) { N = this._events; this._events = [] } else { var L = getEventTag(T); this._events = this._events.filter((function (T) { if (T.tag !== L) { return true } N.push(T); return false })) } N.forEach((function (T) { B._stopEvent(T) })); return this }; return BaseProvider }(U.Provider); B.BaseProvider = yf }, 3832: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); var I = this && this.__awaiter || function (T, B, N, L) { function adopt(T) { return T instanceof N ? T : new N((function (B) { B(T) })) } return new (N || (N = Promise))((function (N, I) { function fulfilled(T) { try { step(L.next(T)) } catch (T) { I(T) } } function rejected(T) { try { step(L["throw"](T)) } catch (T) { I(T) } } function step(T) { T.done ? N(T.value) : adopt(T.value).then(fulfilled, rejected) } step((L = L.apply(T, B || [])).next()) })) }; var J = this && this.__generator || function (T, B) { var N = { label: 0, sent: function () { if (J[0] & 1) throw J[1]; return J[1] }, trys: [], ops: [] }, L, I, J, H; return H = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (H[Symbol.iterator] = function () { return this }), H; function verb(T) { return function (B) { return step([T, B]) } } function step(H) { if (L) throw new TypeError("Generator is already executing."); while (N) try { if (L = 1, I && (J = H[0] & 2 ? I["return"] : H[0] ? I["throw"] || ((J = I["return"]) && J.call(I), 0) : I.next) && !(J = J.call(I, H[1])).done) return J; if (I = 0, J) H = [H[0] & 2, J.value]; switch (H[0]) { case 0: case 1: J = H; break; case 4: N.label++; return { value: H[1], done: false }; case 5: N.label++; I = H[1]; H = [0]; continue; case 7: H = N.ops.pop(); N.trys.pop(); continue; default: if (!(J = N.trys, J = J.length > 0 && J[J.length - 1]) && (H[0] === 6 || H[0] === 2)) { N = 0; continue } if (H[0] === 3 && (!J || H[1] > J[0] && H[1] < J[3])) { N.label = H[1]; break } if (H[0] === 6 && N.label < J[1]) { N.label = J[1]; J = H; break } if (J && N.label < J[2]) { N.label = J[2]; N.ops.push(H); break } if (J[2]) N.ops.pop(); N.trys.pop(); continue }H = B.call(T, N) } catch (T) { H = [6, T]; I = 0 } finally { L = J = 0 } if (H[0] & 5) throw H[1]; return { value: H[0] ? H[1] : void 0, done: true } } }; Object.defineProperty(B, "__esModule", { value: true }); B.CloudflareProvider = void 0; var H = N(6717); var U = N(6127); var X = N(5408); var G = new U.Logger(X.version); var V = function (T) { L(CloudflareProvider, T); function CloudflareProvider() { return T !== null && T.apply(this, arguments) || this } CloudflareProvider.getApiKey = function (T) { if (T != null) { G.throwArgumentError("apiKey not supported for cloudflare", "apiKey", T) } return null }; CloudflareProvider.getUrl = function (T, B) { var N = null; switch (T.name) { case "homestead": N = "https://cloudflare-eth.com/"; break; default: G.throwArgumentError("unsupported network", "network", arguments[0]) }return N }; CloudflareProvider.prototype.perform = function (B, N) { return I(this, void 0, void 0, (function () { var L; return J(this, (function (I) { switch (I.label) { case 0: if (!(B === "getBlockNumber")) return [3, 2]; return [4, T.prototype.perform.call(this, "getBlock", { blockTag: "latest" })]; case 1: L = I.sent(); return [2, L.number]; case 2: return [2, T.prototype.perform.call(this, B, N)] } })) })) }; return CloudflareProvider }(H.UrlJsonRpcProvider); B.CloudflareProvider = V }, 4814: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); var I = this && this.__awaiter || function (T, B, N, L) { function adopt(T) { return T instanceof N ? T : new N((function (B) { B(T) })) } return new (N || (N = Promise))((function (N, I) { function fulfilled(T) { try { step(L.next(T)) } catch (T) { I(T) } } function rejected(T) { try { step(L["throw"](T)) } catch (T) { I(T) } } function step(T) { T.done ? N(T.value) : adopt(T.value).then(fulfilled, rejected) } step((L = L.apply(T, B || [])).next()) })) }; var J = this && this.__generator || function (T, B) { var N = { label: 0, sent: function () { if (J[0] & 1) throw J[1]; return J[1] }, trys: [], ops: [] }, L, I, J, H; return H = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (H[Symbol.iterator] = function () { return this }), H; function verb(T) { return function (B) { return step([T, B]) } } function step(H) { if (L) throw new TypeError("Generator is already executing."); while (N) try { if (L = 1, I && (J = H[0] & 2 ? I["return"] : H[0] ? I["throw"] || ((J = I["return"]) && J.call(I), 0) : I.next) && !(J = J.call(I, H[1])).done) return J; if (I = 0, J) H = [H[0] & 2, J.value]; switch (H[0]) { case 0: case 1: J = H; break; case 4: N.label++; return { value: H[1], done: false }; case 5: N.label++; I = H[1]; H = [0]; continue; case 7: H = N.ops.pop(); N.trys.pop(); continue; default: if (!(J = N.trys, J = J.length > 0 && J[J.length - 1]) && (H[0] === 6 || H[0] === 2)) { N = 0; continue } if (H[0] === 3 && (!J || H[1] > J[0] && H[1] < J[3])) { N.label = H[1]; break } if (H[0] === 6 && N.label < J[1]) { N.label = J[1]; J = H; break } if (J && N.label < J[2]) { N.label = J[2]; N.ops.push(H); break } if (J[2]) N.ops.pop(); N.trys.pop(); continue }H = B.call(T, N) } catch (T) { H = [6, T]; I = 0 } finally { L = J = 0 } if (H[0] & 5) throw H[1]; return { value: H[0] ? H[1] : void 0, done: true } } }; Object.defineProperty(B, "__esModule", { value: true }); B.EtherscanProvider = void 0; var H = N(2006); var U = N(1338); var X = N(2394); var G = N(2239); var V = N(4293); var Z = N(6127); var W = N(5408); var q = new Z.Logger(W.version); var Q = N(8090); function getTransactionPostData(T) { var B = {}; for (var N in T) { if (T[N] == null) { continue } var L = T[N]; if (N === "type" && L === 0) { continue } if ({ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true }[N]) { L = (0, H.hexValue)((0, H.hexlify)(L)) } else if (N === "accessList") { L = "[" + (0, X.accessListify)(L).map((function (T) { return '{address:"' + T.address + '",storageKeys:["' + T.storageKeys.join('","') + '"]}' })).join(",") + "]" } else { L = (0, H.hexlify)(L) } B[N] = L } return B } function getResult(T) { if (T.status == 0 && (T.message === "No records found" || T.message === "No transactions found")) { return T.result } if (T.status != 1 || typeof T.message !== "string" || !T.message.match(/^OK/)) { var B = new Error("invalid response"); B.result = JSON.stringify(T); if ((T.result || "").toLowerCase().indexOf("rate limit") >= 0) { B.throttleRetry = true } throw B } return T.result } function getJsonResult(T) { if (T && T.status == 0 && T.message == "NOTOK" && (T.result || "").toLowerCase().indexOf("rate limit") >= 0) { var B = new Error("throttled response"); B.result = JSON.stringify(T); B.throttleRetry = true; throw B } if (T.jsonrpc != "2.0") { var B = new Error("invalid response"); B.result = JSON.stringify(T); throw B } if (T.error) { var B = new Error(T.error.message || "unknown error"); if (T.error.code) { B.code = T.error.code } if (T.error.data) { B.data = T.error.data } throw B } return T.result } function checkLogTag(T) { if (T === "pending") { throw new Error("pending not supported") } if (T === "latest") { return T } return parseInt(T.substring(2), 16) } function checkError(T, B, N) { if (T === "call" && B.code === Z.Logger.errors.SERVER_ERROR) { var L = B.error; if (L && (L.message.match(/reverted/i) || L.message.match(/VM execution error/i))) { var I = L.data; if (I) { I = "0x" + I.replace(/^.*0x/i, "") } if ((0, H.isHexString)(I)) { return I } q.throwError("missing revert data in call exception", Z.Logger.errors.CALL_EXCEPTION, { error: B, data: "0x" }) } } var J = B.message; if (B.code === Z.Logger.errors.SERVER_ERROR) { if (B.error && typeof B.error.message === "string") { J = B.error.message } else if (typeof B.body === "string") { J = B.body } else if (typeof B.responseText === "string") { J = B.responseText } } J = (J || "").toLowerCase(); if (J.match(/insufficient funds/)) { q.throwError("insufficient funds for intrinsic transaction cost", Z.Logger.errors.INSUFFICIENT_FUNDS, { error: B, method: T, transaction: N }) } if (J.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) { q.throwError("nonce has already been used", Z.Logger.errors.NONCE_EXPIRED, { error: B, method: T, transaction: N }) } if (J.match(/another transaction with same nonce/)) { q.throwError("replacement fee too low", Z.Logger.errors.REPLACEMENT_UNDERPRICED, { error: B, method: T, transaction: N }) } if (J.match(/execution failed due to an exception|execution reverted/)) { q.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", Z.Logger.errors.UNPREDICTABLE_GAS_LIMIT, { error: B, method: T, transaction: N }) } throw B } var Y = function (T) { L(EtherscanProvider, T); function EtherscanProvider(B, N) { var L = T.call(this, B) || this; (0, U.defineReadOnly)(L, "baseUrl", L.getBaseUrl()); (0, U.defineReadOnly)(L, "apiKey", N || null); return L } EtherscanProvider.prototype.getBaseUrl = function () { switch (this.network ? this.network.name : "invalid") { case "homestead": return "https://api.etherscan.io"; case "goerli": return "https://api-goerli.etherscan.io"; case "sepolia": return "https://api-sepolia.etherscan.io"; case "matic": return "https://api.polygonscan.com"; case "maticmum": return "https://api-testnet.polygonscan.com"; case "arbitrum": return "https://api.arbiscan.io"; case "arbitrum-goerli": return "https://api-goerli.arbiscan.io"; case "optimism": return "https://api-optimistic.etherscan.io"; case "optimism-goerli": return "https://api-goerli-optimistic.etherscan.io"; default: }return q.throwArgumentError("unsupported network", "network", this.network.name) }; EtherscanProvider.prototype.getUrl = function (T, B) { var N = Object.keys(B).reduce((function (T, N) { var L = B[N]; if (L != null) { T += "&" + N + "=" + L } return T }), ""); var L = this.apiKey ? "&apikey=" + this.apiKey : ""; return this.baseUrl + "/api?module=" + T + N + L }; EtherscanProvider.prototype.getPostUrl = function () { return this.baseUrl + "/api" }; EtherscanProvider.prototype.getPostData = function (T, B) { B.module = T; B.apikey = this.apiKey; return B }; EtherscanProvider.prototype.fetch = function (T, B, N) { return I(this, void 0, void 0, (function () { var L, I, H, X, Z, W; var q = this; return J(this, (function (J) { switch (J.label) { case 0: L = N ? this.getPostUrl() : this.getUrl(T, B); I = N ? this.getPostData(T, B) : null; H = T === "proxy" ? getJsonResult : getResult; this.emit("debug", { action: "request", request: L, provider: this }); X = { url: L, throttleSlotInterval: 1e3, throttleCallback: function (T, B) { if (q.isCommunityResource()) { (0, V.showThrottleMessage)() } return Promise.resolve(true) } }; Z = null; if (I) { X.headers = { "content-type": "application/x-www-form-urlencoded; charset=UTF-8" }; Z = Object.keys(I).map((function (T) { return T + "=" + I[T] })).join("&") } return [4, (0, G.fetchJson)(X, Z, H || getJsonResult)]; case 1: W = J.sent(); this.emit("debug", { action: "response", request: L, response: (0, U.deepCopy)(W), provider: this }); return [2, W] } })) })) }; EtherscanProvider.prototype.detectNetwork = function () { return I(this, void 0, void 0, (function () { return J(this, (function (T) { return [2, this.network] })) })) }; EtherscanProvider.prototype.perform = function (B, N) { return I(this, void 0, void 0, (function () { var L, I, H, I, U, X, G, V, W, Q, Y, ff, ef; return J(this, (function (J) { switch (J.label) { case 0: L = B; switch (L) { case "getBlockNumber": return [3, 1]; case "getGasPrice": return [3, 2]; case "getBalance": return [3, 3]; case "getTransactionCount": return [3, 4]; case "getCode": return [3, 5]; case "getStorageAt": return [3, 6]; case "sendTransaction": return [3, 7]; case "getBlock": return [3, 8]; case "getTransaction": return [3, 9]; case "getTransactionReceipt": return [3, 10]; case "call": return [3, 11]; case "estimateGas": return [3, 15]; case "getLogs": return [3, 19]; case "getEtherPrice": return [3, 26] }return [3, 28]; case 1: return [2, this.fetch("proxy", { action: "eth_blockNumber" })]; case 2: return [2, this.fetch("proxy", { action: "eth_gasPrice" })]; case 3: return [2, this.fetch("account", { action: "balance", address: N.address, tag: N.blockTag })]; case 4: return [2, this.fetch("proxy", { action: "eth_getTransactionCount", address: N.address, tag: N.blockTag })]; case 5: return [2, this.fetch("proxy", { action: "eth_getCode", address: N.address, tag: N.blockTag })]; case 6: return [2, this.fetch("proxy", { action: "eth_getStorageAt", address: N.address, position: N.position, tag: N.blockTag })]; case 7: return [2, this.fetch("proxy", { action: "eth_sendRawTransaction", hex: N.signedTransaction }, true).catch((function (T) { return checkError("sendTransaction", T, N.signedTransaction) }))]; case 8: if (N.blockTag) { return [2, this.fetch("proxy", { action: "eth_getBlockByNumber", tag: N.blockTag, boolean: N.includeTransactions ? "true" : "false" })] } throw new Error("getBlock by blockHash not implemented"); case 9: return [2, this.fetch("proxy", { action: "eth_getTransactionByHash", txhash: N.transactionHash })]; case 10: return [2, this.fetch("proxy", { action: "eth_getTransactionReceipt", txhash: N.transactionHash })]; case 11: if (N.blockTag !== "latest") { throw new Error("EtherscanProvider does not support blockTag for call") } I = getTransactionPostData(N.transaction); I.module = "proxy"; I.action = "eth_call"; J.label = 12; case 12: J.trys.push([12, 14, , 15]); return [4, this.fetch("proxy", I, true)]; case 13: return [2, J.sent()]; case 14: H = J.sent(); return [2, checkError("call", H, N.transaction)]; case 15: I = getTransactionPostData(N.transaction); I.module = "proxy"; I.action = "eth_estimateGas"; J.label = 16; case 16: J.trys.push([16, 18, , 19]); return [4, this.fetch("proxy", I, true)]; case 17: return [2, J.sent()]; case 18: U = J.sent(); return [2, checkError("estimateGas", U, N.transaction)]; case 19: X = { action: "getLogs" }; if (N.filter.fromBlock) { X.fromBlock = checkLogTag(N.filter.fromBlock) } if (N.filter.toBlock) { X.toBlock = checkLogTag(N.filter.toBlock) } if (N.filter.address) { X.address = N.filter.address } if (N.filter.topics && N.filter.topics.length > 0) { if (N.filter.topics.length > 1) { q.throwError("unsupported topic count", Z.Logger.errors.UNSUPPORTED_OPERATION, { topics: N.filter.topics }) } if (N.filter.topics.length === 1) { G = N.filter.topics[0]; if (typeof G !== "string" || G.length !== 66) { q.throwError("unsupported topic format", Z.Logger.errors.UNSUPPORTED_OPERATION, { topic0: G }) } X.topic0 = G } } return [4, this.fetch("logs", X)]; case 20: V = J.sent(); W = {}; Q = 0; J.label = 21; case 21: if (!(Q < V.length)) return [3, 25]; Y = V[Q]; if (Y.blockHash != null) { return [3, 24] } if (!(W[Y.blockNumber] == null)) return [3, 23]; return [4, this.getBlock(Y.blockNumber)]; case 22: ff = J.sent(); if (ff) { W[Y.blockNumber] = ff.hash } J.label = 23; case 23: Y.blockHash = W[Y.blockNumber]; J.label = 24; case 24: Q++; return [3, 21]; case 25: return [2, V]; case 26: if (this.network.name !== "homestead") { return [2, 0] } ef = parseFloat; return [4, this.fetch("stats", { action: "ethprice" })]; case 27: return [2, ef.apply(void 0, [J.sent().ethusd])]; case 28: return [3, 29]; case 29: return [2, T.prototype.perform.call(this, B, N)] } })) })) }; EtherscanProvider.prototype.getHistory = function (T, B, N) { return I(this, void 0, void 0, (function () { var L, I; var H; var U = this; return J(this, (function (J) { switch (J.label) { case 0: H = { action: "txlist" }; return [4, this.resolveName(T)]; case 1: L = (H.address = J.sent(), H.startblock = B == null ? 0 : B, H.endblock = N == null ? 99999999 : N, H.sort = "asc", H); return [4, this.fetch("account", L)]; case 2: I = J.sent(); return [2, I.map((function (T) { ["contractAddress", "to"].forEach((function (B) { if (T[B] == "") { delete T[B] } })); if (T.creates == null && T.contractAddress != null) { T.creates = T.contractAddress } var B = U.formatter.transactionResponse(T); if (T.timeStamp) { B.timestamp = parseInt(T.timeStamp) } return B }))] } })) })) }; EtherscanProvider.prototype.isCommunityResource = function () { return this.apiKey == null }; return EtherscanProvider }(Q.BaseProvider); B.EtherscanProvider = Y }, 6459: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); var I = this && this.__awaiter || function (T, B, N, L) { function adopt(T) { return T instanceof N ? T : new N((function (B) { B(T) })) } return new (N || (N = Promise))((function (N, I) { function fulfilled(T) { try { step(L.next(T)) } catch (T) { I(T) } } function rejected(T) { try { step(L["throw"](T)) } catch (T) { I(T) } } function step(T) { T.done ? N(T.value) : adopt(T.value).then(fulfilled, rejected) } step((L = L.apply(T, B || [])).next()) })) }; var J = this && this.__generator || function (T, B) { var N = { label: 0, sent: function () { if (J[0] & 1) throw J[1]; return J[1] }, trys: [], ops: [] }, L, I, J, H; return H = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (H[Symbol.iterator] = function () { return this }), H; function verb(T) { return function (B) { return step([T, B]) } } function step(H) { if (L) throw new TypeError("Generator is already executing."); while (N) try { if (L = 1, I && (J = H[0] & 2 ? I["return"] : H[0] ? I["throw"] || ((J = I["return"]) && J.call(I), 0) : I.next) && !(J = J.call(I, H[1])).done) return J; if (I = 0, J) H = [H[0] & 2, J.value]; switch (H[0]) { case 0: case 1: J = H; break; case 4: N.label++; return { value: H[1], done: false }; case 5: N.label++; I = H[1]; H = [0]; continue; case 7: H = N.ops.pop(); N.trys.pop(); continue; default: if (!(J = N.trys, J = J.length > 0 && J[J.length - 1]) && (H[0] === 6 || H[0] === 2)) { N = 0; continue } if (H[0] === 3 && (!J || H[1] > J[0] && H[1] < J[3])) { N.label = H[1]; break } if (H[0] === 6 && N.label < J[1]) { N.label = J[1]; J = H; break } if (J && N.label < J[2]) { N.label = J[2]; N.ops.push(H); break } if (J[2]) N.ops.pop(); N.trys.pop(); continue }H = B.call(T, N) } catch (T) { H = [6, T]; I = 0 } finally { L = J = 0 } if (H[0] & 5) throw H[1]; return { value: H[0] ? H[1] : void 0, done: true } } }; Object.defineProperty(B, "__esModule", { value: true }); B.FallbackProvider = void 0; var H = N(2825); var U = N(8202); var X = N(2006); var G = N(1338); var V = N(3728); var Z = N(2239); var W = N(8090); var q = N(4293); var Q = N(6127); var Y = N(5408); var ff = new Q.Logger(Y.version); function now() { return (new Date).getTime() } function checkNetworks(T) { var B = null; for (var N = 0; N < T.length; N++) { var L = T[N]; if (L == null) { return null } if (B) { if (!(B.name === L.name && B.chainId === L.chainId && (B.ensAddress === L.ensAddress || B.ensAddress == null && L.ensAddress == null))) { ff.throwArgumentError("provider mismatch", "networks", T) } } else { B = L } } return B } function median(T, B) { T = T.slice().sort(); var N = Math.floor(T.length / 2); if (T.length % 2) { return T[N] } var L = T[N - 1], I = T[N]; if (B != null && Math.abs(L - I) > B) { return null } return (L + I) / 2 } function serialize(T) { if (T === null) { return "null" } else if (typeof T === "number" || typeof T === "boolean") { return JSON.stringify(T) } else if (typeof T === "string") { return T } else if (U.BigNumber.isBigNumber(T)) { return T.toString() } else if (Array.isArray(T)) { return JSON.stringify(T.map((function (T) { return serialize(T) }))) } else if (typeof T === "object") { var B = Object.keys(T); B.sort(); return "{" + B.map((function (B) { var N = T[B]; if (typeof N === "function") { N = "[function]" } else { N = serialize(N) } return JSON.stringify(B) + ":" + N })).join(",") + "}" } throw new Error("unknown value type: " + typeof T) } var ef = 1; function stall(T) { var B = null; var N = null; var L = new Promise((function (L) { B = function () { if (N) { clearTimeout(N); N = null } L() }; N = setTimeout(B, T) })); var wait = function (T) { L = L.then(T); return L }; function getPromise() { return L } return { cancel: B, getPromise: getPromise, wait: wait } } var tf = [Q.Logger.errors.CALL_EXCEPTION, Q.Logger.errors.INSUFFICIENT_FUNDS, Q.Logger.errors.NONCE_EXPIRED, Q.Logger.errors.REPLACEMENT_UNDERPRICED, Q.Logger.errors.UNPREDICTABLE_GAS_LIMIT]; var rf = ["address", "args", "errorArgs", "errorSignature", "method", "transaction"]; function exposeDebugConfig(T, B) { var N = { weight: T.weight }; Object.defineProperty(N, "provider", { get: function () { return T.provider } }); if (T.start) { N.start = T.start } if (B) { N.duration = B - T.start } if (T.done) { if (T.error) { N.error = T.error } else { N.result = T.result || null } } return N } function normalizedTally(T, B) { return function (N) { var L = {}; N.forEach((function (B) { var N = T(B.result); if (!L[N]) { L[N] = { count: 0, result: B.result } } L[N].count++ })); var I = Object.keys(L); for (var J = 0; J < I.length; J++) { var H = L[I[J]]; if (H.count >= B) { return H.result } } return undefined } } function getProcessFunc(T, B, N) { var L = serialize; switch (B) { case "getBlockNumber": return function (B) { var N = B.map((function (T) { return T.result })); var L = median(B.map((function (T) { return T.result })), 2); if (L == null) { return undefined } L = Math.ceil(L); if (N.indexOf(L + 1) >= 0) { L++ } if (L >= T._highestBlockNumber) { T._highestBlockNumber = L } return T._highestBlockNumber }; case "getGasPrice": return function (T) { var B = T.map((function (T) { return T.result })); B.sort(); return B[Math.floor(B.length / 2)] }; case "getEtherPrice": return function (T) { return median(T.map((function (T) { return T.result }))) }; case "getBalance": case "getTransactionCount": case "getCode": case "getStorageAt": case "call": case "estimateGas": case "getLogs": break; case "getTransaction": case "getTransactionReceipt": L = function (T) { if (T == null) { return null } T = (0, G.shallowCopy)(T); T.confirmations = -1; return serialize(T) }; break; case "getBlock": if (N.includeTransactions) { L = function (T) { if (T == null) { return null } T = (0, G.shallowCopy)(T); T.transactions = T.transactions.map((function (T) { T = (0, G.shallowCopy)(T); T.confirmations = -1; return T })); return serialize(T) } } else { L = function (T) { if (T == null) { return null } return serialize(T) } } break; default: throw new Error("unknown method: " + B) }return normalizedTally(L, T.quorum) } function waitForSync(T, B) { return I(this, void 0, void 0, (function () { var N; return J(this, (function (L) { N = T.provider; if (N.blockNumber != null && N.blockNumber >= B || B === -1) { return [2, N] } return [2, (0, Z.poll)((function () { return new Promise((function (L, I) { setTimeout((function () { if (N.blockNumber >= B) { return L(N) } if (T.cancelled) { return L(null) } return L(undefined) }), 0) })) }), { oncePoll: N })] })) })) } function getRunner(T, B, N, L) { return I(this, void 0, void 0, (function () { var I, H, U; return J(this, (function (J) { switch (J.label) { case 0: I = T.provider; H = N; switch (H) { case "getBlockNumber": return [3, 1]; case "getGasPrice": return [3, 1]; case "getEtherPrice": return [3, 2]; case "getBalance": return [3, 3]; case "getTransactionCount": return [3, 3]; case "getCode": return [3, 3]; case "getStorageAt": return [3, 6]; case "getBlock": return [3, 9]; case "call": return [3, 12]; case "estimateGas": return [3, 12]; case "getTransaction": return [3, 15]; case "getTransactionReceipt": return [3, 15]; case "getLogs": return [3, 16] }return [3, 19]; case 1: return [2, I[N]()]; case 2: if (I.getEtherPrice) { return [2, I.getEtherPrice()] } return [3, 19]; case 3: if (!(L.blockTag && (0, X.isHexString)(L.blockTag))) return [3, 5]; return [4, waitForSync(T, B)]; case 4: I = J.sent(); J.label = 5; case 5: return [2, I[N](L.address, L.blockTag || "latest")]; case 6: if (!(L.blockTag && (0, X.isHexString)(L.blockTag))) return [3, 8]; return [4, waitForSync(T, B)]; case 7: I = J.sent(); J.label = 8; case 8: return [2, I.getStorageAt(L.address, L.position, L.blockTag || "latest")]; case 9: if (!(L.blockTag && (0, X.isHexString)(L.blockTag))) return [3, 11]; return [4, waitForSync(T, B)]; case 10: I = J.sent(); J.label = 11; case 11: return [2, I[L.includeTransactions ? "getBlockWithTransactions" : "getBlock"](L.blockTag || L.blockHash)]; case 12: if (!(L.blockTag && (0, X.isHexString)(L.blockTag))) return [3, 14]; return [4, waitForSync(T, B)]; case 13: I = J.sent(); J.label = 14; case 14: if (N === "call" && L.blockTag) { return [2, I[N](L.transaction, L.blockTag)] } return [2, I[N](L.transaction)]; case 15: return [2, I[N](L.transactionHash)]; case 16: U = L.filter; if (!(U.fromBlock && (0, X.isHexString)(U.fromBlock) || U.toBlock && (0, X.isHexString)(U.toBlock))) return [3, 18]; return [4, waitForSync(T, B)]; case 17: I = J.sent(); J.label = 18; case 18: return [2, I.getLogs(U)]; case 19: return [2, ff.throwError("unknown method error", Q.Logger.errors.UNKNOWN_ERROR, { method: N, params: L })] } })) })) } var af = function (T) { L(FallbackProvider, T); function FallbackProvider(B, N) { var L = this; if (B.length === 0) { ff.throwArgumentError("missing providers", "providers", B) } var I = B.map((function (T, B) { if (H.Provider.isProvider(T)) { var N = (0, q.isCommunityResource)(T) ? 2e3 : 750; var L = 1; return Object.freeze({ provider: T, weight: 1, stallTimeout: N, priority: L }) } var I = (0, G.shallowCopy)(T); if (I.priority == null) { I.priority = 1 } if (I.stallTimeout == null) { I.stallTimeout = (0, q.isCommunityResource)(T) ? 2e3 : 750 } if (I.weight == null) { I.weight = 1 } var J = I.weight; if (J % 1 || J > 512 || J < 1) { ff.throwArgumentError("invalid weight; must be integer in [1, 512]", "providers[" + B + "].weight", J) } return Object.freeze(I) })); var J = I.reduce((function (T, B) { return T + B.weight }), 0); if (N == null) { N = J / 2 } else if (N > J) { ff.throwArgumentError("quorum will always fail; larger than total weight", "quorum", N) } var U = checkNetworks(I.map((function (T) { return T.provider.network }))); if (U == null) { U = new Promise((function (T, B) { setTimeout((function () { L.detectNetwork().then(T, B) }), 0) })) } L = T.call(this, U) || this; (0, G.defineReadOnly)(L, "providerConfigs", Object.freeze(I)); (0, G.defineReadOnly)(L, "quorum", N); L._highestBlockNumber = -1; return L } FallbackProvider.prototype.detectNetwork = function () { return I(this, void 0, void 0, (function () { var T; return J(this, (function (B) { switch (B.label) { case 0: return [4, Promise.all(this.providerConfigs.map((function (T) { return T.provider.getNetwork() })))]; case 1: T = B.sent(); return [2, checkNetworks(T)] } })) })) }; FallbackProvider.prototype.perform = function (T, B) { return I(this, void 0, void 0, (function () { var N, L, I, H, U, X, Z, W, q, Y, af; var nf = this; return J(this, (function (of) { switch (of.label) { case 0: if (!(T === "sendTransaction")) return [3, 2]; return [4, Promise.all(this.providerConfigs.map((function (T) { return T.provider.sendTransaction(B.signedTransaction).then((function (T) { return T.hash }), (function (T) { return T })) })))]; case 1: N = of.sent(); for (L = 0; L < N.length; L++) { I = N[L]; if (typeof I === "string") { return [2, I] } } throw N[0]; case 2: if (!(this._highestBlockNumber === -1 && T !== "getBlockNumber")) return [3, 4]; return [4, this.getBlockNumber()]; case 3: of.sent(); of.label = 4; case 4: H = getProcessFunc(this, T, B); U = (0, V.shuffled)(this.providerConfigs.map(G.shallowCopy)); U.sort((function (T, B) { return T.priority - B.priority })); X = this._highestBlockNumber; Z = 0; W = true; q = function () { var N, L, I, V, q, Q, af; return J(this, (function (J) { switch (J.label) { case 0: N = now(); L = U.filter((function (T) { return T.runner && N - T.start < T.stallTimeout })).reduce((function (T, B) { return T + B.weight }), 0); I = function () { var N = U[Z++]; var I = ef++; N.start = now(); N.staller = stall(N.stallTimeout); N.staller.wait((function () { N.staller = null })); N.runner = getRunner(N, X, T, B).then((function (L) { N.done = true; N.result = L; if (nf.listenerCount("debug")) { nf.emit("debug", { action: "request", rid: I, backend: exposeDebugConfig(N, now()), request: { method: T, params: (0, G.deepCopy)(B) }, provider: nf }) } }), (function (L) { N.done = true; N.error = L; if (nf.listenerCount("debug")) { nf.emit("debug", { action: "request", rid: I, backend: exposeDebugConfig(N, now()), request: { method: T, params: (0, G.deepCopy)(B) }, provider: nf }) } })); if (Y.listenerCount("debug")) { Y.emit("debug", { action: "request", rid: I, backend: exposeDebugConfig(N, null), request: { method: T, params: (0, G.deepCopy)(B) }, provider: Y }) } L += N.weight }; while (L < Y.quorum && Z < U.length) { I() } V = []; U.forEach((function (T) { if (T.done || !T.runner) { return } V.push(T.runner); if (T.staller) { V.push(T.staller.getPromise()) } })); if (!V.length) return [3, 2]; return [4, Promise.race(V)]; case 1: J.sent(); J.label = 2; case 2: q = U.filter((function (T) { return T.done && T.error == null })); if (!(q.length >= Y.quorum)) return [3, 5]; Q = H(q); if (Q !== undefined) { U.forEach((function (T) { if (T.staller) { T.staller.cancel() } T.cancelled = true })); return [2, { value: Q }] } if (!!W) return [3, 4]; return [4, stall(100).getPromise()]; case 3: J.sent(); J.label = 4; case 4: W = false; J.label = 5; case 5: af = U.reduce((function (T, B) { if (!B.done || B.error == null) { return T } var N = B.error.code; if (tf.indexOf(N) >= 0) { if (!T[N]) { T[N] = { error: B.error, weight: 0 } } T[N].weight += B.weight } return T }), {}); Object.keys(af).forEach((function (T) { var B = af[T]; if (B.weight < nf.quorum) { return } U.forEach((function (T) { if (T.staller) { T.staller.cancel() } T.cancelled = true })); var N = B.error; var L = {}; rf.forEach((function (T) { if (N[T] == null) { return } L[T] = N[T] })); ff.throwError(N.reason || N.message, T, L) })); if (U.filter((function (T) { return !T.done })).length === 0) { return [2, "break"] } return [2] } })) }; Y = this; of.label = 5; case 5: if (false) { } return [5, q()]; case 6: af = of.sent(); if (typeof af === "object") return [2, af.value]; if (af === "break") return [3, 7]; return [3, 5]; case 7: U.forEach((function (T) { if (T.staller) { T.staller.cancel() } T.cancelled = true })); return [2, ff.throwError("failed to meet quorum", Q.Logger.errors.SERVER_ERROR, { method: T, params: B, results: U.map((function (T) { return exposeDebugConfig(T) })), provider: this })] } })) })) }; return FallbackProvider }(W.BaseProvider); B.FallbackProvider = af }, 4293: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.showThrottleMessage = B.isCommunityResource = B.isCommunityResourcable = B.Formatter = void 0; var L = N(5745); var I = N(8202); var J = N(2006); var H = N(9848); var U = N(1338); var X = N(2394); var G = N(6127); var V = N(5408); var Z = new G.Logger(V.version); var W = function () { function Formatter() { this.formats = this.getDefaultFormats() } Formatter.prototype.getDefaultFormats = function () { var T = this; var B = {}; var N = this.address.bind(this); var L = this.bigNumber.bind(this); var I = this.blockTag.bind(this); var J = this.data.bind(this); var H = this.hash.bind(this); var X = this.hex.bind(this); var G = this.number.bind(this); var V = this.type.bind(this); var strictData = function (B) { return T.data(B, true) }; B.transaction = { hash: H, type: V, accessList: Formatter.allowNull(this.accessList.bind(this), null), blockHash: Formatter.allowNull(H, null), blockNumber: Formatter.allowNull(G, null), transactionIndex: Formatter.allowNull(G, null), confirmations: Formatter.allowNull(G, null), from: N, gasPrice: Formatter.allowNull(L), maxPriorityFeePerGas: Formatter.allowNull(L), maxFeePerGas: Formatter.allowNull(L), gasLimit: L, to: Formatter.allowNull(N, null), value: L, nonce: G, data: J, r: Formatter.allowNull(this.uint256), s: Formatter.allowNull(this.uint256), v: Formatter.allowNull(G), creates: Formatter.allowNull(N, null), raw: Formatter.allowNull(J) }; B.transactionRequest = { from: Formatter.allowNull(N), nonce: Formatter.allowNull(G), gasLimit: Formatter.allowNull(L), gasPrice: Formatter.allowNull(L), maxPriorityFeePerGas: Formatter.allowNull(L), maxFeePerGas: Formatter.allowNull(L), to: Formatter.allowNull(N), value: Formatter.allowNull(L), data: Formatter.allowNull(strictData), type: Formatter.allowNull(G), accessList: Formatter.allowNull(this.accessList.bind(this), null) }; B.receiptLog = { transactionIndex: G, blockNumber: G, transactionHash: H, address: N, topics: Formatter.arrayOf(H), data: J, logIndex: G, blockHash: H }; B.receipt = { to: Formatter.allowNull(this.address, null), from: Formatter.allowNull(this.address, null), contractAddress: Formatter.allowNull(N, null), transactionIndex: G, root: Formatter.allowNull(X), gasUsed: L, logsBloom: Formatter.allowNull(J), blockHash: H, transactionHash: H, logs: Formatter.arrayOf(this.receiptLog.bind(this)), blockNumber: G, confirmations: Formatter.allowNull(G, null), cumulativeGasUsed: L, effectiveGasPrice: Formatter.allowNull(L), status: Formatter.allowNull(G), type: V }; B.block = { hash: Formatter.allowNull(H), parentHash: H, number: G, timestamp: G, nonce: Formatter.allowNull(X), difficulty: this.difficulty.bind(this), gasLimit: L, gasUsed: L, miner: Formatter.allowNull(N), extraData: J, transactions: Formatter.allowNull(Formatter.arrayOf(H)), baseFeePerGas: Formatter.allowNull(L) }; B.blockWithTransactions = (0, U.shallowCopy)(B.block); B.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this))); B.filter = { fromBlock: Formatter.allowNull(I, undefined), toBlock: Formatter.allowNull(I, undefined), blockHash: Formatter.allowNull(H, undefined), address: Formatter.allowNull(N, undefined), topics: Formatter.allowNull(this.topics.bind(this), undefined) }; B.filterLog = { blockNumber: Formatter.allowNull(G), blockHash: Formatter.allowNull(H), transactionIndex: G, removed: Formatter.allowNull(this.boolean.bind(this)), address: N, data: Formatter.allowFalsish(J, "0x"), topics: Formatter.arrayOf(H), transactionHash: H, logIndex: G }; return B }; Formatter.prototype.accessList = function (T) { return (0, X.accessListify)(T || []) }; Formatter.prototype.number = function (T) { if (T === "0x") { return 0 } return I.BigNumber.from(T).toNumber() }; Formatter.prototype.type = function (T) { if (T === "0x" || T == null) { return 0 } return I.BigNumber.from(T).toNumber() }; Formatter.prototype.bigNumber = function (T) { return I.BigNumber.from(T) }; Formatter.prototype.boolean = function (T) { if (typeof T === "boolean") { return T } if (typeof T === "string") { T = T.toLowerCase(); if (T === "true") { return true } if (T === "false") { return false } } throw new Error("invalid boolean - " + T) }; Formatter.prototype.hex = function (T, B) { if (typeof T === "string") { if (!B && T.substring(0, 2) !== "0x") { T = "0x" + T } if ((0, J.isHexString)(T)) { return T.toLowerCase() } } return Z.throwArgumentError("invalid hash", "value", T) }; Formatter.prototype.data = function (T, B) { var N = this.hex(T, B); if (N.length % 2 !== 0) { throw new Error("invalid data; odd-length - " + T) } return N }; Formatter.prototype.address = function (T) { return (0, L.getAddress)(T) }; Formatter.prototype.callAddress = function (T) { if (!(0, J.isHexString)(T, 32)) { return null } var B = (0, L.getAddress)((0, J.hexDataSlice)(T, 12)); return B === H.AddressZero ? null : B }; Formatter.prototype.contractAddress = function (T) { return (0, L.getContractAddress)(T) }; Formatter.prototype.blockTag = function (T) { if (T == null) { return "latest" } if (T === "earliest") { return "0x0" } switch (T) { case "earliest": return "0x0"; case "latest": case "pending": case "safe": case "finalized": return T }if (typeof T === "number" || (0, J.isHexString)(T)) { return (0, J.hexValue)(T) } throw new Error("invalid blockTag") }; Formatter.prototype.hash = function (T, B) { var N = this.hex(T, B); if ((0, J.hexDataLength)(N) !== 32) { return Z.throwArgumentError("invalid hash", "value", T) } return N }; Formatter.prototype.difficulty = function (T) { if (T == null) { return null } var B = I.BigNumber.from(T); try { return B.toNumber() } catch (T) { } return null }; Formatter.prototype.uint256 = function (T) { if (!(0, J.isHexString)(T)) { throw new Error("invalid uint256") } return (0, J.hexZeroPad)(T, 32) }; Formatter.prototype._block = function (T, B) { if (T.author != null && T.miner == null) { T.miner = T.author } var N = T._difficulty != null ? T._difficulty : T.difficulty; var L = Formatter.check(B, T); L._difficulty = N == null ? null : I.BigNumber.from(N); return L }; Formatter.prototype.block = function (T) { return this._block(T, this.formats.block) }; Formatter.prototype.blockWithTransactions = function (T) { return this._block(T, this.formats.blockWithTransactions) }; Formatter.prototype.transactionRequest = function (T) { return Formatter.check(this.formats.transactionRequest, T) }; Formatter.prototype.transactionResponse = function (T) { if (T.gas != null && T.gasLimit == null) { T.gasLimit = T.gas } if (T.to && I.BigNumber.from(T.to).isZero()) { T.to = "0x0000000000000000000000000000000000000000" } if (T.input != null && T.data == null) { T.data = T.input } if (T.to == null && T.creates == null) { T.creates = this.contractAddress(T) } if ((T.type === 1 || T.type === 2) && T.accessList == null) { T.accessList = [] } var B = Formatter.check(this.formats.transaction, T); if (T.chainId != null) { var N = T.chainId; if ((0, J.isHexString)(N)) { N = I.BigNumber.from(N).toNumber() } B.chainId = N } else { var N = T.networkId; if (N == null && B.v == null) { N = T.chainId } if ((0, J.isHexString)(N)) { N = I.BigNumber.from(N).toNumber() } if (typeof N !== "number" && B.v != null) { N = (B.v - 35) / 2; if (N < 0) { N = 0 } N = parseInt(N) } if (typeof N !== "number") { N = 0 } B.chainId = N } if (B.blockHash && B.blockHash.replace(/0/g, "") === "x") { B.blockHash = null } return B }; Formatter.prototype.transaction = function (T) { return (0, X.parse)(T) }; Formatter.prototype.receiptLog = function (T) { return Formatter.check(this.formats.receiptLog, T) }; Formatter.prototype.receipt = function (T) { var B = Formatter.check(this.formats.receipt, T); if (B.root != null) { if (B.root.length <= 4) { var N = I.BigNumber.from(B.root).toNumber(); if (N === 0 || N === 1) { if (B.status != null && B.status !== N) { Z.throwArgumentError("alt-root-status/status mismatch", "value", { root: B.root, status: B.status }) } B.status = N; delete B.root } else { Z.throwArgumentError("invalid alt-root-status", "value.root", B.root) } } else if (B.root.length !== 66) { Z.throwArgumentError("invalid root hash", "value.root", B.root) } } if (B.status != null) { B.byzantium = true } return B }; Formatter.prototype.topics = function (T) { var B = this; if (Array.isArray(T)) { return T.map((function (T) { return B.topics(T) })) } else if (T != null) { return this.hash(T, true) } return null }; Formatter.prototype.filter = function (T) { return Formatter.check(this.formats.filter, T) }; Formatter.prototype.filterLog = function (T) { return Formatter.check(this.formats.filterLog, T) }; Formatter.check = function (T, B) { var N = {}; for (var L in T) { try { var I = T[L](B[L]); if (I !== undefined) { N[L] = I } } catch (T) { T.checkKey = L; T.checkValue = B[L]; throw T } } return N }; Formatter.allowNull = function (T, B) { return function (N) { if (N == null) { return B } return T(N) } }; Formatter.allowFalsish = function (T, B) { return function (N) { if (!N) { return B } return T(N) } }; Formatter.arrayOf = function (T) { return function (B) { if (!Array.isArray(B)) { throw new Error("not an array") } var N = []; B.forEach((function (B) { N.push(T(B)) })); return N } }; return Formatter }(); B.Formatter = W; function isCommunityResourcable(T) { return T && typeof T.isCommunityResource === "function" } B.isCommunityResourcable = isCommunityResourcable; function isCommunityResource(T) { return isCommunityResourcable(T) && T.isCommunityResource() } B.isCommunityResource = isCommunityResource; var q = false; function showThrottleMessage() { if (q) { return } q = true; console.log("========= NOTICE ========="); console.log("Request-Rate Exceeded  (this message will not be repeated)"); console.log(""); console.log("The default API keys for each service are provided as a highly-throttled,"); console.log("community resource for low-traffic projects and early prototyping."); console.log(""); console.log("While your application will continue to function, we highly recommended"); console.log("signing up for your own API keys to improve performance, increase your"); console.log("request rate/limit and enable other perks, such as metrics and advanced APIs."); console.log(""); console.log("For more details: https://docs.ethers.io/api-keys/"); console.log("==========================") } B.showThrottleMessage = showThrottleMessage }, 4983: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.Formatter = B.showThrottleMessage = B.isCommunityResourcable = B.isCommunityResource = B.getNetwork = B.getDefaultProvider = B.JsonRpcSigner = B.IpcProvider = B.WebSocketProvider = B.Web3Provider = B.StaticJsonRpcProvider = B.QuickNodeProvider = B.PocketProvider = B.NodesmithProvider = B.JsonRpcBatchProvider = B.JsonRpcProvider = B.InfuraWebSocketProvider = B.InfuraProvider = B.EtherscanProvider = B.CloudflareProvider = B.AnkrProvider = B.AlchemyWebSocketProvider = B.AlchemyProvider = B.FallbackProvider = B.UrlJsonRpcProvider = B.Resolver = B.BaseProvider = B.Provider = void 0; var L = N(2825); Object.defineProperty(B, "Provider", { enumerable: true, get: function () { return L.Provider } }); var I = N(3044); Object.defineProperty(B, "getNetwork", { enumerable: true, get: function () { return I.getNetwork } }); var J = N(8090); Object.defineProperty(B, "BaseProvider", { enumerable: true, get: function () { return J.BaseProvider } }); Object.defineProperty(B, "Resolver", { enumerable: true, get: function () { return J.Resolver } }); var H = N(5372); Object.defineProperty(B, "AlchemyProvider", { enumerable: true, get: function () { return H.AlchemyProvider } }); Object.defineProperty(B, "AlchemyWebSocketProvider", { enumerable: true, get: function () { return H.AlchemyWebSocketProvider } }); var U = N(2319); Object.defineProperty(B, "AnkrProvider", { enumerable: true, get: function () { return U.AnkrProvider } }); var X = N(3832); Object.defineProperty(B, "CloudflareProvider", { enumerable: true, get: function () { return X.CloudflareProvider } }); var G = N(4814); Object.defineProperty(B, "EtherscanProvider", { enumerable: true, get: function () { return G.EtherscanProvider } }); var V = N(6459); Object.defineProperty(B, "FallbackProvider", { enumerable: true, get: function () { return V.FallbackProvider } }); var Z = N(4443); Object.defineProperty(B, "IpcProvider", { enumerable: true, get: function () { return Z.IpcProvider } }); var W = N(5936); Object.defineProperty(B, "InfuraProvider", { enumerable: true, get: function () { return W.InfuraProvider } }); Object.defineProperty(B, "InfuraWebSocketProvider", { enumerable: true, get: function () { return W.InfuraWebSocketProvider } }); var q = N(697); Object.defineProperty(B, "JsonRpcProvider", { enumerable: true, get: function () { return q.JsonRpcProvider } }); Object.defineProperty(B, "JsonRpcSigner", { enumerable: true, get: function () { return q.JsonRpcSigner } }); var Q = N(5802); Object.defineProperty(B, "JsonRpcBatchProvider", { enumerable: true, get: function () { return Q.JsonRpcBatchProvider } }); var Y = N(2572); Object.defineProperty(B, "NodesmithProvider", { enumerable: true, get: function () { return Y.NodesmithProvider } }); var ff = N(9663); Object.defineProperty(B, "PocketProvider", { enumerable: true, get: function () { return ff.PocketProvider } }); var ef = N(8932); Object.defineProperty(B, "QuickNodeProvider", { enumerable: true, get: function () { return ef.QuickNodeProvider } }); var tf = N(6717); Object.defineProperty(B, "StaticJsonRpcProvider", { enumerable: true, get: function () { return tf.StaticJsonRpcProvider } }); Object.defineProperty(B, "UrlJsonRpcProvider", { enumerable: true, get: function () { return tf.UrlJsonRpcProvider } }); var rf = N(9676); Object.defineProperty(B, "Web3Provider", { enumerable: true, get: function () { return rf.Web3Provider } }); var af = N(3607); Object.defineProperty(B, "WebSocketProvider", { enumerable: true, get: function () { return af.WebSocketProvider } }); var nf = N(4293); Object.defineProperty(B, "Formatter", { enumerable: true, get: function () { return nf.Formatter } }); Object.defineProperty(B, "isCommunityResourcable", { enumerable: true, get: function () { return nf.isCommunityResourcable } }); Object.defineProperty(B, "isCommunityResource", { enumerable: true, get: function () { return nf.isCommunityResource } }); Object.defineProperty(B, "showThrottleMessage", { enumerable: true, get: function () { return nf.showThrottleMessage } }); var of = N(6127); var sf = N(5408); var cf = new of.Logger(sf.version); function getDefaultProvider(T, B) { if (T == null) { T = "homestead" } if (typeof T === "string") { var N = T.match(/^(ws|http)s?:/i); if (N) { switch (N[1].toLowerCase()) { case "http": case "https": return new q.JsonRpcProvider(T); case "ws": case "wss": return new af.WebSocketProvider(T); default: cf.throwArgumentError("unsupported URL scheme", "network", T) } } } var L = (0, I.getNetwork)(T); if (!L || !L._defaultProvider) { cf.throwError("unsupported getDefaultProvider network", of.Logger.errors.NETWORK_ERROR, { operation: "getDefaultProvider", network: T }) } return L._defaultProvider({ FallbackProvider: V.FallbackProvider, AlchemyProvider: H.AlchemyProvider, AnkrProvider: U.AnkrProvider, CloudflareProvider: X.CloudflareProvider, EtherscanProvider: G.EtherscanProvider, InfuraProvider: W.InfuraProvider, JsonRpcProvider: q.JsonRpcProvider, NodesmithProvider: Y.NodesmithProvider, PocketProvider: ff.PocketProvider, QuickNodeProvider: ef.QuickNodeProvider, Web3Provider: rf.Web3Provider, IpcProvider: Z.IpcProvider }, B) } B.getDefaultProvider = getDefaultProvider }, 5936: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.InfuraProvider = B.InfuraWebSocketProvider = void 0; var I = N(1338); var J = N(3607); var H = N(4293); var U = N(6127); var X = N(5408); var G = new U.Logger(X.version); var V = N(6717); var Z = "84842078b09946638c03157f83405213"; var W = function (T) { L(InfuraWebSocketProvider, T); function InfuraWebSocketProvider(B, N) { var L = this; var J = new q(B, N); var H = J.connection; if (H.password) { G.throwError("INFURA WebSocket project secrets unsupported", U.Logger.errors.UNSUPPORTED_OPERATION, { operation: "InfuraProvider.getWebSocketProvider()" }) } var X = H.url.replace(/^http/i, "ws").replace("/v3/", "/ws/v3/"); L = T.call(this, X, B) || this; (0, I.defineReadOnly)(L, "apiKey", J.projectId); (0, I.defineReadOnly)(L, "projectId", J.projectId); (0, I.defineReadOnly)(L, "projectSecret", J.projectSecret); return L } InfuraWebSocketProvider.prototype.isCommunityResource = function () { return this.projectId === Z }; return InfuraWebSocketProvider }(J.WebSocketProvider); B.InfuraWebSocketProvider = W; var q = function (T) { L(InfuraProvider, T); function InfuraProvider() { return T !== null && T.apply(this, arguments) || this } InfuraProvider.getWebSocketProvider = function (T, B) { return new W(T, B) }; InfuraProvider.getApiKey = function (T) { var B = { apiKey: Z, projectId: Z, projectSecret: null }; if (T == null) { return B } if (typeof T === "string") { B.projectId = T } else if (T.projectSecret != null) { G.assertArgument(typeof T.projectId === "string", "projectSecret requires a projectId", "projectId", T.projectId); G.assertArgument(typeof T.projectSecret === "string", "invalid projectSecret", "projectSecret", "[REDACTED]"); B.projectId = T.projectId; B.projectSecret = T.projectSecret } else if (T.projectId) { B.projectId = T.projectId } B.apiKey = B.projectId; return B }; InfuraProvider.getUrl = function (T, B) { var N = null; switch (T ? T.name : "unknown") { case "homestead": N = "mainnet.infura.io"; break; case "goerli": N = "goerli.infura.io"; break; case "sepolia": N = "sepolia.infura.io"; break; case "matic": N = "polygon-mainnet.infura.io"; break; case "maticmum": N = "polygon-mumbai.infura.io"; break; case "optimism": N = "optimism-mainnet.infura.io"; break; case "optimism-goerli": N = "optimism-goerli.infura.io"; break; case "optimism-sepolia": N = "optimism-sepolia.infura.io"; break; case "arbitrum": N = "arbitrum-mainnet.infura.io"; break; case "arbitrum-goerli": N = "arbitrum-goerli.infura.io"; break; case "arbitrum-sepolia": N = "arbitrum-sepolia.infura.io"; break; default: G.throwError("unsupported network", U.Logger.errors.INVALID_ARGUMENT, { argument: "network", value: T }) }var L = { allowGzip: true, url: "https:/" + "/" + N + "/v3/" + B.projectId, throttleCallback: function (T, N) { if (B.projectId === Z) { (0, H.showThrottleMessage)() } return Promise.resolve(true) } }; if (B.projectSecret != null) { L.user = ""; L.password = B.projectSecret } return L }; InfuraProvider.prototype.isCommunityResource = function () { return this.projectId === Z }; return InfuraProvider }(V.UrlJsonRpcProvider); B.InfuraProvider = q }, 4443: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.IpcProvider = void 0; var I = N(9278); var J = N(1338); var H = N(6127); var U = N(5408); var X = new H.Logger(U.version); var G = N(697); var V = function (T) { L(IpcProvider, T); function IpcProvider(B, N) { var L = this; if (B == null) { X.throwError("missing path", H.Logger.errors.MISSING_ARGUMENT, { arg: "path" }) } L = T.call(this, "ipc://" + B, N) || this; (0, J.defineReadOnly)(L, "path", B); return L } IpcProvider.prototype.send = function (T, B) { var N = this; var L = JSON.stringify({ method: T, params: B, id: 42, jsonrpc: "2.0" }); return new Promise((function (T, B) { var J = Buffer.alloc(0); var H = (0, I.connect)(N.path); H.on("data", (function (T) { J = Buffer.concat([J, T]) })); H.on("end", (function () { try { T(JSON.parse(J.toString()).result); H.destroy() } catch (T) { B(T); H.destroy() } })); H.on("error", (function (T) { B(T); H.destroy() })); H.write(L); H.end() })) }; return IpcProvider }(G.JsonRpcProvider); B.IpcProvider = V }, 5802: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.JsonRpcBatchProvider = void 0; var I = N(1338); var J = N(2239); var H = N(697); var U = function (T) { L(JsonRpcBatchProvider, T); function JsonRpcBatchProvider() { return T !== null && T.apply(this, arguments) || this } JsonRpcBatchProvider.prototype.send = function (T, B) { var N = this; var L = { method: T, params: B, id: this._nextId++, jsonrpc: "2.0" }; if (this._pendingBatch == null) { this._pendingBatch = [] } var H = { request: L, resolve: null, reject: null }; var U = new Promise((function (T, B) { H.resolve = T; H.reject = B })); this._pendingBatch.push(H); if (!this._pendingBatchAggregator) { this._pendingBatchAggregator = setTimeout((function () { var T = N._pendingBatch; N._pendingBatch = null; N._pendingBatchAggregator = null; var B = T.map((function (T) { return T.request })); N.emit("debug", { action: "requestBatch", request: (0, I.deepCopy)(B), provider: N }); return (0, J.fetchJson)(N.connection, JSON.stringify(B)).then((function (L) { N.emit("debug", { action: "response", request: B, response: L, provider: N }); T.forEach((function (T, B) { var N = L[B]; if (N.error) { var I = new Error(N.error.message); I.code = N.error.code; I.data = N.error.data; T.reject(I) } else { T.resolve(N.result) } })) }), (function (L) { N.emit("debug", { action: "response", error: L, request: B, provider: N }); T.forEach((function (T) { T.reject(L) })) })) }), 10) } return U }; return JsonRpcBatchProvider }(H.JsonRpcProvider); B.JsonRpcBatchProvider = U }, 697: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); var I = this && this.__awaiter || function (T, B, N, L) { function adopt(T) { return T instanceof N ? T : new N((function (B) { B(T) })) } return new (N || (N = Promise))((function (N, I) { function fulfilled(T) { try { step(L.next(T)) } catch (T) { I(T) } } function rejected(T) { try { step(L["throw"](T)) } catch (T) { I(T) } } function step(T) { T.done ? N(T.value) : adopt(T.value).then(fulfilled, rejected) } step((L = L.apply(T, B || [])).next()) })) }; var J = this && this.__generator || function (T, B) { var N = { label: 0, sent: function () { if (J[0] & 1) throw J[1]; return J[1] }, trys: [], ops: [] }, L, I, J, H; return H = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (H[Symbol.iterator] = function () { return this }), H; function verb(T) { return function (B) { return step([T, B]) } } function step(H) { if (L) throw new TypeError("Generator is already executing."); while (N) try { if (L = 1, I && (J = H[0] & 2 ? I["return"] : H[0] ? I["throw"] || ((J = I["return"]) && J.call(I), 0) : I.next) && !(J = J.call(I, H[1])).done) return J; if (I = 0, J) H = [H[0] & 2, J.value]; switch (H[0]) { case 0: case 1: J = H; break; case 4: N.label++; return { value: H[1], done: false }; case 5: N.label++; I = H[1]; H = [0]; continue; case 7: H = N.ops.pop(); N.trys.pop(); continue; default: if (!(J = N.trys, J = J.length > 0 && J[J.length - 1]) && (H[0] === 6 || H[0] === 2)) { N = 0; continue } if (H[0] === 3 && (!J || H[1] > J[0] && H[1] < J[3])) { N.label = H[1]; break } if (H[0] === 6 && N.label < J[1]) { N.label = J[1]; J = H; break } if (J && N.label < J[2]) { N.label = J[2]; N.ops.push(H); break } if (J[2]) N.ops.pop(); N.trys.pop(); continue }H = B.call(T, N) } catch (T) { H = [6, T]; I = 0 } finally { L = J = 0 } if (H[0] & 5) throw H[1]; return { value: H[0] ? H[1] : void 0, done: true } } }; Object.defineProperty(B, "__esModule", { value: true }); B.JsonRpcProvider = B.JsonRpcSigner = void 0; var H = N(3870); var U = N(8202); var X = N(2006); var G = N(1839); var V = N(1338); var Z = N(3859); var W = N(2394); var q = N(2239); var Q = N(6127); var Y = N(5408); var ff = new Q.Logger(Y.version); var ef = N(8090); var tf = ["call", "estimateGas"]; function spelunk(T, B) { if (T == null) { return null } if (typeof T.message === "string" && T.message.match("reverted")) { var N = (0, X.isHexString)(T.data) ? T.data : null; if (!B || N) { return { message: T.message, data: N } } } if (typeof T === "object") { for (var L in T) { var I = spelunk(T[L], B); if (I) { return I } } return null } if (typeof T === "string") { try { return spelunk(JSON.parse(T), B) } catch (T) { } } return null } function checkError(T, B, N) { var L = N.transaction || N.signedTransaction; if (T === "call") { var I = spelunk(B, true); if (I) { return I.data } ff.throwError("missing revert data in call exception; Transaction reverted without a reason string", Q.Logger.errors.CALL_EXCEPTION, { data: "0x", transaction: L, error: B }) } if (T === "estimateGas") { var I = spelunk(B.body, false); if (I == null) { I = spelunk(B, false) } if (I) { ff.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", Q.Logger.errors.UNPREDICTABLE_GAS_LIMIT, { reason: I.message, method: T, transaction: L, error: B }) } } var J = B.message; if (B.code === Q.Logger.errors.SERVER_ERROR && B.error && typeof B.error.message === "string") { J = B.error.message } else if (typeof B.body === "string") { J = B.body } else if (typeof B.responseText === "string") { J = B.responseText } J = (J || "").toLowerCase(); if (J.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i)) { ff.throwError("insufficient funds for intrinsic transaction cost", Q.Logger.errors.INSUFFICIENT_FUNDS, { error: B, method: T, transaction: L }) } if (J.match(/nonce (is )?too low/i)) { ff.throwError("nonce has already been used", Q.Logger.errors.NONCE_EXPIRED, { error: B, method: T, transaction: L }) } if (J.match(/replacement transaction underpriced|transaction gas price.*too low/i)) { ff.throwError("replacement fee too low", Q.Logger.errors.REPLACEMENT_UNDERPRICED, { error: B, method: T, transaction: L }) } if (J.match(/only replay-protected/i)) { ff.throwError("legacy pre-eip-155 transactions not supported", Q.Logger.errors.UNSUPPORTED_OPERATION, { error: B, method: T, transaction: L }) } if (tf.indexOf(T) >= 0 && J.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/)) { ff.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", Q.Logger.errors.UNPREDICTABLE_GAS_LIMIT, { error: B, method: T, transaction: L }) } throw B } function timer(T) { return new Promise((function (B) { setTimeout(B, T) })) } function getResult(T) { if (T.error) { var B = new Error(T.error.message); B.code = T.error.code; B.data = T.error.data; throw B } return T.result } function getLowerCase(T) { if (T) { return T.toLowerCase() } return T } var rf = {}; var af = function (T) { L(JsonRpcSigner, T); function JsonRpcSigner(B, N, L) { var I = T.call(this) || this; if (B !== rf) { throw new Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner") } (0, V.defineReadOnly)(I, "provider", N); if (L == null) { L = 0 } if (typeof L === "string") { (0, V.defineReadOnly)(I, "_address", I.provider.formatter.address(L)); (0, V.defineReadOnly)(I, "_index", null) } else if (typeof L === "number") { (0, V.defineReadOnly)(I, "_index", L); (0, V.defineReadOnly)(I, "_address", null) } else { ff.throwArgumentError("invalid address or index", "addressOrIndex", L) } return I } JsonRpcSigner.prototype.connect = function (T) { return ff.throwError("cannot alter JSON-RPC Signer connection", Q.Logger.errors.UNSUPPORTED_OPERATION, { operation: "connect" }) }; JsonRpcSigner.prototype.connectUnchecked = function () { return new nf(rf, this.provider, this._address || this._index) }; JsonRpcSigner.prototype.getAddress = function () { var T = this; if (this._address) { return Promise.resolve(this._address) } return this.provider.send("eth_accounts", []).then((function (B) { if (B.length <= T._index) { ff.throwError("unknown account #" + T._index, Q.Logger.errors.UNSUPPORTED_OPERATION, { operation: "getAddress" }) } return T.provider.formatter.address(B[T._index]) })) }; JsonRpcSigner.prototype.sendUncheckedTransaction = function (T) { var B = this; T = (0, V.shallowCopy)(T); var N = this.getAddress().then((function (T) { if (T) { T = T.toLowerCase() } return T })); if (T.gasLimit == null) { var L = (0, V.shallowCopy)(T); L.from = N; T.gasLimit = this.provider.estimateGas(L) } if (T.to != null) { T.to = Promise.resolve(T.to).then((function (T) { return I(B, void 0, void 0, (function () { var B; return J(this, (function (N) { switch (N.label) { case 0: if (T == null) { return [2, null] } return [4, this.provider.resolveName(T)]; case 1: B = N.sent(); if (B == null) { ff.throwArgumentError("provided ENS name resolves to null", "tx.to", T) } return [2, B] } })) })) })) } return (0, V.resolveProperties)({ tx: (0, V.resolveProperties)(T), sender: N }).then((function (N) { var L = N.tx, I = N.sender; if (L.from != null) { if (L.from.toLowerCase() !== I) { ff.throwArgumentError("from address mismatch", "transaction", T) } } else { L.from = I } var J = B.provider.constructor.hexlifyTransaction(L, { from: true }); return B.provider.send("eth_sendTransaction", [J]).then((function (T) { return T }), (function (T) { if (typeof T.message === "string" && T.message.match(/user denied/i)) { ff.throwError("user rejected transaction", Q.Logger.errors.ACTION_REJECTED, { action: "sendTransaction", transaction: L }) } return checkError("sendTransaction", T, J) })) })) }; JsonRpcSigner.prototype.signTransaction = function (T) { return ff.throwError("signing transactions is unsupported", Q.Logger.errors.UNSUPPORTED_OPERATION, { operation: "signTransaction" }) }; JsonRpcSigner.prototype.sendTransaction = function (T) { return I(this, void 0, void 0, (function () { var B, N, L; var H = this; return J(this, (function (U) { switch (U.label) { case 0: return [4, this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval)]; case 1: B = U.sent(); return [4, this.sendUncheckedTransaction(T)]; case 2: N = U.sent(); U.label = 3; case 3: U.trys.push([3, 5, , 6]); return [4, (0, q.poll)((function () { return I(H, void 0, void 0, (function () { var T; return J(this, (function (L) { switch (L.label) { case 0: return [4, this.provider.getTransaction(N)]; case 1: T = L.sent(); if (T === null) { return [2, undefined] } return [2, this.provider._wrapTransaction(T, N, B)] } })) })) }), { oncePoll: this.provider })]; case 4: return [2, U.sent()]; case 5: L = U.sent(); L.transactionHash = N; throw L; case 6: return [2] } })) })) }; JsonRpcSigner.prototype.signMessage = function (T) { return I(this, void 0, void 0, (function () { var B, N, L; return J(this, (function (I) { switch (I.label) { case 0: B = typeof T === "string" ? (0, Z.toUtf8Bytes)(T) : T; return [4, this.getAddress()]; case 1: N = I.sent(); I.label = 2; case 2: I.trys.push([2, 4, , 5]); return [4, this.provider.send("personal_sign", [(0, X.hexlify)(B), N.toLowerCase()])]; case 3: return [2, I.sent()]; case 4: L = I.sent(); if (typeof L.message === "string" && L.message.match(/user denied/i)) { ff.throwError("user rejected signing", Q.Logger.errors.ACTION_REJECTED, { action: "signMessage", from: N, messageData: T }) } throw L; case 5: return [2] } })) })) }; JsonRpcSigner.prototype._legacySignMessage = function (T) { return I(this, void 0, void 0, (function () { var B, N, L; return J(this, (function (I) { switch (I.label) { case 0: B = typeof T === "string" ? (0, Z.toUtf8Bytes)(T) : T; return [4, this.getAddress()]; case 1: N = I.sent(); I.label = 2; case 2: I.trys.push([2, 4, , 5]); return [4, this.provider.send("eth_sign", [N.toLowerCase(), (0, X.hexlify)(B)])]; case 3: return [2, I.sent()]; case 4: L = I.sent(); if (typeof L.message === "string" && L.message.match(/user denied/i)) { ff.throwError("user rejected signing", Q.Logger.errors.ACTION_REJECTED, { action: "_legacySignMessage", from: N, messageData: T }) } throw L; case 5: return [2] } })) })) }; JsonRpcSigner.prototype._signTypedData = function (T, B, N) { return I(this, void 0, void 0, (function () { var L, I, H; var U = this; return J(this, (function (J) { switch (J.label) { case 0: return [4, G._TypedDataEncoder.resolveNames(T, B, N, (function (T) { return U.provider.resolveName(T) }))]; case 1: L = J.sent(); return [4, this.getAddress()]; case 2: I = J.sent(); J.label = 3; case 3: J.trys.push([3, 5, , 6]); return [4, this.provider.send("eth_signTypedData_v4", [I.toLowerCase(), JSON.stringify(G._TypedDataEncoder.getPayload(L.domain, B, L.value))])]; case 4: return [2, J.sent()]; case 5: H = J.sent(); if (typeof H.message === "string" && H.message.match(/user denied/i)) { ff.throwError("user rejected signing", Q.Logger.errors.ACTION_REJECTED, { action: "_signTypedData", from: I, messageData: { domain: L.domain, types: B, value: L.value } }) } throw H; case 6: return [2] } })) })) }; JsonRpcSigner.prototype.unlock = function (T) { return I(this, void 0, void 0, (function () { var B, N; return J(this, (function (L) { switch (L.label) { case 0: B = this.provider; return [4, this.getAddress()]; case 1: N = L.sent(); return [2, B.send("personal_unlockAccount", [N.toLowerCase(), T, null])] } })) })) }; return JsonRpcSigner }(H.Signer); B.JsonRpcSigner = af; var nf = function (T) { L(UncheckedJsonRpcSigner, T); function UncheckedJsonRpcSigner() { return T !== null && T.apply(this, arguments) || this } UncheckedJsonRpcSigner.prototype.sendTransaction = function (T) { var B = this; return this.sendUncheckedTransaction(T).then((function (T) { return { hash: T, nonce: null, gasLimit: null, gasPrice: null, data: null, value: null, chainId: null, confirmations: 0, from: null, wait: function (N) { return B.provider.waitForTransaction(T, N) } } })) }; return UncheckedJsonRpcSigner }(af); var of = { chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true, type: true, accessList: true, maxFeePerGas: true, maxPriorityFeePerGas: true }; var sf = function (T) { L(JsonRpcProvider, T); function JsonRpcProvider(B, N) { var L = this; var I = N; if (I == null) { I = new Promise((function (T, B) { setTimeout((function () { L.detectNetwork().then((function (B) { T(B) }), (function (T) { B(T) })) }), 0) })) } L = T.call(this, I) || this; if (!B) { B = (0, V.getStatic)(L.constructor, "defaultUrl")() } if (typeof B === "string") { (0, V.defineReadOnly)(L, "connection", Object.freeze({ url: B })) } else { (0, V.defineReadOnly)(L, "connection", Object.freeze((0, V.shallowCopy)(B))) } L._nextId = 42; return L } Object.defineProperty(JsonRpcProvider.prototype, "_cache", { get: function () { if (this._eventLoopCache == null) { this._eventLoopCache = {} } return this._eventLoopCache }, enumerable: false, configurable: true }); JsonRpcProvider.defaultUrl = function () { return "http://localhost:8545" }; JsonRpcProvider.prototype.detectNetwork = function () { var T = this; if (!this._cache["detectNetwork"]) { this._cache["detectNetwork"] = this._uncachedDetectNetwork(); setTimeout((function () { T._cache["detectNetwork"] = null }), 0) } return this._cache["detectNetwork"] }; JsonRpcProvider.prototype._uncachedDetectNetwork = function () { return I(this, void 0, void 0, (function () { var T, B, N, L; return J(this, (function (I) { switch (I.label) { case 0: return [4, timer(0)]; case 1: I.sent(); T = null; I.label = 2; case 2: I.trys.push([2, 4, , 9]); return [4, this.send("eth_chainId", [])]; case 3: T = I.sent(); return [3, 9]; case 4: B = I.sent(); I.label = 5; case 5: I.trys.push([5, 7, , 8]); return [4, this.send("net_version", [])]; case 6: T = I.sent(); return [3, 8]; case 7: N = I.sent(); return [3, 8]; case 8: return [3, 9]; case 9: if (T != null) { L = (0, V.getStatic)(this.constructor, "getNetwork"); try { return [2, L(U.BigNumber.from(T).toNumber())] } catch (B) { return [2, ff.throwError("could not detect network", Q.Logger.errors.NETWORK_ERROR, { chainId: T, event: "invalidNetwork", serverError: B })] } } return [2, ff.throwError("could not detect network", Q.Logger.errors.NETWORK_ERROR, { event: "noNetwork" })] } })) })) }; JsonRpcProvider.prototype.getSigner = function (T) { return new af(rf, this, T) }; JsonRpcProvider.prototype.getUncheckedSigner = function (T) { return this.getSigner(T).connectUnchecked() }; JsonRpcProvider.prototype.listAccounts = function () { var T = this; return this.send("eth_accounts", []).then((function (B) { return B.map((function (B) { return T.formatter.address(B) })) })) }; JsonRpcProvider.prototype.send = function (T, B) { var N = this; var L = { method: T, params: B, id: this._nextId++, jsonrpc: "2.0" }; this.emit("debug", { action: "request", request: (0, V.deepCopy)(L), provider: this }); var I = ["eth_chainId", "eth_blockNumber"].indexOf(T) >= 0; if (I && this._cache[T]) { return this._cache[T] } var J = (0, q.fetchJson)(this.connection, JSON.stringify(L), getResult).then((function (T) { N.emit("debug", { action: "response", request: L, response: T, provider: N }); return T }), (function (T) { N.emit("debug", { action: "response", error: T, request: L, provider: N }); throw T })); if (I) { this._cache[T] = J; setTimeout((function () { N._cache[T] = null }), 0) } return J }; JsonRpcProvider.prototype.prepareRequest = function (T, B) { switch (T) { case "getBlockNumber": return ["eth_blockNumber", []]; case "getGasPrice": return ["eth_gasPrice", []]; case "getBalance": return ["eth_getBalance", [getLowerCase(B.address), B.blockTag]]; case "getTransactionCount": return ["eth_getTransactionCount", [getLowerCase(B.address), B.blockTag]]; case "getCode": return ["eth_getCode", [getLowerCase(B.address), B.blockTag]]; case "getStorageAt": return ["eth_getStorageAt", [getLowerCase(B.address), (0, X.hexZeroPad)(B.position, 32), B.blockTag]]; case "sendTransaction": return ["eth_sendRawTransaction", [B.signedTransaction]]; case "getBlock": if (B.blockTag) { return ["eth_getBlockByNumber", [B.blockTag, !!B.includeTransactions]] } else if (B.blockHash) { return ["eth_getBlockByHash", [B.blockHash, !!B.includeTransactions]] } return null; case "getTransaction": return ["eth_getTransactionByHash", [B.transactionHash]]; case "getTransactionReceipt": return ["eth_getTransactionReceipt", [B.transactionHash]]; case "call": { var N = (0, V.getStatic)(this.constructor, "hexlifyTransaction"); return ["eth_call", [N(B.transaction, { from: true }), B.blockTag]] } case "estimateGas": { var N = (0, V.getStatic)(this.constructor, "hexlifyTransaction"); return ["eth_estimateGas", [N(B.transaction, { from: true })]] } case "getLogs": if (B.filter && B.filter.address != null) { B.filter.address = getLowerCase(B.filter.address) } return ["eth_getLogs", [B.filter]]; default: break }return null }; JsonRpcProvider.prototype.perform = function (T, B) { return I(this, void 0, void 0, (function () { var N, L, I, H; return J(this, (function (J) { switch (J.label) { case 0: if (!(T === "call" || T === "estimateGas")) return [3, 2]; N = B.transaction; if (!(N && N.type != null && U.BigNumber.from(N.type).isZero())) return [3, 2]; if (!(N.maxFeePerGas == null && N.maxPriorityFeePerGas == null)) return [3, 2]; return [4, this.getFeeData()]; case 1: L = J.sent(); if (L.maxFeePerGas == null && L.maxPriorityFeePerGas == null) { B = (0, V.shallowCopy)(B); B.transaction = (0, V.shallowCopy)(N); delete B.transaction.type } J.label = 2; case 2: I = this.prepareRequest(T, B); if (I == null) { ff.throwError(T + " not implemented", Q.Logger.errors.NOT_IMPLEMENTED, { operation: T }) } J.label = 3; case 3: J.trys.push([3, 5, , 6]); return [4, this.send(I[0], I[1])]; case 4: return [2, J.sent()]; case 5: H = J.sent(); return [2, checkError(T, H, B)]; case 6: return [2] } })) })) }; JsonRpcProvider.prototype._startEvent = function (B) { if (B.tag === "pending") { this._startPending() } T.prototype._startEvent.call(this, B) }; JsonRpcProvider.prototype._startPending = function () { if (this._pendingFilter != null) { return } var T = this; var B = this.send("eth_newPendingTransactionFilter", []); this._pendingFilter = B; B.then((function (N) { function poll() { T.send("eth_getFilterChanges", [N]).then((function (N) { if (T._pendingFilter != B) { return null } var L = Promise.resolve(); N.forEach((function (B) { T._emitted["t:" + B.toLowerCase()] = "pending"; L = L.then((function () { return T.getTransaction(B).then((function (B) { T.emit("pending", B); return null })) })) })); return L.then((function () { return timer(1e3) })) })).then((function () { if (T._pendingFilter != B) { T.send("eth_uninstallFilter", [N]); return } setTimeout((function () { poll() }), 0); return null })).catch((function (T) { })) } poll(); return N })).catch((function (T) { })) }; JsonRpcProvider.prototype._stopEvent = function (B) { if (B.tag === "pending" && this.listenerCount("pending") === 0) { this._pendingFilter = null } T.prototype._stopEvent.call(this, B) }; JsonRpcProvider.hexlifyTransaction = function (T, B) { var N = (0, V.shallowCopy)(of); if (B) { for (var L in B) { if (B[L]) { N[L] = true } } } (0, V.checkProperties)(T, N); var I = {};["chainId", "gasLimit", "gasPrice", "type", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "value"].forEach((function (B) { if (T[B] == null) { return } var N = (0, X.hexValue)(U.BigNumber.from(T[B])); if (B === "gasLimit") { B = "gas" } I[B] = N }));["from", "to", "data"].forEach((function (B) { if (T[B] == null) { return } I[B] = (0, X.hexlify)(T[B]) })); if (T.accessList) { I["accessList"] = (0, W.accessListify)(T.accessList) } return I }; return JsonRpcProvider }(ef.BaseProvider); B.JsonRpcProvider = sf }, 2572: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.NodesmithProvider = void 0; var I = N(6717); var J = N(6127); var H = N(5408); var U = new J.Logger(H.version); var X = "ETHERS_JS_SHARED"; var G = function (T) { L(NodesmithProvider, T); function NodesmithProvider() { return T !== null && T.apply(this, arguments) || this } NodesmithProvider.getApiKey = function (T) { if (T && typeof T !== "string") { U.throwArgumentError("invalid apiKey", "apiKey", T) } return T || X }; NodesmithProvider.getUrl = function (T, B) { U.warn("NodeSmith will be discontinued on 2019-12-20; please migrate to another platform."); var N = null; switch (T.name) { case "homestead": N = "https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc"; break; case "ropsten": N = "https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc"; break; case "rinkeby": N = "https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc"; break; case "goerli": N = "https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc"; break; case "kovan": N = "https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc"; break; default: U.throwArgumentError("unsupported network", "network", arguments[0]) }return N + "?apiKey=" + B }; return NodesmithProvider }(I.UrlJsonRpcProvider); B.NodesmithProvider = G }, 9663: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.PocketProvider = void 0; var I = N(6127); var J = N(5408); var H = new I.Logger(J.version); var U = N(6717); var X = "62e1ad51b37b8e00394bda3b"; var G = function (T) { L(PocketProvider, T); function PocketProvider() { return T !== null && T.apply(this, arguments) || this } PocketProvider.getApiKey = function (T) { var B = { applicationId: null, loadBalancer: true, applicationSecretKey: null }; if (T == null) { B.applicationId = X } else if (typeof T === "string") { B.applicationId = T } else if (T.applicationSecretKey != null) { B.applicationId = T.applicationId; B.applicationSecretKey = T.applicationSecretKey } else if (T.applicationId) { B.applicationId = T.applicationId } else { H.throwArgumentError("unsupported PocketProvider apiKey", "apiKey", T) } return B }; PocketProvider.getUrl = function (T, B) { var N = null; switch (T ? T.name : "unknown") { case "goerli": N = "eth-goerli.gateway.pokt.network"; break; case "homestead": N = "eth-mainnet.gateway.pokt.network"; break; case "kovan": N = "poa-kovan.gateway.pokt.network"; break; case "matic": N = "poly-mainnet.gateway.pokt.network"; break; case "maticmum": N = "polygon-mumbai-rpc.gateway.pokt.network"; break; case "rinkeby": N = "eth-rinkeby.gateway.pokt.network"; break; case "ropsten": N = "eth-ropsten.gateway.pokt.network"; break; default: H.throwError("unsupported network", I.Logger.errors.INVALID_ARGUMENT, { argument: "network", value: T }) }var L = "https://" + N + "/v1/lb/" + B.applicationId; var J = { headers: {}, url: L }; if (B.applicationSecretKey != null) { J.user = ""; J.password = B.applicationSecretKey } return J }; PocketProvider.prototype.isCommunityResource = function () { return this.applicationId === X }; return PocketProvider }(U.UrlJsonRpcProvider); B.PocketProvider = G }, 8932: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.QuickNodeProvider = void 0; var I = N(6717); var J = N(6127); var H = N(5408); var U = new J.Logger(H.version); var X = "919b412a057b5e9c9b6dce193c5a60242d6efadb"; var G = function (T) { L(QuickNodeProvider, T); function QuickNodeProvider() { return T !== null && T.apply(this, arguments) || this } QuickNodeProvider.getApiKey = function (T) { if (T && typeof T !== "string") { U.throwArgumentError("invalid apiKey", "apiKey", T) } return T || X }; QuickNodeProvider.getUrl = function (T, B) { var N = null; switch (T.name) { case "homestead": N = "ethers.quiknode.pro"; break; case "goerli": N = "ethers.ethereum-goerli.quiknode.pro"; break; case "sepolia": N = "ethers.ethereum-sepolia.quiknode.pro"; break; case "holesky": N = "ethers.ethereum-holesky.quiknode.pro"; break; case "arbitrum": N = "ethers.arbitrum-mainnet.quiknode.pro"; break; case "arbitrum-goerli": N = "ethers.arbitrum-goerli.quiknode.pro"; break; case "arbitrum-sepolia": N = "ethers.arbitrum-sepolia.quiknode.pro"; break; case "base": N = "ethers.base-mainnet.quiknode.pro"; break; case "base-goerli": N = "ethers.base-goerli.quiknode.pro"; break; case "base-spolia": N = "ethers.base-sepolia.quiknode.pro"; break; case "bnb": N = "ethers.bsc.quiknode.pro"; break; case "bnbt": N = "ethers.bsc-testnet.quiknode.pro"; break; case "matic": N = "ethers.matic.quiknode.pro"; break; case "maticmum": N = "ethers.matic-testnet.quiknode.pro"; break; case "optimism": N = "ethers.optimism.quiknode.pro"; break; case "optimism-goerli": N = "ethers.optimism-goerli.quiknode.pro"; break; case "optimism-sepolia": N = "ethers.optimism-sepolia.quiknode.pro"; break; case "xdai": N = "ethers.xdai.quiknode.pro"; break; default: U.throwArgumentError("unsupported network", "network", arguments[0]) }return "https:/" + "/" + N + "/" + B }; return QuickNodeProvider }(I.UrlJsonRpcProvider); B.QuickNodeProvider = G }, 6717: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); var I = this && this.__awaiter || function (T, B, N, L) { function adopt(T) { return T instanceof N ? T : new N((function (B) { B(T) })) } return new (N || (N = Promise))((function (N, I) { function fulfilled(T) { try { step(L.next(T)) } catch (T) { I(T) } } function rejected(T) { try { step(L["throw"](T)) } catch (T) { I(T) } } function step(T) { T.done ? N(T.value) : adopt(T.value).then(fulfilled, rejected) } step((L = L.apply(T, B || [])).next()) })) }; var J = this && this.__generator || function (T, B) { var N = { label: 0, sent: function () { if (J[0] & 1) throw J[1]; return J[1] }, trys: [], ops: [] }, L, I, J, H; return H = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (H[Symbol.iterator] = function () { return this }), H; function verb(T) { return function (B) { return step([T, B]) } } function step(H) { if (L) throw new TypeError("Generator is already executing."); while (N) try { if (L = 1, I && (J = H[0] & 2 ? I["return"] : H[0] ? I["throw"] || ((J = I["return"]) && J.call(I), 0) : I.next) && !(J = J.call(I, H[1])).done) return J; if (I = 0, J) H = [H[0] & 2, J.value]; switch (H[0]) { case 0: case 1: J = H; break; case 4: N.label++; return { value: H[1], done: false }; case 5: N.label++; I = H[1]; H = [0]; continue; case 7: H = N.ops.pop(); N.trys.pop(); continue; default: if (!(J = N.trys, J = J.length > 0 && J[J.length - 1]) && (H[0] === 6 || H[0] === 2)) { N = 0; continue } if (H[0] === 3 && (!J || H[1] > J[0] && H[1] < J[3])) { N.label = H[1]; break } if (H[0] === 6 && N.label < J[1]) { N.label = J[1]; J = H; break } if (J && N.label < J[2]) { N.label = J[2]; N.ops.push(H); break } if (J[2]) N.ops.pop(); N.trys.pop(); continue }H = B.call(T, N) } catch (T) { H = [6, T]; I = 0 } finally { L = J = 0 } if (H[0] & 5) throw H[1]; return { value: H[0] ? H[1] : void 0, done: true } } }; Object.defineProperty(B, "__esModule", { value: true }); B.UrlJsonRpcProvider = B.StaticJsonRpcProvider = void 0; var H = N(1338); var U = N(6127); var X = N(5408); var G = new U.Logger(X.version); var V = N(697); var Z = function (T) { L(StaticJsonRpcProvider, T); function StaticJsonRpcProvider() { return T !== null && T.apply(this, arguments) || this } StaticJsonRpcProvider.prototype.detectNetwork = function () { return I(this, void 0, void 0, (function () { var B; return J(this, (function (N) { switch (N.label) { case 0: B = this.network; if (!(B == null)) return [3, 2]; return [4, T.prototype.detectNetwork.call(this)]; case 1: B = N.sent(); if (!B) { G.throwError("no network detected", U.Logger.errors.UNKNOWN_ERROR, {}) } if (this._network == null) { (0, H.defineReadOnly)(this, "_network", B); this.emit("network", B, null) } N.label = 2; case 2: return [2, B] } })) })) }; return StaticJsonRpcProvider }(V.JsonRpcProvider); B.StaticJsonRpcProvider = Z; var W = function (T) { L(UrlJsonRpcProvider, T); function UrlJsonRpcProvider(B, N) { var L = this.constructor; var I = this; G.checkAbstract(L, UrlJsonRpcProvider); B = (0, H.getStatic)(L, "getNetwork")(B); N = (0, H.getStatic)(L, "getApiKey")(N); var J = (0, H.getStatic)(L, "getUrl")(B, N); I = T.call(this, J, B) || this; if (typeof N === "string") { (0, H.defineReadOnly)(I, "apiKey", N) } else if (N != null) { Object.keys(N).forEach((function (T) { (0, H.defineReadOnly)(I, T, N[T]) })) } return I } UrlJsonRpcProvider.prototype._startPending = function () { G.warn("WARNING: API provider does not support pending filters") }; UrlJsonRpcProvider.prototype.isCommunityResource = function () { return false }; UrlJsonRpcProvider.prototype.getSigner = function (T) { return G.throwError("API provider does not support signing", U.Logger.errors.UNSUPPORTED_OPERATION, { operation: "getSigner" }) }; UrlJsonRpcProvider.prototype.listAccounts = function () { return Promise.resolve([]) }; UrlJsonRpcProvider.getApiKey = function (T) { return T }; UrlJsonRpcProvider.getUrl = function (T, B) { return G.throwError("not implemented; sub-classes must override getUrl", U.Logger.errors.NOT_IMPLEMENTED, { operation: "getUrl" }) }; return UrlJsonRpcProvider }(Z); B.UrlJsonRpcProvider = W }, 9676: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.Web3Provider = void 0; var I = N(1338); var J = N(6127); var H = N(5408); var U = new J.Logger(H.version); var X = N(697); var G = 1; function buildWeb3LegacyFetcher(T, B) { var N = "Web3LegacyFetcher"; return function (T, L) { var J = this; var H = { method: T, params: L, id: G++, jsonrpc: "2.0" }; return new Promise((function (T, L) { J.emit("debug", { action: "request", fetcher: N, request: (0, I.deepCopy)(H), provider: J }); B(H, (function (B, I) { if (B) { J.emit("debug", { action: "response", fetcher: N, error: B, request: H, provider: J }); return L(B) } J.emit("debug", { action: "response", fetcher: N, request: H, response: I, provider: J }); if (I.error) { var U = new Error(I.error.message); U.code = I.error.code; U.data = I.error.data; return L(U) } T(I.result) })) })) } } function buildEip1193Fetcher(T) { return function (B, N) { var L = this; if (N == null) { N = [] } var J = { method: B, params: N }; this.emit("debug", { action: "request", fetcher: "Eip1193Fetcher", request: (0, I.deepCopy)(J), provider: this }); return T.request(J).then((function (T) { L.emit("debug", { action: "response", fetcher: "Eip1193Fetcher", request: J, response: T, provider: L }); return T }), (function (T) { L.emit("debug", { action: "response", fetcher: "Eip1193Fetcher", request: J, error: T, provider: L }); throw T })) } } var V = function (T) { L(Web3Provider, T); function Web3Provider(B, N) { var L = this; if (B == null) { U.throwArgumentError("missing provider", "provider", B) } var J = null; var H = null; var X = null; if (typeof B === "function") { J = "unknown:"; H = B } else { J = B.host || B.path || ""; if (!J && B.isMetaMask) { J = "metamask" } X = B; if (B.request) { if (J === "") { J = "eip-1193:" } H = buildEip1193Fetcher(B) } else if (B.sendAsync) { H = buildWeb3LegacyFetcher(B, B.sendAsync.bind(B)) } else if (B.send) { H = buildWeb3LegacyFetcher(B, B.send.bind(B)) } else { U.throwArgumentError("unsupported provider", "provider", B) } if (!J) { J = "unknown:" } } L = T.call(this, J, N) || this; (0, I.defineReadOnly)(L, "jsonRpcFetchFunc", H); (0, I.defineReadOnly)(L, "provider", X); return L } Web3Provider.prototype.send = function (T, B) { return this.jsonRpcFetchFunc(T, B) }; return Web3Provider }(X.JsonRpcProvider); B.Web3Provider = V }, 3607: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); var I = this && this.__awaiter || function (T, B, N, L) { function adopt(T) { return T instanceof N ? T : new N((function (B) { B(T) })) } return new (N || (N = Promise))((function (N, I) { function fulfilled(T) { try { step(L.next(T)) } catch (T) { I(T) } } function rejected(T) { try { step(L["throw"](T)) } catch (T) { I(T) } } function step(T) { T.done ? N(T.value) : adopt(T.value).then(fulfilled, rejected) } step((L = L.apply(T, B || [])).next()) })) }; var J = this && this.__generator || function (T, B) { var N = { label: 0, sent: function () { if (J[0] & 1) throw J[1]; return J[1] }, trys: [], ops: [] }, L, I, J, H; return H = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (H[Symbol.iterator] = function () { return this }), H; function verb(T) { return function (B) { return step([T, B]) } } function step(H) { if (L) throw new TypeError("Generator is already executing."); while (N) try { if (L = 1, I && (J = H[0] & 2 ? I["return"] : H[0] ? I["throw"] || ((J = I["return"]) && J.call(I), 0) : I.next) && !(J = J.call(I, H[1])).done) return J; if (I = 0, J) H = [H[0] & 2, J.value]; switch (H[0]) { case 0: case 1: J = H; break; case 4: N.label++; return { value: H[1], done: false }; case 5: N.label++; I = H[1]; H = [0]; continue; case 7: H = N.ops.pop(); N.trys.pop(); continue; default: if (!(J = N.trys, J = J.length > 0 && J[J.length - 1]) && (H[0] === 6 || H[0] === 2)) { N = 0; continue } if (H[0] === 3 && (!J || H[1] > J[0] && H[1] < J[3])) { N.label = H[1]; break } if (H[0] === 6 && N.label < J[1]) { N.label = J[1]; J = H; break } if (J && N.label < J[2]) { N.label = J[2]; N.ops.push(H); break } if (J[2]) N.ops.pop(); N.trys.pop(); continue }H = B.call(T, N) } catch (T) { H = [6, T]; I = 0 } finally { L = J = 0 } if (H[0] & 5) throw H[1]; return { value: H[0] ? H[1] : void 0, done: true } } }; Object.defineProperty(B, "__esModule", { value: true }); B.WebSocketProvider = void 0; var H = N(8202); var U = N(1338); var X = N(697); var G = N(6665); var V = N(6127); var Z = N(5408); var W = new V.Logger(Z.version); var q = 1; var Q = function (T) { L(WebSocketProvider, T); function WebSocketProvider(B, N) { var L = this; if (N === "any") { W.throwError("WebSocketProvider does not support 'any' network yet", V.Logger.errors.UNSUPPORTED_OPERATION, { operation: "network:any" }) } if (typeof B === "string") { L = T.call(this, B, N) || this } else { L = T.call(this, "_websocket", N) || this } L._pollingInterval = -1; L._wsReady = false; if (typeof B === "string") { (0, U.defineReadOnly)(L, "_websocket", new G.WebSocket(L.connection.url)) } else { (0, U.defineReadOnly)(L, "_websocket", B) } (0, U.defineReadOnly)(L, "_requests", {}); (0, U.defineReadOnly)(L, "_subs", {}); (0, U.defineReadOnly)(L, "_subIds", {}); (0, U.defineReadOnly)(L, "_detectNetwork", T.prototype.detectNetwork.call(L)); L.websocket.onopen = function () { L._wsReady = true; Object.keys(L._requests).forEach((function (T) { L.websocket.send(L._requests[T].payload) })) }; L.websocket.onmessage = function (T) { var B = T.data; var N = JSON.parse(B); if (N.id != null) { var I = String(N.id); var J = L._requests[I]; delete L._requests[I]; if (N.result !== undefined) { J.callback(null, N.result); L.emit("debug", { action: "response", request: JSON.parse(J.payload), response: N.result, provider: L }) } else { var H = null; if (N.error) { H = new Error(N.error.message || "unknown error"); (0, U.defineReadOnly)(H, "code", N.error.code || null); (0, U.defineReadOnly)(H, "response", B) } else { H = new Error("unknown error") } J.callback(H, undefined); L.emit("debug", { action: "response", error: H, request: JSON.parse(J.payload), provider: L }) } } else if (N.method === "eth_subscription") { var X = L._subs[N.params.subscription]; if (X) { X.processFunc(N.params.result) } } else { console.warn("this should not happen") } }; var I = setInterval((function () { L.emit("poll") }), 1e3); if (I.unref) { I.unref() } return L } Object.defineProperty(WebSocketProvider.prototype, "websocket", { get: function () { return this._websocket }, enumerable: false, configurable: true }); WebSocketProvider.prototype.detectNetwork = function () { return this._detectNetwork }; Object.defineProperty(WebSocketProvider.prototype, "pollingInterval", { get: function () { return 0 }, set: function (T) { W.throwError("cannot set polling interval on WebSocketProvider", V.Logger.errors.UNSUPPORTED_OPERATION, { operation: "setPollingInterval" }) }, enumerable: false, configurable: true }); WebSocketProvider.prototype.resetEventsBlock = function (T) { W.throwError("cannot reset events block on WebSocketProvider", V.Logger.errors.UNSUPPORTED_OPERATION, { operation: "resetEventBlock" }) }; WebSocketProvider.prototype.poll = function () { return I(this, void 0, void 0, (function () { return J(this, (function (T) { return [2, null] })) })) }; Object.defineProperty(WebSocketProvider.prototype, "polling", { set: function (T) { if (!T) { return } W.throwError("cannot set polling on WebSocketProvider", V.Logger.errors.UNSUPPORTED_OPERATION, { operation: "setPolling" }) }, enumerable: false, configurable: true }); WebSocketProvider.prototype.send = function (T, B) { var N = this; var L = q++; return new Promise((function (I, J) { function callback(T, B) { if (T) { return J(T) } return I(B) } var H = JSON.stringify({ method: T, params: B, id: L, jsonrpc: "2.0" }); N.emit("debug", { action: "request", request: JSON.parse(H), provider: N }); N._requests[String(L)] = { callback: callback, payload: H }; if (N._wsReady) { N.websocket.send(H) } })) }; WebSocketProvider.defaultUrl = function () { return "ws://localhost:8546" }; WebSocketProvider.prototype._subscribe = function (T, B, N) { return I(this, void 0, void 0, (function () { var L, I; var H = this; return J(this, (function (J) { switch (J.label) { case 0: L = this._subIds[T]; if (L == null) { L = Promise.all(B).then((function (T) { return H.send("eth_subscribe", T) })); this._subIds[T] = L } return [4, L]; case 1: I = J.sent(); this._subs[I] = { tag: T, processFunc: N }; return [2] } })) })) }; WebSocketProvider.prototype._startEvent = function (T) { var B = this; switch (T.type) { case "block": this._subscribe("block", ["newHeads"], (function (T) { var N = H.BigNumber.from(T.number).toNumber(); B._emitted.block = N; B.emit("block", N) })); break; case "pending": this._subscribe("pending", ["newPendingTransactions"], (function (T) { B.emit("pending", T) })); break; case "filter": this._subscribe(T.tag, ["logs", this._getFilter(T.filter)], (function (N) { if (N.removed == null) { N.removed = false } B.emit(T.filter, B.formatter.filterLog(N)) })); break; case "tx": { var emitReceipt_1 = function (T) { var N = T.hash; B.getTransactionReceipt(N).then((function (T) { if (!T) { return } B.emit(N, T) })) }; emitReceipt_1(T); this._subscribe("tx", ["newHeads"], (function (T) { B._events.filter((function (T) { return T.type === "tx" })).forEach(emitReceipt_1) })); break } case "debug": case "poll": case "willPoll": case "didPoll": case "error": break; default: console.log("unhandled:", T); break } }; WebSocketProvider.prototype._stopEvent = function (T) { var B = this; var N = T.tag; if (T.type === "tx") { if (this._events.filter((function (T) { return T.type === "tx" })).length) { return } N = "tx" } else if (this.listenerCount(T.event)) { return } var L = this._subIds[N]; if (!L) { return } delete this._subIds[N]; L.then((function (T) { if (!B._subs[T]) { return } delete B._subs[T]; B.send("eth_unsubscribe", [T]) })) }; WebSocketProvider.prototype.destroy = function () { return I(this, void 0, void 0, (function () { var T = this; return J(this, (function (B) { switch (B.label) { case 0: if (!(this.websocket.readyState === G.WebSocket.CONNECTING)) return [3, 2]; return [4, new Promise((function (B) { T.websocket.onopen = function () { B(true) }; T.websocket.onerror = function () { B(false) } }))]; case 1: B.sent(); B.label = 2; case 2: this.websocket.close(1e3); return [2] } })) })) }; return WebSocketProvider }(X.JsonRpcProvider); B.WebSocketProvider = Q }, 6665: function (T, B, N) { "use strict"; var L = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); B.WebSocket = void 0; var I = L(N(1354)); B.WebSocket = I.default }, 3728: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.shuffled = B.randomBytes = void 0; var L = N(5); Object.defineProperty(B, "randomBytes", { enumerable: true, get: function () { return L.randomBytes } }); var I = N(1081); Object.defineProperty(B, "shuffled", { enumerable: true, get: function () { return I.shuffled } }) }, 5: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.randomBytes = void 0; var L = N(6982); var I = N(2006); function randomBytes(T) { return (0, I.arrayify)((0, L.randomBytes)(T)) } B.randomBytes = randomBytes }, 1081: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.shuffled = void 0; function shuffled(T) { T = T.slice(); for (var B = T.length - 1; B > 0; B--) { var N = Math.floor(Math.random() * (B + 1)); var L = T[B]; T[B] = T[N]; T[N] = L } return T } B.shuffled = shuffled }, 3852: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.version = void 0; B.version = "rlp/5.8.0" }, 7659: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.decode = B.encode = void 0; var L = N(2006); var I = N(6127); var J = N(3852); var H = new I.Logger(J.version); function arrayifyInteger(T) { var B = []; while (T) { B.unshift(T & 255); T >>= 8 } return B } function unarrayifyInteger(T, B, N) { var L = 0; for (var I = 0; I < N; I++) { L = L * 256 + T[B + I] } return L } function _encode(T) { if (Array.isArray(T)) { var B = []; T.forEach((function (T) { B = B.concat(_encode(T)) })); if (B.length <= 55) { B.unshift(192 + B.length); return B } var N = arrayifyInteger(B.length); N.unshift(247 + N.length); return N.concat(B) } if (!(0, L.isBytesLike)(T)) { H.throwArgumentError("RLP object must be BytesLike", "object", T) } var I = Array.prototype.slice.call((0, L.arrayify)(T)); if (I.length === 1 && I[0] <= 127) { return I } else if (I.length <= 55) { I.unshift(128 + I.length); return I } var J = arrayifyInteger(I.length); J.unshift(183 + J.length); return J.concat(I) } function encode(T) { return (0, L.hexlify)(_encode(T)) } B.encode = encode; function _decodeChildren(T, B, N, L) { var J = []; while (N < B + 1 + L) { var U = _decode(T, N); J.push(U.result); N += U.consumed; if (N > B + 1 + L) { H.throwError("child data too short", I.Logger.errors.BUFFER_OVERRUN, {}) } } return { consumed: 1 + L, result: J } } function _decode(T, B) { if (T.length === 0) { H.throwError("data too short", I.Logger.errors.BUFFER_OVERRUN, {}) } if (T[B] >= 248) { var N = T[B] - 247; if (B + 1 + N > T.length) { H.throwError("data short segment too short", I.Logger.errors.BUFFER_OVERRUN, {}) } var J = unarrayifyInteger(T, B + 1, N); if (B + 1 + N + J > T.length) { H.throwError("data long segment too short", I.Logger.errors.BUFFER_OVERRUN, {}) } return _decodeChildren(T, B, B + 1 + N, N + J) } else if (T[B] >= 192) { var U = T[B] - 192; if (B + 1 + U > T.length) { H.throwError("data array too short", I.Logger.errors.BUFFER_OVERRUN, {}) } return _decodeChildren(T, B, B + 1, U) } else if (T[B] >= 184) { var N = T[B] - 183; if (B + 1 + N > T.length) { H.throwError("data array too short", I.Logger.errors.BUFFER_OVERRUN, {}) } var X = unarrayifyInteger(T, B + 1, N); if (B + 1 + N + X > T.length) { H.throwError("data array too short", I.Logger.errors.BUFFER_OVERRUN, {}) } var G = (0, L.hexlify)(T.slice(B + 1 + N, B + 1 + N + X)); return { consumed: 1 + N + X, result: G } } else if (T[B] >= 128) { var V = T[B] - 128; if (B + 1 + V > T.length) { H.throwError("data too short", I.Logger.errors.BUFFER_OVERRUN, {}) } var G = (0, L.hexlify)(T.slice(B + 1, B + 1 + V)); return { consumed: 1 + V, result: G } } return { consumed: 1, result: (0, L.hexlify)(T[B]) } } function decode(T) { var B = (0, L.arrayify)(T); var N = _decode(B, 0); if (N.consumed !== B.length) { H.throwArgumentError("invalid rlp data", "data", T) } return N.result } B.decode = decode }, 1888: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.version = void 0; B.version = "sha2/5.8.0" }, 6935: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.SupportedAlgorithm = B.sha512 = B.sha256 = B.ripemd160 = B.computeHmac = void 0; var L = N(7943); Object.defineProperty(B, "computeHmac", { enumerable: true, get: function () { return L.computeHmac } }); Object.defineProperty(B, "ripemd160", { enumerable: true, get: function () { return L.ripemd160 } }); Object.defineProperty(B, "sha256", { enumerable: true, get: function () { return L.sha256 } }); Object.defineProperty(B, "sha512", { enumerable: true, get: function () { return L.sha512 } }); var I = N(7310); Object.defineProperty(B, "SupportedAlgorithm", { enumerable: true, get: function () { return I.SupportedAlgorithm } }) }, 7943: function (T, B, N) { "use strict"; var L = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); B.computeHmac = B.sha512 = B.sha256 = B.ripemd160 = void 0; var I = N(6982); var J = L(N(7477)); var H = N(2006); var U = N(7310); var X = N(6127); var G = N(1888); var V = new X.Logger(G.version); function ripemd160(T) { return "0x" + J.default.ripemd160().update((0, H.arrayify)(T)).digest("hex") } B.ripemd160 = ripemd160; function sha256(T) { return "0x" + (0, I.createHash)("sha256").update(Buffer.from((0, H.arrayify)(T))).digest("hex") } B.sha256 = sha256; function sha512(T) { return "0x" + (0, I.createHash)("sha512").update(Buffer.from((0, H.arrayify)(T))).digest("hex") } B.sha512 = sha512; function computeHmac(T, B, N) { if (!U.SupportedAlgorithm[T]) { V.throwError("unsupported algorithm - " + T, X.Logger.errors.UNSUPPORTED_OPERATION, { operation: "computeHmac", algorithm: T }) } return "0x" + (0, I.createHmac)(T, Buffer.from((0, H.arrayify)(B))).update(Buffer.from((0, H.arrayify)(N))).digest("hex") } B.computeHmac = computeHmac }, 7310: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.SupportedAlgorithm = void 0; var N; (function (T) { T["sha256"] = "sha256"; T["sha512"] = "sha512" })(N = B.SupportedAlgorithm || (B.SupportedAlgorithm = {})) }, 3045: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.version = void 0; B.version = "signing-key/5.8.0" }, 1848: function (T, B, N) { "use strict"; var L = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); B.EC = void 0; var I = L(N(7034)); var J = I.default.ec; B.EC = J }, 3928: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.computePublicKey = B.recoverPublicKey = B.SigningKey = void 0; var L = N(1848); var I = N(2006); var J = N(1338); var H = N(6127); var U = N(3045); var X = new H.Logger(U.version); var G = null; function getCurve() { if (!G) { G = new L.EC("secp256k1") } return G } var V = function () { function SigningKey(T) { (0, J.defineReadOnly)(this, "curve", "secp256k1"); (0, J.defineReadOnly)(this, "privateKey", (0, I.hexlify)(T)); if ((0, I.hexDataLength)(this.privateKey) !== 32) { X.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]") } var B = getCurve().keyFromPrivate((0, I.arrayify)(this.privateKey)); (0, J.defineReadOnly)(this, "publicKey", "0x" + B.getPublic(false, "hex")); (0, J.defineReadOnly)(this, "compressedPublicKey", "0x" + B.getPublic(true, "hex")); (0, J.defineReadOnly)(this, "_isSigningKey", true) } SigningKey.prototype._addPoint = function (T) { var B = getCurve().keyFromPublic((0, I.arrayify)(this.publicKey)); var N = getCurve().keyFromPublic((0, I.arrayify)(T)); return "0x" + B.pub.add(N.pub).encodeCompressed("hex") }; SigningKey.prototype.signDigest = function (T) { var B = getCurve().keyFromPrivate((0, I.arrayify)(this.privateKey)); var N = (0, I.arrayify)(T); if (N.length !== 32) { X.throwArgumentError("bad digest length", "digest", T) } var L = B.sign(N, { canonical: true }); return (0, I.splitSignature)({ recoveryParam: L.recoveryParam, r: (0, I.hexZeroPad)("0x" + L.r.toString(16), 32), s: (0, I.hexZeroPad)("0x" + L.s.toString(16), 32) }) }; SigningKey.prototype.computeSharedSecret = function (T) { var B = getCurve().keyFromPrivate((0, I.arrayify)(this.privateKey)); var N = getCurve().keyFromPublic((0, I.arrayify)(computePublicKey(T))); return (0, I.hexZeroPad)("0x" + B.derive(N.getPublic()).toString(16), 32) }; SigningKey.isSigningKey = function (T) { return !!(T && T._isSigningKey) }; return SigningKey }(); B.SigningKey = V; function recoverPublicKey(T, B) { var N = (0, I.splitSignature)(B); var L = { r: (0, I.arrayify)(N.r), s: (0, I.arrayify)(N.s) }; return "0x" + getCurve().recoverPubKey((0, I.arrayify)(T), L, N.recoveryParam).encode("hex", false) } B.recoverPublicKey = recoverPublicKey; function computePublicKey(T, B) { var N = (0, I.arrayify)(T); if (N.length === 32) { var L = new V(N); if (B) { return "0x" + getCurve().keyFromPrivate(N).getPublic(true, "hex") } return L.publicKey } else if (N.length === 33) { if (B) { return (0, I.hexlify)(N) } return "0x" + getCurve().keyFromPublic(N).getPublic(false, "hex") } else if (N.length === 65) { if (!B) { return (0, I.hexlify)(N) } return "0x" + getCurve().keyFromPublic(N).getPublic(true, "hex") } return X.throwArgumentError("invalid public or private key", "key", "[REDACTED]") } B.computePublicKey = computePublicKey }, 5988: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.version = void 0; B.version = "strings/5.8.0" }, 4145: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.parseBytes32String = B.formatBytes32String = void 0; var L = N(9848); var I = N(2006); var J = N(1996); function formatBytes32String(T) { var B = (0, J.toUtf8Bytes)(T); if (B.length > 31) { throw new Error("bytes32 string must be less than 32 bytes") } return (0, I.hexlify)((0, I.concat)([B, L.HashZero]).slice(0, 32)) } B.formatBytes32String = formatBytes32String; function parseBytes32String(T) { var B = (0, I.arrayify)(T); if (B.length !== 32) { throw new Error("invalid bytes32 - not 32 bytes long") } if (B[31] !== 0) { throw new Error("invalid bytes32 string - no null terminator") } var N = 31; while (B[N - 1] === 0) { N-- } return (0, J.toUtf8String)(B.slice(0, N)) } B.parseBytes32String = parseBytes32String }, 1063: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.nameprep = B._nameprepTableC = B._nameprepTableB2 = B._nameprepTableA1 = void 0; var L = N(1996); function bytes2(T) { if (T.length % 4 !== 0) { throw new Error("bad data") } var B = []; for (var N = 0; N < T.length; N += 4) { B.push(parseInt(T.substring(N, N + 4), 16)) } return B } function createTable(T, B) { if (!B) { B = function (T) { return [parseInt(T, 16)] } } var N = 0; var L = {}; T.split(",").forEach((function (T) { var I = T.split(":"); N += parseInt(I[0], 16); L[N] = B(I[1]) })); return L } function createRangeTable(T) { var B = 0; return T.split(",").map((function (T) { var N = T.split("-"); if (N.length === 1) { N[1] = "0" } else if (N[1] === "") { N[1] = "1" } var L = B + parseInt(N[0], 16); B = parseInt(N[1], 16); return { l: L, h: B } })) } function matchMap(T, B) { var N = 0; for (var L = 0; L < B.length; L++) { var I = B[L]; N += I.l; if (T >= N && T <= N + I.h && (T - N) % (I.d || 1) === 0) { if (I.e && I.e.indexOf(T - N) !== -1) { continue } return I } } return null } var I = createRangeTable("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"); var J = "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map((function (T) { return parseInt(T, 16) })); var H = [{ h: 25, s: 32, l: 65 }, { h: 30, s: 32, e: [23], l: 127 }, { h: 54, s: 1, e: [48], l: 64, d: 2 }, { h: 14, s: 1, l: 57, d: 2 }, { h: 44, s: 1, l: 17, d: 2 }, { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 }, { h: 16, s: 1, l: 68, d: 2 }, { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 }, { h: 26, s: 32, e: [17], l: 435 }, { h: 22, s: 1, l: 71, d: 2 }, { h: 15, s: 80, l: 40 }, { h: 31, s: 32, l: 16 }, { h: 32, s: 1, l: 80, d: 2 }, { h: 52, s: 1, l: 42, d: 2 }, { h: 12, s: 1, l: 55, d: 2 }, { h: 40, s: 1, e: [38], l: 15, d: 2 }, { h: 14, s: 1, l: 48, d: 2 }, { h: 37, s: 48, l: 49 }, { h: 148, s: 1, l: 6351, d: 2 }, { h: 88, s: 1, l: 160, d: 2 }, { h: 15, s: 16, l: 704 }, { h: 25, s: 26, l: 854 }, { h: 25, s: 32, l: 55915 }, { h: 37, s: 40, l: 1247 }, { h: 25, s: -119711, l: 53248 }, { h: 25, s: -119763, l: 52 }, { h: 25, s: -119815, l: 52 }, { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 }, { h: 25, s: -119919, l: 52 }, { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 }, { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 }, { h: 25, s: -120075, l: 52 }, { h: 25, s: -120127, l: 52 }, { h: 25, s: -120179, l: 52 }, { h: 25, s: -120231, l: 52 }, { h: 25, s: -120283, l: 52 }, { h: 25, s: -120335, l: 52 }, { h: 24, s: -119543, e: [17], l: 56 }, { h: 24, s: -119601, e: [17], l: 58 }, { h: 24, s: -119659, e: [17], l: 58 }, { h: 24, s: -119717, e: [17], l: 58 }, { h: 24, s: -119775, e: [17], l: 58 }]; var U = createTable("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"); var X = createTable("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"); var G = createTable("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", bytes2); var V = createRangeTable("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001"); function flatten(T) { return T.reduce((function (T, B) { B.forEach((function (B) { T.push(B) })); return T }), []) } function _nameprepTableA1(T) { return !!matchMap(T, I) } B._nameprepTableA1 = _nameprepTableA1; function _nameprepTableB2(T) { var B = matchMap(T, H); if (B) { return [T + B.s] } var N = U[T]; if (N) { return N } var L = X[T]; if (L) { return [T + L[0]] } var I = G[T]; if (I) { return I } return null } B._nameprepTableB2 = _nameprepTableB2; function _nameprepTableC(T) { return !!matchMap(T, V) } B._nameprepTableC = _nameprepTableC; function nameprep(T) { if (T.match(/^[a-z0-9-]*$/i) && T.length <= 59) { return T.toLowerCase() } var B = (0, L.toUtf8CodePoints)(T); B = flatten(B.map((function (T) { if (J.indexOf(T) >= 0) { return [] } if (T >= 65024 && T <= 65039) { return [] } var B = _nameprepTableB2(T); if (B) { return B } return [T] }))); B = (0, L.toUtf8CodePoints)((0, L._toUtf8String)(B), L.UnicodeNormalizationForm.NFKC); B.forEach((function (T) { if (_nameprepTableC(T)) { throw new Error("STRINGPREP_CONTAINS_PROHIBITED") } })); B.forEach((function (T) { if (_nameprepTableA1(T)) { throw new Error("STRINGPREP_CONTAINS_UNASSIGNED") } })); var N = (0, L._toUtf8String)(B); if (N.substring(0, 1) === "-" || N.substring(2, 4) === "--" || N.substring(N.length - 1) === "-") { throw new Error("invalid hyphen") } return N } B.nameprep = nameprep }, 3859: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.nameprep = B.parseBytes32String = B.formatBytes32String = B.UnicodeNormalizationForm = B.Utf8ErrorReason = B.Utf8ErrorFuncs = B.toUtf8String = B.toUtf8CodePoints = B.toUtf8Bytes = B._toEscapedUtf8String = void 0; var L = N(4145); Object.defineProperty(B, "formatBytes32String", { enumerable: true, get: function () { return L.formatBytes32String } }); Object.defineProperty(B, "parseBytes32String", { enumerable: true, get: function () { return L.parseBytes32String } }); var I = N(1063); Object.defineProperty(B, "nameprep", { enumerable: true, get: function () { return I.nameprep } }); var J = N(1996); Object.defineProperty(B, "_toEscapedUtf8String", { enumerable: true, get: function () { return J._toEscapedUtf8String } }); Object.defineProperty(B, "toUtf8Bytes", { enumerable: true, get: function () { return J.toUtf8Bytes } }); Object.defineProperty(B, "toUtf8CodePoints", { enumerable: true, get: function () { return J.toUtf8CodePoints } }); Object.defineProperty(B, "toUtf8String", { enumerable: true, get: function () { return J.toUtf8String } }); Object.defineProperty(B, "UnicodeNormalizationForm", { enumerable: true, get: function () { return J.UnicodeNormalizationForm } }); Object.defineProperty(B, "Utf8ErrorFuncs", { enumerable: true, get: function () { return J.Utf8ErrorFuncs } }); Object.defineProperty(B, "Utf8ErrorReason", { enumerable: true, get: function () { return J.Utf8ErrorReason } }) }, 1996: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.toUtf8CodePoints = B.toUtf8String = B._toUtf8String = B._toEscapedUtf8String = B.toUtf8Bytes = B.Utf8ErrorFuncs = B.Utf8ErrorReason = B.UnicodeNormalizationForm = void 0; var L = N(2006); var I = N(6127); var J = N(5988); var H = new I.Logger(J.version); var U; (function (T) { T["current"] = ""; T["NFC"] = "NFC"; T["NFD"] = "NFD"; T["NFKC"] = "NFKC"; T["NFKD"] = "NFKD" })(U = B.UnicodeNormalizationForm || (B.UnicodeNormalizationForm = {})); var X; (function (T) { T["UNEXPECTED_CONTINUE"] = "unexpected continuation byte"; T["BAD_PREFIX"] = "bad codepoint prefix"; T["OVERRUN"] = "string overrun"; T["MISSING_CONTINUE"] = "missing continuation byte"; T["OUT_OF_RANGE"] = "out of UTF-8 range"; T["UTF16_SURROGATE"] = "UTF-16 surrogate"; T["OVERLONG"] = "overlong representation" })(X = B.Utf8ErrorReason || (B.Utf8ErrorReason = {})); function errorFunc(T, B, N, L, I) { return H.throwArgumentError("invalid codepoint at offset " + B + "; " + T, "bytes", N) } function ignoreFunc(T, B, N, L, I) { if (T === X.BAD_PREFIX || T === X.UNEXPECTED_CONTINUE) { var J = 0; for (var H = B + 1; H < N.length; H++) { if (N[H] >> 6 !== 2) { break } J++ } return J } if (T === X.OVERRUN) { return N.length - B - 1 } return 0 } function replaceFunc(T, B, N, L, I) { if (T === X.OVERLONG) { L.push(I); return 0 } L.push(65533); return ignoreFunc(T, B, N, L, I) } B.Utf8ErrorFuncs = Object.freeze({ error: errorFunc, ignore: ignoreFunc, replace: replaceFunc }); function getUtf8CodePoints(T, N) { if (N == null) { N = B.Utf8ErrorFuncs.error } T = (0, L.arrayify)(T); var I = []; var J = 0; while (J < T.length) { var H = T[J++]; if (H >> 7 === 0) { I.push(H); continue } var U = null; var G = null; if ((H & 224) === 192) { U = 1; G = 127 } else if ((H & 240) === 224) { U = 2; G = 2047 } else if ((H & 248) === 240) { U = 3; G = 65535 } else { if ((H & 192) === 128) { J += N(X.UNEXPECTED_CONTINUE, J - 1, T, I) } else { J += N(X.BAD_PREFIX, J - 1, T, I) } continue } if (J - 1 + U >= T.length) { J += N(X.OVERRUN, J - 1, T, I); continue } var V = H & (1 << 8 - U - 1) - 1; for (var Z = 0; Z < U; Z++) { var W = T[J]; if ((W & 192) != 128) { J += N(X.MISSING_CONTINUE, J, T, I); V = null; break } V = V << 6 | W & 63; J++ } if (V === null) { continue } if (V > 1114111) { J += N(X.OUT_OF_RANGE, J - 1 - U, T, I, V); continue } if (V >= 55296 && V <= 57343) { J += N(X.UTF16_SURROGATE, J - 1 - U, T, I, V); continue } if (V <= G) { J += N(X.OVERLONG, J - 1 - U, T, I, V); continue } I.push(V) } return I } function toUtf8Bytes(T, B) { if (B === void 0) { B = U.current } if (B != U.current) { H.checkNormalize(); T = T.normalize(B) } var N = []; for (var I = 0; I < T.length; I++) { var J = T.charCodeAt(I); if (J < 128) { N.push(J) } else if (J < 2048) { N.push(J >> 6 | 192); N.push(J & 63 | 128) } else if ((J & 64512) == 55296) { I++; var X = T.charCodeAt(I); if (I >= T.length || (X & 64512) !== 56320) { throw new Error("invalid utf-8 string") } var G = 65536 + ((J & 1023) << 10) + (X & 1023); N.push(G >> 18 | 240); N.push(G >> 12 & 63 | 128); N.push(G >> 6 & 63 | 128); N.push(G & 63 | 128) } else { N.push(J >> 12 | 224); N.push(J >> 6 & 63 | 128); N.push(J & 63 | 128) } } return (0, L.arrayify)(N) } B.toUtf8Bytes = toUtf8Bytes; function escapeChar(T) { var B = "0000" + T.toString(16); return "\\u" + B.substring(B.length - 4) } function _toEscapedUtf8String(T, B) { return '"' + getUtf8CodePoints(T, B).map((function (T) { if (T < 256) { switch (T) { case 8: return "\\b"; case 9: return "\\t"; case 10: return "\\n"; case 13: return "\\r"; case 34: return '\\"'; case 92: return "\\\\" }if (T >= 32 && T < 127) { return String.fromCharCode(T) } } if (T <= 65535) { return escapeChar(T) } T -= 65536; return escapeChar((T >> 10 & 1023) + 55296) + escapeChar((T & 1023) + 56320) })).join("") + '"' } B._toEscapedUtf8String = _toEscapedUtf8String; function _toUtf8String(T) { return T.map((function (T) { if (T <= 65535) { return String.fromCharCode(T) } T -= 65536; return String.fromCharCode((T >> 10 & 1023) + 55296, (T & 1023) + 56320) })).join("") } B._toUtf8String = _toUtf8String; function toUtf8String(T, B) { return _toUtf8String(getUtf8CodePoints(T, B)) } B.toUtf8String = toUtf8String; function toUtf8CodePoints(T, B) { if (B === void 0) { B = U.current } return getUtf8CodePoints(toUtf8Bytes(T, B)) } B.toUtf8CodePoints = toUtf8CodePoints }, 3303: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.version = void 0; B.version = "transactions/5.8.0" }, 2394: function (T, B, N) { "use strict"; var L = this && this.__createBinding || (Object.create ? function (T, B, N, L) { if (L === undefined) L = N; Object.defineProperty(T, L, { enumerable: true, get: function () { return B[N] } }) } : function (T, B, N, L) { if (L === undefined) L = N; T[L] = B[N] }); var I = this && this.__setModuleDefault || (Object.create ? function (T, B) { Object.defineProperty(T, "default", { enumerable: true, value: B }) } : function (T, B) { T["default"] = B }); var J = this && this.__importStar || function (T) { if (T && T.__esModule) return T; var B = {}; if (T != null) for (var N in T) if (N !== "default" && Object.prototype.hasOwnProperty.call(T, N)) L(B, T, N); I(B, T); return B }; Object.defineProperty(B, "__esModule", { value: true }); B.parse = B.serialize = B.accessListify = B.recoverAddress = B.computeAddress = B.TransactionTypes = void 0; var H = N(5745); var U = N(8202); var X = N(2006); var G = N(9848); var V = N(6938); var Z = N(1338); var W = J(N(7659)); var q = N(3928); var Q = N(6127); var Y = N(3303); var ff = new Q.Logger(Y.version); var ef; (function (T) { T[T["legacy"] = 0] = "legacy"; T[T["eip2930"] = 1] = "eip2930"; T[T["eip1559"] = 2] = "eip1559" })(ef = B.TransactionTypes || (B.TransactionTypes = {})); function handleAddress(T) { if (T === "0x") { return null } return (0, H.getAddress)(T) } function handleNumber(T) { if (T === "0x") { return G.Zero } return U.BigNumber.from(T) } var tf = [{ name: "nonce", maxLength: 32, numeric: true }, { name: "gasPrice", maxLength: 32, numeric: true }, { name: "gasLimit", maxLength: 32, numeric: true }, { name: "to", length: 20 }, { name: "value", maxLength: 32, numeric: true }, { name: "data" }]; var rf = { chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, type: true, value: true }; function computeAddress(T) { var B = (0, q.computePublicKey)(T); return (0, H.getAddress)((0, X.hexDataSlice)((0, V.keccak256)((0, X.hexDataSlice)(B, 1)), 12)) } B.computeAddress = computeAddress; function recoverAddress(T, B) { return computeAddress((0, q.recoverPublicKey)((0, X.arrayify)(T), B)) } B.recoverAddress = recoverAddress; function formatNumber(T, B) { var N = (0, X.stripZeros)(U.BigNumber.from(T).toHexString()); if (N.length > 32) { ff.throwArgumentError("invalid length for " + B, "transaction:" + B, T) } return N } function accessSetify(T, B) { return { address: (0, H.getAddress)(T), storageKeys: (B || []).map((function (B, N) { if ((0, X.hexDataLength)(B) !== 32) { ff.throwArgumentError("invalid access list storageKey", "accessList[" + T + ":" + N + "]", B) } return B.toLowerCase() })) } } function accessListify(T) { if (Array.isArray(T)) { return T.map((function (T, B) { if (Array.isArray(T)) { if (T.length > 2) { ff.throwArgumentError("access list expected to be [ address, storageKeys[] ]", "value[" + B + "]", T) } return accessSetify(T[0], T[1]) } return accessSetify(T.address, T.storageKeys) })) } var B = Object.keys(T).map((function (B) { var N = T[B].reduce((function (T, B) { T[B] = true; return T }), {}); return accessSetify(B, Object.keys(N).sort()) })); B.sort((function (T, B) { return T.address.localeCompare(B.address) })); return B } B.accessListify = accessListify; function formatAccessList(T) { return accessListify(T).map((function (T) { return [T.address, T.storageKeys] })) } function _serializeEip1559(T, B) { if (T.gasPrice != null) { var N = U.BigNumber.from(T.gasPrice); var L = U.BigNumber.from(T.maxFeePerGas || 0); if (!N.eq(L)) { ff.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", { gasPrice: N, maxFeePerGas: L }) } } var I = [formatNumber(T.chainId || 0, "chainId"), formatNumber(T.nonce || 0, "nonce"), formatNumber(T.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"), formatNumber(T.maxFeePerGas || 0, "maxFeePerGas"), formatNumber(T.gasLimit || 0, "gasLimit"), T.to != null ? (0, H.getAddress)(T.to) : "0x", formatNumber(T.value || 0, "value"), T.data || "0x", formatAccessList(T.accessList || [])]; if (B) { var J = (0, X.splitSignature)(B); I.push(formatNumber(J.recoveryParam, "recoveryParam")); I.push((0, X.stripZeros)(J.r)); I.push((0, X.stripZeros)(J.s)) } return (0, X.hexConcat)(["0x02", W.encode(I)]) } function _serializeEip2930(T, B) { var N = [formatNumber(T.chainId || 0, "chainId"), formatNumber(T.nonce || 0, "nonce"), formatNumber(T.gasPrice || 0, "gasPrice"), formatNumber(T.gasLimit || 0, "gasLimit"), T.to != null ? (0, H.getAddress)(T.to) : "0x", formatNumber(T.value || 0, "value"), T.data || "0x", formatAccessList(T.accessList || [])]; if (B) { var L = (0, X.splitSignature)(B); N.push(formatNumber(L.recoveryParam, "recoveryParam")); N.push((0, X.stripZeros)(L.r)); N.push((0, X.stripZeros)(L.s)) } return (0, X.hexConcat)(["0x01", W.encode(N)]) } function _serialize(T, B) { (0, Z.checkProperties)(T, rf); var N = []; tf.forEach((function (B) { var L = T[B.name] || []; var I = {}; if (B.numeric) { I.hexPad = "left" } L = (0, X.arrayify)((0, X.hexlify)(L, I)); if (B.length && L.length !== B.length && L.length > 0) { ff.throwArgumentError("invalid length for " + B.name, "transaction:" + B.name, L) } if (B.maxLength) { L = (0, X.stripZeros)(L); if (L.length > B.maxLength) { ff.throwArgumentError("invalid length for " + B.name, "transaction:" + B.name, L) } } N.push((0, X.hexlify)(L)) })); var L = 0; if (T.chainId != null) { L = T.chainId; if (typeof L !== "number") { ff.throwArgumentError("invalid transaction.chainId", "transaction", T) } } else if (B && !(0, X.isBytesLike)(B) && B.v > 28) { L = Math.floor((B.v - 35) / 2) } if (L !== 0) { N.push((0, X.hexlify)(L)); N.push("0x"); N.push("0x") } if (!B) { return W.encode(N) } var I = (0, X.splitSignature)(B); var J = 27 + I.recoveryParam; if (L !== 0) { N.pop(); N.pop(); N.pop(); J += L * 2 + 8; if (I.v > 28 && I.v !== J) { ff.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", B) } } else if (I.v !== J) { ff.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", B) } N.push((0, X.hexlify)(J)); N.push((0, X.stripZeros)((0, X.arrayify)(I.r))); N.push((0, X.stripZeros)((0, X.arrayify)(I.s))); return W.encode(N) } function serialize(T, B) { if (T.type == null || T.type === 0) { if (T.accessList != null) { ff.throwArgumentError("untyped transactions do not support accessList; include type: 1", "transaction", T) } return _serialize(T, B) } switch (T.type) { case 1: return _serializeEip2930(T, B); case 2: return _serializeEip1559(T, B); default: break }return ff.throwError("unsupported transaction type: " + T.type, Q.Logger.errors.UNSUPPORTED_OPERATION, { operation: "serializeTransaction", transactionType: T.type }) } B.serialize = serialize; function _parseEipSignature(T, B, N) { try { var L = handleNumber(B[0]).toNumber(); if (L !== 0 && L !== 1) { throw new Error("bad recid") } T.v = L } catch (T) { ff.throwArgumentError("invalid v for transaction type: 1", "v", B[0]) } T.r = (0, X.hexZeroPad)(B[1], 32); T.s = (0, X.hexZeroPad)(B[2], 32); try { var I = (0, V.keccak256)(N(T)); T.from = recoverAddress(I, { r: T.r, s: T.s, recoveryParam: T.v }) } catch (T) { } } function _parseEip1559(T) { var B = W.decode(T.slice(1)); if (B.length !== 9 && B.length !== 12) { ff.throwArgumentError("invalid component count for transaction type: 2", "payload", (0, X.hexlify)(T)) } var N = handleNumber(B[2]); var L = handleNumber(B[3]); var I = { type: 2, chainId: handleNumber(B[0]).toNumber(), nonce: handleNumber(B[1]).toNumber(), maxPriorityFeePerGas: N, maxFeePerGas: L, gasPrice: null, gasLimit: handleNumber(B[4]), to: handleAddress(B[5]), value: handleNumber(B[6]), data: B[7], accessList: accessListify(B[8]) }; if (B.length === 9) { return I } I.hash = (0, V.keccak256)(T); _parseEipSignature(I, B.slice(9), _serializeEip1559); return I } function _parseEip2930(T) { var B = W.decode(T.slice(1)); if (B.length !== 8 && B.length !== 11) { ff.throwArgumentError("invalid component count for transaction type: 1", "payload", (0, X.hexlify)(T)) } var N = { type: 1, chainId: handleNumber(B[0]).toNumber(), nonce: handleNumber(B[1]).toNumber(), gasPrice: handleNumber(B[2]), gasLimit: handleNumber(B[3]), to: handleAddress(B[4]), value: handleNumber(B[5]), data: B[6], accessList: accessListify(B[7]) }; if (B.length === 8) { return N } N.hash = (0, V.keccak256)(T); _parseEipSignature(N, B.slice(8), _serializeEip2930); return N } function _parse(T) { var B = W.decode(T); if (B.length !== 9 && B.length !== 6) { ff.throwArgumentError("invalid raw transaction", "rawTransaction", T) } var N = { nonce: handleNumber(B[0]).toNumber(), gasPrice: handleNumber(B[1]), gasLimit: handleNumber(B[2]), to: handleAddress(B[3]), value: handleNumber(B[4]), data: B[5], chainId: 0 }; if (B.length === 6) { return N } try { N.v = U.BigNumber.from(B[6]).toNumber() } catch (T) { return N } N.r = (0, X.hexZeroPad)(B[7], 32); N.s = (0, X.hexZeroPad)(B[8], 32); if (U.BigNumber.from(N.r).isZero() && U.BigNumber.from(N.s).isZero()) { N.chainId = N.v; N.v = 0 } else { N.chainId = Math.floor((N.v - 35) / 2); if (N.chainId < 0) { N.chainId = 0 } var L = N.v - 27; var I = B.slice(0, 6); if (N.chainId !== 0) { I.push((0, X.hexlify)(N.chainId)); I.push("0x"); I.push("0x"); L -= N.chainId * 2 + 8 } var J = (0, V.keccak256)(W.encode(I)); try { N.from = recoverAddress(J, { r: (0, X.hexlify)(N.r), s: (0, X.hexlify)(N.s), recoveryParam: L }) } catch (T) { } N.hash = (0, V.keccak256)(T) } N.type = null; return N } function parse(T) { var B = (0, X.arrayify)(T); if (B[0] > 127) { return _parse(B) } switch (B[0]) { case 1: return _parseEip2930(B); case 2: return _parseEip1559(B); default: break }return ff.throwError("unsupported transaction type: " + B[0], Q.Logger.errors.UNSUPPORTED_OPERATION, { operation: "parseTransaction", transactionType: B[0] }) } B.parse = parse }, 3867: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.version = void 0; B.version = "wallet/5.8.0" }, 806: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); var I = this && this.__awaiter || function (T, B, N, L) { function adopt(T) { return T instanceof N ? T : new N((function (B) { B(T) })) } return new (N || (N = Promise))((function (N, I) { function fulfilled(T) { try { step(L.next(T)) } catch (T) { I(T) } } function rejected(T) { try { step(L["throw"](T)) } catch (T) { I(T) } } function step(T) { T.done ? N(T.value) : adopt(T.value).then(fulfilled, rejected) } step((L = L.apply(T, B || [])).next()) })) }; var J = this && this.__generator || function (T, B) { var N = { label: 0, sent: function () { if (J[0] & 1) throw J[1]; return J[1] }, trys: [], ops: [] }, L, I, J, H; return H = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (H[Symbol.iterator] = function () { return this }), H; function verb(T) { return function (B) { return step([T, B]) } } function step(H) { if (L) throw new TypeError("Generator is already executing."); while (N) try { if (L = 1, I && (J = H[0] & 2 ? I["return"] : H[0] ? I["throw"] || ((J = I["return"]) && J.call(I), 0) : I.next) && !(J = J.call(I, H[1])).done) return J; if (I = 0, J) H = [H[0] & 2, J.value]; switch (H[0]) { case 0: case 1: J = H; break; case 4: N.label++; return { value: H[1], done: false }; case 5: N.label++; I = H[1]; H = [0]; continue; case 7: H = N.ops.pop(); N.trys.pop(); continue; default: if (!(J = N.trys, J = J.length > 0 && J[J.length - 1]) && (H[0] === 6 || H[0] === 2)) { N = 0; continue } if (H[0] === 3 && (!J || H[1] > J[0] && H[1] < J[3])) { N.label = H[1]; break } if (H[0] === 6 && N.label < J[1]) { N.label = J[1]; J = H; break } if (J && N.label < J[2]) { N.label = J[2]; N.ops.push(H); break } if (J[2]) N.ops.pop(); N.trys.pop(); continue }H = B.call(T, N) } catch (T) { H = [6, T]; I = 0 } finally { L = J = 0 } if (H[0] & 5) throw H[1]; return { value: H[0] ? H[1] : void 0, done: true } } }; Object.defineProperty(B, "__esModule", { value: true }); B.verifyTypedData = B.verifyMessage = B.Wallet = void 0; var H = N(5745); var U = N(2825); var X = N(3870); var G = N(2006); var V = N(1839); var Z = N(3067); var W = N(6938); var q = N(1338); var Q = N(3728); var Y = N(3928); var ff = N(3582); var ef = N(2394); var tf = N(6127); var rf = N(3867); var af = new tf.Logger(rf.version); function isAccount(T) { return T != null && (0, G.isHexString)(T.privateKey, 32) && T.address != null } function hasMnemonic(T) { var B = T.mnemonic; return B && B.phrase } var nf = function (T) { L(Wallet, T); function Wallet(B, N) { var L = T.call(this) || this; if (isAccount(B)) { var I = new Y.SigningKey(B.privateKey); (0, q.defineReadOnly)(L, "_signingKey", (function () { return I })); (0, q.defineReadOnly)(L, "address", (0, ef.computeAddress)(L.publicKey)); if (L.address !== (0, H.getAddress)(B.address)) { af.throwArgumentError("privateKey/address mismatch", "privateKey", "[REDACTED]") } if (hasMnemonic(B)) { var J = B.mnemonic; (0, q.defineReadOnly)(L, "_mnemonic", (function () { return { phrase: J.phrase, path: J.path || Z.defaultPath, locale: J.locale || "en" } })); var X = L.mnemonic; var G = Z.HDNode.fromMnemonic(X.phrase, null, X.locale).derivePath(X.path); if ((0, ef.computeAddress)(G.privateKey) !== L.address) { af.throwArgumentError("mnemonic/address mismatch", "privateKey", "[REDACTED]") } } else { (0, q.defineReadOnly)(L, "_mnemonic", (function () { return null })) } } else { if (Y.SigningKey.isSigningKey(B)) { if (B.curve !== "secp256k1") { af.throwArgumentError("unsupported curve; must be secp256k1", "privateKey", "[REDACTED]") } (0, q.defineReadOnly)(L, "_signingKey", (function () { return B })) } else { if (typeof B === "string") { if (B.match(/^[0-9a-f]*$/i) && B.length === 64) { B = "0x" + B } } var V = new Y.SigningKey(B); (0, q.defineReadOnly)(L, "_signingKey", (function () { return V })) } (0, q.defineReadOnly)(L, "_mnemonic", (function () { return null })); (0, q.defineReadOnly)(L, "address", (0, ef.computeAddress)(L.publicKey)) } if (N && !U.Provider.isProvider(N)) { af.throwArgumentError("invalid provider", "provider", N) } (0, q.defineReadOnly)(L, "provider", N || null); return L } Object.defineProperty(Wallet.prototype, "mnemonic", { get: function () { return this._mnemonic() }, enumerable: false, configurable: true }); Object.defineProperty(Wallet.prototype, "privateKey", { get: function () { return this._signingKey().privateKey }, enumerable: false, configurable: true }); Object.defineProperty(Wallet.prototype, "publicKey", { get: function () { return this._signingKey().publicKey }, enumerable: false, configurable: true }); Wallet.prototype.getAddress = function () { return Promise.resolve(this.address) }; Wallet.prototype.connect = function (T) { return new Wallet(this, T) }; Wallet.prototype.signTransaction = function (T) { var B = this; return (0, q.resolveProperties)(T).then((function (N) { if (N.from != null) { if ((0, H.getAddress)(N.from) !== B.address) { af.throwArgumentError("transaction from address mismatch", "transaction.from", T.from) } delete N.from } var L = B._signingKey().signDigest((0, W.keccak256)((0, ef.serialize)(N))); return (0, ef.serialize)(N, L) })) }; Wallet.prototype.signMessage = function (T) { return I(this, void 0, void 0, (function () { return J(this, (function (B) { return [2, (0, G.joinSignature)(this._signingKey().signDigest((0, V.hashMessage)(T)))] })) })) }; Wallet.prototype._signTypedData = function (T, B, N) { return I(this, void 0, void 0, (function () { var L; var I = this; return J(this, (function (J) { switch (J.label) { case 0: return [4, V._TypedDataEncoder.resolveNames(T, B, N, (function (T) { if (I.provider == null) { af.throwError("cannot resolve ENS names without a provider", tf.Logger.errors.UNSUPPORTED_OPERATION, { operation: "resolveName", value: T }) } return I.provider.resolveName(T) }))]; case 1: L = J.sent(); return [2, (0, G.joinSignature)(this._signingKey().signDigest(V._TypedDataEncoder.hash(L.domain, B, L.value)))] } })) })) }; Wallet.prototype.encrypt = function (T, B, N) { if (typeof B === "function" && !N) { N = B; B = {} } if (N && typeof N !== "function") { throw new Error("invalid callback") } if (!B) { B = {} } return (0, ff.encryptKeystore)(this, T, B, N) }; Wallet.createRandom = function (T) { var B = (0, Q.randomBytes)(16); if (!T) { T = {} } if (T.extraEntropy) { B = (0, G.arrayify)((0, G.hexDataSlice)((0, W.keccak256)((0, G.concat)([B, T.extraEntropy])), 0, 16)) } var N = (0, Z.entropyToMnemonic)(B, T.locale); return Wallet.fromMnemonic(N, T.path, T.locale) }; Wallet.fromEncryptedJson = function (T, B, N) { return (0, ff.decryptJsonWallet)(T, B, N).then((function (T) { return new Wallet(T) })) }; Wallet.fromEncryptedJsonSync = function (T, B) { return new Wallet((0, ff.decryptJsonWalletSync)(T, B)) }; Wallet.fromMnemonic = function (T, B, N) { if (!B) { B = Z.defaultPath } return new Wallet(Z.HDNode.fromMnemonic(T, null, N).derivePath(B)) }; return Wallet }(X.Signer); B.Wallet = nf; function verifyMessage(T, B) { return (0, ef.recoverAddress)((0, V.hashMessage)(T), B) } B.verifyMessage = verifyMessage; function verifyTypedData(T, B, N, L) { return (0, ef.recoverAddress)(V._TypedDataEncoder.hash(T, B, N), L) } B.verifyTypedData = verifyTypedData }, 8136: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.version = void 0; B.version = "web/5.8.0" }, 7730: function (T, B, N) { "use strict"; var L = this && this.__awaiter || function (T, B, N, L) { function adopt(T) { return T instanceof N ? T : new N((function (B) { B(T) })) } return new (N || (N = Promise))((function (N, I) { function fulfilled(T) { try { step(L.next(T)) } catch (T) { I(T) } } function rejected(T) { try { step(L["throw"](T)) } catch (T) { I(T) } } function step(T) { T.done ? N(T.value) : adopt(T.value).then(fulfilled, rejected) } step((L = L.apply(T, B || [])).next()) })) }; var I = this && this.__generator || function (T, B) { var N = { label: 0, sent: function () { if (J[0] & 1) throw J[1]; return J[1] }, trys: [], ops: [] }, L, I, J, H; return H = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (H[Symbol.iterator] = function () { return this }), H; function verb(T) { return function (B) { return step([T, B]) } } function step(H) { if (L) throw new TypeError("Generator is already executing."); while (N) try { if (L = 1, I && (J = H[0] & 2 ? I["return"] : H[0] ? I["throw"] || ((J = I["return"]) && J.call(I), 0) : I.next) && !(J = J.call(I, H[1])).done) return J; if (I = 0, J) H = [H[0] & 2, J.value]; switch (H[0]) { case 0: case 1: J = H; break; case 4: N.label++; return { value: H[1], done: false }; case 5: N.label++; I = H[1]; H = [0]; continue; case 7: H = N.ops.pop(); N.trys.pop(); continue; default: if (!(J = N.trys, J = J.length > 0 && J[J.length - 1]) && (H[0] === 6 || H[0] === 2)) { N = 0; continue } if (H[0] === 3 && (!J || H[1] > J[0] && H[1] < J[3])) { N.label = H[1]; break } if (H[0] === 6 && N.label < J[1]) { N.label = J[1]; J = H; break } if (J && N.label < J[2]) { N.label = J[2]; N.ops.push(H); break } if (J[2]) N.ops.pop(); N.trys.pop(); continue }H = B.call(T, N) } catch (T) { H = [6, T]; I = 0 } finally { L = J = 0 } if (H[0] & 5) throw H[1]; return { value: H[0] ? H[1] : void 0, done: true } } }; var J = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); B.getUrl = void 0; var H = J(N(8611)); var U = J(N(5692)); var X = N(3106); var G = N(7016); var V = N(2006); var Z = N(1338); var W = N(6127); var q = N(8136); var Q = new W.Logger(q.version); function getResponse(T) { return new Promise((function (B, N) { T.once("response", (function (T) { var L = { statusCode: T.statusCode, statusMessage: T.statusMessage, headers: Object.keys(T.headers).reduce((function (B, N) { var L = T.headers[N]; if (Array.isArray(L)) { L = L.join(", ") } B[N] = L; return B }), {}), body: null }; T.on("data", (function (T) { if (L.body == null) { L.body = new Uint8Array(0) } L.body = (0, V.concat)([L.body, T]) })); T.on("end", (function () { if (L.headers["content-encoding"] === "gzip") { L.body = (0, V.arrayify)((0, X.gunzipSync)(L.body)) } B(L) })); T.on("error", (function (T) { T.response = L; N(T) })) })); T.on("error", (function (T) { N(T) })) })) } function nonnull(T) { if (T == null) { return "" } return T } function getUrl(T, B) { return L(this, void 0, void 0, (function () { var N, L, J, X; return I(this, (function (I) { switch (I.label) { case 0: if (B == null) { B = {} } N = (0, G.parse)(T); L = { protocol: nonnull(N.protocol), hostname: nonnull(N.hostname), port: nonnull(N.port), path: nonnull(N.pathname) + nonnull(N.search), method: B.method || "GET", headers: (0, Z.shallowCopy)(B.headers || {}) }; if (B.allowGzip) { L.headers["accept-encoding"] = "gzip" } J = null; switch (nonnull(N.protocol)) { case "http:": J = H.default.request(L); break; case "https:": J = U.default.request(L); break; default: Q.throwError("unsupported protocol " + N.protocol, W.Logger.errors.UNSUPPORTED_OPERATION, { protocol: N.protocol, operation: "request" }) }if (B.body) { J.write(Buffer.from(B.body)) } J.end(); return [4, getResponse(J)]; case 1: X = I.sent(); return [2, X] } })) })) } B.getUrl = getUrl }, 2239: function (T, B, N) { "use strict"; var L = this && this.__awaiter || function (T, B, N, L) { function adopt(T) { return T instanceof N ? T : new N((function (B) { B(T) })) } return new (N || (N = Promise))((function (N, I) { function fulfilled(T) { try { step(L.next(T)) } catch (T) { I(T) } } function rejected(T) { try { step(L["throw"](T)) } catch (T) { I(T) } } function step(T) { T.done ? N(T.value) : adopt(T.value).then(fulfilled, rejected) } step((L = L.apply(T, B || [])).next()) })) }; var I = this && this.__generator || function (T, B) { var N = { label: 0, sent: function () { if (J[0] & 1) throw J[1]; return J[1] }, trys: [], ops: [] }, L, I, J, H; return H = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (H[Symbol.iterator] = function () { return this }), H; function verb(T) { return function (B) { return step([T, B]) } } function step(H) { if (L) throw new TypeError("Generator is already executing."); while (N) try { if (L = 1, I && (J = H[0] & 2 ? I["return"] : H[0] ? I["throw"] || ((J = I["return"]) && J.call(I), 0) : I.next) && !(J = J.call(I, H[1])).done) return J; if (I = 0, J) H = [H[0] & 2, J.value]; switch (H[0]) { case 0: case 1: J = H; break; case 4: N.label++; return { value: H[1], done: false }; case 5: N.label++; I = H[1]; H = [0]; continue; case 7: H = N.ops.pop(); N.trys.pop(); continue; default: if (!(J = N.trys, J = J.length > 0 && J[J.length - 1]) && (H[0] === 6 || H[0] === 2)) { N = 0; continue } if (H[0] === 3 && (!J || H[1] > J[0] && H[1] < J[3])) { N.label = H[1]; break } if (H[0] === 6 && N.label < J[1]) { N.label = J[1]; J = H; break } if (J && N.label < J[2]) { N.label = J[2]; N.ops.push(H); break } if (J[2]) N.ops.pop(); N.trys.pop(); continue }H = B.call(T, N) } catch (T) { H = [6, T]; I = 0 } finally { L = J = 0 } if (H[0] & 5) throw H[1]; return { value: H[0] ? H[1] : void 0, done: true } } }; Object.defineProperty(B, "__esModule", { value: true }); B.poll = B.fetchJson = B._fetchData = void 0; var J = N(9032); var H = N(2006); var U = N(1338); var X = N(3859); var G = N(6127); var V = N(8136); var Z = new G.Logger(V.version); var W = N(7730); function staller(T) { return new Promise((function (B) { setTimeout(B, T) })) } function bodyify(T, B) { if (T == null) { return null } if (typeof T === "string") { return T } if ((0, H.isBytesLike)(T)) { if (B && (B.split("/")[0] === "text" || B.split(";")[0].trim() === "application/json")) { try { return (0, X.toUtf8String)(T) } catch (T) { } } return (0, H.hexlify)(T) } return T } function unpercent(T) { return (0, X.toUtf8Bytes)(T.replace(/%([0-9a-f][0-9a-f])/gi, (function (T, B) { return String.fromCharCode(parseInt(B, 16)) }))) } function _fetchData(T, B, N) { var H = typeof T === "object" && T.throttleLimit != null ? T.throttleLimit : 12; Z.assertArgument(H > 0 && H % 1 === 0, "invalid connection throttle limit", "connection.throttleLimit", H); var V = typeof T === "object" ? T.throttleCallback : null; var q = typeof T === "object" && typeof T.throttleSlotInterval === "number" ? T.throttleSlotInterval : 100; Z.assertArgument(q > 0 && q % 1 === 0, "invalid connection throttle slot interval", "connection.throttleSlotInterval", q); var Q = typeof T === "object" ? !!T.errorPassThrough : false; var Y = {}; var ff = null; var ef = { method: "GET" }; var tf = false; var rf = 2 * 60 * 1e3; if (typeof T === "string") { ff = T } else if (typeof T === "object") { if (T == null || T.url == null) { Z.throwArgumentError("missing URL", "connection.url", T) } ff = T.url; if (typeof T.timeout === "number" && T.timeout > 0) { rf = T.timeout } if (T.headers) { for (var af in T.headers) { Y[af.toLowerCase()] = { key: af, value: String(T.headers[af]) }; if (["if-none-match", "if-modified-since"].indexOf(af.toLowerCase()) >= 0) { tf = true } } } ef.allowGzip = !!T.allowGzip; if (T.user != null && T.password != null) { if (ff.substring(0, 6) !== "https:" && T.allowInsecureAuthentication !== true) { Z.throwError("basic authentication requires a secure https url", G.Logger.errors.INVALID_ARGUMENT, { argument: "url", url: ff, user: T.user, password: "[REDACTED]" }) } var nf = T.user + ":" + T.password; Y["authorization"] = { key: "Authorization", value: "Basic " + (0, J.encode)((0, X.toUtf8Bytes)(nf)) } } if (T.skipFetchSetup != null) { ef.skipFetchSetup = !!T.skipFetchSetup } if (T.fetchOptions != null) { ef.fetchOptions = (0, U.shallowCopy)(T.fetchOptions) } } var of = new RegExp("^data:([^;:]*)?(;base64)?,(.*)$", "i"); var sf = ff ? ff.match(of) : null; if (sf) { try { var cf = { statusCode: 200, statusMessage: "OK", headers: { "content-type": sf[1] || "text/plain" }, body: sf[2] ? (0, J.decode)(sf[3]) : unpercent(sf[3]) }; var bf = cf.body; if (N) { bf = N(cf.body, cf) } return Promise.resolve(bf) } catch (T) { Z.throwError("processing response error", G.Logger.errors.SERVER_ERROR, { body: bodyify(sf[1], sf[2]), error: T, requestBody: null, requestMethod: "GET", url: ff }) } } if (B) { ef.method = "POST"; ef.body = B; if (Y["content-type"] == null) { Y["content-type"] = { key: "Content-Type", value: "application/octet-stream" } } if (Y["content-length"] == null) { Y["content-length"] = { key: "Content-Length", value: String(B.length) } } } var df = {}; Object.keys(Y).forEach((function (T) { var B = Y[T]; df[B.key] = B.value })); ef.headers = df; var uf = function () { var T = null; var B = new Promise((function (B, N) { if (rf) { T = setTimeout((function () { if (T == null) { return } T = null; N(Z.makeError("timeout", G.Logger.errors.TIMEOUT, { requestBody: bodyify(ef.body, df["content-type"]), requestMethod: ef.method, timeout: rf, url: ff })) }), rf) } })); var cancel = function () { if (T == null) { return } clearTimeout(T); T = null }; return { promise: B, cancel: cancel } }(); var lf = function () { return L(this, void 0, void 0, (function () { var T, B, L, J, U, X, Y, rf, af, nf, J, of; return I(this, (function (I) { switch (I.label) { case 0: T = 0; I.label = 1; case 1: if (!(T < H)) return [3, 20]; B = null; I.label = 2; case 2: I.trys.push([2, 9, , 10]); return [4, (0, W.getUrl)(ff, ef)]; case 3: B = I.sent(); if (!(T < H)) return [3, 8]; if (!(B.statusCode === 301 || B.statusCode === 302)) return [3, 4]; L = B.headers.location || ""; if (ef.method === "GET" && L.match(/^https:/)) { ff = B.headers.location; return [3, 19] } return [3, 8]; case 4: if (!(B.statusCode === 429)) return [3, 8]; J = true; if (!V) return [3, 6]; return [4, V(T, ff)]; case 5: J = I.sent(); I.label = 6; case 6: if (!J) return [3, 8]; U = 0; X = B.headers["retry-after"]; if (typeof X === "string" && X.match(/^[1-9][0-9]*$/)) { U = parseInt(X) * 1e3 } else { U = q * parseInt(String(Math.random() * Math.pow(2, T))) } return [4, staller(U)]; case 7: I.sent(); return [3, 19]; case 8: return [3, 10]; case 9: Y = I.sent(); B = Y.response; if (B == null) { uf.cancel(); Z.throwError("missing response", G.Logger.errors.SERVER_ERROR, { requestBody: bodyify(ef.body, df["content-type"]), requestMethod: ef.method, serverError: Y, url: ff }) } return [3, 10]; case 10: rf = B.body; if (tf && B.statusCode === 304) { rf = null } else if (!Q && (B.statusCode < 200 || B.statusCode >= 300)) { uf.cancel(); Z.throwError("bad response", G.Logger.errors.SERVER_ERROR, { status: B.statusCode, headers: B.headers, body: bodyify(rf, B.headers ? B.headers["content-type"] : null), requestBody: bodyify(ef.body, df["content-type"]), requestMethod: ef.method, url: ff }) } if (!N) return [3, 18]; I.label = 11; case 11: I.trys.push([11, 13, , 18]); return [4, N(rf, B)]; case 12: af = I.sent(); uf.cancel(); return [2, af]; case 13: nf = I.sent(); if (!(nf.throttleRetry && T < H)) return [3, 17]; J = true; if (!V) return [3, 15]; return [4, V(T, ff)]; case 14: J = I.sent(); I.label = 15; case 15: if (!J) return [3, 17]; of = q * parseInt(String(Math.random() * Math.pow(2, T))); return [4, staller(of)]; case 16: I.sent(); return [3, 19]; case 17: uf.cancel(); Z.throwError("processing response error", G.Logger.errors.SERVER_ERROR, { body: bodyify(rf, B.headers ? B.headers["content-type"] : null), error: nf, requestBody: bodyify(ef.body, df["content-type"]), requestMethod: ef.method, url: ff }); return [3, 18]; case 18: uf.cancel(); return [2, rf]; case 19: T++; return [3, 1]; case 20: return [2, Z.throwError("failed response", G.Logger.errors.SERVER_ERROR, { requestBody: bodyify(ef.body, df["content-type"]), requestMethod: ef.method, url: ff })] } })) })) }(); return Promise.race([uf.promise, lf]) } B._fetchData = _fetchData; function fetchJson(T, B, N) { var processJsonFunc = function (T, B) { var L = null; if (T != null) { try { L = JSON.parse((0, X.toUtf8String)(T)) } catch (B) { Z.throwError("invalid JSON", G.Logger.errors.SERVER_ERROR, { body: T, error: B }) } } if (N) { L = N(L, B) } return L }; var L = null; if (B != null) { L = (0, X.toUtf8Bytes)(B); var I = typeof T === "string" ? { url: T } : (0, U.shallowCopy)(T); if (I.headers) { var J = Object.keys(I.headers).filter((function (T) { return T.toLowerCase() === "content-type" })).length !== 0; if (!J) { I.headers = (0, U.shallowCopy)(I.headers); I.headers["content-type"] = "application/json" } } else { I.headers = { "content-type": "application/json" } } T = I } return _fetchData(T, L, processJsonFunc) } B.fetchJson = fetchJson; function poll(T, B) { if (!B) { B = {} } B = (0, U.shallowCopy)(B); if (B.floor == null) { B.floor = 0 } if (B.ceiling == null) { B.ceiling = 1e4 } if (B.interval == null) { B.interval = 250 } return new Promise((function (N, L) { var I = null; var J = false; var cancel = function () { if (J) { return false } J = true; if (I) { clearTimeout(I) } return true }; if (B.timeout) { I = setTimeout((function () { if (cancel()) { L(new Error("timeout")) } }), B.timeout) } var H = B.retryLimit; var U = 0; function check() { return T().then((function (T) { if (T !== undefined) { if (cancel()) { N(T) } } else if (B.oncePoll) { B.oncePoll.once("poll", check) } else if (B.onceBlock) { B.onceBlock.once("block", check) } else if (!J) { U++; if (U > H) { if (cancel()) { L(new Error("retry limit reached")) } return } var I = B.interval * parseInt(String(Math.random() * Math.pow(2, U))); if (I < B.floor) { I = B.floor } if (I > B.ceiling) { I = B.ceiling } setTimeout(check, I) } return null }), (function (T) { if (cancel()) { L(T) } })) } check() })) } B.poll = poll }, 7141: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.version = void 0; B.version = "wordlists/5.8.0" }, 8168: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.wordlists = B.Wordlist = B.logger = void 0; var L = N(8210); Object.defineProperty(B, "logger", { enumerable: true, get: function () { return L.logger } }); Object.defineProperty(B, "Wordlist", { enumerable: true, get: function () { return L.Wordlist } }); var I = N(1057); Object.defineProperty(B, "wordlists", { enumerable: true, get: function () { return I.wordlists } }) }, 3994: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.langCz = void 0; var I = N(8210); var J = "AbdikaceAbecedaAdresaAgreseAkceAktovkaAlejAlkoholAmputaceAnanasAndulkaAnekdotaAnketaAntikaAnulovatArchaAroganceAsfaltAsistentAspiraceAstmaAstronomAtlasAtletikaAtolAutobusAzylBabkaBachorBacilBaculkaBadatelBagetaBagrBahnoBakterieBaladaBaletkaBalkonBalonekBalvanBalzaBambusBankomatBarbarBaretBarmanBarokoBarvaBaterkaBatohBavlnaBazalkaBazilikaBazukaBednaBeranBesedaBestieBetonBezinkaBezmocBeztakBicyklBidloBiftekBikinyBilanceBiografBiologBitvaBizonBlahobytBlatouchBlechaBleduleBleskBlikatBliznaBlokovatBlouditBludBobekBobrBodlinaBodnoutBohatostBojkotBojovatBokorysBolestBorecBoroviceBotaBoubelBouchatBoudaBouleBouratBoxerBradavkaBramboraBrankaBratrBreptaBriketaBrkoBrlohBronzBroskevBrunetkaBrusinkaBrzdaBrzyBublinaBubnovatBuchtaBuditelBudkaBudovaBufetBujarostBukviceBuldokBulvaBundaBunkrBurzaButikBuvolBuzolaBydletBylinaBytovkaBzukotCapartCarevnaCedrCeduleCejchCejnCelaCelerCelkemCelniceCeninaCennostCenovkaCentrumCenzorCestopisCetkaChalupaChapadloCharitaChataChechtatChemieChichotChirurgChladChlebaChlubitChmelChmuraChobotChocholChodbaCholeraChomoutChopitChorobaChovChrapotChrlitChrtChrupChtivostChudinaChutnatChvatChvilkaChvostChybaChystatChytitCibuleCigaretaCihelnaCihlaCinkotCirkusCisternaCitaceCitrusCizinecCizostClonaCokolivCouvatCtitelCtnostCudnostCuketaCukrCupotCvaknoutCvalCvikCvrkotCyklistaDalekoDarebaDatelDatumDceraDebataDechovkaDecibelDeficitDeflaceDeklDekretDemokratDepreseDerbyDeskaDetektivDikobrazDiktovatDiodaDiplomDiskDisplejDivadloDivochDlahaDlouhoDluhopisDnesDobroDobytekDocentDochutitDodnesDohledDohodaDohraDojemDojniceDokladDokolaDoktorDokumentDolarDolevaDolinaDomaDominantDomluvitDomovDonutitDopadDopisDoplnitDoposudDoprovodDopustitDorazitDorostDortDosahDoslovDostatekDosudDosytaDotazDotekDotknoutDoufatDoutnatDovozceDozaduDoznatDozorceDrahotaDrakDramatikDravecDrazeDrdolDrobnostDrogerieDrozdDrsnostDrtitDrzostDubenDuchovnoDudekDuhaDuhovkaDusitDusnoDutostDvojiceDvorecDynamitEkologEkonomieElektronElipsaEmailEmiseEmoceEmpatieEpizodaEpochaEpopejEposEsejEsenceEskortaEskymoEtiketaEuforieEvoluceExekuceExkurzeExpediceExplozeExportExtraktFackaFajfkaFakultaFanatikFantazieFarmacieFavoritFazoleFederaceFejetonFenkaFialkaFigurantFilozofFiltrFinanceFintaFixaceFjordFlanelFlirtFlotilaFondFosforFotbalFotkaFotonFrakceFreskaFrontaFukarFunkceFyzikaGalejeGarantGenetikaGeologGilotinaGlazuraGlejtGolemGolfistaGotikaGrafGramofonGranuleGrepGrilGrogGroteskaGumaHadiceHadrHalaHalenkaHanbaHanopisHarfaHarpunaHavranHebkostHejkalHejnoHejtmanHektarHelmaHematomHerecHernaHesloHezkyHistorikHladovkaHlasivkyHlavaHledatHlenHlodavecHlohHloupostHltatHlubinaHluchotaHmatHmotaHmyzHnisHnojivoHnoutHoblinaHobojHochHodinyHodlatHodnotaHodovatHojnostHokejHolinkaHolkaHolubHomoleHonitbaHonoraceHoralHordaHorizontHorkoHorlivecHormonHorninaHoroskopHorstvoHospodaHostinaHotovostHoubaHoufHoupatHouskaHovorHradbaHraniceHravostHrazdaHrbolekHrdinaHrdloHrdostHrnekHrobkaHromadaHrotHroudaHrozenHrstkaHrubostHryzatHubenostHubnoutHudbaHukotHumrHusitaHustotaHvozdHybnostHydrantHygienaHymnaHysterikIdylkaIhnedIkonaIluzeImunitaInfekceInflaceInkasoInovaceInspekceInternetInvalidaInvestorInzerceIronieJablkoJachtaJahodaJakmileJakostJalovecJantarJarmarkJaroJasanJasnoJatkaJavorJazykJedinecJedleJednatelJehlanJekotJelenJelitoJemnostJenomJepiceJeseterJevitJezdecJezeroJinakJindyJinochJiskraJistotaJitrniceJizvaJmenovatJogurtJurtaKabaretKabelKabinetKachnaKadetKadidloKahanKajakKajutaKakaoKaktusKalamitaKalhotyKalibrKalnostKameraKamkolivKamnaKanibalKanoeKantorKapalinaKapelaKapitolaKapkaKapleKapotaKaprKapustaKapybaraKaramelKarotkaKartonKasaKatalogKatedraKauceKauzaKavalecKazajkaKazetaKazivostKdekolivKdesiKedlubenKempKeramikaKinoKlacekKladivoKlamKlapotKlasikaKlaunKlecKlenbaKlepatKlesnoutKlidKlimaKlisnaKloboukKlokanKlopaKloubKlubovnaKlusatKluzkostKmenKmitatKmotrKnihaKnotKoaliceKoberecKobkaKoblihaKobylaKocourKohoutKojenecKokosKoktejlKolapsKoledaKolizeKoloKomandoKometaKomikKomnataKomoraKompasKomunitaKonatKonceptKondiceKonecKonfeseKongresKoninaKonkursKontaktKonzervaKopanecKopieKopnoutKoprovkaKorbelKorektorKormidloKoroptevKorpusKorunaKorytoKorzetKosatecKostkaKotelKotletaKotoulKoukatKoupelnaKousekKouzloKovbojKozaKozorohKrabiceKrachKrajinaKralovatKrasopisKravataKreditKrejcarKresbaKrevetaKriketKritikKrizeKrkavecKrmelecKrmivoKrocanKrokKronikaKropitKroupaKrovkaKrtekKruhadloKrupiceKrutostKrvinkaKrychleKryptaKrystalKrytKudlankaKufrKujnostKuklaKulajdaKulichKulkaKulometKulturaKunaKupodivuKurtKurzorKutilKvalitaKvasinkaKvestorKynologKyselinaKytaraKyticeKytkaKytovecKyvadloLabradorLachtanLadnostLaikLakomecLamelaLampaLanovkaLasiceLasoLasturaLatinkaLavinaLebkaLeckdyLedenLedniceLedovkaLedvinaLegendaLegieLegraceLehceLehkostLehnoutLektvarLenochodLentilkaLepenkaLepidloLetadloLetecLetmoLetokruhLevhartLevitaceLevobokLibraLichotkaLidojedLidskostLihovinaLijavecLilekLimetkaLinieLinkaLinoleumListopadLitinaLitovatLobistaLodivodLogikaLogopedLokalitaLoketLomcovatLopataLopuchLordLososLotrLoudalLouhLoukaLouskatLovecLstivostLucernaLuciferLumpLuskLustraceLviceLyraLyrikaLysinaMadamMadloMagistrMahagonMajetekMajitelMajoritaMakakMakoviceMakrelaMalbaMalinaMalovatMalviceMaminkaMandleMankoMarnostMasakrMaskotMasopustMaticeMatrikaMaturitaMazanecMazivoMazlitMazurkaMdlobaMechanikMeditaceMedovinaMelasaMelounMentolkaMetlaMetodaMetrMezeraMigraceMihnoutMihuleMikinaMikrofonMilenecMilimetrMilostMimikaMincovnaMinibarMinometMinulostMiskaMistrMixovatMladostMlhaMlhovinaMlokMlsatMluvitMnichMnohemMobilMocnostModelkaModlitbaMohylaMokroMolekulaMomentkaMonarchaMonoklMonstrumMontovatMonzunMosazMoskytMostMotivaceMotorkaMotykaMouchaMoudrostMozaikaMozekMozolMramorMravenecMrkevMrtvolaMrzetMrzutostMstitelMudrcMuflonMulatMumieMuniceMusetMutaceMuzeumMuzikantMyslivecMzdaNabouratNachytatNadaceNadbytekNadhozNadobroNadpisNahlasNahnatNahodileNahraditNaivitaNajednouNajistoNajmoutNaklonitNakonecNakrmitNalevoNamazatNamluvitNanometrNaokoNaopakNaostroNapadatNapevnoNaplnitNapnoutNaposledNaprostoNaroditNarubyNarychloNasaditNasekatNaslepoNastatNatolikNavenekNavrchNavzdoryNazvatNebeNechatNeckyNedalekoNedbatNeduhNegaceNehetNehodaNejenNejprveNeklidNelibostNemilostNemocNeochotaNeonkaNepokojNerostNervNesmyslNesouladNetvorNeuronNevinaNezvykleNicotaNijakNikamNikdyNiklNikterakNitroNoclehNohaviceNominaceNoraNorekNositelNosnostNouzeNovinyNovotaNozdraNudaNudleNugetNutitNutnostNutrieNymfaObalObarvitObavaObdivObecObehnatObejmoutObezitaObhajobaObilniceObjasnitObjektObklopitOblastOblekOblibaOblohaObludaObnosObohatitObojekOboutObrazecObrnaObrubaObrysObsahObsluhaObstaratObuvObvazObvinitObvodObvykleObyvatelObzorOcasOcelOcenitOchladitOchotaOchranaOcitnoutOdbojOdbytOdchodOdcizitOdebratOdeslatOdevzdatOdezvaOdhadceOdhoditOdjetOdjinudOdkazOdkoupitOdlivOdlukaOdmlkaOdolnostOdpadOdpisOdploutOdporOdpustitOdpykatOdrazkaOdsouditOdstupOdsunOdtokOdtudOdvahaOdvetaOdvolatOdvracetOdznakOfinaOfsajdOhlasOhniskoOhradaOhrozitOhryzekOkapOkeniceOklikaOknoOkouzlitOkovyOkrasaOkresOkrsekOkruhOkupantOkurkaOkusitOlejninaOlizovatOmakOmeletaOmezitOmladinaOmlouvatOmluvaOmylOnehdyOpakovatOpasekOperaceOpiceOpilostOpisovatOporaOpoziceOpravduOprotiOrbitalOrchestrOrgieOrliceOrlojOrtelOsadaOschnoutOsikaOsivoOslavaOslepitOslnitOslovitOsnovaOsobaOsolitOspalecOstenOstrahaOstudaOstychOsvojitOteplitOtiskOtopOtrhatOtrlostOtrokOtrubyOtvorOvanoutOvarOvesOvlivnitOvoceOxidOzdobaPachatelPacientPadouchPahorekPaktPalandaPalecPalivoPalubaPamfletPamlsekPanenkaPanikaPannaPanovatPanstvoPantoflePaprikaParketaParodiePartaParukaParybaPasekaPasivitaPastelkaPatentPatronaPavoukPaznehtPazourekPeckaPedagogPejsekPekloPelotonPenaltaPendrekPenzePeriskopPeroPestrostPetardaPeticePetrolejPevninaPexesoPianistaPihaPijavicePiklePiknikPilinaPilnostPilulkaPinzetaPipetaPisatelPistolePitevnaPivnicePivovarPlacentaPlakatPlamenPlanetaPlastikaPlatitPlavidloPlazPlechPlemenoPlentaPlesPletivoPlevelPlivatPlnitPlnoPlochaPlodinaPlombaPloutPlukPlynPobavitPobytPochodPocitPoctivecPodatPodcenitPodepsatPodhledPodivitPodkladPodmanitPodnikPodobaPodporaPodrazPodstataPodvodPodzimPoeziePohankaPohnutkaPohovorPohromaPohybPointaPojistkaPojmoutPokazitPoklesPokojPokrokPokutaPokynPolednePolibekPolknoutPolohaPolynomPomaluPominoutPomlkaPomocPomstaPomysletPonechatPonorkaPonurostPopadatPopelPopisekPoplachPoprositPopsatPopudPoradcePorcePorodPoruchaPoryvPosaditPosedPosilaPoskokPoslanecPosouditPospoluPostavaPosudekPosypPotahPotkanPotleskPotomekPotravaPotupaPotvoraPoukazPoutoPouzdroPovahaPovidlaPovlakPovozPovrchPovstatPovykPovzdechPozdravPozemekPoznatekPozorPozvatPracovatPrahoryPraktikaPralesPraotecPraporekPrasePravdaPrincipPrknoProbuditProcentoProdejProfeseProhraProjektProlomitPromilePronikatPropadProrokProsbaProtonProutekProvazPrskavkaPrstenPrudkostPrutPrvekPrvohoryPsanecPsovodPstruhPtactvoPubertaPuchPudlPukavecPuklinaPukrlePultPumpaPuncPupenPusaPusinkaPustinaPutovatPutykaPyramidaPyskPytelRacekRachotRadiaceRadniceRadonRaftRagbyRaketaRakovinaRamenoRampouchRandeRarachRaritaRasovnaRastrRatolestRazanceRazidloReagovatReakceReceptRedaktorReferentReflexRejnokReklamaRekordRekrutRektorReputaceRevizeRevmaRevolverRezervaRiskovatRizikoRobotikaRodokmenRohovkaRokleRokokoRomanetoRopovodRopuchaRorejsRosolRostlinaRotmistrRotopedRotundaRoubenkaRouchoRoupRouraRovinaRovniceRozborRozchodRozdatRozeznatRozhodceRozinkaRozjezdRozkazRozlohaRozmarRozpadRozruchRozsahRoztokRozumRozvodRubrikaRuchadloRukaviceRukopisRybaRybolovRychlostRydloRypadloRytinaRyzostSadistaSahatSakoSamecSamizdatSamotaSanitkaSardinkaSasankaSatelitSazbaSazeniceSborSchovatSebrankaSeceseSedadloSedimentSedloSehnatSejmoutSekeraSektaSekundaSekvojeSemenoSenoServisSesaditSeshoraSeskokSeslatSestraSesuvSesypatSetbaSetinaSetkatSetnoutSetrvatSeverSeznamShodaShrnoutSifonSilniceSirkaSirotekSirupSituaceSkafandrSkaliskoSkanzenSkautSkeptikSkicaSkladbaSkleniceSkloSkluzSkobaSkokanSkoroSkriptaSkrzSkupinaSkvostSkvrnaSlabikaSladidloSlaninaSlastSlavnostSledovatSlepecSlevaSlezinaSlibSlinaSlizniceSlonSloupekSlovoSluchSluhaSlunceSlupkaSlzaSmaragdSmetanaSmilstvoSmlouvaSmogSmradSmrkSmrtkaSmutekSmyslSnadSnahaSnobSobotaSochaSodovkaSokolSopkaSotvaSoubojSoucitSoudceSouhlasSouladSoumrakSoupravaSousedSoutokSouvisetSpalovnaSpasitelSpisSplavSpodekSpojenecSpoluSponzorSpornostSpoustaSprchaSpustitSrandaSrazSrdceSrnaSrnecSrovnatSrpenSrstSrubStaniceStarostaStatikaStavbaStehnoStezkaStodolaStolekStopaStornoStoupatStrachStresStrhnoutStromStrunaStudnaStupniceStvolStykSubjektSubtropySucharSudostSuknoSundatSunoutSurikataSurovinaSvahSvalstvoSvetrSvatbaSvazekSvisleSvitekSvobodaSvodidloSvorkaSvrabSykavkaSykotSynekSynovecSypatSypkostSyrovostSyselSytostTabletkaTabuleTahounTajemnoTajfunTajgaTajitTajnostTaktikaTamhleTamponTancovatTanecTankerTapetaTaveninaTazatelTechnikaTehdyTekutinaTelefonTemnotaTendenceTenistaTenorTeplotaTepnaTeprveTerapieTermoskaTextilTichoTiskopisTitulekTkadlecTkaninaTlapkaTleskatTlukotTlupaTmelToaletaTopinkaTopolTorzoTouhaToulecTradiceTraktorTrampTrasaTraverzaTrefitTrestTrezorTrhavinaTrhlinaTrochuTrojiceTroskaTroubaTrpceTrpitelTrpkostTrubecTruchlitTruhliceTrusTrvatTudyTuhnoutTuhostTundraTuristaTurnajTuzemskoTvarohTvorbaTvrdostTvrzTygrTykevUbohostUbozeUbratUbrousekUbrusUbytovnaUchoUctivostUdivitUhraditUjednatUjistitUjmoutUkazatelUklidnitUklonitUkotvitUkrojitUliceUlitaUlovitUmyvadloUnavitUniformaUniknoutUpadnoutUplatnitUplynoutUpoutatUpravitUranUrazitUsednoutUsilovatUsmrtitUsnadnitUsnoutUsouditUstlatUstrnoutUtahovatUtkatUtlumitUtonoutUtopenecUtrousitUvalitUvolnitUvozovkaUzdravitUzelUzeninaUzlinaUznatVagonValchaValounVanaVandalVanilkaVaranVarhanyVarovatVcelkuVchodVdovaVedroVegetaceVejceVelbloudVeletrhVelitelVelmocVelrybaVenkovVerandaVerzeVeselkaVeskrzeVesniceVespoduVestaVeterinaVeverkaVibraceVichrVideohraVidinaVidleVilaViniceVisetVitalitaVizeVizitkaVjezdVkladVkusVlajkaVlakVlasecVlevoVlhkostVlivVlnovkaVloupatVnucovatVnukVodaVodivostVodoznakVodstvoVojenskyVojnaVojskoVolantVolbaVolitVolnoVoskovkaVozidloVozovnaVpravoVrabecVracetVrahVrataVrbaVrcholekVrhatVrstvaVrtuleVsaditVstoupitVstupVtipVybavitVybratVychovatVydatVydraVyfotitVyhledatVyhnoutVyhoditVyhraditVyhubitVyjasnitVyjetVyjmoutVyklopitVykonatVylekatVymazatVymezitVymizetVymysletVynechatVynikatVynutitVypadatVyplatitVypravitVypustitVyrazitVyrovnatVyrvatVyslovitVysokoVystavitVysunoutVysypatVytasitVytesatVytratitVyvinoutVyvolatVyvrhelVyzdobitVyznatVzaduVzbuditVzchopitVzdorVzduchVzdychatVzestupVzhledemVzkazVzlykatVznikVzorekVzpouraVztahVztekXylofonZabratZabydletZachovatZadarmoZadusitZafoukatZahltitZahoditZahradaZahynoutZajatecZajetZajistitZaklepatZakoupitZalepitZamezitZamotatZamysletZanechatZanikatZaplatitZapojitZapsatZarazitZastavitZasunoutZatajitZatemnitZatknoutZaujmoutZavalitZaveletZavinitZavolatZavrtatZazvonitZbavitZbrusuZbudovatZbytekZdalekaZdarmaZdatnostZdivoZdobitZdrojZdvihZdymadloZeleninaZemanZeminaZeptatZezaduZezdolaZhatitZhltnoutZhlubokaZhotovitZhrubaZimaZimniceZjemnitZklamatZkoumatZkratkaZkumavkaZlatoZlehkaZlobaZlomZlostZlozvykZmapovatZmarZmatekZmijeZmizetZmocnitZmodratZmrzlinaZmutovatZnakZnalostZnamenatZnovuZobrazitZotavitZoubekZoufaleZploditZpomalitZpravaZprostitZprudkaZprvuZradaZranitZrcadloZrnitostZrnoZrovnaZrychlitZrzavostZtichaZtratitZubovinaZubrZvednoutZvenkuZveselaZvonZvratZvukovodZvyk"; var H = null; function loadWords(T) { if (H != null) { return } H = J.replace(/([A-Z])/g, " $1").toLowerCase().substring(1).split(" "); if (I.Wordlist.check(T) !== "0x25f44555f4af25b51a711136e1c7d6e50ce9f8917d39d6b1f076b2bb4d2fac1a") { H = null; throw new Error("BIP39 Wordlist for en (English) FAILED") } } var U = function (T) { L(LangCz, T); function LangCz() { return T.call(this, "cz") || this } LangCz.prototype.getWord = function (T) { loadWords(this); return H[T] }; LangCz.prototype.getWordIndex = function (T) { loadWords(this); return H.indexOf(T) }; return LangCz }(I.Wordlist); var X = new U; B.langCz = X; I.Wordlist.register(X) }, 3120: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.langEn = void 0; var I = N(8210); var J = "AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo"; var H = null; function loadWords(T) { if (H != null) { return } H = J.replace(/([A-Z])/g, " $1").toLowerCase().substring(1).split(" "); if (I.Wordlist.check(T) !== "0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60") { H = null; throw new Error("BIP39 Wordlist for en (English) FAILED") } } var U = function (T) { L(LangEn, T); function LangEn() { return T.call(this, "en") || this } LangEn.prototype.getWord = function (T) { loadWords(this); return H[T] }; LangEn.prototype.getWordIndex = function (T) { loadWords(this); return H.indexOf(T) }; return LangEn }(I.Wordlist); var X = new U; B.langEn = X; I.Wordlist.register(X) }, 8091: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.langEs = void 0; var I = N(3859); var J = N(8210); var H = "A/bacoAbdomenAbejaAbiertoAbogadoAbonoAbortoAbrazoAbrirAbueloAbusoAcabarAcademiaAccesoAccio/nAceiteAcelgaAcentoAceptarA/cidoAclararAcne/AcogerAcosoActivoActoActrizActuarAcudirAcuerdoAcusarAdictoAdmitirAdoptarAdornoAduanaAdultoAe/reoAfectarAficio/nAfinarAfirmarA/gilAgitarAgoni/aAgostoAgotarAgregarAgrioAguaAgudoA/guilaAgujaAhogoAhorroAireAislarAjedrezAjenoAjusteAlacra/nAlambreAlarmaAlbaA/lbumAlcaldeAldeaAlegreAlejarAlertaAletaAlfilerAlgaAlgodo/nAliadoAlientoAlivioAlmaAlmejaAlmi/barAltarAltezaAltivoAltoAlturaAlumnoAlzarAmableAmanteAmapolaAmargoAmasarA/mbarA/mbitoAmenoAmigoAmistadAmorAmparoAmplioAnchoAncianoAnclaAndarAnde/nAnemiaA/nguloAnilloA/nimoAni/sAnotarAntenaAntiguoAntojoAnualAnularAnuncioA~adirA~ejoA~oApagarAparatoApetitoApioAplicarApodoAporteApoyoAprenderAprobarApuestaApuroAradoAra~aArarA/rbitroA/rbolArbustoArchivoArcoArderArdillaArduoA/reaA/ridoAriesArmoni/aArne/sAromaArpaArpo/nArregloArrozArrugaArteArtistaAsaAsadoAsaltoAscensoAsegurarAseoAsesorAsientoAsiloAsistirAsnoAsombroA/speroAstillaAstroAstutoAsumirAsuntoAtajoAtaqueAtarAtentoAteoA/ticoAtletaA/tomoAtraerAtrozAtu/nAudazAudioAugeAulaAumentoAusenteAutorAvalAvanceAvaroAveAvellanaAvenaAvestruzAvio/nAvisoAyerAyudaAyunoAzafra/nAzarAzoteAzu/carAzufreAzulBabaBaborBacheBahi/aBaileBajarBalanzaBalco/nBaldeBambu/BancoBandaBa~oBarbaBarcoBarnizBarroBa/sculaBasto/nBasuraBatallaBateri/aBatirBatutaBau/lBazarBebe/BebidaBelloBesarBesoBestiaBichoBienBingoBlancoBloqueBlusaBoaBobinaBoboBocaBocinaBodaBodegaBoinaBolaBoleroBolsaBombaBondadBonitoBonoBonsa/iBordeBorrarBosqueBoteBoti/nBo/vedaBozalBravoBrazoBrechaBreveBrilloBrincoBrisaBrocaBromaBronceBroteBrujaBruscoBrutoBuceoBucleBuenoBueyBufandaBufo/nBu/hoBuitreBultoBurbujaBurlaBurroBuscarButacaBuzo/nCaballoCabezaCabinaCabraCacaoCada/verCadenaCaerCafe/Cai/daCaima/nCajaCajo/nCalCalamarCalcioCaldoCalidadCalleCalmaCalorCalvoCamaCambioCamelloCaminoCampoCa/ncerCandilCanelaCanguroCanicaCantoCa~aCa~o/nCaobaCaosCapazCapita/nCapoteCaptarCapuchaCaraCarbo/nCa/rcelCaretaCargaCari~oCarneCarpetaCarroCartaCasaCascoCaseroCaspaCastorCatorceCatreCaudalCausaCazoCebollaCederCedroCeldaCe/lebreCelosoCe/lulaCementoCenizaCentroCercaCerdoCerezaCeroCerrarCertezaCe/spedCetroChacalChalecoChampu/ChanclaChapaCharlaChicoChisteChivoChoqueChozaChuletaChuparCiclo/nCiegoCieloCienCiertoCifraCigarroCimaCincoCineCintaCipre/sCircoCiruelaCisneCitaCiudadClamorClanClaroClaseClaveClienteClimaCli/nicaCobreCoccio/nCochinoCocinaCocoCo/digoCodoCofreCogerCoheteCoji/nCojoColaColchaColegioColgarColinaCollarColmoColumnaCombateComerComidaCo/modoCompraCondeConejoCongaConocerConsejoContarCopaCopiaCorazo/nCorbataCorchoCordo/nCoronaCorrerCoserCosmosCostaCra/neoCra/terCrearCrecerCrei/doCremaCri/aCrimenCriptaCrisisCromoCro/nicaCroquetaCrudoCruzCuadroCuartoCuatroCuboCubrirCucharaCuelloCuentoCuerdaCuestaCuevaCuidarCulebraCulpaCultoCumbreCumplirCunaCunetaCuotaCupo/nCu/pulaCurarCuriosoCursoCurvaCutisDamaDanzaDarDardoDa/tilDeberDe/bilDe/cadaDecirDedoDefensaDefinirDejarDelfi/nDelgadoDelitoDemoraDensoDentalDeporteDerechoDerrotaDesayunoDeseoDesfileDesnudoDestinoDesvi/oDetalleDetenerDeudaDi/aDiabloDiademaDiamanteDianaDiarioDibujoDictarDienteDietaDiezDifi/cilDignoDilemaDiluirDineroDirectoDirigirDiscoDise~oDisfrazDivaDivinoDobleDoceDolorDomingoDonDonarDoradoDormirDorsoDosDosisDrago/nDrogaDuchaDudaDueloDue~oDulceDu/oDuqueDurarDurezaDuroE/banoEbrioEcharEcoEcuadorEdadEdicio/nEdificioEditorEducarEfectoEficazEjeEjemploElefanteElegirElementoElevarElipseE/liteElixirElogioEludirEmbudoEmitirEmocio/nEmpateEmpe~oEmpleoEmpresaEnanoEncargoEnchufeEnci/aEnemigoEneroEnfadoEnfermoEnga~oEnigmaEnlaceEnormeEnredoEnsayoEnse~arEnteroEntrarEnvaseEnvi/oE/pocaEquipoErizoEscalaEscenaEscolarEscribirEscudoEsenciaEsferaEsfuerzoEspadaEspejoEspi/aEsposaEspumaEsqui/EstarEsteEstiloEstufaEtapaEternoE/ticaEtniaEvadirEvaluarEventoEvitarExactoExamenExcesoExcusaExentoExigirExilioExistirE/xitoExpertoExplicarExponerExtremoFa/bricaFa/bulaFachadaFa/cilFactorFaenaFajaFaldaFalloFalsoFaltarFamaFamiliaFamosoFarao/nFarmaciaFarolFarsaFaseFatigaFaunaFavorFaxFebreroFechaFelizFeoFeriaFerozFe/rtilFervorFesti/nFiableFianzaFiarFibraFiccio/nFichaFideoFiebreFielFieraFiestaFiguraFijarFijoFilaFileteFilialFiltroFinFincaFingirFinitoFirmaFlacoFlautaFlechaFlorFlotaFluirFlujoFlu/orFobiaFocaFogataFogo/nFolioFolletoFondoFormaForroFortunaForzarFosaFotoFracasoFra/gilFranjaFraseFraudeFrei/rFrenoFresaFri/oFritoFrutaFuegoFuenteFuerzaFugaFumarFuncio/nFundaFurgo/nFuriaFusilFu/tbolFuturoGacelaGafasGaitaGajoGalaGaleri/aGalloGambaGanarGanchoGangaGansoGarajeGarzaGasolinaGastarGatoGavila/nGemeloGemirGenGe/neroGenioGenteGeranioGerenteGermenGestoGiganteGimnasioGirarGiroGlaciarGloboGloriaGolGolfoGolosoGolpeGomaGordoGorilaGorraGotaGoteoGozarGradaGra/ficoGranoGrasaGratisGraveGrietaGrilloGripeGrisGritoGrosorGru/aGruesoGrumoGrupoGuanteGuapoGuardiaGuerraGui/aGui~oGuionGuisoGuitarraGusanoGustarHaberHa/bilHablarHacerHachaHadaHallarHamacaHarinaHazHaza~aHebillaHebraHechoHeladoHelioHembraHerirHermanoHe/roeHervirHieloHierroHi/gadoHigieneHijoHimnoHistoriaHocicoHogarHogueraHojaHombreHongoHonorHonraHoraHormigaHornoHostilHoyoHuecoHuelgaHuertaHuesoHuevoHuidaHuirHumanoHu/medoHumildeHumoHundirHuraca/nHurtoIconoIdealIdiomaI/doloIglesiaIglu/IgualIlegalIlusio/nImagenIma/nImitarImparImperioImponerImpulsoIncapazI/ndiceInerteInfielInformeIngenioInicioInmensoInmuneInnatoInsectoInstanteIntere/sI/ntimoIntuirInu/tilInviernoIraIrisIroni/aIslaIsloteJabali/Jabo/nJamo/nJarabeJardi/nJarraJaulaJazmi/nJefeJeringaJineteJornadaJorobaJovenJoyaJuergaJuevesJuezJugadorJugoJugueteJuicioJuncoJunglaJunioJuntarJu/piterJurarJustoJuvenilJuzgarKiloKoalaLabioLacioLacraLadoLadro/nLagartoLa/grimaLagunaLaicoLamerLa/minaLa/mparaLanaLanchaLangostaLanzaLa/pizLargoLarvaLa/stimaLataLa/texLatirLaurelLavarLazoLealLeccio/nLecheLectorLeerLegio/nLegumbreLejanoLenguaLentoLe~aLeo/nLeopardoLesio/nLetalLetraLeveLeyendaLibertadLibroLicorLi/derLidiarLienzoLigaLigeroLimaLi/miteLimo/nLimpioLinceLindoLi/neaLingoteLinoLinternaLi/quidoLisoListaLiteraLitioLitroLlagaLlamaLlantoLlaveLlegarLlenarLlevarLlorarLloverLluviaLoboLocio/nLocoLocuraLo/gicaLogroLombrizLomoLonjaLoteLuchaLucirLugarLujoLunaLunesLupaLustroLutoLuzMacetaMachoMaderaMadreMaduroMaestroMafiaMagiaMagoMai/zMaldadMaletaMallaMaloMama/MamboMamutMancoMandoManejarMangaManiqui/ManjarManoMansoMantaMa~anaMapaMa/quinaMarMarcoMareaMarfilMargenMaridoMa/rmolMarro/nMartesMarzoMasaMa/scaraMasivoMatarMateriaMatizMatrizMa/ximoMayorMazorcaMechaMedallaMedioMe/dulaMejillaMejorMelenaMelo/nMemoriaMenorMensajeMenteMenu/MercadoMerengueMe/ritoMesMeso/nMetaMeterMe/todoMetroMezclaMiedoMielMiembroMigaMilMilagroMilitarMillo/nMimoMinaMineroMi/nimoMinutoMiopeMirarMisaMiseriaMisilMismoMitadMitoMochilaMocio/nModaModeloMohoMojarMoldeMolerMolinoMomentoMomiaMonarcaMonedaMonjaMontoMo~oMoradaMorderMorenoMorirMorroMorsaMortalMoscaMostrarMotivoMoverMo/vilMozoMuchoMudarMuebleMuelaMuerteMuestraMugreMujerMulaMuletaMultaMundoMu~ecaMuralMuroMu/sculoMuseoMusgoMu/sicaMusloNa/carNacio/nNadarNaipeNaranjaNarizNarrarNasalNatalNativoNaturalNa/useaNavalNaveNavidadNecioNe/ctarNegarNegocioNegroNeo/nNervioNetoNeutroNevarNeveraNichoNidoNieblaNietoNi~ezNi~oNi/tidoNivelNoblezaNocheNo/minaNoriaNormaNorteNotaNoticiaNovatoNovelaNovioNubeNucaNu/cleoNudilloNudoNueraNueveNuezNuloNu/meroNutriaOasisObesoObispoObjetoObraObreroObservarObtenerObvioOcaOcasoOce/anoOchentaOchoOcioOcreOctavoOctubreOcultoOcuparOcurrirOdiarOdioOdiseaOesteOfensaOfertaOficioOfrecerOgroOi/doOi/rOjoOlaOleadaOlfatoOlivoOllaOlmoOlorOlvidoOmbligoOndaOnzaOpacoOpcio/nO/peraOpinarOponerOptarO/pticaOpuestoOracio/nOradorOralO/rbitaOrcaOrdenOrejaO/rganoOrgi/aOrgulloOrienteOrigenOrillaOroOrquestaOrugaOsadi/aOscuroOseznoOsoOstraOto~oOtroOvejaO/vuloO/xidoOxi/genoOyenteOzonoPactoPadrePaellaPa/ginaPagoPai/sPa/jaroPalabraPalcoPaletaPa/lidoPalmaPalomaPalparPanPanalPa/nicoPanteraPa~ueloPapa/PapelPapillaPaquetePararParcelaParedParirParoPa/rpadoParquePa/rrafoPartePasarPaseoPasio/nPasoPastaPataPatioPatriaPausaPautaPavoPayasoPeato/nPecadoPeceraPechoPedalPedirPegarPeinePelarPelda~oPeleaPeligroPellejoPeloPelucaPenaPensarPe~o/nPeo/nPeorPepinoPeque~oPeraPerchaPerderPerezaPerfilPericoPerlaPermisoPerroPersonaPesaPescaPe/simoPesta~aPe/taloPetro/leoPezPezu~aPicarPicho/nPiePiedraPiernaPiezaPijamaPilarPilotoPimientaPinoPintorPinzaPi~aPiojoPipaPirataPisarPiscinaPisoPistaPito/nPizcaPlacaPlanPlataPlayaPlazaPleitoPlenoPlomoPlumaPluralPobrePocoPoderPodioPoemaPoesi/aPoetaPolenPolici/aPolloPolvoPomadaPomeloPomoPompaPonerPorcio/nPortalPosadaPoseerPosiblePostePotenciaPotroPozoPradoPrecozPreguntaPremioPrensaPresoPrevioPrimoPri/ncipePrisio/nPrivarProaProbarProcesoProductoProezaProfesorProgramaProlePromesaProntoPropioPro/ximoPruebaPu/blicoPucheroPudorPuebloPuertaPuestoPulgaPulirPulmo/nPulpoPulsoPumaPuntoPu~alPu~oPupaPupilaPure/QuedarQuejaQuemarQuererQuesoQuietoQui/micaQuinceQuitarRa/banoRabiaRaboRacio/nRadicalRai/zRamaRampaRanchoRangoRapazRa/pidoRaptoRasgoRaspaRatoRayoRazaRazo/nReaccio/nRealidadReba~oReboteRecaerRecetaRechazoRecogerRecreoRectoRecursoRedRedondoReducirReflejoReformaRefra/nRefugioRegaloRegirReglaRegresoRehe/nReinoRei/rRejaRelatoRelevoRelieveRellenoRelojRemarRemedioRemoRencorRendirRentaRepartoRepetirReposoReptilResRescateResinaRespetoRestoResumenRetiroRetornoRetratoReunirReve/sRevistaReyRezarRicoRiegoRiendaRiesgoRifaRi/gidoRigorRinco/nRi~o/nRi/oRiquezaRisaRitmoRitoRizoRobleRoceRociarRodarRodeoRodillaRoerRojizoRojoRomeroRomperRonRoncoRondaRopaRoperoRosaRoscaRostroRotarRubi/RuborRudoRuedaRugirRuidoRuinaRuletaRuloRumboRumorRupturaRutaRutinaSa/badoSaberSabioSableSacarSagazSagradoSalaSaldoSaleroSalirSalmo/nSalo/nSalsaSaltoSaludSalvarSambaSancio/nSandi/aSanearSangreSanidadSanoSantoSapoSaqueSardinaSarte/nSastreSata/nSaunaSaxofo/nSeccio/nSecoSecretoSectaSedSeguirSeisSelloSelvaSemanaSemillaSendaSensorSe~alSe~orSepararSepiaSequi/aSerSerieSermo/nServirSesentaSesio/nSetaSetentaSeveroSexoSextoSidraSiestaSieteSigloSignoSi/labaSilbarSilencioSillaSi/mboloSimioSirenaSistemaSitioSituarSobreSocioSodioSolSolapaSoldadoSoledadSo/lidoSoltarSolucio/nSombraSondeoSonidoSonoroSonrisaSopaSoplarSoporteSordoSorpresaSorteoSoste/nSo/tanoSuaveSubirSucesoSudorSuegraSueloSue~oSuerteSufrirSujetoSulta/nSumarSuperarSuplirSuponerSupremoSurSurcoSure~oSurgirSustoSutilTabacoTabiqueTablaTabu/TacoTactoTajoTalarTalcoTalentoTallaTalo/nTama~oTamborTangoTanqueTapaTapeteTapiaTapo/nTaquillaTardeTareaTarifaTarjetaTarotTarroTartaTatuajeTauroTazaTazo/nTeatroTechoTeclaTe/cnicaTejadoTejerTejidoTelaTele/fonoTemaTemorTemploTenazTenderTenerTenisTensoTeori/aTerapiaTercoTe/rminoTernuraTerrorTesisTesoroTestigoTeteraTextoTezTibioTiburo/nTiempoTiendaTierraTiesoTigreTijeraTildeTimbreTi/midoTimoTintaTi/oTi/picoTipoTiraTiro/nTita/nTi/tereTi/tuloTizaToallaTobilloTocarTocinoTodoTogaToldoTomarTonoTontoToparTopeToqueTo/raxToreroTormentaTorneoToroTorpedoTorreTorsoTortugaTosToscoToserTo/xicoTrabajoTractorTraerTra/ficoTragoTrajeTramoTranceTratoTraumaTrazarTre/bolTreguaTreintaTrenTreparTresTribuTrigoTripaTristeTriunfoTrofeoTrompaTroncoTropaTroteTrozoTrucoTruenoTrufaTuberi/aTuboTuertoTumbaTumorTu/nelTu/nicaTurbinaTurismoTurnoTutorUbicarU/lceraUmbralUnidadUnirUniversoUnoUntarU~aUrbanoUrbeUrgenteUrnaUsarUsuarioU/tilUtopi/aUvaVacaVaci/oVacunaVagarVagoVainaVajillaValeVa/lidoValleValorVa/lvulaVampiroVaraVariarVaro/nVasoVecinoVectorVehi/culoVeinteVejezVelaVeleroVelozVenaVencerVendaVenenoVengarVenirVentaVenusVerVeranoVerboVerdeVeredaVerjaVersoVerterVi/aViajeVibrarVicioVi/ctimaVidaVi/deoVidrioViejoViernesVigorVilVillaVinagreVinoVi~edoVioli/nViralVirgoVirtudVisorVi/speraVistaVitaminaViudoVivazViveroVivirVivoVolca/nVolumenVolverVorazVotarVotoVozVueloVulgarYacerYateYeguaYemaYernoYesoYodoYogaYogurZafiroZanjaZapatoZarzaZonaZorroZumoZurdo"; var U = {}; var X = null; function dropDiacritic(T) { J.logger.checkNormalize(); return (0, I.toUtf8String)(Array.prototype.filter.call((0, I.toUtf8Bytes)(T.normalize("NFD").toLowerCase()), (function (T) { return T >= 65 && T <= 90 || T >= 97 && T <= 123 }))) } function expand(T) { var B = []; Array.prototype.forEach.call((0, I.toUtf8Bytes)(T), (function (T) { if (T === 47) { B.push(204); B.push(129) } else if (T === 126) { B.push(110); B.push(204); B.push(131) } else { B.push(T) } })); return (0, I.toUtf8String)(B) } function loadWords(T) { if (X != null) { return } X = H.replace(/([A-Z])/g, " $1").toLowerCase().substring(1).split(" ").map((function (T) { return expand(T) })); X.forEach((function (T, B) { U[dropDiacritic(T)] = B })); if (J.Wordlist.check(T) !== "0xf74fb7092aeacdfbf8959557de22098da512207fb9f109cb526994938cf40300") { X = null; throw new Error("BIP39 Wordlist for es (Spanish) FAILED") } } var G = function (T) { L(LangEs, T); function LangEs() { return T.call(this, "es") || this } LangEs.prototype.getWord = function (T) { loadWords(this); return X[T] }; LangEs.prototype.getWordIndex = function (T) { loadWords(this); return U[dropDiacritic(T)] }; return LangEs }(J.Wordlist); var V = new G; B.langEs = V; J.Wordlist.register(V) }, 8079: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.langFr = void 0; var I = N(3859); var J = N(8210); var H = ""; var U = null; var X = {}; function dropDiacritic(T) { J.logger.checkNormalize(); return (0, I.toUtf8String)(Array.prototype.filter.call((0, I.toUtf8Bytes)(T.normalize("NFD").toLowerCase()), (function (T) { return T >= 65 && T <= 90 || T >= 97 && T <= 123 }))) } function expand(T) { var B = []; Array.prototype.forEach.call((0, I.toUtf8Bytes)(T), (function (T) { if (T === 47) { B.push(204); B.push(129) } else if (T === 45) { B.push(204); B.push(128) } else { B.push(T) } })); return (0, I.toUtf8String)(B) } function loadWords(T) { if (U != null) { return } U = H.replace(/([A-Z])/g, " $1").toLowerCase().substring(1).split(" ").map((function (T) { return expand(T) })); U.forEach((function (T, B) { X[dropDiacritic(T)] = B })); if (J.Wordlist.check(T) !== "0x51deb7ae009149dc61a6bd18a918eb7ac78d2775726c68e598b92d002519b045") { U = null; throw new Error("BIP39 Wordlist for fr (French) FAILED") } } var G = function (T) { L(LangFr, T); function LangFr() { return T.call(this, "fr") || this } LangFr.prototype.getWord = function (T) { loadWords(this); return U[T] }; LangFr.prototype.getWordIndex = function (T) { loadWords(this); return X[dropDiacritic(T)] }; return LangFr }(J.Wordlist); var V = new G; B.langFr = V; J.Wordlist.register(V) }, 7054: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.langIt = void 0; var I = N(8210); var J = "AbacoAbbaglioAbbinatoAbeteAbissoAbolireAbrasivoAbrogatoAccadereAccennoAccusatoAcetoneAchilleAcidoAcquaAcreAcrilicoAcrobataAcutoAdagioAddebitoAddomeAdeguatoAderireAdipeAdottareAdulareAffabileAffettoAffissoAffrantoAforismaAfosoAfricanoAgaveAgenteAgevoleAggancioAgireAgitareAgonismoAgricoloAgrumetoAguzzoAlabardaAlatoAlbatroAlberatoAlboAlbumeAlceAlcolicoAlettoneAlfaAlgebraAlianteAlibiAlimentoAllagatoAllegroAllievoAllodolaAllusivoAlmenoAlogenoAlpacaAlpestreAltalenaAlternoAlticcioAltroveAlunnoAlveoloAlzareAmalgamaAmanitaAmarenaAmbitoAmbratoAmebaAmericaAmetistaAmicoAmmassoAmmendaAmmirareAmmonitoAmoreAmpioAmpliareAmuletoAnacardoAnagrafeAnalistaAnarchiaAnatraAncaAncellaAncoraAndareAndreaAnelloAngeloAngolareAngustoAnimaAnnegareAnnidatoAnnoAnnuncioAnonimoAnticipoAnziApaticoAperturaApodeApparireAppetitoAppoggioApprodoAppuntoAprileArabicaArachideAragostaAraldicaArancioAraturaArazzoArbitroArchivioArditoArenileArgentoArgineArgutoAriaArmoniaArneseArredatoArringaArrostoArsenicoArsoArteficeArzilloAsciuttoAscoltoAsepsiAsetticoAsfaltoAsinoAsolaAspiratoAsproAssaggioAsseAssolutoAssurdoAstaAstenutoAsticeAstrattoAtavicoAteismoAtomicoAtonoAttesaAttivareAttornoAttritoAttualeAusilioAustriaAutistaAutonomoAutunnoAvanzatoAvereAvvenireAvvisoAvvolgereAzioneAzotoAzzimoAzzurroBabeleBaccanoBacinoBacoBadessaBadilataBagnatoBaitaBalconeBaldoBalenaBallataBalzanoBambinoBandireBaraondaBarbaroBarcaBaritonoBarlumeBaroccoBasilicoBassoBatostaBattutoBauleBavaBavosaBeccoBeffaBelgioBelvaBendaBenevoleBenignoBenzinaBereBerlinaBetaBibitaBiciBidoneBifidoBigaBilanciaBimboBinocoloBiologoBipedeBipolareBirbanteBirraBiscottoBisestoBisnonnoBisonteBisturiBizzarroBlandoBlattaBollitoBonificoBordoBoscoBotanicoBottinoBozzoloBraccioBradipoBramaBrancaBravuraBretellaBrevettoBrezzaBrigliaBrillanteBrindareBroccoloBrodoBronzinaBrulloBrunoBubboneBucaBudinoBuffoneBuioBulboBuonoBurloneBurrascaBussolaBustaCadettoCaducoCalamaroCalcoloCalesseCalibroCalmoCaloriaCambusaCamerataCamiciaCamminoCamolaCampaleCanapaCandelaCaneCaninoCanottoCantinaCapaceCapelloCapitoloCapogiroCapperoCapraCapsulaCarapaceCarcassaCardoCarismaCarovanaCarrettoCartolinaCasaccioCascataCasermaCasoCassoneCastelloCasualeCatastaCatenaCatrameCautoCavilloCedibileCedrataCefaloCelebreCellulareCenaCenoneCentesimoCeramicaCercareCertoCerumeCervelloCesoiaCespoCetoChelaChiaroChiccaChiedereChimeraChinaChirurgoChitarraCiaoCiclismoCifrareCignoCilindroCiottoloCircaCirrosiCitricoCittadinoCiuffoCivettaCivileClassicoClinicaCloroCoccoCodardoCodiceCoerenteCognomeCollareColmatoColoreColposoColtivatoColzaComaCometaCommandoComodoComputerComuneConcisoCondurreConfermaCongelareConiugeConnessoConoscereConsumoContinuoConvegnoCopertoCopioneCoppiaCopricapoCorazzaCordataCoricatoCorniceCorollaCorpoCorredoCorsiaCorteseCosmicoCostanteCotturaCovatoCratereCravattaCreatoCredereCremosoCrescitaCretaCricetoCrinaleCrisiCriticoCroceCronacaCrostataCrucialeCruscaCucireCuculoCuginoCullatoCupolaCuratoreCursoreCurvoCuscinoCustodeDadoDainoDalmataDamerinoDanielaDannosoDanzareDatatoDavantiDavveroDebuttoDecennioDecisoDeclinoDecolloDecretoDedicatoDefinitoDeformeDegnoDelegareDelfinoDelirioDeltaDemenzaDenotatoDentroDepositoDerapataDerivareDerogaDescrittoDesertoDesiderioDesumereDetersivoDevotoDiametroDicembreDiedroDifesoDiffusoDigerireDigitaleDiluvioDinamicoDinnanziDipintoDiplomaDipoloDiradareDireDirottoDirupoDisagioDiscretoDisfareDisgeloDispostoDistanzaDisumanoDitoDivanoDiveltoDividereDivoratoDobloneDocenteDoganaleDogmaDolceDomatoDomenicaDominareDondoloDonoDormireDoteDottoreDovutoDozzinaDragoDruidoDubbioDubitareDucaleDunaDuomoDupliceDuraturoEbanoEccessoEccoEclissiEconomiaEderaEdicolaEdileEditoriaEducareEgemoniaEgliEgoismoEgregioElaboratoElargireEleganteElencatoElettoElevareElficoElicaElmoElsaElusoEmanatoEmblemaEmessoEmiroEmotivoEmozioneEmpiricoEmuloEndemicoEnduroEnergiaEnfasiEnotecaEntrareEnzimaEpatiteEpilogoEpisodioEpocaleEppureEquatoreErarioErbaErbosoEredeEremitaErigereErmeticoEroeErosivoErranteEsagonoEsameEsanimeEsaudireEscaEsempioEsercitoEsibitoEsigenteEsistereEsitoEsofagoEsortatoEsosoEspansoEspressoEssenzaEssoEstesoEstimareEstoniaEstrosoEsultareEtilicoEtnicoEtruscoEttoEuclideoEuropaEvasoEvidenzaEvitatoEvolutoEvvivaFabbricaFaccendaFachiroFalcoFamigliaFanaleFanfaraFangoFantasmaFareFarfallaFarinosoFarmacoFasciaFastosoFasulloFaticareFatoFavolosoFebbreFecolaFedeFegatoFelpaFeltroFemminaFendereFenomenoFermentoFerroFertileFessuraFestivoFettaFeudoFiabaFiduciaFifaFiguratoFiloFinanzaFinestraFinireFioreFiscaleFisicoFiumeFlaconeFlamencoFleboFlemmaFloridoFluenteFluoroFobicoFocacciaFocosoFoderatoFoglioFolataFolcloreFolgoreFondenteFoneticoFoniaFontanaForbitoForchettaForestaFormicaFornaioForoFortezzaForzareFosfatoFossoFracassoFranaFrassinoFratelloFreccettaFrenataFrescoFrigoFrollinoFrondeFrugaleFruttaFucilataFucsiaFuggenteFulmineFulvoFumanteFumettoFumosoFuneFunzioneFuocoFurboFurgoneFuroreFusoFutileGabbianoGaffeGalateoGallinaGaloppoGamberoGammaGaranziaGarboGarofanoGarzoneGasdottoGasolioGastricoGattoGaudioGazeboGazzellaGecoGelatinaGelsoGemelloGemmatoGeneGenitoreGennaioGenotipoGergoGhepardoGhiaccioGhisaGialloGildaGineproGiocareGioielloGiornoGioveGiratoGironeGittataGiudizioGiuratoGiustoGlobuloGlutineGnomoGobbaGolfGomitoGommoneGonfioGonnaGovernoGracileGradoGraficoGrammoGrandeGrattareGravosoGraziaGrecaGreggeGrifoneGrigioGrinzaGrottaGruppoGuadagnoGuaioGuantoGuardareGufoGuidareIbernatoIconaIdenticoIdillioIdoloIdraIdricoIdrogenoIgieneIgnaroIgnoratoIlareIllesoIllogicoIlludereImballoImbevutoImboccoImbutoImmaneImmersoImmolatoImpaccoImpetoImpiegoImportoImprontaInalareInarcareInattivoIncantoIncendioInchinoIncisivoInclusoIncontroIncrocioIncuboIndagineIndiaIndoleIneditoInfattiInfilareInflittoIngaggioIngegnoIngleseIngordoIngrossoInnescoInodoreInoltrareInondatoInsanoInsettoInsiemeInsonniaInsulinaIntasatoInteroIntonacoIntuitoInumidireInvalidoInveceInvitoIperboleIpnoticoIpotesiIppicaIrideIrlandaIronicoIrrigatoIrrorareIsolatoIsotopoIstericoIstitutoIstriceItaliaIterareLabbroLabirintoLaccaLaceratoLacrimaLacunaLaddoveLagoLampoLancettaLanternaLardosoLargaLaringeLastraLatenzaLatinoLattugaLavagnaLavoroLegaleLeggeroLemboLentezzaLenzaLeoneLepreLesivoLessatoLestoLetteraleLevaLevigatoLiberoLidoLievitoLillaLimaturaLimitareLimpidoLineareLinguaLiquidoLiraLiricaLiscaLiteLitigioLivreaLocandaLodeLogicaLombareLondraLongevoLoquaceLorenzoLotoLotteriaLuceLucidatoLumacaLuminosoLungoLupoLuppoloLusingaLussoLuttoMacabroMacchinaMaceroMacinatoMadamaMagicoMagliaMagneteMagroMaiolicaMalafedeMalgradoMalintesoMalsanoMaltoMalumoreManaManciaMandorlaMangiareManifestoMannaroManovraMansardaMantideManubrioMappaMaratonaMarcireMarettaMarmoMarsupioMascheraMassaiaMastinoMaterassoMatricolaMattoneMaturoMazurcaMeandroMeccanicoMecenateMedesimoMeditareMegaMelassaMelisMelodiaMeningeMenoMensolaMercurioMerendaMerloMeschinoMeseMessereMestoloMetalloMetodoMettereMiagolareMicaMicelioMicheleMicroboMidolloMieleMiglioreMilanoMiliteMimosaMineraleMiniMinoreMirinoMirtilloMiscelaMissivaMistoMisurareMitezzaMitigareMitraMittenteMnemonicoModelloModificaModuloMoganoMogioMoleMolossoMonasteroMoncoMondinaMonetarioMonileMonotonoMonsoneMontatoMonvisoMoraMordereMorsicatoMostroMotivatoMotosegaMottoMovenzaMovimentoMozzoMuccaMucosaMuffaMughettoMugnaioMulattoMulinelloMultiploMummiaMuntoMuovereMuraleMusaMuscoloMusicaMutevoleMutoNababboNaftaNanometroNarcisoNariceNarratoNascereNastrareNaturaleNauticaNaviglioNebulosaNecrosiNegativoNegozioNemmenoNeofitaNerettoNervoNessunoNettunoNeutraleNeveNevroticoNicchiaNinfaNitidoNobileNocivoNodoNomeNominaNordicoNormaleNorvegeseNostranoNotareNotiziaNotturnoNovellaNucleoNullaNumeroNuovoNutrireNuvolaNuzialeOasiObbedireObbligoObeliscoOblioOboloObsoletoOccasioneOcchioOccidenteOccorrereOccultareOcraOculatoOdiernoOdorareOffertaOffrireOffuscatoOggettoOggiOgnunoOlandeseOlfattoOliatoOlivaOlogrammaOltreOmaggioOmbelicoOmbraOmegaOmissioneOndosoOnereOniceOnnivoroOnorevoleOntaOperatoOpinioneOppostoOracoloOrafoOrdineOrecchinoOreficeOrfanoOrganicoOrigineOrizzonteOrmaOrmeggioOrnativoOrologioOrrendoOrribileOrtensiaOrticaOrzataOrzoOsareOscurareOsmosiOspedaleOspiteOssaOssidareOstacoloOsteOtiteOtreOttagonoOttimoOttobreOvaleOvestOvinoOviparoOvocitoOvunqueOvviareOzioPacchettoPacePacificoPadellaPadronePaesePagaPaginaPalazzinaPalesarePallidoPaloPaludePandoroPannelloPaoloPaonazzoPapricaParabolaParcellaParerePargoloPariParlatoParolaPartireParvenzaParzialePassivoPasticcaPataccaPatologiaPattumePavonePeccatoPedalarePedonalePeggioPelosoPenarePendicePenisolaPennutoPenombraPensarePentolaPepePepitaPerbenePercorsoPerdonatoPerforarePergamenaPeriodoPermessoPernoPerplessoPersuasoPertugioPervasoPesatorePesistaPesoPestiferoPetaloPettinePetulantePezzoPiacerePiantaPiattinoPiccinoPicozzaPiegaPietraPifferoPigiamaPigolioPigroPilaPiliferoPillolaPilotaPimpantePinetaPinnaPinoloPioggiaPiomboPiramidePireticoPiritePirolisiPitonePizzicoPlaceboPlanarePlasmaPlatanoPlenarioPochezzaPoderosoPodismoPoesiaPoggiarePolentaPoligonoPollicePolmonitePolpettaPolsoPoltronaPolverePomicePomodoroPontePopolosoPorfidoPorosoPorporaPorrePortataPosaPositivoPossessoPostulatoPotassioPoterePranzoPrassiPraticaPreclusoPredicaPrefissoPregiatoPrelievoPremerePrenotarePreparatoPresenzaPretestoPrevalsoPrimaPrincipePrivatoProblemaProcuraProdurreProfumoProgettoProlungaPromessaPronomePropostaProrogaProtesoProvaPrudentePrugnaPruritoPsichePubblicoPudicaPugilatoPugnoPulcePulitoPulsantePuntarePupazzoPupillaPuroQuadroQualcosaQuasiQuerelaQuotaRaccoltoRaddoppioRadicaleRadunatoRafficaRagazzoRagioneRagnoRamarroRamingoRamoRandagioRantolareRapatoRapinaRappresoRasaturaRaschiatoRasenteRassegnaRastrelloRataRavvedutoRealeRecepireRecintoReclutaReconditoRecuperoRedditoRedimereRegalatoRegistroRegolaRegressoRelazioneRemareRemotoRennaReplicaReprimereReputareResaResidenteResponsoRestauroReteRetinaRetoricaRettificaRevocatoRiassuntoRibadireRibelleRibrezzoRicaricaRiccoRicevereRiciclatoRicordoRicredutoRidicoloRidurreRifasareRiflessoRiformaRifugioRigareRigettatoRighelloRilassatoRilevatoRimanereRimbalzoRimedioRimorchioRinascitaRincaroRinforzoRinnovoRinomatoRinsavitoRintoccoRinunciaRinvenireRiparatoRipetutoRipienoRiportareRipresaRipulireRisataRischioRiservaRisibileRisoRispettoRistoroRisultatoRisvoltoRitardoRitegnoRitmicoRitrovoRiunioneRivaRiversoRivincitaRivoltoRizomaRobaRoboticoRobustoRocciaRocoRodaggioRodereRoditoreRogitoRollioRomanticoRompereRonzioRosolareRospoRotanteRotondoRotulaRovescioRubizzoRubricaRugaRullinoRumineRumorosoRuoloRupeRussareRusticoSabatoSabbiareSabotatoSagomaSalassoSaldaturaSalgemmaSalivareSalmoneSaloneSaltareSalutoSalvoSapereSapidoSaporitoSaracenoSarcasmoSartoSassosoSatelliteSatiraSatolloSaturnoSavanaSavioSaziatoSbadiglioSbalzoSbancatoSbarraSbattereSbavareSbendareSbirciareSbloccatoSbocciatoSbrinareSbruffoneSbuffareScabrosoScadenzaScalaScambiareScandaloScapolaScarsoScatenareScavatoSceltoScenicoScettroSchedaSchienaSciarpaScienzaScindereScippoSciroppoScivoloSclerareScodellaScolpitoScompartoSconfortoScoprireScortaScossoneScozzeseScribaScrollareScrutinioScuderiaScultoreScuolaScuroScusareSdebitareSdoganareSeccaturaSecondoSedanoSeggiolaSegnalatoSegregatoSeguitoSelciatoSelettivoSellaSelvaggioSemaforoSembrareSemeSeminatoSempreSensoSentireSepoltoSequenzaSerataSerbatoSerenoSerioSerpenteSerraglioServireSestinaSetolaSettimanaSfaceloSfaldareSfamatoSfarzosoSfaticatoSferaSfidaSfilatoSfingeSfocatoSfoderareSfogoSfoltireSforzatoSfrattoSfruttatoSfuggitoSfumareSfusoSgabelloSgarbatoSgonfiareSgorbioSgrassatoSguardoSibiloSiccomeSierraSiglaSignoreSilenzioSillabaSimboloSimpaticoSimulatoSinfoniaSingoloSinistroSinoSintesiSinusoideSiparioSismaSistoleSituatoSlittaSlogaturaSlovenoSmarritoSmemoratoSmentitoSmeraldoSmilzoSmontareSmottatoSmussatoSnellireSnervatoSnodoSobbalzoSobrioSoccorsoSocialeSodaleSoffittoSognoSoldatoSolenneSolidoSollazzoSoloSolubileSolventeSomaticoSommaSondaSonettoSonniferoSopireSoppesoSopraSorgereSorpassoSorrisoSorsoSorteggioSorvolatoSospiroSostaSottileSpadaSpallaSpargereSpatolaSpaventoSpazzolaSpecieSpedireSpegnereSpelaturaSperanzaSpessoreSpettraleSpezzatoSpiaSpigolosoSpillatoSpinosoSpiraleSplendidoSportivoSposoSprangaSprecareSpronatoSpruzzoSpuntinoSquilloSradicareSrotolatoStabileStaccoStaffaStagnareStampatoStantioStarnutoStaseraStatutoSteloSteppaSterzoStilettoStimaStirpeStivaleStizzosoStonatoStoricoStrappoStregatoStriduloStrozzareStruttoStuccareStufoStupendoSubentroSuccosoSudoreSuggeritoSugoSultanoSuonareSuperboSupportoSurgelatoSurrogatoSussurroSuturaSvagareSvedeseSveglioSvelareSvenutoSveziaSviluppoSvistaSvizzeraSvoltaSvuotareTabaccoTabulatoTacciareTaciturnoTaleTalismanoTamponeTanninoTaraTardivoTargatoTariffaTarpareTartarugaTastoTatticoTavernaTavolataTazzaTecaTecnicoTelefonoTemerarioTempoTemutoTendoneTeneroTensioneTentacoloTeoremaTermeTerrazzoTerzettoTesiTesseratoTestatoTetroTettoiaTifareTigellaTimbroTintoTipicoTipografoTiraggioTiroTitanioTitoloTitubanteTizioTizzoneToccareTollerareToltoTombolaTomoTonfoTonsillaTopazioTopologiaToppaTorbaTornareTorroneTortoraToscanoTossireTostaturaTotanoTraboccoTracheaTrafilaTragediaTralcioTramontoTransitoTrapanoTrarreTraslocoTrattatoTraveTrecciaTremolioTrespoloTributoTrichecoTrifoglioTrilloTrinceaTrioTristezzaTrituratoTrivellaTrombaTronoTroppoTrottolaTrovareTruccatoTubaturaTuffatoTulipanoTumultoTunisiaTurbareTurchinoTutaTutelaUbicatoUccelloUccisoreUdireUditivoUffaUfficioUgualeUlisseUltimatoUmanoUmileUmorismoUncinettoUngereUnghereseUnicornoUnificatoUnisonoUnitarioUnteUovoUpupaUraganoUrgenzaUrloUsanzaUsatoUscitoUsignoloUsuraioUtensileUtilizzoUtopiaVacanteVaccinatoVagabondoVagliatoValangaValgoValicoVallettaValorosoValutareValvolaVampataVangareVanitosoVanoVantaggioVanveraVaporeVaranoVarcatoVarianteVascaVedettaVedovaVedutoVegetaleVeicoloVelcroVelinaVellutoVeloceVenatoVendemmiaVentoVeraceVerbaleVergognaVerificaVeroVerrucaVerticaleVescicaVessilloVestaleVeteranoVetrinaVetustoViandanteVibranteVicendaVichingoVicinanzaVidimareVigiliaVignetoVigoreVileVillanoViminiVincitoreViolaViperaVirgolaVirologoVirulentoViscosoVisioneVispoVissutoVisuraVitaVitelloVittimaVivandaVividoViziareVoceVogaVolatileVolereVolpeVoragineVulcanoZampognaZannaZappatoZatteraZavorraZefiroZelanteZeloZenzeroZerbinoZibettoZincoZirconeZittoZollaZoticoZuccheroZufoloZuluZuppa"; var H = null; function loadWords(T) { if (H != null) { return } H = J.replace(/([A-Z])/g, " $1").toLowerCase().substring(1).split(" "); if (I.Wordlist.check(T) !== "0x5c1362d88fd4cf614a96f3234941d29f7d37c08c5292fde03bf62c2db6ff7620") { H = null; throw new Error("BIP39 Wordlist for it (Italian) FAILED") } } var U = function (T) { L(LangIt, T); function LangIt() { return T.call(this, "it") || this } LangIt.prototype.getWord = function (T) { loadWords(this); return H[T] }; LangIt.prototype.getWordIndex = function (T) { loadWords(this); return H.indexOf(T) }; return LangIt }(I.Wordlist); var X = new U; B.langIt = X; I.Wordlist.register(X) }, 3670: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.langJa = void 0; var I = N(2006); var J = N(3859); var H = N(8210); var U = ["AQRASRAGBAGUAIRAHBAghAURAdBAdcAnoAMEAFBAFCBKFBQRBSFBCXBCDBCHBGFBEQBpBBpQBIkBHNBeOBgFBVCBhBBhNBmOBmRBiHBiFBUFBZDBvFBsXBkFBlcBjYBwDBMBBTBBTRBWBBWXXaQXaRXQWXSRXCFXYBXpHXOQXHRXhRXuRXmXXbRXlXXwDXTRXrCXWQXWGaBWaKcaYgasFadQalmaMBacAKaRKKBKKXKKjKQRKDRKCYKCRKIDKeVKHcKlXKjHKrYNAHNBWNaRNKcNIBNIONmXNsXNdXNnBNMBNRBNrXNWDNWMNFOQABQAHQBrQXBQXFQaRQKXQKDQKOQKFQNBQNDQQgQCXQCDQGBQGDQGdQYXQpBQpQQpHQLXQHuQgBQhBQhCQuFQmXQiDQUFQZDQsFQdRQkHQbRQlOQlmQPDQjDQwXQMBQMDQcFQTBQTHQrDDXQDNFDGBDGQDGRDpFDhFDmXDZXDbRDMYDRdDTRDrXSAhSBCSBrSGQSEQSHBSVRShYShkSyQSuFSiBSdcSoESocSlmSMBSFBSFKSFNSFdSFcCByCaRCKcCSBCSRCCrCGbCEHCYXCpBCpQCIBCIHCeNCgBCgFCVECVcCmkCmwCZXCZFCdRClOClmClFCjDCjdCnXCwBCwXCcRCFQCFjGXhGNhGDEGDMGCDGCHGIFGgBGVXGVEGVRGmXGsXGdYGoSGbRGnXGwXGwDGWRGFNGFLGFOGFdGFkEABEBDEBFEXOEaBEKSENBENDEYXEIgEIkEgBEgQEgHEhFEudEuFEiBEiHEiFEZDEvBEsXEsFEdXEdREkFEbBEbRElFEPCEfkEFNYAEYAhYBNYQdYDXYSRYCEYYoYgQYgRYuRYmCYZTYdBYbEYlXYjQYRbYWRpKXpQopQnpSFpCXpIBpISphNpdBpdRpbRpcZpFBpFNpFDpFopFrLADLBuLXQLXcLaFLCXLEhLpBLpFLHXLeVLhILdHLdRLoDLbRLrXIABIBQIBCIBsIBoIBMIBRIXaIaRIKYIKRINBINuICDIGBIIDIIkIgRIxFIyQIiHIdRIbYIbRIlHIwRIMYIcRIRVITRIFBIFNIFQOABOAFOBQOaFONBONMOQFOSFOCDOGBOEQOpBOLXOIBOIFOgQOgFOyQOycOmXOsXOdIOkHOMEOMkOWWHBNHXNHXWHNXHDuHDRHSuHSRHHoHhkHmRHdRHkQHlcHlRHwBHWcgAEgAggAkgBNgBQgBEgXOgYcgLXgHjgyQgiBgsFgdagMYgWSgFQgFEVBTVXEVKBVKNVKDVKYVKRVNBVNYVDBVDxVSBVSRVCjVGNVLXVIFVhBVhcVsXVdRVbRVlRhBYhKYhDYhGShxWhmNhdahdkhbRhjohMXhTRxAXxXSxKBxNBxEQxeNxeQxhXxsFxdbxlHxjcxFBxFNxFQxFOxFoyNYyYoybcyMYuBQuBRuBruDMuCouHBudQukkuoBulVuMXuFEmCYmCRmpRmeDmiMmjdmTFmFQiADiBOiaRiKRiNBiNRiSFiGkiGFiERipRiLFiIFihYibHijBijEiMXiWBiFBiFCUBQUXFUaRUNDUNcUNRUNFUDBUSHUCDUGBUGFUEqULNULoUIRUeEUeYUgBUhFUuRUiFUsXUdFUkHUbBUjSUjYUwXUMDUcHURdUTBUrBUrXUrQZAFZXZZaRZKFZNBZQFZCXZGBZYdZpBZLDZIFZHXZHNZeQZVRZVFZmXZiBZvFZdFZkFZbHZbFZwXZcCZcRZRBvBQvBGvBLvBWvCovMYsAFsBDsaRsKFsNFsDrsSHsSFsCXsCRsEBsEHsEfspBsLBsLDsIgsIRseGsbRsFBsFQsFSdNBdSRdCVdGHdYDdHcdVbdySduDdsXdlRdwXdWYdWcdWRkBMkXOkaRkNIkNFkSFkCFkYBkpRkeNkgBkhVkmXksFklVkMBkWDkFNoBNoaQoaFoNBoNXoNaoNEoSRoEroYXoYCoYbopRopFomXojkowXorFbBEbEIbdBbjYlaRlDElMXlFDjKjjSRjGBjYBjYkjpRjLXjIBjOFjeVjbRjwBnXQnSHnpFnLXnINnMBnTRwXBwXNwXYwNFwQFwSBwGFwLXwLDweNwgBwuHwjDwnXMBXMpFMIBMeNMTHcaQcNBcDHcSFcCXcpBcLXcLDcgFcuFcnXcwXccDcTQcrFTQErXNrCHrpFrgFrbFrTHrFcWNYWNbWEHWMXWTR", "ABGHABIJAEAVAYJQALZJAIaRAHNXAHdcAHbRAZJMAZJRAZTRAdVJAklmAbcNAjdRAMnRAMWYAWpRAWgRAFgBAFhBAFdcBNJBBNJDBQKBBQhcBQlmBDEJBYJkBYJTBpNBBpJFBIJBBIJDBIcABOKXBOEJBOVJBOiJBOZJBepBBeLXBeIFBegBBgGJBVJXBuocBiJRBUJQBlXVBlITBwNFBMYVBcqXBTlmBWNFBWiJBWnRBFGHBFwXXKGJXNJBXNZJXDTTXSHSXSVRXSlHXCJDXGQJXEhXXYQJXYbRXOfXXeNcXVJFXhQJXhEJXdTRXjdXXMhBXcQTXRGBXTEBXTnQXFCXXFOFXFgFaBaFaBNJaBCJaBpBaBwXaNJKaNJDaQIBaDpRaEPDaHMFamDJalEJaMZJaFaFaFNBaFQJaFLDaFVHKBCYKBEBKBHDKXaFKXGdKXEJKXpHKXIBKXZDKXwXKKwLKNacKNYJKNJoKNWcKDGdKDTRKChXKGaRKGhBKGbRKEBTKEaRKEPTKLMDKLWRKOHDKVJcKdBcKlIBKlOPKFSBKFEPKFpFNBNJNJBQNBGHNBEPNBHXNBgFNBVXNBZDNBsXNBwXNNaRNNJDNNJENNJkNDCJNDVDNGJRNJiDNZJNNsCJNJFNNFSBNFCXNFEPNFLXNFIFQJBFQCaRQJEQQLJDQLJFQIaRQOqXQHaFQHHQQVJXQVJDQhNJQmEIQZJFQsJXQJrFQWbRDJABDBYJDXNFDXCXDXLXDXZDDXsJDQqXDSJFDJCXDEPkDEqXDYmQDpSJDOCkDOGQDHEIDVJDDuDuDWEBDJFgSBNDSBSFSBGHSBIBSBTQSKVYSJQNSJQiSJCXSEqXSJYVSIiJSOMYSHAHSHaQSeCFSepQSegBSHdHSHrFShSJSJuHSJUFSkNRSrSrSWEBSFaHSJFQSFCXSFGDSFYXSFODSFgBSFVXSFhBSFxFSFkFSFbBSFMFCADdCJXBCXaFCXKFCXNFCXCXCXGBCXEJCXYBCXLDCXIBCXOPCXHXCXgBCXhBCXiBCXlDCXcHCJNBCJNFCDCJCDGBCDVXCDhBCDiDCDJdCCmNCpJFCIaRCOqXCHCHCHZJCViJCuCuCmddCJiFCdNBCdHhClEJCnUJCreSCWlgCWTRCFBFCFNBCFYBCFVFCFhFCFdSCFTBCFWDGBNBGBQFGJBCGBEqGBpBGBgQGNBEGNJYGNkOGNJRGDUFGJpQGHaBGJeNGJeEGVBlGVKjGiJDGvJHGsVJGkEBGMIJGWjNGFBFGFCXGFGBGFYXGFpBGFMFEASJEAWpEJNFECJVEIXSEIQJEOqXEOcFEeNcEHEJEHlFEJgFEhlmEmDJEmZJEiMBEUqXEoSREPBFEPXFEPKFEPSFEPEFEPpFEPLXEPIBEJPdEPcFEPTBEJnXEqlHEMpREFCXEFODEFcFYASJYJAFYBaBYBVXYXpFYDhBYCJBYJGFYYbRYeNcYJeVYiIJYZJcYvJgYvJRYJsXYsJFYMYMYreVpBNHpBEJpBwXpQxFpYEJpeNDpJeDpeSFpeCHpHUJpHbBpHcHpmUJpiiJpUJrpsJuplITpFaBpFQqpFGBpFEfpFYBpFpBpFLJpFIDpFgBpFVXpFyQpFuFpFlFpFjDpFnXpFwXpJFMpFTBLXCJLXEFLXhFLXUJLXbFLalmLNJBLSJQLCLCLGJBLLDJLHaFLeNFLeSHLeCXLepFLhaRLZsJLsJDLsJrLocaLlLlLMdbLFNBLFSBLFEHLFkFIBBFIBXFIBaQIBKXIBSFIBpHIBLXIBgBIBhBIBuHIBmXIBiFIBZXIBvFIBbFIBjQIBwXIBWFIKTRIQUJIDGFICjQIYSRIINXIJeCIVaRImEkIZJFIvJRIsJXIdCJIJoRIbBQIjYBIcqXITFVIreVIFKFIFSFIFCJIFGFIFLDIFIBIJFOIFgBIFVXIJFhIFxFIFmXIFdHIFbBIJFrIJFWOBGBOQfXOOKjOUqXOfXBOqXEOcqXORVJOFIBOFlDHBIOHXiFHNTRHCJXHIaRHHJDHHEJHVbRHZJYHbIBHRsJHRkDHWlmgBKFgBSBgBCDgBGHgBpBgBIBgBVJgBuBgBvFgKDTgQVXgDUJgGSJgOqXgmUMgZIJgTUJgWIEgFBFgFNBgFDJgFSFgFGBgFYXgJFOgFgQgFVXgFhBgFbHgJFWVJABVQKcVDgFVOfXVeDFVhaRVmGdViJYVMaRVFNHhBNDhBCXhBEqhBpFhBLXhNJBhSJRheVXhhKEhxlmhZIJhdBQhkIJhbMNhMUJhMZJxNJgxQUJxDEkxDdFxSJRxplmxeSBxeCXxeGFxeYXxepQxegBxWVcxFEQxFLXxFIBxFgBxFxDxFZtxFdcxFbBxFwXyDJXyDlcuASJuDJpuDIBuCpJuGSJuIJFueEFuZIJusJXudWEuoIBuWGJuFBcuFKEuFNFuFQFuFDJuFGJuFVJuFUtuFdHuFTBmBYJmNJYmQhkmLJDmLJomIdXmiJYmvJRmsJRmklmmMBymMuCmclmmcnQiJABiJBNiJBDiBSFiBCJiBEFiBYBiBpFiBLXiBTHiJNciDEfiCZJiECJiJEqiOkHiHKFieNDiHJQieQcieDHieSFieCXieGFieEFieIHiegFihUJixNoioNXiFaBiFKFiFNDiFEPiFYXitFOitFHiFgBiFVEiFmXiFitiFbBiFMFiFrFUCXQUIoQUIJcUHQJUeCEUHwXUUJDUUqXUdWcUcqXUrnQUFNDUFSHUFCFUFEfUFLXUtFOZBXOZXSBZXpFZXVXZEQJZEJkZpDJZOqXZeNHZeCDZUqXZFBQZFEHZFLXvBAFvBKFvBCXvBEPvBpHvBIDvBgFvBuHvQNJvFNFvFGBvFIBvJFcsXCDsXLXsXsXsXlFsXcHsQqXsJQFsEqXseIFsFEHsFjDdBxOdNpRdNJRdEJbdpJRdhZJdnSJdrjNdFNJdFQHdFhNkNJDkYaRkHNRkHSRkVbRkuMRkjSJkcqDoSJFoEiJoYZJoOfXohEBoMGQocqXbBAFbBXFbBaFbBNDbBGBbBLXbBTBbBWDbGJYbIJHbFQqbFpQlDgQlOrFlVJRjGEBjZJRnXvJnXbBnEfHnOPDngJRnxfXnUJWwXEJwNpJwDpBwEfXwrEBMDCJMDGHMDIJMLJDcQGDcQpHcqXccqNFcqCXcFCJRBSBRBGBRBEJRBpQTBNFTBQJTBpBTBVXTFABTFSBTFCFTFGBTFMDrXCJrXLDrDNJrEfHrFQJrFitWNjdWNTR", "AKLJMANOPFASNJIAEJWXAYJNRAIIbRAIcdaAeEfDAgidRAdjNYAMYEJAMIbRAFNJBAFpJFBBIJYBDZJFBSiJhBGdEBBEJfXBEJqXBEJWRBpaUJBLXrXBIYJMBOcfXBeEfFBestXBjNJRBcDJOBFEqXXNvJRXDMBhXCJNYXOAWpXONJWXHDEBXeIaRXhYJDXZJSJXMDJOXcASJXFVJXaBQqXaBZJFasXdQaFSJQaFEfXaFpJHaFOqXKBNSRKXvJBKQJhXKEJQJKEJGFKINJBKIJjNKgJNSKVElmKVhEBKiJGFKlBgJKjnUJKwsJYKMFIJKFNJDKFIJFKFOfXNJBSFNJBCXNBpJFNJBvQNJBMBNJLJXNJOqXNJeCXNJeGFNdsJCNbTKFNwXUJQNFEPQDiJcQDMSJQSFpBQGMQJQJeOcQyCJEQUJEBQJFBrQFEJqDXDJFDJXpBDJXIMDGiJhDIJGRDJeYcDHrDJDVXgFDkAWpDkIgRDjDEqDMvJRDJFNFDJFIBSKclmSJQOFSJQVHSJQjDSJGJBSJGJFSECJoSHEJqSJHTBSJVJDSViJYSZJNBSJsJDSFSJFSFEfXSJFLXCBUJVCJXSBCJXpBCXVJXCJXsXCJXdFCJNJHCLIJgCHiJFCVNJMChCJhCUHEJCsJTRCJdYcCoQJCCFEfXCFIJgCFUJxCFstFGJBaQGJBIDGQJqXGYJNRGJHKFGeQqDGHEJFGJeLXGHIiJGHdBlGUJEBGkIJTGFQPDGJFEqEAGegEJIJBEJVJXEhQJTEiJNcEJZJFEJoEqEjDEqEPDsXEPGJBEPOqXEPeQFEfDiDEJfEFEfepQEfMiJEqXNBEqDIDEqeSFEqVJXEMvJRYXNJDYXEJHYKVJcYYJEBYJeEcYJUqXYFpJFYFstXpAZJMpBSJFpNBNFpeQPDpHLJDpHIJFpHgJFpeitFpHZJFpJFADpFSJFpJFCJpFOqXpFitBpJFZJLXIJFLIJgRLVNJWLVHJMLwNpJLFGJBLFLJDLFOqXLJFUJIBDJXIBGJBIJBYQIJBIBIBOqXIBcqDIEGJFILNJTIIJEBIOiJhIJeNBIJeIBIhiJIIWoTRIJFAHIJFpBIJFuHIFUtFIJFTHOSBYJOEcqXOHEJqOvBpFOkVJrObBVJOncqDOcNJkHhNJRHuHJuHdMhBgBUqXgBsJXgONJBgHNJDgHHJQgJeitgHsJXgJyNagyDJBgZJDrgsVJQgkEJNgkjSJgJFAHgFCJDgFZtMVJXNFVXQfXVJXDJVXoQJVQVJQVDEfXVDvJHVEqNFVeQfXVHpJFVHxfXVVJSRVVmaRVlIJOhCXVJhHjYkhxCJVhWVUJhWiJcxBNJIxeEqDxfXBFxcFEPxFSJFxFYJXyBDQJydaUJyFOPDuYCJYuLvJRuHLJXuZJLDuFOPDuFZJHuFcqXmKHJdmCQJcmOsVJiJAGFitLCFieOfXiestXiZJMEikNJQirXzFiFQqXiFIJFiFZJFiFvtFUHpJFUteIcUteOcUVCJkUhdHcUbEJEUJqXQUMNJhURjYkUFitFZDGJHZJIxDZJVJXZJFDJZJFpQvBNJBvBSJFvJxBrseQqDsVFVJdFLJDkEJNBkmNJYkFLJDoQJOPoGsJRoEAHBoEJfFbBQqDbBZJHbFVJXlFIJBjYIrXjeitcjjCEBjWMNBwXQfXwXOaFwDsJXwCJTRwrCZJMDNJQcDDJFcqDOPRYiJFTBsJXTQIJBTFEfXTFLJDrXEJFrEJXMrFZJFWEJdEWYTlm", "ABCDEFACNJTRAMBDJdAcNJVXBLNJEBXSIdWRXErNJkXYDJMBXZJCJaXMNJaYKKVJKcKDEJqXKDcNJhKVJrNYKbgJVXKFVJSBNBYBwDNJeQfXNJeEqXNhGJWENJFiJRQlIJbEQJfXxDQqXcfXQFNDEJQFwXUJDYcnUJDJIBgQDIUJTRDJFEqDSJQSJFSJQIJFSOPeZtSJFZJHCJXQfXCTDEqFGJBSJFGJBOfXGJBcqXGJHNJDGJRLiJEJfXEqEJFEJPEFpBEJYJBZJFYBwXUJYiJMEBYJZJyTYTONJXpQMFXFpeGIDdpJFstXpJFcPDLBVSJRLHQJqXLJFZJFIJBNJDIJBUqXIBkFDJIJEJPTIYJGWRIJeQPDIJeEfHIJFsJXOqGDSFHXEJqXgJCsJCgGQJqXgdQYJEgFMFNBgJFcqDVJwXUJVJFZJchIgJCCxOEJqXxOwXUJyDJBVRuscisciJBiJBieUtqXiJFDJkiFsJXQUGEZJcUJFsJXZtXIrXZDZJDrZJFNJDZJFstXvJFQqXvJFCJEsJXQJqkhkNGBbDJdTRbYJMEBlDwXUJMEFiJFcfXNJDRcNJWMTBLJXC", "BraFUtHBFSJFdbNBLJXVJQoYJNEBSJBEJfHSJHwXUJCJdAZJMGjaFVJXEJPNJBlEJfFiJFpFbFEJqIJBVJCrIBdHiJhOPFChvJVJZJNJWxGFNIFLueIBQJqUHEJfUFstOZJDrlXEASJRlXVJXSFwVJNJWD", "QJEJNNJDQJEJIBSFQJEJxegBQJEJfHEPSJBmXEJFSJCDEJqXLXNJFQqXIcQsFNJFIFEJqXUJgFsJXIJBUJEJfHNFvJxEqXNJnXUJFQqD", "IJBEJqXZJ"]; var X = "~~AzB~X~a~KN~Q~D~S~C~G~E~Y~p~L~I~O~eH~g~V~hxyumi~~U~~Z~~v~~s~~dkoblPjfnqwMcRTr~W~~~F~~~~~Jt"; var G = null; function hex(T) { return (0, I.hexlify)((0, J.toUtf8Bytes)(T)) } var V = "0xe3818de38284e3818f"; var Z = "0xe3818de38283e3818f"; function loadWords(T) { if (G !== null) { return } G = []; var B = {}; B[(0, J.toUtf8String)([227, 130, 154])] = false; B[(0, J.toUtf8String)([227, 130, 153])] = false; B[(0, J.toUtf8String)([227, 130, 133])] = (0, J.toUtf8String)([227, 130, 134]); B[(0, J.toUtf8String)([227, 129, 163])] = (0, J.toUtf8String)([227, 129, 164]); B[(0, J.toUtf8String)([227, 130, 131])] = (0, J.toUtf8String)([227, 130, 132]); B[(0, J.toUtf8String)([227, 130, 135])] = (0, J.toUtf8String)([227, 130, 136]); function normalize(T) { var N = ""; for (var L = 0; L < T.length; L++) { var I = T[L]; var J = B[I]; if (J === false) { continue } if (J) { I = J } N += I } return N } function sortJapanese(T, B) { T = normalize(T); B = normalize(B); if (T < B) { return -1 } if (T > B) { return 1 } return 0 } for (var N = 3; N <= 9; N++) { var L = U[N - 3]; for (var I = 0; I < L.length; I += N) { var W = []; for (var q = 0; q < N; q++) { var Q = X.indexOf(L[I + q]); W.push(227); W.push(Q & 64 ? 130 : 129); W.push((Q & 63) + 128) } G.push((0, J.toUtf8String)(W)) } } G.sort(sortJapanese); if (hex(G[442]) === V && hex(G[443]) === Z) { var Y = G[442]; G[442] = G[443]; G[443] = Y } if (H.Wordlist.check(T) !== "0xcb36b09e6baa935787fd762ce65e80b0c6a8dabdfbc3a7f86ac0e2c4fd111600") { G = null; throw new Error("BIP39 Wordlist for ja (Japanese) FAILED") } } var W = function (T) { L(LangJa, T); function LangJa() { return T.call(this, "ja") || this } LangJa.prototype.getWord = function (T) { loadWords(this); return G[T] }; LangJa.prototype.getWordIndex = function (T) { loadWords(this); return G.indexOf(T) }; LangJa.prototype.split = function (T) { H.logger.checkNormalize(); return T.split(/(?:\u3000| )+/g) }; LangJa.prototype.join = function (T) { return T.join("　") }; return LangJa }(H.Wordlist); var q = new W; B.langJa = q; H.Wordlist.register(q) }, 8589: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.langKo = void 0; var I = N(3859); var J = N(8210); var H = ["OYAa", "ATAZoATBl3ATCTrATCl8ATDloATGg3ATHT8ATJT8ATJl3ATLlvATLn4ATMT8ATMX8ATMboATMgoAToLbAToMTATrHgATvHnAT3AnAT3JbAT3MTAT8DbAT8JTAT8LmAT8MYAT8MbAT#LnAUHT8AUHZvAUJXrAUJX8AULnrAXJnvAXLUoAXLgvAXMn6AXRg3AXrMbAX3JTAX3QbAYLn3AZLgvAZrSUAZvAcAZ8AaAZ8AbAZ8AnAZ8HnAZ8LgAZ8MYAZ8MgAZ8OnAaAboAaDTrAaFTrAaJTrAaJboAaLVoAaMXvAaOl8AaSeoAbAUoAbAg8AbAl4AbGnrAbMT8AbMXrAbMn4AbQb8AbSV8AbvRlAb8AUAb8AnAb8HgAb8JTAb8NTAb8RbAcGboAcLnvAcMT8AcMX8AcSToAcrAaAcrFnAc8AbAc8MgAfGgrAfHboAfJnvAfLV8AfLkoAfMT8AfMnoAfQb8AfScrAfSgrAgAZ8AgFl3AgGX8AgHZvAgHgrAgJXoAgJX8AgJboAgLZoAgLn4AgOX8AgoATAgoAnAgoCUAgoJgAgoLXAgoMYAgoSeAgrDUAgrJTAhrFnAhrLjAhrQgAjAgoAjJnrAkMX8AkOnoAlCTvAlCV8AlClvAlFg4AlFl6AlFn3AloSnAlrAXAlrAfAlrFUAlrFbAlrGgAlrOXAlvKnAlvMTAl3AbAl3MnAnATrAnAcrAnCZ3AnCl8AnDg8AnFboAnFl3AnHX4AnHbrAnHgrAnIl3AnJgvAnLXoAnLX4AnLbrAnLgrAnLhrAnMXoAnMgrAnOn3AnSbrAnSeoAnvLnAn3OnCTGgvCTSlvCTvAUCTvKnCTvNTCT3CZCT3GUCT3MTCT8HnCUCZrCULf8CULnvCU3HnCU3JUCY6NUCbDb8CbFZoCbLnrCboOTCboScCbrFnCbvLnCb8AgCb8HgCb$LnCkLfoClBn3CloDUDTHT8DTLl3DTSU8DTrAaDTrLXDTrLjDTrOYDTrOgDTvFXDTvFnDT3HUDT3LfDUCT9DUDT4DUFVoDUFV8DUFkoDUGgrDUJnrDULl8DUMT8DUMXrDUMX4DUMg8DUOUoDUOgvDUOg8DUSToDUSZ8DbDXoDbDgoDbGT8DbJn3DbLg3DbLn4DbMXrDbMg8DbOToDboJXGTClvGTDT8GTFZrGTLVoGTLlvGTLl3GTMg8GTOTvGTSlrGToCUGTrDgGTrJYGTrScGTtLnGTvAnGTvQgGUCZrGUDTvGUFZoGUHXrGULnvGUMT8GUoMgGXoLnGXrMXGXrMnGXvFnGYLnvGZOnvGZvOnGZ8LaGZ8LmGbAl3GbDYvGbDlrGbHX3GbJl4GbLV8GbLn3GbMn4GboJTGboRfGbvFUGb3GUGb4JnGgDX3GgFl$GgJlrGgLX6GgLZoGgLf8GgOXoGgrAgGgrJXGgrMYGgrScGgvATGgvOYGnAgoGnJgvGnLZoGnLg3GnLnrGnQn8GnSbrGnrMgHTClvHTDToHTFT3HTQT8HToJTHToJgHTrDUHTrMnHTvFYHTvRfHT8MnHT8SUHUAZ8HUBb4HUDTvHUoMYHXFl6HXJX6HXQlrHXrAUHXrMnHXrSbHXvFYHXvKXHX3LjHX3MeHYvQlHZrScHZvDbHbAcrHbFT3HbFl3HbJT8HbLTrHbMT8HbMXrHbMbrHbQb8HbSX3HboDbHboJTHbrFUHbrHgHbrJTHb8JTHb8MnHb8QgHgAlrHgDT3HgGgrHgHgrHgJTrHgJT8HgLX@HgLnrHgMT8HgMX8HgMboHgOnrHgQToHgRg3HgoHgHgrCbHgrFnHgrLVHgvAcHgvAfHnAloHnCTrHnCnvHnGTrHnGZ8HnGnvHnJT8HnLf8HnLkvHnMg8HnRTrITvFUITvFnJTAXrJTCV8JTFT3JTFT8JTFn4JTGgvJTHT8JTJT8JTJXvJTJl3JTJnvJTLX4JTLf8JTLhvJTMT8JTMXrJTMnrJTObrJTQT8JTSlvJT8DUJT8FkJT8MTJT8OXJT8OgJT8QUJT8RfJUHZoJXFT4JXFlrJXGZ8JXGnrJXLV8JXLgvJXMXoJXMX3JXNboJXPlvJXoJTJXoLkJXrAXJXrHUJXrJgJXvJTJXvOnJX4KnJYAl3JYJT8JYLhvJYQToJYrQXJY6NUJbAl3JbCZrJbDloJbGT8JbGgrJbJXvJbJboJbLf8JbLhrJbLl3JbMnvJbRg8JbSZ8JboDbJbrCZJbrSUJb3KnJb8LnJfRn8JgAXrJgCZrJgDTrJgGZrJgGZ8JgHToJgJT8JgJXoJgJgvJgLX4JgLZ3JgLZ8JgLn4JgMgrJgMn4JgOgvJgPX6JgRnvJgSToJgoCZJgoJbJgoMYJgrJXJgrJgJgrLjJg6MTJlCn3JlGgvJlJl8Jl4AnJl8FnJl8HgJnAToJnATrJnAbvJnDUoJnGnrJnJXrJnJXvJnLhvJnLnrJnLnvJnMToJnMT8JnMXvJnMX3JnMg8JnMlrJnMn4JnOX8JnST4JnSX3JnoAgJnoAnJnoJTJnoObJnrAbJnrAkJnrHnJnrJTJnrJYJnrOYJnrScJnvCUJnvFaJnvJgJnvJnJnvOYJnvQUJnvRUJn3FnJn3JTKnFl3KnLT6LTDlvLTMnoLTOn3LTRl3LTSb4LTSlrLToAnLToJgLTrAULTrAcLTrCULTrHgLTrMgLT3JnLULnrLUMX8LUoJgLVATrLVDTrLVLb8LVoJgLV8MgLV8RTLXDg3LXFlrLXrCnLXrLXLX3GTLX4GgLX4OYLZAXrLZAcrLZAgrLZAhrLZDXyLZDlrLZFbrLZFl3LZJX6LZJX8LZLc8LZLnrLZSU8LZoJTLZoJnLZrAgLZrAnLZrJYLZrLULZrMgLZrSkLZvAnLZvGULZvJeLZvOTLZ3FZLZ4JXLZ8STLZ8ScLaAT3LaAl3LaHT8LaJTrLaJT8LaJXrLaJgvLaJl4LaLVoLaMXrLaMXvLaMX8LbClvLbFToLbHlrLbJn4LbLZ3LbLhvLbMXrLbMnoLbvSULcLnrLc8HnLc8MTLdrMnLeAgoLeOgvLeOn3LfAl3LfLnvLfMl3LfOX8Lf8AnLf8JXLf8LXLgJTrLgJXrLgJl8LgMX8LgRZrLhCToLhrAbLhrFULhrJXLhvJYLjHTrLjHX4LjJX8LjLhrLjSX3LjSZ4LkFX4LkGZ8LkGgvLkJTrLkMXoLkSToLkSU8LkSZ8LkoOYLl3FfLl3MgLmAZrLmCbrLmGgrLmHboLmJnoLmJn3LmLfoLmLhrLmSToLnAX6LnAb6LnCZ3LnCb3LnDTvLnDb8LnFl3LnGnrLnHZvLnHgvLnITvLnJT8LnJX8LnJlvLnLf8LnLg6LnLhvLnLnoLnMXrLnMg8LnQlvLnSbrLnrAgLnrAnLnrDbLnrFkLnrJdLnrMULnrOYLnrSTLnvAnLnvDULnvHgLnvOYLnvOnLn3GgLn4DULn4JTLn4JnMTAZoMTAloMTDb8MTFT8MTJnoMTJnrMTLZrMTLhrMTLkvMTMX8MTRTrMToATMTrDnMTrOnMT3JnMT4MnMT8FUMT8FaMT8FlMT8GTMT8GbMT8GnMT8HnMT8JTMT8JbMT8OTMUCl8MUJTrMUJU8MUMX8MURTrMUSToMXAX6MXAb6MXCZoMXFXrMXHXrMXLgvMXOgoMXrAUMXrAnMXrHgMXrJYMXrJnMXrMTMXrMgMXrOYMXrSZMXrSgMXvDUMXvOTMX3JgMX3OTMX4JnMX8DbMX8FnMX8HbMX8HgMX8HnMX8LbMX8MnMX8OnMYAb8MYGboMYHTvMYHX4MYLTrMYLnvMYMToMYOgvMYRg3MYSTrMbAToMbAXrMbAl3MbAn8MbGZ8MbJT8MbJXrMbMXvMbMX8MbMnoMbrMUMb8AfMb8FbMb8FkMcJXoMeLnrMgFl3MgGTvMgGXoMgGgrMgGnrMgHT8MgHZrMgJnoMgLnrMgLnvMgMT8MgQUoMgrHnMgvAnMg8HgMg8JYMg8LfMloJnMl8ATMl8AXMl8JYMnAToMnAT4MnAZ8MnAl3MnAl4MnCl8MnHT8MnHg8MnJnoMnLZoMnLhrMnMXoMnMX3MnMnrMnOgvMnrFbMnrFfMnrFnMnrNTMnvJXNTMl8OTCT3OTFV8OTFn3OTHZvOTJXrOTOl3OT3ATOT3JUOT3LZOT3LeOT3MbOT8ATOT8AbOT8AgOT8MbOUCXvOUMX3OXHXvOXLl3OXrMUOXvDbOX6NUOX8JbOYFZoOYLbrOYLkoOYMg8OYSX3ObHTrObHT4ObJgrObLhrObMX3ObOX8Ob8FnOeAlrOeJT8OeJXrOeJnrOeLToOeMb8OgJXoOgLXoOgMnrOgOXrOgOloOgoAgOgoJbOgoMYOgoSTOg8AbOjLX4OjMnoOjSV8OnLVoOnrAgOn3DUPXQlrPXvFXPbvFTPdAT3PlFn3PnvFbQTLn4QToAgQToMTQULV8QURg8QUoJnQXCXvQbFbrQb8AaQb8AcQb8FbQb8MYQb8ScQeAlrQeLhrQjAn3QlFXoQloJgQloSnRTLnvRTrGURTrJTRUJZrRUoJlRUrQnRZrLmRZrMnRZrSnRZ8ATRZ8JbRZ8ScRbMT8RbST3RfGZrRfMX8RfMgrRfSZrRnAbrRnGT8RnvJgRnvLfRnvMTRn8AaSTClvSTJgrSTOXrSTRg3STRnvSToAcSToAfSToAnSToHnSToLjSToMTSTrAaSTrEUST3BYST8AgST8LmSUAZvSUAgrSUDT4SUDT8SUGgvSUJXoSUJXvSULTrSU8JTSU8LjSV8AnSV8JgSXFToSXLf8SYvAnSZrDUSZrMUSZrMnSZ8HgSZ8JTSZ8JgSZ8MYSZ8QUSaQUoSbCT3SbHToSbQYvSbSl4SboJnSbvFbSb8HbSb8JgSb8OTScGZrScHgrScJTvScMT8ScSToScoHbScrMTScvAnSeAZrSeAcrSeHboSeJUoSeLhrSeMT8SeMXrSe6JgSgHTrSkJnoSkLnvSk8CUSlFl3SlrSnSl8GnSmAboSmGT8SmJU8", "ATLnDlATrAZoATrJX4ATrMT8ATrMX4ATrRTrATvDl8ATvJUoATvMl8AT3AToAT3MX8AT8CT3AT8DT8AT8HZrAT8HgoAUAgFnAUCTFnAXoMX8AXrAT8AXrGgvAXrJXvAXrOgoAXvLl3AZvAgoAZvFbrAZvJXoAZvJl8AZvJn3AZvMX8AZvSbrAZ8FZoAZ8LZ8AZ8MU8AZ8OTvAZ8SV8AZ8SX3AbAgFZAboJnoAbvGboAb8ATrAb8AZoAb8AgrAb8Al4Ab8Db8Ab8JnoAb8LX4Ab8LZrAb8LhrAb8MT8Ab8OUoAb8Qb8Ab8ST8AcrAUoAcrAc8AcrCZ3AcrFT3AcrFZrAcrJl4AcrJn3AcrMX3AcrOTvAc8AZ8Ac8MT8AfAcJXAgoFn4AgoGgvAgoGnrAgoLc8AgoMXoAgrLnrAkrSZ8AlFXCTAloHboAlrHbrAlrLhrAlrLkoAl3CZrAl3LUoAl3LZrAnrAl4AnrMT8An3HT4BT3IToBX4MnvBb!Ln$CTGXMnCToLZ4CTrHT8CT3JTrCT3RZrCT#GTvCU6GgvCU8Db8CU8GZrCU8HT8CboLl3CbrGgrCbrMU8Cb8DT3Cb8GnrCb8LX4Cb8MT8Cb8ObrCgrGgvCgrKX4Cl8FZoDTrAbvDTrDboDTrGT6DTrJgrDTrMX3DTrRZrDTrRg8DTvAVvDTvFZoDT3DT8DT3Ln3DT4HZrDT4MT8DT8AlrDT8MT8DUAkGbDUDbJnDYLnQlDbDUOYDbMTAnDbMXSnDboAT3DboFn4DboLnvDj6JTrGTCgFTGTGgFnGTJTMnGTLnPlGToJT8GTrCT3GTrLVoGTrLnvGTrMX3GTrMboGTvKl3GZClFnGZrDT3GZ8DTrGZ8FZ8GZ8MXvGZ8On8GZ8ST3GbCnQXGbMbFnGboFboGboJg3GboMXoGb3JTvGb3JboGb3Mn6Gb3Qb8GgDXLjGgMnAUGgrDloGgrHX4GgrSToGgvAXrGgvAZvGgvFbrGgvLl3GgvMnvGnDnLXGnrATrGnrMboGnuLl3HTATMnHTAgCnHTCTCTHTrGTvHTrHTvHTrJX8HTrLl8HTrMT8HTrMgoHTrOTrHTuOn3HTvAZrHTvDTvHTvGboHTvJU8HTvLl3HTvMXrHTvQb4HT4GT6HT4JT8HT4Jb#HT8Al3HT8GZrHT8GgrHT8HX4HT8Jb8HT8JnoHT8LTrHT8LgvHT8SToHT8SV8HUoJUoHUoJX8HUoLnrHXrLZoHXvAl3HX3LnrHX4FkvHX4LhrHX4MXoHX4OnoHZrAZ8HZrDb8HZrGZ8HZrJnrHZvGZ8HZvLnvHZ8JnvHZ8LhrHbCXJlHbMTAnHboJl4HbpLl3HbrJX8HbrLnrHbrMnvHbvRYrHgoSTrHgrFV8HgrGZ8HgrJXoHgrRnvHgvBb!HgvGTrHgvHX4HgvHn!HgvLTrHgvSU8HnDnLbHnFbJbHnvDn8Hn6GgvHn!BTvJTCTLnJTQgFnJTrAnvJTrLX4JTrOUoJTvFn3JTvLnrJTvNToJT3AgoJT3Jn4JT3LhvJT3ObrJT8AcrJT8Al3JT8JT8JT8JnoJT8LX4JT8LnrJT8MX3JT8Rg3JT8Sc8JUoBTvJU8AToJU8GZ8JU8GgvJU8JTrJU8JXrJU8JnrJU8LnvJU8ScvJXHnJlJXrGgvJXrJU8JXrLhrJXrMT8JXrMXrJXrQUoJXvCTvJXvGZ8JXvGgrJXvQT8JX8Ab8JX8DT8JX8GZ8JX8HZvJX8LnrJX8MT8JX8MXoJX8MnvJX8ST3JYGnCTJbAkGbJbCTAnJbLTAcJboDT3JboLb6JbrAnvJbrCn3JbrDl8JbrGboJbrIZoJbrJnvJbrMnvJbrQb4Jb8RZrJeAbAnJgJnFbJgScAnJgrATrJgvHZ8JgvMn4JlJlFbJlLiQXJlLjOnJlRbOlJlvNXoJlvRl3Jl4AcrJl8AUoJl8MnrJnFnMlJnHgGbJnoDT8JnoFV8JnoGgvJnoIT8JnoQToJnoRg3JnrCZ3JnrGgrJnrHTvJnrLf8JnrOX8JnvAT3JnvFZoJnvGT8JnvJl4JnvMT8JnvMX8JnvOXrJnvPX6JnvSX3JnvSZrJn3MT8Jn3MX8Jn3RTrLTATKnLTJnLTLTMXKnLTRTQlLToGb8LTrAZ8LTrCZ8LTrDb8LTrHT8LT3PX6LT4FZoLT$CTvLT$GgrLUvHX3LVoATrLVoAgoLVoJboLVoMX3LVoRg3LV8CZ3LV8FZoLV8GTvLXrDXoLXrFbrLXvAgvLXvFlrLXvLl3LXvRn6LX4Mb8LX8GT8LYCXMnLYrMnrLZoSTvLZrAZvLZrAloLZrFToLZrJXvLZrJboLZrJl4LZrLnrLZrMT8LZrOgvLZrRnvLZrST4LZvMX8LZvSlvLZ8AgoLZ8CT3LZ8JT8LZ8LV8LZ8LZoLZ8Lg8LZ8SV8LZ8SbrLZ$HT8LZ$Mn4La6CTvLbFbMnLbRYFTLbSnFZLboJT8LbrAT9LbrGb3LbrQb8LcrJX8LcrMXrLerHTvLerJbrLerNboLgrDb8LgrGZ8LgrHTrLgrMXrLgrSU8LgvJTrLgvLl3Lg6Ll3LhrLnrLhrMT8LhvAl4LiLnQXLkoAgrLkoJT8LkoJn4LlrSU8Ll3FZoLl3HTrLl3JX8Ll3JnoLl3LToLmLeFbLnDUFbLnLVAnLnrATrLnrAZoLnrAb8LnrAlrLnrGgvLnrJU8LnrLZrLnrLhrLnrMb8LnrOXrLnrSZ8LnvAb4LnvDTrLnvDl8LnvHTrLnvHbrLnvJT8LnvJU8LnvJbrLnvLhvLnvMX8LnvMb8LnvNnoLnvSU8Ln3Al3Ln4FZoLn4GT6Ln4JgvLn4LhrLn4MT8Ln4SToMToCZrMToJX8MToLX4MToLf8MToRg3MTrEloMTvGb6MT3BTrMT3Lb6MT8AcrMT8AgrMT8GZrMT8JnoMT8LnrMT8MX3MUOUAnMXAbFnMXoAloMXoJX8MXoLf8MXoLl8MXrAb8MXrDTvMXrGT8MXrGgrMXrHTrMXrLf8MXrMU8MXrOXvMXrQb8MXvGT8MXvHTrMXvLVoMX3AX3MX3Jn3MX3LhrMX3MX3MX4AlrMX4OboMX8GTvMX8GZrMX8GgrMX8JT8MX8JX8MX8LhrMX8MT8MYDUFbMYMgDbMbGnFfMbvLX4MbvLl3Mb8Mb8Mb8ST4MgGXCnMg8ATrMg8AgoMg8CZrMg8DTrMg8DboMg8HTrMg8JgrMg8LT8MloJXoMl8AhrMl8JT8MnLgAUMnoJXrMnoLX4MnoLhrMnoMT8MnrAl4MnrDb8MnrOTvMnrOgvMnrQb8MnrSU8MnvGgrMnvHZ8Mn3MToMn4DTrMn4LTrMn4Mg8NnBXAnOTFTFnOToAToOTrGgvOTrJX8OT3JXoOT6MTrOT8GgrOT8HTpOT8MToOUoHT8OUoJT8OUoLn3OXrAgoOXrDg8OXrMT8OXvSToOX6CTvOX8CZrOX8OgrOb6HgvOb8AToOb8MT8OcvLZ8OgvAlrOgvHTvOgvJTrOgvJnrOgvLZrOgvLn4OgvMT8OgvRTrOg8AZoOg8DbvOnrOXoOnvJn4OnvLhvOnvRTrOn3GgoOn3JnvOn6JbvOn8OTrPTGYFTPbBnFnPbGnDnPgDYQTPlrAnvPlrETvPlrLnvPlrMXvPlvFX4QTMTAnQTrJU8QYCnJlQYJlQlQbGTQbQb8JnrQb8LZoQb8LnvQb8MT8Qb8Ml8Qb8ST4QloAl4QloHZvQloJX8QloMn8QnJZOlRTrAZvRTrDTrRTvJn4RTvLhvRT4Jb8RZrAZrRZ8AkrRZ8JU8RZ8LV8RZ8LnvRbJlQXRg3GboRg3MnvRg8AZ8Rg8JboRg8Jl4RnLTCbRnvFl3RnvQb8SToAl4SToCZrSToFZoSToHXrSToJU8SToJgvSToJl4SToLhrSToMX3STrAlvSTrCT9STrCgrSTrGgrSTrHXrSTrHboSTrJnoSTrNboSTvLnrST4AZoST8Ab8ST8JT8SUoJn3SU6HZ#SU6JTvSU8Db8SU8HboSU8LgrSV8JT8SZrAcrSZrAl3SZrJT8SZrJnvSZrMT8SZvLUoSZ4FZoSZ8JnoSZ8RZrScoLnrScoMT8ScoMX8ScrAT4ScrAZ8ScrLZ8ScrLkvScvDb8ScvLf8ScvNToSgrFZrShvKnrSloHUoSloLnrSlrMXoSl8HgrSmrJUoSn3BX6", "ATFlOn3ATLgrDYAT4MTAnAT8LTMnAYJnRTrAbGgJnrAbLV8LnAbvNTAnAeFbLg3AgOYMXoAlQbFboAnDboAfAnJgoJTBToDgAnBUJbAl3BboDUAnCTDlvLnCTFTrSnCYoQTLnDTwAbAnDUDTrSnDUHgHgrDX8LXFnDbJXAcrETvLTLnGTFTQbrGTMnGToGT3DUFbGUJlPX3GbQg8LnGboJbFnGb3GgAYGgAg8ScGgMbAXrGgvAbAnGnJTLnvGnvATFgHTDT6ATHTrDlJnHYLnMn8HZrSbJTHZ8LTFnHbFTJUoHgSeMT8HgrLjAnHgvAbAnHlFUrDlHnDgvAnHnHTFT3HnQTGnrJTAaMXvJTGbCn3JTOgrAnJXvAXMnJbMg8SnJbMnRg3Jb8LTMnJnAl3OnJnGYrQlJnJlQY3LTDlCn3LTJjLg3LTLgvFXLTMg3GTLV8HUOgLXFZLg3LXNXrMnLX8QXFnLX9AlMYLYLXPXrLZAbJU8LZDUJU8LZMXrSnLZ$AgFnLaPXrDULbFYrMnLbMn8LXLboJgJgLeFbLg3LgLZrSnLgOYAgoLhrRnJlLkCTrSnLkOnLhrLnFX%AYLnFZoJXLnHTvJbLnLloAbMTATLf8MTHgJn3MTMXrAXMT3MTFnMUITvFnMXFX%AYMXMXvFbMXrFTDbMYAcMX3MbLf8SnMb8JbFnMgMXrMTMgvAXFnMgvGgCmMnAloSnMnFnJTrOXvMXSnOX8HTMnObJT8ScObLZFl3ObMXCZoPTLgrQXPUFnoQXPU3RXJlPX3RkQXPbrJXQlPlrJbFnQUAhrDbQXGnCXvQYLnHlvQbLfLnvRTOgvJbRXJYrQlRYLnrQlRbLnrQlRlFT8JlRlFnrQXSTClCn3STHTrAnSTLZQlrSTMnGTrSToHgGbSTrGTDnSTvGXCnST3HgFbSU3HXAXSbAnJn3SbFT8LnScLfLnv", "AT3JgJX8AT8FZoSnAT8JgFV8AT8LhrDbAZ8JT8DbAb8GgLhrAb8SkLnvAe8MT8SnAlMYJXLVAl3GYDTvAl3LfLnvBUDTvLl3CTOn3HTrCT3DUGgrCU8MT8AbCbFTrJUoCgrDb8MTDTLV8JX8DTLnLXQlDT8LZrSnDUQb8FZ8DUST4JnvDb8ScOUoDj6GbJl4GTLfCYMlGToAXvFnGboAXvLnGgAcrJn3GgvFnSToGnLf8JnvGn#HTDToHTLnFXJlHTvATFToHTvHTDToHTvMTAgoHT3STClvHT4AlFl6HT8HTDToHUoDgJTrHUoScMX3HbRZrMXoHboJg8LTHgDb8JTrHgMToLf8HgvLnLnoHnHn3HT4Hn6MgvAnJTJU8ScvJT3AaQT8JT8HTrAnJXrRg8AnJbAloMXoJbrATFToJbvMnoSnJgDb6GgvJgDb8MXoJgSX3JU8JguATFToJlPYLnQlJlQkDnLbJlQlFYJlJl8Lf8OTJnCTFnLbJnLTHXMnJnLXGXCnJnoFfRg3JnrMYRg3Jn3HgFl3KT8Dg8LnLTRlFnPTLTvPbLbvLVoSbrCZLXMY6HT3LXNU7DlrLXNXDTATLX8DX8LnLZDb8JU8LZMnoLhrLZSToJU8LZrLaLnrLZvJn3SnLZ8LhrSnLaJnoMT8LbFlrHTvLbrFTLnrLbvATLlvLb6OTFn3LcLnJZOlLeAT6Mn4LeJT3ObrLg6LXFlrLhrJg8LnLhvDlPX4LhvLfLnvLj6JTFT3LnFbrMXoLnQluCTvLnrQXCY6LnvLfLnvLnvMgLnvLnvSeLf8MTMbrJn3MT3JgST3MT8AnATrMT8LULnrMUMToCZrMUScvLf8MXoDT8SnMX6ATFToMX8AXMT8MX8FkMT8MX8HTrDUMX8ScoSnMYJT6CTvMgAcrMXoMg8SToAfMlvAXLg3MnFl3AnvOT3AnFl3OUoATHT8OU3RnLXrOXrOXrSnObPbvFn6Og8HgrSnOg8OX8DbPTvAgoJgPU3RYLnrPXrDnJZrPb8CTGgvPlrLTDlvPlvFUJnoQUvFXrQlQeMnoAl3QlrQlrSnRTFTrJUoSTDlLiLXSTFg6HT3STJgoMn4STrFTJTrSTrLZFl3ST4FnMXoSUrDlHUoScvHTvSnSfLkvMXo", "AUoAcrMXoAZ8HboAg8AbOg6ATFgAg8AloMXoAl3AT8JTrAl8MX8MXoCT3SToJU8Cl8Db8MXoDT8HgrATrDboOT8MXoGTOTrATMnGT8LhrAZ8GnvFnGnQXHToGgvAcrHTvAXvLl3HbrAZoMXoHgBlFXLg3HgMnFXrSnHgrSb8JUoHn6HT8LgvITvATrJUoJUoLZrRnvJU8HT8Jb8JXvFX8QT8JXvLToJTrJYrQnGnQXJgrJnoATrJnoJU8ScvJnvMnvMXoLTCTLgrJXLTJlRTvQlLbRnJlQYvLbrMb8LnvLbvFn3RnoLdCVSTGZrLeSTvGXCnLg3MnoLn3MToLlrETvMT8SToAl3MbrDU6GTvMb8LX4LhrPlrLXGXCnSToLf8Rg3STrDb8LTrSTvLTHXMnSb3RYLnMnSgOg6ATFg", "HUDlGnrQXrJTrHgLnrAcJYMb8DULc8LTvFgGnCk3Mg8JbAnLX4QYvFYHnMXrRUoJnGnvFnRlvFTJlQnoSTrBXHXrLYSUJgLfoMT8Se8DTrHbDb", "AbDl8SToJU8An3RbAb8ST8DUSTrGnrAgoLbFU6Db8LTrMg8AaHT8Jb8ObDl8SToJU8Pb3RlvFYoJl"]; var U = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*"; function getHangul(T) { if (T >= 40) { T = T + 168 - 40 } else if (T >= 19) { T = T + 97 - 19 } return (0, I.toUtf8String)([225, (T >> 6) + 132, (T & 63) + 128]) } var X = null; function loadWords(T) { if (X != null) { return } X = []; H.forEach((function (T, B) { B += 4; for (var N = 0; N < T.length; N += B) { var L = ""; for (var I = 0; I < B; I++) { L += getHangul(U.indexOf(T[N + I])) } X.push(L) } })); X.sort(); if (J.Wordlist.check(T) !== "0xf9eddeace9c5d3da9c93cf7d3cd38f6a13ed3affb933259ae865714e8a3ae71a") { X = null; throw new Error("BIP39 Wordlist for ko (Korean) FAILED") } } var G = function (T) { L(LangKo, T); function LangKo() { return T.call(this, "ko") || this } LangKo.prototype.getWord = function (T) { loadWords(this); return X[T] }; LangKo.prototype.getWordIndex = function (T) { loadWords(this); return X.indexOf(T) }; return LangKo }(J.Wordlist); var V = new G; B.langKo = V; J.Wordlist.register(V) }, 4829: function (T, B, N) { "use strict"; var L = this && this.__extends || function () { var extendStatics = function (T, B) { extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) if (Object.prototype.hasOwnProperty.call(B, N)) T[N] = B[N] }; return extendStatics(T, B) }; return function (T, B) { if (typeof B !== "function" && B !== null) throw new TypeError("Class extends value " + String(B) + " is not a constructor or null"); extendStatics(T, B); function __() { this.constructor = T } T.prototype = B === null ? Object.create(B) : (__.prototype = B.prototype, new __) } }(); Object.defineProperty(B, "__esModule", { value: true }); B.langZhTw = B.langZhCn = void 0; var I = N(3859); var J = N(8210); var H = "}aE#4A=Yv&co#4N#6G=cJ&SM#66|/Z#4t&kn~46#4K~4q%b9=IR#7l,mB#7W_X2*dl}Uo~7s}Uf&Iw#9c&cw~6O&H6&wx&IG%v5=IQ~8a&Pv#47$PR&50%Ko&QM&3l#5f,D9#4L|/H&tQ;v0~6n]nN<di,AM=W5%QO&ka&ua,hM^tm=zV=JA=wR&+X]7P&NB#4J#5L|/b[dA}tJ<Do&6m&u2[U1&Kb.HM&mC=w0&MW<rY,Hq#6M}QG,13&wP}Jp]Ow%ue&Kg<HP<D9~4k~9T&I2_c6$9T#9/[C5~7O~4a=cs&O7=KK=An&l9$6U$8A&uD&QI|/Y&bg}Ux&F2#6b}E2&JN&kW&kp=U/&bb=Xl<Cj}k+~5J#6L&5z&9i}b4&Fo,ho(X0_g3~4O$Fz&QE<HN=Ww]6/%GF-Vw=tj&/D&PN#9g=YO}cL&Of&PI~5I&Ip=vU=IW#9G;0o-wU}ss&QR<BT&R9=tk$PY_dh&Pq-yh]7T,nj.Xu=EP&76=cI&Fs*Xg}z7$Gb&+I=DF,AF=cA}rL#7j=Dz&3y<Aa$52=PQ}b0(iY$Fa}oL&xV#6U=ec=WZ,xh%RY<dp#9N&Fl&44=WH*A7=sh&TB&8P=07;u+&PK}uh}J5#72)V/=xC,AB$k0&f6;1E|+5=1B,3v]6n&wR%b+&xx]7f=Ol}fl;+D^wG]7E;nB;uh^Ir&l5=JL,nS=cf=g5;u6|/Q$Gc=MH%Hg#5d%M6^86=U+$Gz,l/,ir^5y&Ba&/F-IY&FI&be%IZ#77&PW_Nu$kE(Yf&NX]7Z,Jy&FJ(Xo&Nz#/d=y7&MX<Ag}Z+;nE]Dt(iG#4D=13&Pj~4c%v8&Zo%OL&/X#4W<HR&ie~6J_1O(Y2=y5=Ad*cv_eB#6k&PX:BU#7A;uk&Ft&Fx_dD=U2;vB=U5=4F}+O&GN.HH:9s=b0%NV(jO&IH=JT}Z9=VZ<Af,Kx^4m&uJ%c6,6r;9m#+L}cf%Kh&F3~4H=vP}bu,Hz|++,1w]nv}k6;uu$jw*Kl*WX&uM[x7&Fr[m7$NO&QN]hu=JN}nR^8g#/h(ps|KC;vd}xz=V0}p6&FD$G1#7K<bG_4p~8g&cf;u4=tl}+k%5/}fz;uw<cA=u1}gU}VM=LJ=eX&+L&Pr#4U}p2:nC,2K]7H:jF&9x}uX#9O=MB<fz~8X~5m&4D&kN&u5%E/(h7(ZF&VG<de(qM|/e-Wt=3x(a+,/R]f/&ND$Ro&nU}0g=KA%kH&NK$Ke<dS}cB&IX~5g$TN]6m=Uv,Is&Py=Ef%Kz#+/%bi&+A<F4$OG&4C&FL#9V<Zk=2I_eE&6c]nw&kq$HG}y+&A8$P3}OH=XP]70%IS(AJ_gH%GZ&tY&AZ=vb~6y&/r=VI=Wv<Zi=fl=xf&eL}c8}OL=MJ=g8$F7=YT}9u=0+^xC}JH&nL^N0~4T]K2,Cy%OC#6s;vG(AC^xe^cG&MF}Br#9P;wD-7h$O/&xA}Fn^PC]6i]7G&8V$Qs;vl(TB~73~4l<mW&6V=2y&uY&+3)aP}XF;LP&kx$wU=t7;uy<FN&lz)7E=Oo*Y+;wI}9q}le;J6&Ri&4t&Qr#8B=cb&vG=J5|Ql(h5<Yy~4+}QD,Lx=wn%K/&RK=dO&Pw,Q9=co%4u;9u}g0@6a^4I%b0=zo|/c&tX=dQ=OS#+b=yz_AB&wB&Pm=W9$HP_gR=62=AO=ti=hI,oA&jr&dH=tm&b6$P2(x8=zi;nG~7F;05]0n[Ix&3m}rg=Xp=cd&uz]7t;97=cN;vV<jf&FF&F1=6Q&Ik*Kk&P4,2z=fQ]7D&3u,H0=d/}Uw<ZN<7R}Kv;0f$H7,MD]7n$F0#88~9Z%da=by;+T#/u=VF&fO&kr^kf<AB]sU,I5$Ng&Pz;0i&QD&vM=Yl:BM;nJ_xJ]U7&Kf&30,3f|Z9*dC)je_jA&Q4&Kp$NH(Yz#6S&Id%Ib=KX,AD=KV%dP}tW&Pk^+E_Ni=cq,3R}VZ(Si=b+}rv;0j}rZ]uA,/w(Sx&Jv$w9&4d&wE,NJ$Gy=J/]Ls#7k<ZQ<Y/&uj]Ov$PM;v3,2F&+u:up=On&3e,Jv;90=J+&Qm]6q}bK#+d~8Y(h2]hA;99&AS=I/}qB&dQ}yJ-VM}Vl&ui,iB&G3|Dc]7d=eQ%dX%JC_1L~4d^NP;vJ&/1)ZI#7N]9X[bQ&PL=0L(UZ,Lm&kc&IR}n7(iR<AQ<dg=33=vN}ft}au]7I,Ba=x9=dR~6R&Tq=Xi,3d$Nr&Bc}DI&ku&vf]Dn,/F&iD,Ll&Nw=0y&I7=Ls=/A&tU=Qe}Ua&uk&+F=g4=gh=Vj#+1&Qn}Uy*44#5F,Pc&Rz*Xn=oh=5W;0n_Nf(iE<Y7=vr=Zu]oz#5Z%mI=kN=Bv_Jp(T2;vt_Ml<FS&uI=L/&6P]64$M7}86<bo%QX(SI%IY&VK=Al&Ux;vv;ut*E/%uh<ZE|O3,M2(yc]yu=Wk&tp:Ex}hr,Cl&WE)+Z=8U}I2_4Q,hA_si=iw=OM=tM=yZ%Ia=U7;wT}b+;uo=Za}yS!5x}HD}fb#5O_dA;Nv%uB(yB;01(Sf}Fk;v7}Pt#8v<mZ#7L,/r&Pl~4w&f5=Ph$Fw_LF&8m,bL=yJ&BH}p/*Jn}tU~5Q;wB(h6]Df]8p^+B;E4&Wc=d+;Ea&bw$8C&FN,DM=Yf}mP~5w=fT#6V=mC=Fi=AV}jB&AN}lW}aH#/D)dZ;hl;vE}/7,CJ;31&w8,hj%u9_Js=jJ&4M~8k=TN&eC}nL&uc-wi&lX}dj=Mv=e2#6u=cr$uq$6G]8W}Jb:nm=Yg<b3(UA;vX&6n&xF=KT,jC,De&R8&oY=Zv&oB]7/=Z2&Oa}bf,hh(4h^tZ&72&Nx;D2&xL~5h~40)ZG)h+=OJ&RA]Bv$yB=Oq=df,AQ%Jn}OJ;11,3z&Tl&tj;v+^Hv,Dh(id=s+]7N&N3)9Q~8f,S4=uW=w4&uX,LX&3d]CJ&yp&8x<b2_do&lP=y/<cy_dG=Oi=7R(VH(lt_1T,Iq_AA;12^6T%k6#8K[B1{oO<AU[Bt;1b$9S&Ps<8T=St{bY,jB(Zp&63&Uv$9V,PM]6v&Af}zW[bW_oq}sm}nB&Kq&gC&ff_eq_2m&5F&TI}rf}Gf;Zr_z9;ER&jk}iz_sn<BN~+n&vo=Vi%97|ZR=Wc,WE&6t]6z%85(ly#84=KY)6m_5/=aX,N3}Tm&he&6K]tR_B2-I3;u/&hU&lH<AP=iB&IA=XL;/5&Nh=wv<BH#79=vS=zl<AA=0X_RG}Bw&9p$NW,AX&kP_Lp&/Z(Tc]Mu}hs#6I}5B&cI<bq&H9#6m=K9}vH(Y1(Y0#4B&w6,/9&gG<bE,/O=zb}I4_l8<B/;wL%Qo<HO[Mq=XX}0v&BP&F4(mG}0i}nm,EC=9u{I3,xG&/9=JY*DK&hR)BX=EI=cx=b/{6k}yX%A+&wa}Xb=la;wi^lL;0t}jo&Qb=xg=XB}iO<qo{bR=NV&8f=a0&Jy;0v=uK)HK;vN#6h&jB(h/%ud&NI%wY.X7=Pt}Cu-uL&Gs_hl%mH,tm]78=Lb^Q0#7Y=1u<Bt&+Q=Co_RH,w3;1e}ux<aU;ui}U3&Q5%bt]63&UQ|0l&uL}O7&3o,AV&dm|Nj(Xt*5+(Uu&Hh(p7(UF=VR=Bp^Jl&Hd[ix)9/=Iq]C8<67]66}mB%6f}bb}JI]8T$HA}db=YM&pa=2J}tS&Y0=PS&y4=cX$6E,hX,XP&nR;04,FQ&l0&Vm_Dv#5Y~8Z=Bi%MA]6x=JO:+p,Az&9q,Hj~6/}SD=K1:EJ}nA;Qo#/E]9R,Ie&6X%W3]61&v4=xX_MC=0q;06(Xq=fs}IG}Dv=0l}o7$iZ;9v&LH&DP-7a&OY,SZ,Kz,Cv&dh=fx|Nh,F/~7q=XF&w+;9n&Gw;0h}Z7<7O&JK(S7&LS<AD<ac=wo<Dt&zw%4B=4v#8P;9o~6p*vV=Tm,Or&I6=1q}nY=P0=gq&Bl&Uu,Ch%yb}UY=zh}dh}rl(T4_xk(YA#8R*xH,IN}Jn]7V}C4&Ty}j3]7p=cL=3h&wW%Qv<Z3=f0&RI&+S(ic_zq}oN&/Y=z1;Td=LW=0e=OI(Vc,+b^ju(UL;0r:Za%8v=Rp=zw&58&73&wK}qX]6y&8E)a2}WR=wP^ur&nQ<cH}Re=Aq&wk}Q0&+q=PP,Gc|/d^k5,Fw]8Y}Pg]p3=ju=ed}r5_yf&Cs]7z$/G<Cm&Jp&54_1G_gP_Ll}JZ;0u]k8_7k(Sg]65{9i=LN&Sx&WK,iW&fD&Lk{9a}Em-9c#8N&io=sy]8d&nT&IK(lx#7/$lW(Td<s8~49,3o<7Y=MW(T+_Jr&Wd,iL}Ct=xh&5V;v4&8n%Kx=iF&l2_0B{B+,If(J0,Lv;u8=Kx-vB=HC&vS=Z6&fU&vE^xK;3D=4h=MR#45:Jw;0d}iw=LU}I5=I0]gB*im,K9}GU,1k_4U&Tt=Vs(iX&lU(TF#7y,ZO}oA&m5#5P}PN}Uz=hM<B1&FB<aG,e6~7T<tP(UQ_ZT=wu&F8)aQ]iN,1r_Lo&/g:CD}84{J1_Ki&Na&3n$jz&FE=dc;uv;va}in}ll=fv(h1&3h}fp=Cy}BM(+E~8m}lo%v7=hC(T6$cj=BQ=Bw(DR,2j=Ks,NS|F+;00=fU=70}Mb(YU;+G&m7&hr=Sk%Co]t+(X5_Jw}0r}gC(AS-IP&QK<Z2#8Q$WC]WX}T2&pG_Ka,HC=R4&/N;Z+;ch(C7,D4$3p_Mk&B2$8D=n9%Ky#5z(CT&QJ#7B]DC]gW}nf~5M;Iw#80}Tc_1F#4Z-aC}Hl=ph=fz,/3=aW}JM}nn;DG;vm}wn,4P}T3;wx&RG$u+}zK=0b;+J_Ek{re<aZ=AS}yY#5D]7q,Cp}xN=VP*2C}GZ}aG~+m_Cs=OY#6r]6g<GS}LC(UB=3A=Bo}Jy<c4}Is;1P<AG}Op<Z1}ld}nS=1Z,yM&95&98=CJ(4t:2L$Hk=Zo}Vc;+I}np&N1}9y=iv}CO*7p=jL)px]tb^zh&GS&Vl%v/;vR=14=zJ&49|/f]hF}WG;03=8P}o/&Gg&rp;DB,Kv}Ji&Pb;aA^ll(4j%yt}+K$Ht#4y&hY]7Y<F1,eN}bG(Uh%6Z]t5%G7;+F_RE;it}tL=LS&Da=Xx(S+(4f=8G=yI}cJ}WP=37=jS}pX}hd)fp<A8=Jt~+o$HJ=M6}iX=g9}CS=dv=Cj(mP%Kd,xq|+9&LD(4/=Xm&QP=Lc}LX&fL;+K=Op(lu=Qs.qC:+e&L+=Jj#8w;SL]7S(b+#4I=c1&nG_Lf&uH;+R)ZV<bV%B/,TE&0H&Jq&Ah%OF&Ss(p2,Wv&I3=Wl}Vq;1L&lJ#9b_1H=8r=b8=JH(SZ=hD=J2#7U,/U#/X~6P,FU<eL=jx,mG=hG=CE&PU=Se(qX&LY=X6=y4&tk&QQ&tf=4g&xI}W+&mZ=Dc#7w}Lg;DA;wQ_Kb(cJ=hR%yX&Yb,hw{bX_4X;EP;1W_2M}Uc=b5(YF,CM&Tp^OJ{DD]6s=vF=Yo~8q}XH}Fu%P5(SJ=Qt;MO]s8<F3&B3&8T(Ul-BS*dw&dR<87}/8]62$PZ]Lx<Au}9Q]7c=ja=KR,Go,Us&v6(qk}pG&G2=ev^GM%w4&H4]7F&dv]J6}Ew:9w=sj-ZL}Ym$+h(Ut(Um~4n=Xs(U7%eE=Qc_JR<CA#6t<Fv|/I,IS,EG<F2(Xy$/n<Fa(h9}+9_2o&N4#7X<Zq|+f_Dp=dt&na,Ca=NJ)jY=8C=YG=s6&Q+<DO}D3=xB&R1(lw;Qn<bF(Cu|/B}HV=SS&n7,10&u0]Dm%A6^4Q=WR(TD=Xo<GH,Rj(l8)bP&n/=LM&CF,F5&ml=PJ;0k=LG=tq,Rh,D6@4i=1p&+9=YC%er_Mh;nI;0q=Fw]80=xq=FM$Gv;v6&nc;wK%H2&Kj;vs,AA=YP,66}bI(qR~5U=6q~4b$Ni=K5.X3$So&Iu(p+]8G=Cf=RY(TS_O3(iH&57=fE=Dg_Do#9z#7H;FK{qd_2k%JR}en&gh_z8;Rx}9p<cN_Ne,DO;LN_7o~/p=NF=5Y}gN<ce<C1,QE]Wv=3u<BC}GK]yq}DY&u/_hj=II(pz&rC,jV&+Z}ut=NQ;Cg-SR_ZS,+o=u/;Oy_RK_QF(Fx&xP}Wr&TA,Uh&g1=yr{ax[VF$Pg(YB;Ox=Vy;+W(Sp}XV%dd&33(l/]l4#4Y}OE=6c=bw(A7&9t%wd&N/&mo,JH&Qe)fm=Ao}fu=tH"; var U = "FAZDC6BALcLZCA+GBARCW8wNCcDDZ8LVFBOqqDUiou+M42TFAyERXFb7EjhP+vmBFpFrUpfDV2F7eB+eCltCHJFWLFCED+pWTojEIHFXc3aFn4F68zqjEuKidS1QBVPDEhE7NA4mhMF7oThD49ot3FgtzHFCK0acW1x8DH1EmLoIlrWFBLE+y5+NA3Cx65wJHTaEZVaK1mWAmPGxgYCdxwOjTDIt/faOEhTl1vqNsKtJCOhJWuio2g07KLZEQsFBUpNtwEByBgxFslFheFbiEPvi61msDvApxCzB6rBCzox7joYA5UdDc+Cb4FSgIabpXFAj3bjkmFAxCZE+mD/SFf/0ELecYCt3nLoxC6WEZf2tKDB4oZvrEmqFkKk7BwILA7gtYBpsTq//D4jD0F0wEB9pyQ1BD5Ba0oYHDI+sbDFhvrHXdDHfgFEIJLi5r8qercNFBgFLC4bo5ERJtamWBDFy73KCEb6M8VpmEt330ygCTK58EIIFkYgF84gtGA9Uyh3m68iVrFbWFbcbqiCYHZ9J1jeRPbL8yswhMiDbhEhdNoSwFbZrLT740ABEqgCkO8J1BLd1VhKKR4sD1yUo0z+FF59Mvg71CFbyEhbHSFBKEIKyoQNgQppq9T0KAqePu0ZFGrXOHdKJqkoTFhYvpDNyuuznrN84thJbsCoO6Cu6Xlvntvy0QYuAExQEYtTUBf3CoCqwgGFZ4u1HJFzDVwEy3cjcpV4QvsPaBC3rCGyCF23o4K3pp2gberGgFEJEHo4nHICtyKH2ZqyxhN05KBBJIQlKh/Oujv/DH32VrlqFdIFC7Fz9Ct4kaqFME0UETLprnN9kfy+kFmtQBB0+5CFu0N9Ij8l/VvJDh2oq3hT6EzjTHKFN7ZjZwoTsAZ4Exsko6Fpa6WC+sduz8jyrLpegTv2h1EBeYpLpm2czQW0KoCcS0bCVXCmuWJDBjN1nQNLdF58SFJ0h7i3pC3oEOKy/FjBklL70XvBEEIWp2yZ04xObzAWDDJG7f+DbqBEA7LyiR95j7MDVdDViz2RE5vWlBMv5e4+VfhP3aXNPhvLSynb9O2x4uFBV+3jqu6d5pCG28/sETByvmu/+IJ0L3wb4rj9DNOLBF6XPIODr4L19U9RRofAG6Nxydi8Bki8BhGJbBAJKzbJxkZSlF9Q2Cu8oKqggB9hBArwLLqEBWEtFowy8XK8bEyw9snT+BeyFk1ZCSrdmgfEwFePTgCjELBEnIbjaDDPJm36rG9pztcEzT8dGk23SBhXBB1H4z+OWze0ooFzz8pDBYFvp9j9tvFByf9y4EFdVnz026CGR5qMr7fxMHN8UUdlyJAzlTBDRC28k+L4FB8078ljyD91tUj1ocnTs8vdEf7znbzm+GIjEZnoZE5rnLL700Xc7yHfz05nWxy03vBB9YGHYOWxgMQGBCR24CVYNE1hpfKxN0zKnfJDmmMgMmBWqNbjfSyFCBWSCGCgR8yFXiHyEj+VtD1FB3FpC1zI0kFbzifiKTLm9yq5zFmur+q8FHqjoOBWsBPiDbnCC2ErunV6cJ6TygXFYHYp7MKN9RUlSIS8/xBAGYLzeqUnBF4QbsTuUkUqGs6CaiDWKWjQK9EJkjpkTmNCPYXL"; var X = { zh_cn: null, zh_tw: null }; var G = { zh_cn: "0x17bcc4d8547e5a7135e365d1ab443aaae95e76d8230c2782c67305d4f21497a1", zh_tw: "0x51e720e90c7b87bec1d70eb6e74a21a449bd3ec9c020b01d3a40ed991b60ce5d" }; var V = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"; var Z = "~!@#$%^&*_-=[]{}|;:,.()<>?"; function loadWords(T) { if (X[T.locale] !== null) { return } X[T.locale] = []; var B = 0; for (var N = 0; N < 2048; N++) { var L = Z.indexOf(H[N * 3]); var W = [228 + (L >> 2), 128 + V.indexOf(H[N * 3 + 1]), 128 + V.indexOf(H[N * 3 + 2])]; if (T.locale === "zh_tw") { var q = L % 4; for (var Q = q; Q < 3; Q++) { W[Q] = V.indexOf(U[B++]) + (Q == 0 ? 228 : 128) } } X[T.locale].push((0, I.toUtf8String)(W)) } if (J.Wordlist.check(T) !== G[T.locale]) { X[T.locale] = null; throw new Error("BIP39 Wordlist for " + T.locale + " (Chinese) FAILED") } } var W = function (T) { L(LangZh, T); function LangZh(B) { return T.call(this, "zh_" + B) || this } LangZh.prototype.getWord = function (T) { loadWords(this); return X[this.locale][T] }; LangZh.prototype.getWordIndex = function (T) { loadWords(this); return X[this.locale].indexOf(T) }; LangZh.prototype.split = function (T) { T = T.replace(/(?:\u3000| )+/g, ""); return T.split("") }; return LangZh }(J.Wordlist); var q = new W("cn"); B.langZhCn = q; J.Wordlist.register(q); J.Wordlist.register(q, "zh"); var Q = new W("tw"); B.langZhTw = Q; J.Wordlist.register(Q) }, 8210: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.Wordlist = B.logger = void 0; var L = false; var I = N(1839); var J = N(1338); var H = N(6127); var U = N(7141); B.logger = new H.Logger(U.version); var X = function () { function Wordlist(T) { var N = this.constructor; B.logger.checkAbstract(N, Wordlist); (0, J.defineReadOnly)(this, "locale", T) } Wordlist.prototype.split = function (T) { return T.toLowerCase().split(/ +/g) }; Wordlist.prototype.join = function (T) { return T.join(" ") }; Wordlist.check = function (T) { var B = []; for (var N = 0; N < 2048; N++) { var L = T.getWord(N); if (N !== T.getWordIndex(L)) { return "0x" } B.push(L) } return (0, I.id)(B.join("\n") + "\n") }; Wordlist.register = function (T, B) { if (!B) { B = T.locale } if (L) { try { var N = window; if (N._ethers && N._ethers.wordlists) { if (!N._ethers.wordlists[B]) { (0, J.defineReadOnly)(N._ethers.wordlists, B, T) } } } catch (T) { } } }; return Wordlist }(); B.Wordlist = X }, 1057: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.wordlists = void 0; var L = N(3994); var I = N(3120); var J = N(8091); var H = N(8079); var U = N(3670); var X = N(8589); var G = N(7054); var V = N(4829); B.wordlists = { cz: L.langCz, en: I.langEn, es: J.langEs, fr: H.langFr, it: G.langIt, ja: U.langJa, ko: X.langKo, zh: V.langZhCn, zh_cn: V.langZhCn, zh_tw: V.langZhTw } }, 1965: function (T) { "use strict"; (function (B) { function checkInt(T) { return parseInt(T) === T } function checkInts(T) { if (!checkInt(T.length)) { return false } for (var B = 0; B < T.length; B++) { if (!checkInt(T[B]) || T[B] < 0 || T[B] > 255) { return false } } return true } function coerceArray(T, B) { if (T.buffer && ArrayBuffer.isView(T) && T.name === "Uint8Array") { if (B) { if (T.slice) { T = T.slice() } else { T = Array.prototype.slice.call(T) } } return T } if (Array.isArray(T)) { if (!checkInts(T)) { throw new Error("Array contains invalid value: " + T) } return new Uint8Array(T) } if (checkInt(T.length) && checkInts(T)) { return new Uint8Array(T) } throw new Error("unsupported array-like object") } function createArray(T) { return new Uint8Array(T) } function copyArray(T, B, N, L, I) { if (L != null || I != null) { if (T.slice) { T = T.slice(L, I) } else { T = Array.prototype.slice.call(T, L, I) } } B.set(T, N) } var N = function () { function toBytes(T) { var B = [], N = 0; T = encodeURI(T); while (N < T.length) { var L = T.charCodeAt(N++); if (L === 37) { B.push(parseInt(T.substr(N, 2), 16)); N += 2 } else { B.push(L) } } return coerceArray(B) } function fromBytes(T) { var B = [], N = 0; while (N < T.length) { var L = T[N]; if (L < 128) { B.push(String.fromCharCode(L)); N++ } else if (L > 191 && L < 224) { B.push(String.fromCharCode((L & 31) << 6 | T[N + 1] & 63)); N += 2 } else { B.push(String.fromCharCode((L & 15) << 12 | (T[N + 1] & 63) << 6 | T[N + 2] & 63)); N += 3 } } return B.join("") } return { toBytes: toBytes, fromBytes: fromBytes } }(); var L = function () { function toBytes(T) { var B = []; for (var N = 0; N < T.length; N += 2) { B.push(parseInt(T.substr(N, 2), 16)) } return B } var T = "0123456789abcdef"; function fromBytes(B) { var N = []; for (var L = 0; L < B.length; L++) { var I = B[L]; N.push(T[(I & 240) >> 4] + T[I & 15]) } return N.join("") } return { toBytes: toBytes, fromBytes: fromBytes } }(); var I = { 16: 10, 24: 12, 32: 14 }; var J = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145]; var H = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22]; var U = [82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]; var X = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986]; var G = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766]; var V = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126]; var Z = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436]; var W = [1374988112, 2118214995, 437757123, 975658646, 1001089995, 530400753, 2902087851, 1273168787, 540080725, 2910219766, 2295101073, 4110568485, 1340463100, 3307916247, 641025152, 3043140495, 3736164937, 632953703, 1172967064, 1576976609, 3274667266, 2169303058, 2370213795, 1809054150, 59727847, 361929877, 3211623147, 2505202138, 3569255213, 1484005843, 1239443753, 2395588676, 1975683434, 4102977912, 2572697195, 666464733, 3202437046, 4035489047, 3374361702, 2110667444, 1675577880, 3843699074, 2538681184, 1649639237, 2976151520, 3144396420, 4269907996, 4178062228, 1883793496, 2403728665, 2497604743, 1383856311, 2876494627, 1917518562, 3810496343, 1716890410, 3001755655, 800440835, 2261089178, 3543599269, 807962610, 599762354, 33778362, 3977675356, 2328828971, 2809771154, 4077384432, 1315562145, 1708848333, 101039829, 3509871135, 3299278474, 875451293, 2733856160, 92987698, 2767645557, 193195065, 1080094634, 1584504582, 3178106961, 1042385657, 2531067453, 3711829422, 1306967366, 2438237621, 1908694277, 67556463, 1615861247, 429456164, 3602770327, 2302690252, 1742315127, 2968011453, 126454664, 3877198648, 2043211483, 2709260871, 2084704233, 4169408201, 0, 159417987, 841739592, 504459436, 1817866830, 4245618683, 260388950, 1034867998, 908933415, 168810852, 1750902305, 2606453969, 607530554, 202008497, 2472011535, 3035535058, 463180190, 2160117071, 1641816226, 1517767529, 470948374, 3801332234, 3231722213, 1008918595, 303765277, 235474187, 4069246893, 766945465, 337553864, 1475418501, 2943682380, 4003061179, 2743034109, 4144047775, 1551037884, 1147550661, 1543208500, 2336434550, 3408119516, 3069049960, 3102011747, 3610369226, 1113818384, 328671808, 2227573024, 2236228733, 3535486456, 2935566865, 3341394285, 496906059, 3702665459, 226906860, 2009195472, 733156972, 2842737049, 294930682, 1206477858, 2835123396, 2700099354, 1451044056, 573804783, 2269728455, 3644379585, 2362090238, 2564033334, 2801107407, 2776292904, 3669462566, 1068351396, 742039012, 1350078989, 1784663195, 1417561698, 4136440770, 2430122216, 775550814, 2193862645, 2673705150, 1775276924, 1876241833, 3475313331, 3366754619, 270040487, 3902563182, 3678124923, 3441850377, 1851332852, 3969562369, 2203032232, 3868552805, 2868897406, 566021896, 4011190502, 3135740889, 1248802510, 3936291284, 699432150, 832877231, 708780849, 3332740144, 899835584, 1951317047, 4236429990, 3767586992, 866637845, 4043610186, 1106041591, 2144161806, 395441711, 1984812685, 1139781709, 3433712980, 3835036895, 2664543715, 1282050075, 3240894392, 1181045119, 2640243204, 25965917, 4203181171, 4211818798, 3009879386, 2463879762, 3910161971, 1842759443, 2597806476, 933301370, 1509430414, 3943906441, 3467192302, 3076639029, 3776767469, 2051518780, 2631065433, 1441952575, 404016761, 1942435775, 1408749034, 1610459739, 3745345300, 2017778566, 3400528769, 3110650942, 941896748, 3265478751, 371049330, 3168937228, 675039627, 4279080257, 967311729, 135050206, 3635733660, 1683407248, 2076935265, 3576870512, 1215061108, 3501741890]; var q = [1347548327, 1400783205, 3273267108, 2520393566, 3409685355, 4045380933, 2880240216, 2471224067, 1428173050, 4138563181, 2441661558, 636813900, 4233094615, 3620022987, 2149987652, 2411029155, 1239331162, 1730525723, 2554718734, 3781033664, 46346101, 310463728, 2743944855, 3328955385, 3875770207, 2501218972, 3955191162, 3667219033, 768917123, 3545789473, 692707433, 1150208456, 1786102409, 2029293177, 1805211710, 3710368113, 3065962831, 401639597, 1724457132, 3028143674, 409198410, 2196052529, 1620529459, 1164071807, 3769721975, 2226875310, 486441376, 2499348523, 1483753576, 428819965, 2274680428, 3075636216, 598438867, 3799141122, 1474502543, 711349675, 129166120, 53458370, 2592523643, 2782082824, 4063242375, 2988687269, 3120694122, 1559041666, 730517276, 2460449204, 4042459122, 2706270690, 3446004468, 3573941694, 533804130, 2328143614, 2637442643, 2695033685, 839224033, 1973745387, 957055980, 2856345839, 106852767, 1371368976, 4181598602, 1033297158, 2933734917, 1179510461, 3046200461, 91341917, 1862534868, 4284502037, 605657339, 2547432937, 3431546947, 2003294622, 3182487618, 2282195339, 954669403, 3682191598, 1201765386, 3917234703, 3388507166, 0, 2198438022, 1211247597, 2887651696, 1315723890, 4227665663, 1443857720, 507358933, 657861945, 1678381017, 560487590, 3516619604, 975451694, 2970356327, 261314535, 3535072918, 2652609425, 1333838021, 2724322336, 1767536459, 370938394, 182621114, 3854606378, 1128014560, 487725847, 185469197, 2918353863, 3106780840, 3356761769, 2237133081, 1286567175, 3152976349, 4255350624, 2683765030, 3160175349, 3309594171, 878443390, 1988838185, 3704300486, 1756818940, 1673061617, 3403100636, 272786309, 1075025698, 545572369, 2105887268, 4174560061, 296679730, 1841768865, 1260232239, 4091327024, 3960309330, 3497509347, 1814803222, 2578018489, 4195456072, 575138148, 3299409036, 446754879, 3629546796, 4011996048, 3347532110, 3252238545, 4270639778, 915985419, 3483825537, 681933534, 651868046, 2755636671, 3828103837, 223377554, 2607439820, 1649704518, 3270937875, 3901806776, 1580087799, 4118987695, 3198115200, 2087309459, 2842678573, 3016697106, 1003007129, 2802849917, 1860738147, 2077965243, 164439672, 4100872472, 32283319, 2827177882, 1709610350, 2125135846, 136428751, 3874428392, 3652904859, 3460984630, 3572145929, 3593056380, 2939266226, 824852259, 818324884, 3224740454, 930369212, 2801566410, 2967507152, 355706840, 1257309336, 4148292826, 243256656, 790073846, 2373340630, 1296297904, 1422699085, 3756299780, 3818836405, 457992840, 3099667487, 2135319889, 77422314, 1560382517, 1945798516, 788204353, 1521706781, 1385356242, 870912086, 325965383, 2358957921, 2050466060, 2388260884, 2313884476, 4006521127, 901210569, 3990953189, 1014646705, 1503449823, 1062597235, 2031621326, 3212035895, 3931371469, 1533017514, 350174575, 2256028891, 2177544179, 1052338372, 741876788, 1606591296, 1914052035, 213705253, 2334669897, 1107234197, 1899603969, 3725069491, 2631447780, 2422494913, 1635502980, 1893020342, 1950903388, 1120974935]; var Q = [2807058932, 1699970625, 2764249623, 1586903591, 1808481195, 1173430173, 1487645946, 59984867, 4199882800, 1844882806, 1989249228, 1277555970, 3623636965, 3419915562, 1149249077, 2744104290, 1514790577, 459744698, 244860394, 3235995134, 1963115311, 4027744588, 2544078150, 4190530515, 1608975247, 2627016082, 2062270317, 1507497298, 2200818878, 567498868, 1764313568, 3359936201, 2305455554, 2037970062, 1047239e3, 1910319033, 1337376481, 2904027272, 2892417312, 984907214, 1243112415, 830661914, 861968209, 2135253587, 2011214180, 2927934315, 2686254721, 731183368, 1750626376, 4246310725, 1820824798, 4172763771, 3542330227, 48394827, 2404901663, 2871682645, 671593195, 3254988725, 2073724613, 145085239, 2280796200, 2779915199, 1790575107, 2187128086, 472615631, 3029510009, 4075877127, 3802222185, 4107101658, 3201631749, 1646252340, 4270507174, 1402811438, 1436590835, 3778151818, 3950355702, 3963161475, 4020912224, 2667994737, 273792366, 2331590177, 104699613, 95345982, 3175501286, 2377486676, 1560637892, 3564045318, 369057872, 4213447064, 3919042237, 1137477952, 2658625497, 1119727848, 2340947849, 1530455833, 4007360968, 172466556, 266959938, 516552836, 0, 2256734592, 3980931627, 1890328081, 1917742170, 4294704398, 945164165, 3575528878, 958871085, 3647212047, 2787207260, 1423022939, 775562294, 1739656202, 3876557655, 2530391278, 2443058075, 3310321856, 547512796, 1265195639, 437656594, 3121275539, 719700128, 3762502690, 387781147, 218828297, 3350065803, 2830708150, 2848461854, 428169201, 122466165, 3720081049, 1627235199, 648017665, 4122762354, 1002783846, 2117360635, 695634755, 3336358691, 4234721005, 4049844452, 3704280881, 2232435299, 574624663, 287343814, 612205898, 1039717051, 840019705, 2708326185, 793451934, 821288114, 1391201670, 3822090177, 376187827, 3113855344, 1224348052, 1679968233, 2361698556, 1058709744, 752375421, 2431590963, 1321699145, 3519142200, 2734591178, 188127444, 2177869557, 3727205754, 2384911031, 3215212461, 2648976442, 2450346104, 3432737375, 1180849278, 331544205, 3102249176, 4150144569, 2952102595, 2159976285, 2474404304, 766078933, 313773861, 2570832044, 2108100632, 1668212892, 3145456443, 2013908262, 418672217, 3070356634, 2594734927, 1852171925, 3867060991, 3473416636, 3907448597, 2614737639, 919489135, 164948639, 2094410160, 2997825956, 590424639, 2486224549, 1723872674, 3157750862, 3399941250, 3501252752, 3625268135, 2555048196, 3673637356, 1343127501, 4130281361, 3599595085, 2957853679, 1297403050, 81781910, 3051593425, 2283490410, 532201772, 1367295589, 3926170974, 895287692, 1953757831, 1093597963, 492483431, 3528626907, 1446242576, 1192455638, 1636604631, 209336225, 344873464, 1015671571, 669961897, 3375740769, 3857572124, 2973530695, 3747192018, 1933530610, 3464042516, 935293895, 3454686199, 2858115069, 1863638845, 3683022916, 4085369519, 3292445032, 875313188, 1080017571, 3279033885, 621591778, 1233856572, 2504130317, 24197544, 3017672716, 3835484340, 3247465558, 2220981195, 3060847922, 1551124588, 1463996600]; var Y = [4104605777, 1097159550, 396673818, 660510266, 2875968315, 2638606623, 4200115116, 3808662347, 821712160, 1986918061, 3430322568, 38544885, 3856137295, 718002117, 893681702, 1654886325, 2975484382, 3122358053, 3926825029, 4274053469, 796197571, 1290801793, 1184342925, 3556361835, 2405426947, 2459735317, 1836772287, 1381620373, 3196267988, 1948373848, 3764988233, 3385345166, 3263785589, 2390325492, 1480485785, 3111247143, 3780097726, 2293045232, 548169417, 3459953789, 3746175075, 439452389, 1362321559, 1400849762, 1685577905, 1806599355, 2174754046, 137073913, 1214797936, 1174215055, 3731654548, 2079897426, 1943217067, 1258480242, 529487843, 1437280870, 3945269170, 3049390895, 3313212038, 923313619, 679998e3, 3215307299, 57326082, 377642221, 3474729866, 2041877159, 133361907, 1776460110, 3673476453, 96392454, 878845905, 2801699524, 777231668, 4082475170, 2330014213, 4142626212, 2213296395, 1626319424, 1906247262, 1846563261, 562755902, 3708173718, 1040559837, 3871163981, 1418573201, 3294430577, 114585348, 1343618912, 2566595609, 3186202582, 1078185097, 3651041127, 3896688048, 2307622919, 425408743, 3371096953, 2081048481, 1108339068, 2216610296, 0, 2156299017, 736970802, 292596766, 1517440620, 251657213, 2235061775, 2933202493, 758720310, 265905162, 1554391400, 1532285339, 908999204, 174567692, 1474760595, 4002861748, 2610011675, 3234156416, 3693126241, 2001430874, 303699484, 2478443234, 2687165888, 585122620, 454499602, 151849742, 2345119218, 3064510765, 514443284, 4044981591, 1963412655, 2581445614, 2137062819, 19308535, 1928707164, 1715193156, 4219352155, 1126790795, 600235211, 3992742070, 3841024952, 836553431, 1669664834, 2535604243, 3323011204, 1243905413, 3141400786, 4180808110, 698445255, 2653899549, 2989552604, 2253581325, 3252932727, 3004591147, 1891211689, 2487810577, 3915653703, 4237083816, 4030667424, 2100090966, 865136418, 1229899655, 953270745, 3399679628, 3557504664, 4118925222, 2061379749, 3079546586, 2915017791, 983426092, 2022837584, 1607244650, 2118541908, 2366882550, 3635996816, 972512814, 3283088770, 1568718495, 3499326569, 3576539503, 621982671, 2895723464, 410887952, 2623762152, 1002142683, 645401037, 1494807662, 2595684844, 1335535747, 2507040230, 4293295786, 3167684641, 367585007, 3885750714, 1865862730, 2668221674, 2960971305, 2763173681, 1059270954, 2777952454, 2724642869, 1320957812, 2194319100, 2429595872, 2815956275, 77089521, 3973773121, 3444575871, 2448830231, 1305906550, 4021308739, 2857194700, 2516901860, 3518358430, 1787304780, 740276417, 1699839814, 1592394909, 2352307457, 2272556026, 188821243, 1729977011, 3687994002, 274084841, 3594982253, 3613494426, 2701949495, 4162096729, 322734571, 2837966542, 1640576439, 484830689, 1202797690, 3537852828, 4067639125, 349075736, 3342319475, 4157467219, 4255800159, 1030690015, 1155237496, 2951971274, 1757691577, 607398968, 2738905026, 499347990, 3794078908, 1011452712, 227885567, 2818666809, 213114376, 3034881240, 1455525988, 3414450555, 850817237, 1817998408, 3092726480]; var ff = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795]; var ef = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855]; var tf = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150]; var rf = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925]; function convertToInt32(T) { var B = []; for (var N = 0; N < T.length; N += 4) { B.push(T[N] << 24 | T[N + 1] << 16 | T[N + 2] << 8 | T[N + 3]) } return B } var AES = function (T) { if (!(this instanceof AES)) { throw Error("AES must be instanitated with `new`") } Object.defineProperty(this, "key", { value: coerceArray(T, true) }); this._prepare() }; AES.prototype._prepare = function () { var T = I[this.key.length]; if (T == null) { throw new Error("invalid key size (must be 16, 24 or 32 bytes)") } this._Ke = []; this._Kd = []; for (var B = 0; B <= T; B++) { this._Ke.push([0, 0, 0, 0]); this._Kd.push([0, 0, 0, 0]) } var N = (T + 1) * 4; var L = this.key.length / 4; var U = convertToInt32(this.key); var X; for (var B = 0; B < L; B++) { X = B >> 2; this._Ke[X][B % 4] = U[B]; this._Kd[T - X][B % 4] = U[B] } var G = 0; var V = L, Z; while (V < N) { Z = U[L - 1]; U[0] ^= H[Z >> 16 & 255] << 24 ^ H[Z >> 8 & 255] << 16 ^ H[Z & 255] << 8 ^ H[Z >> 24 & 255] ^ J[G] << 24; G += 1; if (L != 8) { for (var B = 1; B < L; B++) { U[B] ^= U[B - 1] } } else { for (var B = 1; B < L / 2; B++) { U[B] ^= U[B - 1] } Z = U[L / 2 - 1]; U[L / 2] ^= H[Z & 255] ^ H[Z >> 8 & 255] << 8 ^ H[Z >> 16 & 255] << 16 ^ H[Z >> 24 & 255] << 24; for (var B = L / 2 + 1; B < L; B++) { U[B] ^= U[B - 1] } } var B = 0, W, q; while (B < L && V < N) { W = V >> 2; q = V % 4; this._Ke[W][q] = U[B]; this._Kd[T - W][q] = U[B++]; V++ } } for (var W = 1; W < T; W++) { for (var q = 0; q < 4; q++) { Z = this._Kd[W][q]; this._Kd[W][q] = ff[Z >> 24 & 255] ^ ef[Z >> 16 & 255] ^ tf[Z >> 8 & 255] ^ rf[Z & 255] } } }; AES.prototype.encrypt = function (T) { if (T.length != 16) { throw new Error("invalid plaintext size (must be 16 bytes)") } var B = this._Ke.length - 1; var N = [0, 0, 0, 0]; var L = convertToInt32(T); for (var I = 0; I < 4; I++) { L[I] ^= this._Ke[0][I] } for (var J = 1; J < B; J++) { for (var I = 0; I < 4; I++) { N[I] = X[L[I] >> 24 & 255] ^ G[L[(I + 1) % 4] >> 16 & 255] ^ V[L[(I + 2) % 4] >> 8 & 255] ^ Z[L[(I + 3) % 4] & 255] ^ this._Ke[J][I] } L = N.slice() } var U = createArray(16), W; for (var I = 0; I < 4; I++) { W = this._Ke[B][I]; U[4 * I] = (H[L[I] >> 24 & 255] ^ W >> 24) & 255; U[4 * I + 1] = (H[L[(I + 1) % 4] >> 16 & 255] ^ W >> 16) & 255; U[4 * I + 2] = (H[L[(I + 2) % 4] >> 8 & 255] ^ W >> 8) & 255; U[4 * I + 3] = (H[L[(I + 3) % 4] & 255] ^ W) & 255 } return U }; AES.prototype.decrypt = function (T) { if (T.length != 16) { throw new Error("invalid ciphertext size (must be 16 bytes)") } var B = this._Kd.length - 1; var N = [0, 0, 0, 0]; var L = convertToInt32(T); for (var I = 0; I < 4; I++) { L[I] ^= this._Kd[0][I] } for (var J = 1; J < B; J++) { for (var I = 0; I < 4; I++) { N[I] = W[L[I] >> 24 & 255] ^ q[L[(I + 3) % 4] >> 16 & 255] ^ Q[L[(I + 2) % 4] >> 8 & 255] ^ Y[L[(I + 1) % 4] & 255] ^ this._Kd[J][I] } L = N.slice() } var H = createArray(16), X; for (var I = 0; I < 4; I++) { X = this._Kd[B][I]; H[4 * I] = (U[L[I] >> 24 & 255] ^ X >> 24) & 255; H[4 * I + 1] = (U[L[(I + 3) % 4] >> 16 & 255] ^ X >> 16) & 255; H[4 * I + 2] = (U[L[(I + 2) % 4] >> 8 & 255] ^ X >> 8) & 255; H[4 * I + 3] = (U[L[(I + 1) % 4] & 255] ^ X) & 255 } return H }; var ModeOfOperationECB = function (T) { if (!(this instanceof ModeOfOperationECB)) { throw Error("AES must be instanitated with `new`") } this.description = "Electronic Code Block"; this.name = "ecb"; this._aes = new AES(T) }; ModeOfOperationECB.prototype.encrypt = function (T) { T = coerceArray(T); if (T.length % 16 !== 0) { throw new Error("invalid plaintext size (must be multiple of 16 bytes)") } var B = createArray(T.length); var N = createArray(16); for (var L = 0; L < T.length; L += 16) { copyArray(T, N, 0, L, L + 16); N = this._aes.encrypt(N); copyArray(N, B, L) } return B }; ModeOfOperationECB.prototype.decrypt = function (T) { T = coerceArray(T); if (T.length % 16 !== 0) { throw new Error("invalid ciphertext size (must be multiple of 16 bytes)") } var B = createArray(T.length); var N = createArray(16); for (var L = 0; L < T.length; L += 16) { copyArray(T, N, 0, L, L + 16); N = this._aes.decrypt(N); copyArray(N, B, L) } return B }; var ModeOfOperationCBC = function (T, B) { if (!(this instanceof ModeOfOperationCBC)) { throw Error("AES must be instanitated with `new`") } this.description = "Cipher Block Chaining"; this.name = "cbc"; if (!B) { B = createArray(16) } else if (B.length != 16) { throw new Error("invalid initialation vector size (must be 16 bytes)") } this._lastCipherblock = coerceArray(B, true); this._aes = new AES(T) }; ModeOfOperationCBC.prototype.encrypt = function (T) { T = coerceArray(T); if (T.length % 16 !== 0) { throw new Error("invalid plaintext size (must be multiple of 16 bytes)") } var B = createArray(T.length); var N = createArray(16); for (var L = 0; L < T.length; L += 16) { copyArray(T, N, 0, L, L + 16); for (var I = 0; I < 16; I++) { N[I] ^= this._lastCipherblock[I] } this._lastCipherblock = this._aes.encrypt(N); copyArray(this._lastCipherblock, B, L) } return B }; ModeOfOperationCBC.prototype.decrypt = function (T) { T = coerceArray(T); if (T.length % 16 !== 0) { throw new Error("invalid ciphertext size (must be multiple of 16 bytes)") } var B = createArray(T.length); var N = createArray(16); for (var L = 0; L < T.length; L += 16) { copyArray(T, N, 0, L, L + 16); N = this._aes.decrypt(N); for (var I = 0; I < 16; I++) { B[L + I] = N[I] ^ this._lastCipherblock[I] } copyArray(T, this._lastCipherblock, 0, L, L + 16) } return B }; var ModeOfOperationCFB = function (T, B, N) { if (!(this instanceof ModeOfOperationCFB)) { throw Error("AES must be instanitated with `new`") } this.description = "Cipher Feedback"; this.name = "cfb"; if (!B) { B = createArray(16) } else if (B.length != 16) { throw new Error("invalid initialation vector size (must be 16 size)") } if (!N) { N = 1 } this.segmentSize = N; this._shiftRegister = coerceArray(B, true); this._aes = new AES(T) }; ModeOfOperationCFB.prototype.encrypt = function (T) { if (T.length % this.segmentSize != 0) { throw new Error("invalid plaintext size (must be segmentSize bytes)") } var B = coerceArray(T, true); var N; for (var L = 0; L < B.length; L += this.segmentSize) { N = this._aes.encrypt(this._shiftRegister); for (var I = 0; I < this.segmentSize; I++) { B[L + I] ^= N[I] } copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize); copyArray(B, this._shiftRegister, 16 - this.segmentSize, L, L + this.segmentSize) } return B }; ModeOfOperationCFB.prototype.decrypt = function (T) { if (T.length % this.segmentSize != 0) { throw new Error("invalid ciphertext size (must be segmentSize bytes)") } var B = coerceArray(T, true); var N; for (var L = 0; L < B.length; L += this.segmentSize) { N = this._aes.encrypt(this._shiftRegister); for (var I = 0; I < this.segmentSize; I++) { B[L + I] ^= N[I] } copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize); copyArray(T, this._shiftRegister, 16 - this.segmentSize, L, L + this.segmentSize) } return B }; var ModeOfOperationOFB = function (T, B) { if (!(this instanceof ModeOfOperationOFB)) { throw Error("AES must be instanitated with `new`") } this.description = "Output Feedback"; this.name = "ofb"; if (!B) { B = createArray(16) } else if (B.length != 16) { throw new Error("invalid initialation vector size (must be 16 bytes)") } this._lastPrecipher = coerceArray(B, true); this._lastPrecipherIndex = 16; this._aes = new AES(T) }; ModeOfOperationOFB.prototype.encrypt = function (T) { var B = coerceArray(T, true); for (var N = 0; N < B.length; N++) { if (this._lastPrecipherIndex === 16) { this._lastPrecipher = this._aes.encrypt(this._lastPrecipher); this._lastPrecipherIndex = 0 } B[N] ^= this._lastPrecipher[this._lastPrecipherIndex++] } return B }; ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt; var Counter = function (T) { if (!(this instanceof Counter)) { throw Error("Counter must be instanitated with `new`") } if (T !== 0 && !T) { T = 1 } if (typeof T === "number") { this._counter = createArray(16); this.setValue(T) } else { this.setBytes(T) } }; Counter.prototype.setValue = function (T) { if (typeof T !== "number" || parseInt(T) != T) { throw new Error("invalid counter value (must be an integer)") } for (var B = 15; B >= 0; --B) { this._counter[B] = T % 256; T = T >> 8 } }; Counter.prototype.setBytes = function (T) { T = coerceArray(T, true); if (T.length != 16) { throw new Error("invalid counter bytes size (must be 16 bytes)") } this._counter = T }; Counter.prototype.increment = function () { for (var T = 15; T >= 0; T--) { if (this._counter[T] === 255) { this._counter[T] = 0 } else { this._counter[T]++; break } } }; var ModeOfOperationCTR = function (T, B) { if (!(this instanceof ModeOfOperationCTR)) { throw Error("AES must be instanitated with `new`") } this.description = "Counter"; this.name = "ctr"; if (!(B instanceof Counter)) { B = new Counter(B) } this._counter = B; this._remainingCounter = null; this._remainingCounterIndex = 16; this._aes = new AES(T) }; ModeOfOperationCTR.prototype.encrypt = function (T) { var B = coerceArray(T, true); for (var N = 0; N < B.length; N++) { if (this._remainingCounterIndex === 16) { this._remainingCounter = this._aes.encrypt(this._counter._counter); this._remainingCounterIndex = 0; this._counter.increment() } B[N] ^= this._remainingCounter[this._remainingCounterIndex++] } return B }; ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt; function pkcs7pad(T) { T = coerceArray(T, true); var B = 16 - T.length % 16; var N = createArray(T.length + B); copyArray(T, N); for (var L = T.length; L < N.length; L++) { N[L] = B } return N } function pkcs7strip(T) { T = coerceArray(T, true); if (T.length < 16) { throw new Error("PKCS#7 invalid length") } var B = T[T.length - 1]; if (B > 16) { throw new Error("PKCS#7 padding byte out of range") } var N = T.length - B; for (var L = 0; L < B; L++) { if (T[N + L] !== B) { throw new Error("PKCS#7 invalid padding byte") } } var I = createArray(N); copyArray(T, I, 0, 0, N); return I } var af = { AES: AES, Counter: Counter, ModeOfOperation: { ecb: ModeOfOperationECB, cbc: ModeOfOperationCBC, cfb: ModeOfOperationCFB, ofb: ModeOfOperationOFB, ctr: ModeOfOperationCTR }, utils: { hex: L, utf8: N }, padding: { pkcs7: { pad: pkcs7pad, strip: pkcs7strip } }, _arrayTest: { coerceArray: coerceArray, createArray: createArray, copyArray: copyArray } }; if (true) { T.exports = af } else { } })(this) }, 5051: T => { "use strict"; var B = "qpzry9x8gf2tvdw0s3jn54khce6mua7l"; var N = {}; for (var L = 0; L < B.length; L++) { var I = B.charAt(L); if (N[I] !== undefined) throw new TypeError(I + " is ambiguous"); N[I] = L } function polymodStep(T) { var B = T >> 25; return (T & 33554431) << 5 ^ -(B >> 0 & 1) & 996825010 ^ -(B >> 1 & 1) & 642813549 ^ -(B >> 2 & 1) & 513874426 ^ -(B >> 3 & 1) & 1027748829 ^ -(B >> 4 & 1) & 705979059 } function prefixChk(T) { var B = 1; for (var N = 0; N < T.length; ++N) { var L = T.charCodeAt(N); if (L < 33 || L > 126) return "Invalid prefix (" + T + ")"; B = polymodStep(B) ^ L >> 5 } B = polymodStep(B); for (N = 0; N < T.length; ++N) { var I = T.charCodeAt(N); B = polymodStep(B) ^ I & 31 } return B } function encode(T, N, L) { L = L || 90; if (T.length + 7 + N.length > L) throw new TypeError("Exceeds length limit"); T = T.toLowerCase(); var I = prefixChk(T); if (typeof I === "string") throw new Error(I); var J = T + "1"; for (var H = 0; H < N.length; ++H) { var U = N[H]; if (U >> 5 !== 0) throw new Error("Non 5-bit word"); I = polymodStep(I) ^ U; J += B.charAt(U) } for (H = 0; H < 6; ++H) { I = polymodStep(I) } I ^= 1; for (H = 0; H < 6; ++H) { var X = I >> (5 - H) * 5 & 31; J += B.charAt(X) } return J } function __decode(T, B) { B = B || 90; if (T.length < 8) return T + " too short"; if (T.length > B) return "Exceeds length limit"; var L = T.toLowerCase(); var I = T.toUpperCase(); if (T !== L && T !== I) return "Mixed-case string " + T; T = L; var J = T.lastIndexOf("1"); if (J === -1) return "No separator character for " + T; if (J === 0) return "Missing prefix for " + T; var H = T.slice(0, J); var U = T.slice(J + 1); if (U.length < 6) return "Data too short"; var X = prefixChk(H); if (typeof X === "string") return X; var G = []; for (var V = 0; V < U.length; ++V) { var Z = U.charAt(V); var W = N[Z]; if (W === undefined) return "Unknown character " + Z; X = polymodStep(X) ^ W; if (V + 6 >= U.length) continue; G.push(W) } if (X !== 1) return "Invalid checksum for " + T; return { prefix: H, words: G } } function decodeUnsafe() { var T = __decode.apply(null, arguments); if (typeof T === "object") return T } function decode(T) { var B = __decode.apply(null, arguments); if (typeof B === "object") return B; throw new Error(B) } function convert(T, B, N, L) { var I = 0; var J = 0; var H = (1 << N) - 1; var U = []; for (var X = 0; X < T.length; ++X) { I = I << B | T[X]; J += B; while (J >= N) { J -= N; U.push(I >> J & H) } } if (L) { if (J > 0) { U.push(I << N - J & H) } } else { if (J >= B) return "Excess padding"; if (I << N - J & H) return "Non-zero padding" } return U } function toWordsUnsafe(T) { var B = convert(T, 8, 5, true); if (Array.isArray(B)) return B } function toWords(T) { var B = convert(T, 8, 5, true); if (Array.isArray(B)) return B; throw new Error(B) } function fromWordsUnsafe(T) { var B = convert(T, 5, 8, false); if (Array.isArray(B)) return B } function fromWords(T) { var B = convert(T, 5, 8, false); if (Array.isArray(B)) return B; throw new Error(B) } T.exports = { decodeUnsafe: decodeUnsafe, decode: decode, encode: encode, toWordsUnsafe: toWordsUnsafe, toWords: toWords, fromWordsUnsafe: fromWordsUnsafe, fromWords: fromWords } }, 633: function (T, B, N) { T = N.nmd(T); (function (T, B) { "use strict"; function assert(T, B) { if (!T) throw new Error(B || "Assertion failed") } function inherits(T, B) { T.super_ = B; var TempCtor = function () { }; TempCtor.prototype = B.prototype; T.prototype = new TempCtor; T.prototype.constructor = T } function BN(T, B, N) { if (BN.isBN(T)) { return T } this.negative = 0; this.words = null; this.length = 0; this.red = null; if (T !== null) { if (B === "le" || B === "be") { N = B; B = 10 } this._init(T || 0, B || 10, N || "be") } } if (typeof T === "object") { T.exports = BN } else { B.BN = BN } BN.BN = BN; BN.wordSize = 26; var L; try { if (typeof window !== "undefined" && typeof window.Buffer !== "undefined") { L = window.Buffer } else { L = N(181).Buffer } } catch (T) { } BN.isBN = function isBN(T) { if (T instanceof BN) { return true } return T !== null && typeof T === "object" && T.constructor.wordSize === BN.wordSize && Array.isArray(T.words) }; BN.max = function max(T, B) { if (T.cmp(B) > 0) return T; return B }; BN.min = function min(T, B) { if (T.cmp(B) < 0) return T; return B }; BN.prototype._init = function init(T, B, N) { if (typeof T === "number") { return this._initNumber(T, B, N) } if (typeof T === "object") { return this._initArray(T, B, N) } if (B === "hex") { B = 16 } assert(B === (B | 0) && B >= 2 && B <= 36); T = T.toString().replace(/\s+/g, ""); var L = 0; if (T[0] === "-") { L++; this.negative = 1 } if (L < T.length) { if (B === 16) { this._parseHex(T, L, N) } else { this._parseBase(T, B, L); if (N === "le") { this._initArray(this.toArray(), B, N) } } } }; BN.prototype._initNumber = function _initNumber(T, B, N) { if (T < 0) { this.negative = 1; T = -T } if (T < 67108864) { this.words = [T & 67108863]; this.length = 1 } else if (T < 4503599627370496) { this.words = [T & 67108863, T / 67108864 & 67108863]; this.length = 2 } else { assert(T < 9007199254740992); this.words = [T & 67108863, T / 67108864 & 67108863, 1]; this.length = 3 } if (N !== "le") return; this._initArray(this.toArray(), B, N) }; BN.prototype._initArray = function _initArray(T, B, N) { assert(typeof T.length === "number"); if (T.length <= 0) { this.words = [0]; this.length = 1; return this } this.length = Math.ceil(T.length / 3); this.words = new Array(this.length); for (var L = 0; L < this.length; L++) { this.words[L] = 0 } var I, J; var H = 0; if (N === "be") { for (L = T.length - 1, I = 0; L >= 0; L -= 3) { J = T[L] | T[L - 1] << 8 | T[L - 2] << 16; this.words[I] |= J << H & 67108863; this.words[I + 1] = J >>> 26 - H & 67108863; H += 24; if (H >= 26) { H -= 26; I++ } } } else if (N === "le") { for (L = 0, I = 0; L < T.length; L += 3) { J = T[L] | T[L + 1] << 8 | T[L + 2] << 16; this.words[I] |= J << H & 67108863; this.words[I + 1] = J >>> 26 - H & 67108863; H += 24; if (H >= 26) { H -= 26; I++ } } } return this._strip() }; function parseHex4Bits(T, B) { var N = T.charCodeAt(B); if (N >= 48 && N <= 57) { return N - 48 } else if (N >= 65 && N <= 70) { return N - 55 } else if (N >= 97 && N <= 102) { return N - 87 } else { assert(false, "Invalid character in " + T) } } function parseHexByte(T, B, N) { var L = parseHex4Bits(T, N); if (N - 1 >= B) { L |= parseHex4Bits(T, N - 1) << 4 } return L } BN.prototype._parseHex = function _parseHex(T, B, N) { this.length = Math.ceil((T.length - B) / 6); this.words = new Array(this.length); for (var L = 0; L < this.length; L++) { this.words[L] = 0 } var I = 0; var J = 0; var H; if (N === "be") { for (L = T.length - 1; L >= B; L -= 2) { H = parseHexByte(T, B, L) << I; this.words[J] |= H & 67108863; if (I >= 18) { I -= 18; J += 1; this.words[J] |= H >>> 26 } else { I += 8 } } } else { var U = T.length - B; for (L = U % 2 === 0 ? B + 1 : B; L < T.length; L += 2) { H = parseHexByte(T, B, L) << I; this.words[J] |= H & 67108863; if (I >= 18) { I -= 18; J += 1; this.words[J] |= H >>> 26 } else { I += 8 } } } this._strip() }; function parseBase(T, B, N, L) { var I = 0; var J = 0; var H = Math.min(T.length, N); for (var U = B; U < H; U++) { var X = T.charCodeAt(U) - 48; I *= L; if (X >= 49) { J = X - 49 + 10 } else if (X >= 17) { J = X - 17 + 10 } else { J = X } assert(X >= 0 && J < L, "Invalid character"); I += J } return I } BN.prototype._parseBase = function _parseBase(T, B, N) { this.words = [0]; this.length = 1; for (var L = 0, I = 1; I <= 67108863; I *= B) { L++ } L--; I = I / B | 0; var J = T.length - N; var H = J % L; var U = Math.min(J, J - H) + N; var X = 0; for (var G = N; G < U; G += L) { X = parseBase(T, G, G + L, B); this.imuln(I); if (this.words[0] + X < 67108864) { this.words[0] += X } else { this._iaddn(X) } } if (H !== 0) { var V = 1; X = parseBase(T, G, T.length, B); for (G = 0; G < H; G++) { V *= B } this.imuln(V); if (this.words[0] + X < 67108864) { this.words[0] += X } else { this._iaddn(X) } } this._strip() }; BN.prototype.copy = function copy(T) { T.words = new Array(this.length); for (var B = 0; B < this.length; B++) { T.words[B] = this.words[B] } T.length = this.length; T.negative = this.negative; T.red = this.red }; function move(T, B) { T.words = B.words; T.length = B.length; T.negative = B.negative; T.red = B.red } BN.prototype._move = function _move(T) { move(T, this) }; BN.prototype.clone = function clone() { var T = new BN(null); this.copy(T); return T }; BN.prototype._expand = function _expand(T) { while (this.length < T) { this.words[this.length++] = 0 } return this }; BN.prototype._strip = function strip() { while (this.length > 1 && this.words[this.length - 1] === 0) { this.length-- } return this._normSign() }; BN.prototype._normSign = function _normSign() { if (this.length === 1 && this.words[0] === 0) { this.negative = 0 } return this }; if (typeof Symbol !== "undefined" && typeof Symbol.for === "function") { try { BN.prototype[Symbol.for("nodejs.util.inspect.custom")] = inspect } catch (T) { BN.prototype.inspect = inspect } } else { BN.prototype.inspect = inspect } function inspect() { return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">" } var I = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"]; var J = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]; var H = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176]; BN.prototype.toString = function toString(T, B) { T = T || 10; B = B | 0 || 1; var N; if (T === 16 || T === "hex") { N = ""; var L = 0; var U = 0; for (var X = 0; X < this.length; X++) { var G = this.words[X]; var V = ((G << L | U) & 16777215).toString(16); U = G >>> 24 - L & 16777215; L += 2; if (L >= 26) { L -= 26; X-- } if (U !== 0 || X !== this.length - 1) { N = I[6 - V.length] + V + N } else { N = V + N } } if (U !== 0) { N = U.toString(16) + N } while (N.length % B !== 0) { N = "0" + N } if (this.negative !== 0) { N = "-" + N } return N } if (T === (T | 0) && T >= 2 && T <= 36) { var Z = J[T]; var W = H[T]; N = ""; var q = this.clone(); q.negative = 0; while (!q.isZero()) { var Q = q.modrn(W).toString(T); q = q.idivn(W); if (!q.isZero()) { N = I[Z - Q.length] + Q + N } else { N = Q + N } } if (this.isZero()) { N = "0" + N } while (N.length % B !== 0) { N = "0" + N } if (this.negative !== 0) { N = "-" + N } return N } assert(false, "Base should be between 2 and 36") }; BN.prototype.toNumber = function toNumber() { var T = this.words[0]; if (this.length === 2) { T += this.words[1] * 67108864 } else if (this.length === 3 && this.words[2] === 1) { T += 4503599627370496 + this.words[1] * 67108864 } else if (this.length > 2) { assert(false, "Number can only safely store up to 53 bits") } return this.negative !== 0 ? -T : T }; BN.prototype.toJSON = function toJSON() { return this.toString(16, 2) }; if (L) { BN.prototype.toBuffer = function toBuffer(T, B) { return this.toArrayLike(L, T, B) } } BN.prototype.toArray = function toArray(T, B) { return this.toArrayLike(Array, T, B) }; var U = function allocate(T, B) { if (T.allocUnsafe) { return T.allocUnsafe(B) } return new T(B) }; BN.prototype.toArrayLike = function toArrayLike(T, B, N) { this._strip(); var L = this.byteLength(); var I = N || Math.max(1, L); assert(L <= I, "byte array longer than desired length"); assert(I > 0, "Requested array length <= 0"); var J = U(T, I); var H = B === "le" ? "LE" : "BE"; this["_toArrayLike" + H](J, L); return J }; BN.prototype._toArrayLikeLE = function _toArrayLikeLE(T, B) { var N = 0; var L = 0; for (var I = 0, J = 0; I < this.length; I++) { var H = this.words[I] << J | L; T[N++] = H & 255; if (N < T.length) { T[N++] = H >> 8 & 255 } if (N < T.length) { T[N++] = H >> 16 & 255 } if (J === 6) { if (N < T.length) { T[N++] = H >> 24 & 255 } L = 0; J = 0 } else { L = H >>> 24; J += 2 } } if (N < T.length) { T[N++] = L; while (N < T.length) { T[N++] = 0 } } }; BN.prototype._toArrayLikeBE = function _toArrayLikeBE(T, B) { var N = T.length - 1; var L = 0; for (var I = 0, J = 0; I < this.length; I++) { var H = this.words[I] << J | L; T[N--] = H & 255; if (N >= 0) { T[N--] = H >> 8 & 255 } if (N >= 0) { T[N--] = H >> 16 & 255 } if (J === 6) { if (N >= 0) { T[N--] = H >> 24 & 255 } L = 0; J = 0 } else { L = H >>> 24; J += 2 } } if (N >= 0) { T[N--] = L; while (N >= 0) { T[N--] = 0 } } }; if (Math.clz32) { BN.prototype._countBits = function _countBits(T) { return 32 - Math.clz32(T) } } else { BN.prototype._countBits = function _countBits(T) { var B = T; var N = 0; if (B >= 4096) { N += 13; B >>>= 13 } if (B >= 64) { N += 7; B >>>= 7 } if (B >= 8) { N += 4; B >>>= 4 } if (B >= 2) { N += 2; B >>>= 2 } return N + B } } BN.prototype._zeroBits = function _zeroBits(T) { if (T === 0) return 26; var B = T; var N = 0; if ((B & 8191) === 0) { N += 13; B >>>= 13 } if ((B & 127) === 0) { N += 7; B >>>= 7 } if ((B & 15) === 0) { N += 4; B >>>= 4 } if ((B & 3) === 0) { N += 2; B >>>= 2 } if ((B & 1) === 0) { N++ } return N }; BN.prototype.bitLength = function bitLength() { var T = this.words[this.length - 1]; var B = this._countBits(T); return (this.length - 1) * 26 + B }; function toBitArray(T) { var B = new Array(T.bitLength()); for (var N = 0; N < B.length; N++) { var L = N / 26 | 0; var I = N % 26; B[N] = T.words[L] >>> I & 1 } return B } BN.prototype.zeroBits = function zeroBits() { if (this.isZero()) return 0; var T = 0; for (var B = 0; B < this.length; B++) { var N = this._zeroBits(this.words[B]); T += N; if (N !== 26) break } return T }; BN.prototype.byteLength = function byteLength() { return Math.ceil(this.bitLength() / 8) }; BN.prototype.toTwos = function toTwos(T) { if (this.negative !== 0) { return this.abs().inotn(T).iaddn(1) } return this.clone() }; BN.prototype.fromTwos = function fromTwos(T) { if (this.testn(T - 1)) { return this.notn(T).iaddn(1).ineg() } return this.clone() }; BN.prototype.isNeg = function isNeg() { return this.negative !== 0 }; BN.prototype.neg = function neg() { return this.clone().ineg() }; BN.prototype.ineg = function ineg() { if (!this.isZero()) { this.negative ^= 1 } return this }; BN.prototype.iuor = function iuor(T) { while (this.length < T.length) { this.words[this.length++] = 0 } for (var B = 0; B < T.length; B++) { this.words[B] = this.words[B] | T.words[B] } return this._strip() }; BN.prototype.ior = function ior(T) { assert((this.negative | T.negative) === 0); return this.iuor(T) }; BN.prototype.or = function or(T) { if (this.length > T.length) return this.clone().ior(T); return T.clone().ior(this) }; BN.prototype.uor = function uor(T) { if (this.length > T.length) return this.clone().iuor(T); return T.clone().iuor(this) }; BN.prototype.iuand = function iuand(T) { var B; if (this.length > T.length) { B = T } else { B = this } for (var N = 0; N < B.length; N++) { this.words[N] = this.words[N] & T.words[N] } this.length = B.length; return this._strip() }; BN.prototype.iand = function iand(T) { assert((this.negative | T.negative) === 0); return this.iuand(T) }; BN.prototype.and = function and(T) { if (this.length > T.length) return this.clone().iand(T); return T.clone().iand(this) }; BN.prototype.uand = function uand(T) { if (this.length > T.length) return this.clone().iuand(T); return T.clone().iuand(this) }; BN.prototype.iuxor = function iuxor(T) { var B; var N; if (this.length > T.length) { B = this; N = T } else { B = T; N = this } for (var L = 0; L < N.length; L++) { this.words[L] = B.words[L] ^ N.words[L] } if (this !== B) { for (; L < B.length; L++) { this.words[L] = B.words[L] } } this.length = B.length; return this._strip() }; BN.prototype.ixor = function ixor(T) { assert((this.negative | T.negative) === 0); return this.iuxor(T) }; BN.prototype.xor = function xor(T) { if (this.length > T.length) return this.clone().ixor(T); return T.clone().ixor(this) }; BN.prototype.uxor = function uxor(T) { if (this.length > T.length) return this.clone().iuxor(T); return T.clone().iuxor(this) }; BN.prototype.inotn = function inotn(T) { assert(typeof T === "number" && T >= 0); var B = Math.ceil(T / 26) | 0; var N = T % 26; this._expand(B); if (N > 0) { B-- } for (var L = 0; L < B; L++) { this.words[L] = ~this.words[L] & 67108863 } if (N > 0) { this.words[L] = ~this.words[L] & 67108863 >> 26 - N } return this._strip() }; BN.prototype.notn = function notn(T) { return this.clone().inotn(T) }; BN.prototype.setn = function setn(T, B) { assert(typeof T === "number" && T >= 0); var N = T / 26 | 0; var L = T % 26; this._expand(N + 1); if (B) { this.words[N] = this.words[N] | 1 << L } else { this.words[N] = this.words[N] & ~(1 << L) } return this._strip() }; BN.prototype.iadd = function iadd(T) { var B; if (this.negative !== 0 && T.negative === 0) { this.negative = 0; B = this.isub(T); this.negative ^= 1; return this._normSign() } else if (this.negative === 0 && T.negative !== 0) { T.negative = 0; B = this.isub(T); T.negative = 1; return B._normSign() } var N, L; if (this.length > T.length) { N = this; L = T } else { N = T; L = this } var I = 0; for (var J = 0; J < L.length; J++) { B = (N.words[J] | 0) + (L.words[J] | 0) + I; this.words[J] = B & 67108863; I = B >>> 26 } for (; I !== 0 && J < N.length; J++) { B = (N.words[J] | 0) + I; this.words[J] = B & 67108863; I = B >>> 26 } this.length = N.length; if (I !== 0) { this.words[this.length] = I; this.length++ } else if (N !== this) { for (; J < N.length; J++) { this.words[J] = N.words[J] } } return this }; BN.prototype.add = function add(T) { var B; if (T.negative !== 0 && this.negative === 0) { T.negative = 0; B = this.sub(T); T.negative ^= 1; return B } else if (T.negative === 0 && this.negative !== 0) { this.negative = 0; B = T.sub(this); this.negative = 1; return B } if (this.length > T.length) return this.clone().iadd(T); return T.clone().iadd(this) }; BN.prototype.isub = function isub(T) { if (T.negative !== 0) { T.negative = 0; var B = this.iadd(T); T.negative = 1; return B._normSign() } else if (this.negative !== 0) { this.negative = 0; this.iadd(T); this.negative = 1; return this._normSign() } var N = this.cmp(T); if (N === 0) { this.negative = 0; this.length = 1; this.words[0] = 0; return this } var L, I; if (N > 0) { L = this; I = T } else { L = T; I = this } var J = 0; for (var H = 0; H < I.length; H++) { B = (L.words[H] | 0) - (I.words[H] | 0) + J; J = B >> 26; this.words[H] = B & 67108863 } for (; J !== 0 && H < L.length; H++) { B = (L.words[H] | 0) + J; J = B >> 26; this.words[H] = B & 67108863 } if (J === 0 && H < L.length && L !== this) { for (; H < L.length; H++) { this.words[H] = L.words[H] } } this.length = Math.max(this.length, H); if (L !== this) { this.negative = 1 } return this._strip() }; BN.prototype.sub = function sub(T) { return this.clone().isub(T) }; function smallMulTo(T, B, N) { N.negative = B.negative ^ T.negative; var L = T.length + B.length | 0; N.length = L; L = L - 1 | 0; var I = T.words[0] | 0; var J = B.words[0] | 0; var H = I * J; var U = H & 67108863; var X = H / 67108864 | 0; N.words[0] = U; for (var G = 1; G < L; G++) { var V = X >>> 26; var Z = X & 67108863; var W = Math.min(G, B.length - 1); for (var q = Math.max(0, G - T.length + 1); q <= W; q++) { var Q = G - q | 0; I = T.words[Q] | 0; J = B.words[q] | 0; H = I * J + Z; V += H / 67108864 | 0; Z = H & 67108863 } N.words[G] = Z | 0; X = V | 0 } if (X !== 0) { N.words[G] = X | 0 } else { N.length-- } return N._strip() } var X = function comb10MulTo(T, B, N) { var L = T.words; var I = B.words; var J = N.words; var H = 0; var U; var X; var G; var V = L[0] | 0; var Z = V & 8191; var W = V >>> 13; var q = L[1] | 0; var Q = q & 8191; var Y = q >>> 13; var ff = L[2] | 0; var ef = ff & 8191; var tf = ff >>> 13; var rf = L[3] | 0; var af = rf & 8191; var nf = rf >>> 13; var of = L[4] | 0; var sf = of & 8191; var cf = of >>> 13; var bf = L[5] | 0; var df = bf & 8191; var uf = bf >>> 13; var lf = L[6] | 0; var hf = lf & 8191; var pf = lf >>> 13; var vf = L[7] | 0; var mf = vf & 8191; var yf = vf >>> 13; var gf = L[8] | 0; var _f = gf & 8191; var wf = gf >>> 13; var Af = L[9] | 0; var Sf = Af & 8191; var Tf = Af >>> 13; var Pf = I[0] | 0; var Ef = Pf & 8191; var Mf = Pf >>> 13; var kf = I[1] | 0; var Cf = kf & 8191; var Bf = kf >>> 13; var Of = I[2] | 0; var Nf = Of & 8191; var Ff = Of >>> 13; var Rf = I[3] | 0; var xf = Rf & 8191; var Lf = Rf >>> 13; var Df = I[4] | 0; var If = Df & 8191; var Jf = Df >>> 13; var Hf = I[5] | 0; var Uf = Hf & 8191; var jf = Hf >>> 13; var Xf = I[6] | 0; var Gf = Xf & 8191; var zf = Xf >>> 13; var Vf = I[7] | 0; var Kf = Vf & 8191; var Zf = Vf >>> 13; var Wf = I[8] | 0; var qf = Wf & 8191; var Qf = Wf >>> 13; var Yf = I[9] | 0; var $f = Yf & 8191; var fe = Yf >>> 13; N.negative = T.negative ^ B.negative; N.length = 19; U = Math.imul(Z, Ef); X = Math.imul(Z, Mf); X = X + Math.imul(W, Ef) | 0; G = Math.imul(W, Mf); var ee = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (ee >>> 26) | 0; ee &= 67108863; U = Math.imul(Q, Ef); X = Math.imul(Q, Mf); X = X + Math.imul(Y, Ef) | 0; G = Math.imul(Y, Mf); U = U + Math.imul(Z, Cf) | 0; X = X + Math.imul(Z, Bf) | 0; X = X + Math.imul(W, Cf) | 0; G = G + Math.imul(W, Bf) | 0; var te = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (te >>> 26) | 0; te &= 67108863; U = Math.imul(ef, Ef); X = Math.imul(ef, Mf); X = X + Math.imul(tf, Ef) | 0; G = Math.imul(tf, Mf); U = U + Math.imul(Q, Cf) | 0; X = X + Math.imul(Q, Bf) | 0; X = X + Math.imul(Y, Cf) | 0; G = G + Math.imul(Y, Bf) | 0; U = U + Math.imul(Z, Nf) | 0; X = X + Math.imul(Z, Ff) | 0; X = X + Math.imul(W, Nf) | 0; G = G + Math.imul(W, Ff) | 0; var re = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (re >>> 26) | 0; re &= 67108863; U = Math.imul(af, Ef); X = Math.imul(af, Mf); X = X + Math.imul(nf, Ef) | 0; G = Math.imul(nf, Mf); U = U + Math.imul(ef, Cf) | 0; X = X + Math.imul(ef, Bf) | 0; X = X + Math.imul(tf, Cf) | 0; G = G + Math.imul(tf, Bf) | 0; U = U + Math.imul(Q, Nf) | 0; X = X + Math.imul(Q, Ff) | 0; X = X + Math.imul(Y, Nf) | 0; G = G + Math.imul(Y, Ff) | 0; U = U + Math.imul(Z, xf) | 0; X = X + Math.imul(Z, Lf) | 0; X = X + Math.imul(W, xf) | 0; G = G + Math.imul(W, Lf) | 0; var ae = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (ae >>> 26) | 0; ae &= 67108863; U = Math.imul(sf, Ef); X = Math.imul(sf, Mf); X = X + Math.imul(cf, Ef) | 0; G = Math.imul(cf, Mf); U = U + Math.imul(af, Cf) | 0; X = X + Math.imul(af, Bf) | 0; X = X + Math.imul(nf, Cf) | 0; G = G + Math.imul(nf, Bf) | 0; U = U + Math.imul(ef, Nf) | 0; X = X + Math.imul(ef, Ff) | 0; X = X + Math.imul(tf, Nf) | 0; G = G + Math.imul(tf, Ff) | 0; U = U + Math.imul(Q, xf) | 0; X = X + Math.imul(Q, Lf) | 0; X = X + Math.imul(Y, xf) | 0; G = G + Math.imul(Y, Lf) | 0; U = U + Math.imul(Z, If) | 0; X = X + Math.imul(Z, Jf) | 0; X = X + Math.imul(W, If) | 0; G = G + Math.imul(W, Jf) | 0; var ne = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (ne >>> 26) | 0; ne &= 67108863; U = Math.imul(df, Ef); X = Math.imul(df, Mf); X = X + Math.imul(uf, Ef) | 0; G = Math.imul(uf, Mf); U = U + Math.imul(sf, Cf) | 0; X = X + Math.imul(sf, Bf) | 0; X = X + Math.imul(cf, Cf) | 0; G = G + Math.imul(cf, Bf) | 0; U = U + Math.imul(af, Nf) | 0; X = X + Math.imul(af, Ff) | 0; X = X + Math.imul(nf, Nf) | 0; G = G + Math.imul(nf, Ff) | 0; U = U + Math.imul(ef, xf) | 0; X = X + Math.imul(ef, Lf) | 0; X = X + Math.imul(tf, xf) | 0; G = G + Math.imul(tf, Lf) | 0; U = U + Math.imul(Q, If) | 0; X = X + Math.imul(Q, Jf) | 0; X = X + Math.imul(Y, If) | 0; G = G + Math.imul(Y, Jf) | 0; U = U + Math.imul(Z, Uf) | 0; X = X + Math.imul(Z, jf) | 0; X = X + Math.imul(W, Uf) | 0; G = G + Math.imul(W, jf) | 0; var ie = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (ie >>> 26) | 0; ie &= 67108863; U = Math.imul(hf, Ef); X = Math.imul(hf, Mf); X = X + Math.imul(pf, Ef) | 0; G = Math.imul(pf, Mf); U = U + Math.imul(df, Cf) | 0; X = X + Math.imul(df, Bf) | 0; X = X + Math.imul(uf, Cf) | 0; G = G + Math.imul(uf, Bf) | 0; U = U + Math.imul(sf, Nf) | 0; X = X + Math.imul(sf, Ff) | 0; X = X + Math.imul(cf, Nf) | 0; G = G + Math.imul(cf, Ff) | 0; U = U + Math.imul(af, xf) | 0; X = X + Math.imul(af, Lf) | 0; X = X + Math.imul(nf, xf) | 0; G = G + Math.imul(nf, Lf) | 0; U = U + Math.imul(ef, If) | 0; X = X + Math.imul(ef, Jf) | 0; X = X + Math.imul(tf, If) | 0; G = G + Math.imul(tf, Jf) | 0; U = U + Math.imul(Q, Uf) | 0; X = X + Math.imul(Q, jf) | 0; X = X + Math.imul(Y, Uf) | 0; G = G + Math.imul(Y, jf) | 0; U = U + Math.imul(Z, Gf) | 0; X = X + Math.imul(Z, zf) | 0; X = X + Math.imul(W, Gf) | 0; G = G + Math.imul(W, zf) | 0; var oe = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (oe >>> 26) | 0; oe &= 67108863; U = Math.imul(mf, Ef); X = Math.imul(mf, Mf); X = X + Math.imul(yf, Ef) | 0; G = Math.imul(yf, Mf); U = U + Math.imul(hf, Cf) | 0; X = X + Math.imul(hf, Bf) | 0; X = X + Math.imul(pf, Cf) | 0; G = G + Math.imul(pf, Bf) | 0; U = U + Math.imul(df, Nf) | 0; X = X + Math.imul(df, Ff) | 0; X = X + Math.imul(uf, Nf) | 0; G = G + Math.imul(uf, Ff) | 0; U = U + Math.imul(sf, xf) | 0; X = X + Math.imul(sf, Lf) | 0; X = X + Math.imul(cf, xf) | 0; G = G + Math.imul(cf, Lf) | 0; U = U + Math.imul(af, If) | 0; X = X + Math.imul(af, Jf) | 0; X = X + Math.imul(nf, If) | 0; G = G + Math.imul(nf, Jf) | 0; U = U + Math.imul(ef, Uf) | 0; X = X + Math.imul(ef, jf) | 0; X = X + Math.imul(tf, Uf) | 0; G = G + Math.imul(tf, jf) | 0; U = U + Math.imul(Q, Gf) | 0; X = X + Math.imul(Q, zf) | 0; X = X + Math.imul(Y, Gf) | 0; G = G + Math.imul(Y, zf) | 0; U = U + Math.imul(Z, Kf) | 0; X = X + Math.imul(Z, Zf) | 0; X = X + Math.imul(W, Kf) | 0; G = G + Math.imul(W, Zf) | 0; var se = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (se >>> 26) | 0; se &= 67108863; U = Math.imul(_f, Ef); X = Math.imul(_f, Mf); X = X + Math.imul(wf, Ef) | 0; G = Math.imul(wf, Mf); U = U + Math.imul(mf, Cf) | 0; X = X + Math.imul(mf, Bf) | 0; X = X + Math.imul(yf, Cf) | 0; G = G + Math.imul(yf, Bf) | 0; U = U + Math.imul(hf, Nf) | 0; X = X + Math.imul(hf, Ff) | 0; X = X + Math.imul(pf, Nf) | 0; G = G + Math.imul(pf, Ff) | 0; U = U + Math.imul(df, xf) | 0; X = X + Math.imul(df, Lf) | 0; X = X + Math.imul(uf, xf) | 0; G = G + Math.imul(uf, Lf) | 0; U = U + Math.imul(sf, If) | 0; X = X + Math.imul(sf, Jf) | 0; X = X + Math.imul(cf, If) | 0; G = G + Math.imul(cf, Jf) | 0; U = U + Math.imul(af, Uf) | 0; X = X + Math.imul(af, jf) | 0; X = X + Math.imul(nf, Uf) | 0; G = G + Math.imul(nf, jf) | 0; U = U + Math.imul(ef, Gf) | 0; X = X + Math.imul(ef, zf) | 0; X = X + Math.imul(tf, Gf) | 0; G = G + Math.imul(tf, zf) | 0; U = U + Math.imul(Q, Kf) | 0; X = X + Math.imul(Q, Zf) | 0; X = X + Math.imul(Y, Kf) | 0; G = G + Math.imul(Y, Zf) | 0; U = U + Math.imul(Z, qf) | 0; X = X + Math.imul(Z, Qf) | 0; X = X + Math.imul(W, qf) | 0; G = G + Math.imul(W, Qf) | 0; var ce = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (ce >>> 26) | 0; ce &= 67108863; U = Math.imul(Sf, Ef); X = Math.imul(Sf, Mf); X = X + Math.imul(Tf, Ef) | 0; G = Math.imul(Tf, Mf); U = U + Math.imul(_f, Cf) | 0; X = X + Math.imul(_f, Bf) | 0; X = X + Math.imul(wf, Cf) | 0; G = G + Math.imul(wf, Bf) | 0; U = U + Math.imul(mf, Nf) | 0; X = X + Math.imul(mf, Ff) | 0; X = X + Math.imul(yf, Nf) | 0; G = G + Math.imul(yf, Ff) | 0; U = U + Math.imul(hf, xf) | 0; X = X + Math.imul(hf, Lf) | 0; X = X + Math.imul(pf, xf) | 0; G = G + Math.imul(pf, Lf) | 0; U = U + Math.imul(df, If) | 0; X = X + Math.imul(df, Jf) | 0; X = X + Math.imul(uf, If) | 0; G = G + Math.imul(uf, Jf) | 0; U = U + Math.imul(sf, Uf) | 0; X = X + Math.imul(sf, jf) | 0; X = X + Math.imul(cf, Uf) | 0; G = G + Math.imul(cf, jf) | 0; U = U + Math.imul(af, Gf) | 0; X = X + Math.imul(af, zf) | 0; X = X + Math.imul(nf, Gf) | 0; G = G + Math.imul(nf, zf) | 0; U = U + Math.imul(ef, Kf) | 0; X = X + Math.imul(ef, Zf) | 0; X = X + Math.imul(tf, Kf) | 0; G = G + Math.imul(tf, Zf) | 0; U = U + Math.imul(Q, qf) | 0; X = X + Math.imul(Q, Qf) | 0; X = X + Math.imul(Y, qf) | 0; G = G + Math.imul(Y, Qf) | 0; U = U + Math.imul(Z, $f) | 0; X = X + Math.imul(Z, fe) | 0; X = X + Math.imul(W, $f) | 0; G = G + Math.imul(W, fe) | 0; var be = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (be >>> 26) | 0; be &= 67108863; U = Math.imul(Sf, Cf); X = Math.imul(Sf, Bf); X = X + Math.imul(Tf, Cf) | 0; G = Math.imul(Tf, Bf); U = U + Math.imul(_f, Nf) | 0; X = X + Math.imul(_f, Ff) | 0; X = X + Math.imul(wf, Nf) | 0; G = G + Math.imul(wf, Ff) | 0; U = U + Math.imul(mf, xf) | 0; X = X + Math.imul(mf, Lf) | 0; X = X + Math.imul(yf, xf) | 0; G = G + Math.imul(yf, Lf) | 0; U = U + Math.imul(hf, If) | 0; X = X + Math.imul(hf, Jf) | 0; X = X + Math.imul(pf, If) | 0; G = G + Math.imul(pf, Jf) | 0; U = U + Math.imul(df, Uf) | 0; X = X + Math.imul(df, jf) | 0; X = X + Math.imul(uf, Uf) | 0; G = G + Math.imul(uf, jf) | 0; U = U + Math.imul(sf, Gf) | 0; X = X + Math.imul(sf, zf) | 0; X = X + Math.imul(cf, Gf) | 0; G = G + Math.imul(cf, zf) | 0; U = U + Math.imul(af, Kf) | 0; X = X + Math.imul(af, Zf) | 0; X = X + Math.imul(nf, Kf) | 0; G = G + Math.imul(nf, Zf) | 0; U = U + Math.imul(ef, qf) | 0; X = X + Math.imul(ef, Qf) | 0; X = X + Math.imul(tf, qf) | 0; G = G + Math.imul(tf, Qf) | 0; U = U + Math.imul(Q, $f) | 0; X = X + Math.imul(Q, fe) | 0; X = X + Math.imul(Y, $f) | 0; G = G + Math.imul(Y, fe) | 0; var de = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (de >>> 26) | 0; de &= 67108863; U = Math.imul(Sf, Nf); X = Math.imul(Sf, Ff); X = X + Math.imul(Tf, Nf) | 0; G = Math.imul(Tf, Ff); U = U + Math.imul(_f, xf) | 0; X = X + Math.imul(_f, Lf) | 0; X = X + Math.imul(wf, xf) | 0; G = G + Math.imul(wf, Lf) | 0; U = U + Math.imul(mf, If) | 0; X = X + Math.imul(mf, Jf) | 0; X = X + Math.imul(yf, If) | 0; G = G + Math.imul(yf, Jf) | 0; U = U + Math.imul(hf, Uf) | 0; X = X + Math.imul(hf, jf) | 0; X = X + Math.imul(pf, Uf) | 0; G = G + Math.imul(pf, jf) | 0; U = U + Math.imul(df, Gf) | 0; X = X + Math.imul(df, zf) | 0; X = X + Math.imul(uf, Gf) | 0; G = G + Math.imul(uf, zf) | 0; U = U + Math.imul(sf, Kf) | 0; X = X + Math.imul(sf, Zf) | 0; X = X + Math.imul(cf, Kf) | 0; G = G + Math.imul(cf, Zf) | 0; U = U + Math.imul(af, qf) | 0; X = X + Math.imul(af, Qf) | 0; X = X + Math.imul(nf, qf) | 0; G = G + Math.imul(nf, Qf) | 0; U = U + Math.imul(ef, $f) | 0; X = X + Math.imul(ef, fe) | 0; X = X + Math.imul(tf, $f) | 0; G = G + Math.imul(tf, fe) | 0; var ue = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (ue >>> 26) | 0; ue &= 67108863; U = Math.imul(Sf, xf); X = Math.imul(Sf, Lf); X = X + Math.imul(Tf, xf) | 0; G = Math.imul(Tf, Lf); U = U + Math.imul(_f, If) | 0; X = X + Math.imul(_f, Jf) | 0; X = X + Math.imul(wf, If) | 0; G = G + Math.imul(wf, Jf) | 0; U = U + Math.imul(mf, Uf) | 0; X = X + Math.imul(mf, jf) | 0; X = X + Math.imul(yf, Uf) | 0; G = G + Math.imul(yf, jf) | 0; U = U + Math.imul(hf, Gf) | 0; X = X + Math.imul(hf, zf) | 0; X = X + Math.imul(pf, Gf) | 0; G = G + Math.imul(pf, zf) | 0; U = U + Math.imul(df, Kf) | 0; X = X + Math.imul(df, Zf) | 0; X = X + Math.imul(uf, Kf) | 0; G = G + Math.imul(uf, Zf) | 0; U = U + Math.imul(sf, qf) | 0; X = X + Math.imul(sf, Qf) | 0; X = X + Math.imul(cf, qf) | 0; G = G + Math.imul(cf, Qf) | 0; U = U + Math.imul(af, $f) | 0; X = X + Math.imul(af, fe) | 0; X = X + Math.imul(nf, $f) | 0; G = G + Math.imul(nf, fe) | 0; var le = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (le >>> 26) | 0; le &= 67108863; U = Math.imul(Sf, If); X = Math.imul(Sf, Jf); X = X + Math.imul(Tf, If) | 0; G = Math.imul(Tf, Jf); U = U + Math.imul(_f, Uf) | 0; X = X + Math.imul(_f, jf) | 0; X = X + Math.imul(wf, Uf) | 0; G = G + Math.imul(wf, jf) | 0; U = U + Math.imul(mf, Gf) | 0; X = X + Math.imul(mf, zf) | 0; X = X + Math.imul(yf, Gf) | 0; G = G + Math.imul(yf, zf) | 0; U = U + Math.imul(hf, Kf) | 0; X = X + Math.imul(hf, Zf) | 0; X = X + Math.imul(pf, Kf) | 0; G = G + Math.imul(pf, Zf) | 0; U = U + Math.imul(df, qf) | 0; X = X + Math.imul(df, Qf) | 0; X = X + Math.imul(uf, qf) | 0; G = G + Math.imul(uf, Qf) | 0; U = U + Math.imul(sf, $f) | 0; X = X + Math.imul(sf, fe) | 0; X = X + Math.imul(cf, $f) | 0; G = G + Math.imul(cf, fe) | 0; var he = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (he >>> 26) | 0; he &= 67108863; U = Math.imul(Sf, Uf); X = Math.imul(Sf, jf); X = X + Math.imul(Tf, Uf) | 0; G = Math.imul(Tf, jf); U = U + Math.imul(_f, Gf) | 0; X = X + Math.imul(_f, zf) | 0; X = X + Math.imul(wf, Gf) | 0; G = G + Math.imul(wf, zf) | 0; U = U + Math.imul(mf, Kf) | 0; X = X + Math.imul(mf, Zf) | 0; X = X + Math.imul(yf, Kf) | 0; G = G + Math.imul(yf, Zf) | 0; U = U + Math.imul(hf, qf) | 0; X = X + Math.imul(hf, Qf) | 0; X = X + Math.imul(pf, qf) | 0; G = G + Math.imul(pf, Qf) | 0; U = U + Math.imul(df, $f) | 0; X = X + Math.imul(df, fe) | 0; X = X + Math.imul(uf, $f) | 0; G = G + Math.imul(uf, fe) | 0; var pe = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (pe >>> 26) | 0; pe &= 67108863; U = Math.imul(Sf, Gf); X = Math.imul(Sf, zf); X = X + Math.imul(Tf, Gf) | 0; G = Math.imul(Tf, zf); U = U + Math.imul(_f, Kf) | 0; X = X + Math.imul(_f, Zf) | 0; X = X + Math.imul(wf, Kf) | 0; G = G + Math.imul(wf, Zf) | 0; U = U + Math.imul(mf, qf) | 0; X = X + Math.imul(mf, Qf) | 0; X = X + Math.imul(yf, qf) | 0; G = G + Math.imul(yf, Qf) | 0; U = U + Math.imul(hf, $f) | 0; X = X + Math.imul(hf, fe) | 0; X = X + Math.imul(pf, $f) | 0; G = G + Math.imul(pf, fe) | 0; var ve = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (ve >>> 26) | 0; ve &= 67108863; U = Math.imul(Sf, Kf); X = Math.imul(Sf, Zf); X = X + Math.imul(Tf, Kf) | 0; G = Math.imul(Tf, Zf); U = U + Math.imul(_f, qf) | 0; X = X + Math.imul(_f, Qf) | 0; X = X + Math.imul(wf, qf) | 0; G = G + Math.imul(wf, Qf) | 0; U = U + Math.imul(mf, $f) | 0; X = X + Math.imul(mf, fe) | 0; X = X + Math.imul(yf, $f) | 0; G = G + Math.imul(yf, fe) | 0; var me = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (me >>> 26) | 0; me &= 67108863; U = Math.imul(Sf, qf); X = Math.imul(Sf, Qf); X = X + Math.imul(Tf, qf) | 0; G = Math.imul(Tf, Qf); U = U + Math.imul(_f, $f) | 0; X = X + Math.imul(_f, fe) | 0; X = X + Math.imul(wf, $f) | 0; G = G + Math.imul(wf, fe) | 0; var ye = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (ye >>> 26) | 0; ye &= 67108863; U = Math.imul(Sf, $f); X = Math.imul(Sf, fe); X = X + Math.imul(Tf, $f) | 0; G = Math.imul(Tf, fe); var ge = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (ge >>> 26) | 0; ge &= 67108863; J[0] = ee; J[1] = te; J[2] = re; J[3] = ae; J[4] = ne; J[5] = ie; J[6] = oe; J[7] = se; J[8] = ce; J[9] = be; J[10] = de; J[11] = ue; J[12] = le; J[13] = he; J[14] = pe; J[15] = ve; J[16] = me; J[17] = ye; J[18] = ge; if (H !== 0) { J[19] = H; N.length++ } return N }; if (!Math.imul) { X = smallMulTo } function bigMulTo(T, B, N) { N.negative = B.negative ^ T.negative; N.length = T.length + B.length; var L = 0; var I = 0; for (var J = 0; J < N.length - 1; J++) { var H = I; I = 0; var U = L & 67108863; var X = Math.min(J, B.length - 1); for (var G = Math.max(0, J - T.length + 1); G <= X; G++) { var V = J - G; var Z = T.words[V] | 0; var W = B.words[G] | 0; var q = Z * W; var Q = q & 67108863; H = H + (q / 67108864 | 0) | 0; Q = Q + U | 0; U = Q & 67108863; H = H + (Q >>> 26) | 0; I += H >>> 26; H &= 67108863 } N.words[J] = U; L = H; H = I } if (L !== 0) { N.words[J] = L } else { N.length-- } return N._strip() } function jumboMulTo(T, B, N) { return bigMulTo(T, B, N) } BN.prototype.mulTo = function mulTo(T, B) { var N; var L = this.length + T.length; if (this.length === 10 && T.length === 10) { N = X(this, T, B) } else if (L < 63) { N = smallMulTo(this, T, B) } else if (L < 1024) { N = bigMulTo(this, T, B) } else { N = jumboMulTo(this, T, B) } return N }; function FFTM(T, B) { this.x = T; this.y = B } FFTM.prototype.makeRBT = function makeRBT(T) { var B = new Array(T); var N = BN.prototype._countBits(T) - 1; for (var L = 0; L < T; L++) { B[L] = this.revBin(L, N, T) } return B }; FFTM.prototype.revBin = function revBin(T, B, N) { if (T === 0 || T === N - 1) return T; var L = 0; for (var I = 0; I < B; I++) { L |= (T & 1) << B - I - 1; T >>= 1 } return L }; FFTM.prototype.permute = function permute(T, B, N, L, I, J) { for (var H = 0; H < J; H++) { L[H] = B[T[H]]; I[H] = N[T[H]] } }; FFTM.prototype.transform = function transform(T, B, N, L, I, J) { this.permute(J, T, B, N, L, I); for (var H = 1; H < I; H <<= 1) { var U = H << 1; var X = Math.cos(2 * Math.PI / U); var G = Math.sin(2 * Math.PI / U); for (var V = 0; V < I; V += U) { var Z = X; var W = G; for (var q = 0; q < H; q++) { var Q = N[V + q]; var Y = L[V + q]; var ff = N[V + q + H]; var ef = L[V + q + H]; var tf = Z * ff - W * ef; ef = Z * ef + W * ff; ff = tf; N[V + q] = Q + ff; L[V + q] = Y + ef; N[V + q + H] = Q - ff; L[V + q + H] = Y - ef; if (q !== U) { tf = X * Z - G * W; W = X * W + G * Z; Z = tf } } } } }; FFTM.prototype.guessLen13b = function guessLen13b(T, B) { var N = Math.max(B, T) | 1; var L = N & 1; var I = 0; for (N = N / 2 | 0; N; N = N >>> 1) { I++ } return 1 << I + 1 + L }; FFTM.prototype.conjugate = function conjugate(T, B, N) { if (N <= 1) return; for (var L = 0; L < N / 2; L++) { var I = T[L]; T[L] = T[N - L - 1]; T[N - L - 1] = I; I = B[L]; B[L] = -B[N - L - 1]; B[N - L - 1] = -I } }; FFTM.prototype.normalize13b = function normalize13b(T, B) { var N = 0; for (var L = 0; L < B / 2; L++) { var I = Math.round(T[2 * L + 1] / B) * 8192 + Math.round(T[2 * L] / B) + N; T[L] = I & 67108863; if (I < 67108864) { N = 0 } else { N = I / 67108864 | 0 } } return T }; FFTM.prototype.convert13b = function convert13b(T, B, N, L) { var I = 0; for (var J = 0; J < B; J++) { I = I + (T[J] | 0); N[2 * J] = I & 8191; I = I >>> 13; N[2 * J + 1] = I & 8191; I = I >>> 13 } for (J = 2 * B; J < L; ++J) { N[J] = 0 } assert(I === 0); assert((I & ~8191) === 0) }; FFTM.prototype.stub = function stub(T) { var B = new Array(T); for (var N = 0; N < T; N++) { B[N] = 0 } return B }; FFTM.prototype.mulp = function mulp(T, B, N) { var L = 2 * this.guessLen13b(T.length, B.length); var I = this.makeRBT(L); var J = this.stub(L); var H = new Array(L); var U = new Array(L); var X = new Array(L); var G = new Array(L); var V = new Array(L); var Z = new Array(L); var W = N.words; W.length = L; this.convert13b(T.words, T.length, H, L); this.convert13b(B.words, B.length, G, L); this.transform(H, J, U, X, L, I); this.transform(G, J, V, Z, L, I); for (var q = 0; q < L; q++) { var Q = U[q] * V[q] - X[q] * Z[q]; X[q] = U[q] * Z[q] + X[q] * V[q]; U[q] = Q } this.conjugate(U, X, L); this.transform(U, X, W, J, L, I); this.conjugate(W, J, L); this.normalize13b(W, L); N.negative = T.negative ^ B.negative; N.length = T.length + B.length; return N._strip() }; BN.prototype.mul = function mul(T) { var B = new BN(null); B.words = new Array(this.length + T.length); return this.mulTo(T, B) }; BN.prototype.mulf = function mulf(T) { var B = new BN(null); B.words = new Array(this.length + T.length); return jumboMulTo(this, T, B) }; BN.prototype.imul = function imul(T) { return this.clone().mulTo(T, this) }; BN.prototype.imuln = function imuln(T) { var B = T < 0; if (B) T = -T; assert(typeof T === "number"); assert(T < 67108864); var N = 0; for (var L = 0; L < this.length; L++) { var I = (this.words[L] | 0) * T; var J = (I & 67108863) + (N & 67108863); N >>= 26; N += I / 67108864 | 0; N += J >>> 26; this.words[L] = J & 67108863 } if (N !== 0) { this.words[L] = N; this.length++ } this.length = T === 0 ? 1 : this.length; return B ? this.ineg() : this }; BN.prototype.muln = function muln(T) { return this.clone().imuln(T) }; BN.prototype.sqr = function sqr() { return this.mul(this) }; BN.prototype.isqr = function isqr() { return this.imul(this.clone()) }; BN.prototype.pow = function pow(T) { var B = toBitArray(T); if (B.length === 0) return new BN(1); var N = this; for (var L = 0; L < B.length; L++, N = N.sqr()) { if (B[L] !== 0) break } if (++L < B.length) { for (var I = N.sqr(); L < B.length; L++, I = I.sqr()) { if (B[L] === 0) continue; N = N.mul(I) } } return N }; BN.prototype.iushln = function iushln(T) { assert(typeof T === "number" && T >= 0); var B = T % 26; var N = (T - B) / 26; var L = 67108863 >>> 26 - B << 26 - B; var I; if (B !== 0) { var J = 0; for (I = 0; I < this.length; I++) { var H = this.words[I] & L; var U = (this.words[I] | 0) - H << B; this.words[I] = U | J; J = H >>> 26 - B } if (J) { this.words[I] = J; this.length++ } } if (N !== 0) { for (I = this.length - 1; I >= 0; I--) { this.words[I + N] = this.words[I] } for (I = 0; I < N; I++) { this.words[I] = 0 } this.length += N } return this._strip() }; BN.prototype.ishln = function ishln(T) { assert(this.negative === 0); return this.iushln(T) }; BN.prototype.iushrn = function iushrn(T, B, N) { assert(typeof T === "number" && T >= 0); var L; if (B) { L = (B - B % 26) / 26 } else { L = 0 } var I = T % 26; var J = Math.min((T - I) / 26, this.length); var H = 67108863 ^ 67108863 >>> I << I; var U = N; L -= J; L = Math.max(0, L); if (U) { for (var X = 0; X < J; X++) { U.words[X] = this.words[X] } U.length = J } if (J === 0) { } else if (this.length > J) { this.length -= J; for (X = 0; X < this.length; X++) { this.words[X] = this.words[X + J] } } else { this.words[0] = 0; this.length = 1 } var G = 0; for (X = this.length - 1; X >= 0 && (G !== 0 || X >= L); X--) { var V = this.words[X] | 0; this.words[X] = G << 26 - I | V >>> I; G = V & H } if (U && G !== 0) { U.words[U.length++] = G } if (this.length === 0) { this.words[0] = 0; this.length = 1 } return this._strip() }; BN.prototype.ishrn = function ishrn(T, B, N) { assert(this.negative === 0); return this.iushrn(T, B, N) }; BN.prototype.shln = function shln(T) { return this.clone().ishln(T) }; BN.prototype.ushln = function ushln(T) { return this.clone().iushln(T) }; BN.prototype.shrn = function shrn(T) { return this.clone().ishrn(T) }; BN.prototype.ushrn = function ushrn(T) { return this.clone().iushrn(T) }; BN.prototype.testn = function testn(T) { assert(typeof T === "number" && T >= 0); var B = T % 26; var N = (T - B) / 26; var L = 1 << B; if (this.length <= N) return false; var I = this.words[N]; return !!(I & L) }; BN.prototype.imaskn = function imaskn(T) { assert(typeof T === "number" && T >= 0); var B = T % 26; var N = (T - B) / 26; assert(this.negative === 0, "imaskn works only with positive numbers"); if (this.length <= N) { return this } if (B !== 0) { N++ } this.length = Math.min(N, this.length); if (B !== 0) { var L = 67108863 ^ 67108863 >>> B << B; this.words[this.length - 1] &= L } return this._strip() }; BN.prototype.maskn = function maskn(T) { return this.clone().imaskn(T) }; BN.prototype.iaddn = function iaddn(T) { assert(typeof T === "number"); assert(T < 67108864); if (T < 0) return this.isubn(-T); if (this.negative !== 0) { if (this.length === 1 && (this.words[0] | 0) <= T) { this.words[0] = T - (this.words[0] | 0); this.negative = 0; return this } this.negative = 0; this.isubn(T); this.negative = 1; return this } return this._iaddn(T) }; BN.prototype._iaddn = function _iaddn(T) { this.words[0] += T; for (var B = 0; B < this.length && this.words[B] >= 67108864; B++) { this.words[B] -= 67108864; if (B === this.length - 1) { this.words[B + 1] = 1 } else { this.words[B + 1]++ } } this.length = Math.max(this.length, B + 1); return this }; BN.prototype.isubn = function isubn(T) { assert(typeof T === "number"); assert(T < 67108864); if (T < 0) return this.iaddn(-T); if (this.negative !== 0) { this.negative = 0; this.iaddn(T); this.negative = 1; return this } this.words[0] -= T; if (this.length === 1 && this.words[0] < 0) { this.words[0] = -this.words[0]; this.negative = 1 } else { for (var B = 0; B < this.length && this.words[B] < 0; B++) { this.words[B] += 67108864; this.words[B + 1] -= 1 } } return this._strip() }; BN.prototype.addn = function addn(T) { return this.clone().iaddn(T) }; BN.prototype.subn = function subn(T) { return this.clone().isubn(T) }; BN.prototype.iabs = function iabs() { this.negative = 0; return this }; BN.prototype.abs = function abs() { return this.clone().iabs() }; BN.prototype._ishlnsubmul = function _ishlnsubmul(T, B, N) { var L = T.length + N; var I; this._expand(L); var J; var H = 0; for (I = 0; I < T.length; I++) { J = (this.words[I + N] | 0) + H; var U = (T.words[I] | 0) * B; J -= U & 67108863; H = (J >> 26) - (U / 67108864 | 0); this.words[I + N] = J & 67108863 } for (; I < this.length - N; I++) { J = (this.words[I + N] | 0) + H; H = J >> 26; this.words[I + N] = J & 67108863 } if (H === 0) return this._strip(); assert(H === -1); H = 0; for (I = 0; I < this.length; I++) { J = -(this.words[I] | 0) + H; H = J >> 26; this.words[I] = J & 67108863 } this.negative = 1; return this._strip() }; BN.prototype._wordDiv = function _wordDiv(T, B) { var N = this.length - T.length; var L = this.clone(); var I = T; var J = I.words[I.length - 1] | 0; var H = this._countBits(J); N = 26 - H; if (N !== 0) { I = I.ushln(N); L.iushln(N); J = I.words[I.length - 1] | 0 } var U = L.length - I.length; var X; if (B !== "mod") { X = new BN(null); X.length = U + 1; X.words = new Array(X.length); for (var G = 0; G < X.length; G++) { X.words[G] = 0 } } var V = L.clone()._ishlnsubmul(I, 1, U); if (V.negative === 0) { L = V; if (X) { X.words[U] = 1 } } for (var Z = U - 1; Z >= 0; Z--) { var W = (L.words[I.length + Z] | 0) * 67108864 + (L.words[I.length + Z - 1] | 0); W = Math.min(W / J | 0, 67108863); L._ishlnsubmul(I, W, Z); while (L.negative !== 0) { W--; L.negative = 0; L._ishlnsubmul(I, 1, Z); if (!L.isZero()) { L.negative ^= 1 } } if (X) { X.words[Z] = W } } if (X) { X._strip() } L._strip(); if (B !== "div" && N !== 0) { L.iushrn(N) } return { div: X || null, mod: L } }; BN.prototype.divmod = function divmod(T, B, N) { assert(!T.isZero()); if (this.isZero()) { return { div: new BN(0), mod: new BN(0) } } var L, I, J; if (this.negative !== 0 && T.negative === 0) { J = this.neg().divmod(T, B); if (B !== "mod") { L = J.div.neg() } if (B !== "div") { I = J.mod.neg(); if (N && I.negative !== 0) { I.iadd(T) } } return { div: L, mod: I } } if (this.negative === 0 && T.negative !== 0) { J = this.divmod(T.neg(), B); if (B !== "mod") { L = J.div.neg() } return { div: L, mod: J.mod } } if ((this.negative & T.negative) !== 0) { J = this.neg().divmod(T.neg(), B); if (B !== "div") { I = J.mod.neg(); if (N && I.negative !== 0) { I.isub(T) } } return { div: J.div, mod: I } } if (T.length > this.length || this.cmp(T) < 0) { return { div: new BN(0), mod: this } } if (T.length === 1) { if (B === "div") { return { div: this.divn(T.words[0]), mod: null } } if (B === "mod") { return { div: null, mod: new BN(this.modrn(T.words[0])) } } return { div: this.divn(T.words[0]), mod: new BN(this.modrn(T.words[0])) } } return this._wordDiv(T, B) }; BN.prototype.div = function div(T) { return this.divmod(T, "div", false).div }; BN.prototype.mod = function mod(T) { return this.divmod(T, "mod", false).mod }; BN.prototype.umod = function umod(T) { return this.divmod(T, "mod", true).mod }; BN.prototype.divRound = function divRound(T) { var B = this.divmod(T); if (B.mod.isZero()) return B.div; var N = B.div.negative !== 0 ? B.mod.isub(T) : B.mod; var L = T.ushrn(1); var I = T.andln(1); var J = N.cmp(L); if (J < 0 || I === 1 && J === 0) return B.div; return B.div.negative !== 0 ? B.div.isubn(1) : B.div.iaddn(1) }; BN.prototype.modrn = function modrn(T) { var B = T < 0; if (B) T = -T; assert(T <= 67108863); var N = (1 << 26) % T; var L = 0; for (var I = this.length - 1; I >= 0; I--) { L = (N * L + (this.words[I] | 0)) % T } return B ? -L : L }; BN.prototype.modn = function modn(T) { return this.modrn(T) }; BN.prototype.idivn = function idivn(T) { var B = T < 0; if (B) T = -T; assert(T <= 67108863); var N = 0; for (var L = this.length - 1; L >= 0; L--) { var I = (this.words[L] | 0) + N * 67108864; this.words[L] = I / T | 0; N = I % T } this._strip(); return B ? this.ineg() : this }; BN.prototype.divn = function divn(T) { return this.clone().idivn(T) }; BN.prototype.egcd = function egcd(T) { assert(T.negative === 0); assert(!T.isZero()); var B = this; var N = T.clone(); if (B.negative !== 0) { B = B.umod(T) } else { B = B.clone() } var L = new BN(1); var I = new BN(0); var J = new BN(0); var H = new BN(1); var U = 0; while (B.isEven() && N.isEven()) { B.iushrn(1); N.iushrn(1); ++U } var X = N.clone(); var G = B.clone(); while (!B.isZero()) { for (var V = 0, Z = 1; (B.words[0] & Z) === 0 && V < 26; ++V, Z <<= 1); if (V > 0) { B.iushrn(V); while (V-- > 0) { if (L.isOdd() || I.isOdd()) { L.iadd(X); I.isub(G) } L.iushrn(1); I.iushrn(1) } } for (var W = 0, q = 1; (N.words[0] & q) === 0 && W < 26; ++W, q <<= 1); if (W > 0) { N.iushrn(W); while (W-- > 0) { if (J.isOdd() || H.isOdd()) { J.iadd(X); H.isub(G) } J.iushrn(1); H.iushrn(1) } } if (B.cmp(N) >= 0) { B.isub(N); L.isub(J); I.isub(H) } else { N.isub(B); J.isub(L); H.isub(I) } } return { a: J, b: H, gcd: N.iushln(U) } }; BN.prototype._invmp = function _invmp(T) { assert(T.negative === 0); assert(!T.isZero()); var B = this; var N = T.clone(); if (B.negative !== 0) { B = B.umod(T) } else { B = B.clone() } var L = new BN(1); var I = new BN(0); var J = N.clone(); while (B.cmpn(1) > 0 && N.cmpn(1) > 0) { for (var H = 0, U = 1; (B.words[0] & U) === 0 && H < 26; ++H, U <<= 1); if (H > 0) { B.iushrn(H); while (H-- > 0) { if (L.isOdd()) { L.iadd(J) } L.iushrn(1) } } for (var X = 0, G = 1; (N.words[0] & G) === 0 && X < 26; ++X, G <<= 1); if (X > 0) { N.iushrn(X); while (X-- > 0) { if (I.isOdd()) { I.iadd(J) } I.iushrn(1) } } if (B.cmp(N) >= 0) { B.isub(N); L.isub(I) } else { N.isub(B); I.isub(L) } } var V; if (B.cmpn(1) === 0) { V = L } else { V = I } if (V.cmpn(0) < 0) { V.iadd(T) } return V }; BN.prototype.gcd = function gcd(T) { if (this.isZero()) return T.abs(); if (T.isZero()) return this.abs(); var B = this.clone(); var N = T.clone(); B.negative = 0; N.negative = 0; for (var L = 0; B.isEven() && N.isEven(); L++) { B.iushrn(1); N.iushrn(1) } do { while (B.isEven()) { B.iushrn(1) } while (N.isEven()) { N.iushrn(1) } var I = B.cmp(N); if (I < 0) { var J = B; B = N; N = J } else if (I === 0 || N.cmpn(1) === 0) { break } B.isub(N) } while (true); return N.iushln(L) }; BN.prototype.invm = function invm(T) { return this.egcd(T).a.umod(T) }; BN.prototype.isEven = function isEven() { return (this.words[0] & 1) === 0 }; BN.prototype.isOdd = function isOdd() { return (this.words[0] & 1) === 1 }; BN.prototype.andln = function andln(T) { return this.words[0] & T }; BN.prototype.bincn = function bincn(T) { assert(typeof T === "number"); var B = T % 26; var N = (T - B) / 26; var L = 1 << B; if (this.length <= N) { this._expand(N + 1); this.words[N] |= L; return this } var I = L; for (var J = N; I !== 0 && J < this.length; J++) { var H = this.words[J] | 0; H += I; I = H >>> 26; H &= 67108863; this.words[J] = H } if (I !== 0) { this.words[J] = I; this.length++ } return this }; BN.prototype.isZero = function isZero() { return this.length === 1 && this.words[0] === 0 }; BN.prototype.cmpn = function cmpn(T) { var B = T < 0; if (this.negative !== 0 && !B) return -1; if (this.negative === 0 && B) return 1; this._strip(); var N; if (this.length > 1) { N = 1 } else { if (B) { T = -T } assert(T <= 67108863, "Number is too big"); var L = this.words[0] | 0; N = L === T ? 0 : L < T ? -1 : 1 } if (this.negative !== 0) return -N | 0; return N }; BN.prototype.cmp = function cmp(T) { if (this.negative !== 0 && T.negative === 0) return -1; if (this.negative === 0 && T.negative !== 0) return 1; var B = this.ucmp(T); if (this.negative !== 0) return -B | 0; return B }; BN.prototype.ucmp = function ucmp(T) { if (this.length > T.length) return 1; if (this.length < T.length) return -1; var B = 0; for (var N = this.length - 1; N >= 0; N--) { var L = this.words[N] | 0; var I = T.words[N] | 0; if (L === I) continue; if (L < I) { B = -1 } else if (L > I) { B = 1 } break } return B }; BN.prototype.gtn = function gtn(T) { return this.cmpn(T) === 1 }; BN.prototype.gt = function gt(T) { return this.cmp(T) === 1 }; BN.prototype.gten = function gten(T) { return this.cmpn(T) >= 0 }; BN.prototype.gte = function gte(T) { return this.cmp(T) >= 0 }; BN.prototype.ltn = function ltn(T) { return this.cmpn(T) === -1 }; BN.prototype.lt = function lt(T) { return this.cmp(T) === -1 }; BN.prototype.lten = function lten(T) { return this.cmpn(T) <= 0 }; BN.prototype.lte = function lte(T) { return this.cmp(T) <= 0 }; BN.prototype.eqn = function eqn(T) { return this.cmpn(T) === 0 }; BN.prototype.eq = function eq(T) { return this.cmp(T) === 0 }; BN.red = function red(T) { return new Red(T) }; BN.prototype.toRed = function toRed(T) { assert(!this.red, "Already a number in reduction context"); assert(this.negative === 0, "red works only with positives"); return T.convertTo(this)._forceRed(T) }; BN.prototype.fromRed = function fromRed() { assert(this.red, "fromRed works only with numbers in reduction context"); return this.red.convertFrom(this) }; BN.prototype._forceRed = function _forceRed(T) { this.red = T; return this }; BN.prototype.forceRed = function forceRed(T) { assert(!this.red, "Already a number in reduction context"); return this._forceRed(T) }; BN.prototype.redAdd = function redAdd(T) { assert(this.red, "redAdd works only with red numbers"); return this.red.add(this, T) }; BN.prototype.redIAdd = function redIAdd(T) { assert(this.red, "redIAdd works only with red numbers"); return this.red.iadd(this, T) }; BN.prototype.redSub = function redSub(T) { assert(this.red, "redSub works only with red numbers"); return this.red.sub(this, T) }; BN.prototype.redISub = function redISub(T) { assert(this.red, "redISub works only with red numbers"); return this.red.isub(this, T) }; BN.prototype.redShl = function redShl(T) { assert(this.red, "redShl works only with red numbers"); return this.red.shl(this, T) }; BN.prototype.redMul = function redMul(T) { assert(this.red, "redMul works only with red numbers"); this.red._verify2(this, T); return this.red.mul(this, T) }; BN.prototype.redIMul = function redIMul(T) { assert(this.red, "redMul works only with red numbers"); this.red._verify2(this, T); return this.red.imul(this, T) }; BN.prototype.redSqr = function redSqr() { assert(this.red, "redSqr works only with red numbers"); this.red._verify1(this); return this.red.sqr(this) }; BN.prototype.redISqr = function redISqr() { assert(this.red, "redISqr works only with red numbers"); this.red._verify1(this); return this.red.isqr(this) }; BN.prototype.redSqrt = function redSqrt() { assert(this.red, "redSqrt works only with red numbers"); this.red._verify1(this); return this.red.sqrt(this) }; BN.prototype.redInvm = function redInvm() { assert(this.red, "redInvm works only with red numbers"); this.red._verify1(this); return this.red.invm(this) }; BN.prototype.redNeg = function redNeg() { assert(this.red, "redNeg works only with red numbers"); this.red._verify1(this); return this.red.neg(this) }; BN.prototype.redPow = function redPow(T) { assert(this.red && !T.red, "redPow(normalNum)"); this.red._verify1(this); return this.red.pow(this, T) }; var G = { k256: null, p224: null, p192: null, p25519: null }; function MPrime(T, B) { this.name = T; this.p = new BN(B, 16); this.n = this.p.bitLength(); this.k = new BN(1).iushln(this.n).isub(this.p); this.tmp = this._tmp() } MPrime.prototype._tmp = function _tmp() { var T = new BN(null); T.words = new Array(Math.ceil(this.n / 13)); return T }; MPrime.prototype.ireduce = function ireduce(T) { var B = T; var N; do { this.split(B, this.tmp); B = this.imulK(B); B = B.iadd(this.tmp); N = B.bitLength() } while (N > this.n); var L = N < this.n ? -1 : B.ucmp(this.p); if (L === 0) { B.words[0] = 0; B.length = 1 } else if (L > 0) { B.isub(this.p) } else { if (B.strip !== undefined) { B.strip() } else { B._strip() } } return B }; MPrime.prototype.split = function split(T, B) { T.iushrn(this.n, 0, B) }; MPrime.prototype.imulK = function imulK(T) { return T.imul(this.k) }; function K256() { MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f") } inherits(K256, MPrime); K256.prototype.split = function split(T, B) { var N = 4194303; var L = Math.min(T.length, 9); for (var I = 0; I < L; I++) { B.words[I] = T.words[I] } B.length = L; if (T.length <= 9) { T.words[0] = 0; T.length = 1; return } var J = T.words[9]; B.words[B.length++] = J & N; for (I = 10; I < T.length; I++) { var H = T.words[I] | 0; T.words[I - 10] = (H & N) << 4 | J >>> 22; J = H } J >>>= 22; T.words[I - 10] = J; if (J === 0 && T.length > 10) { T.length -= 10 } else { T.length -= 9 } }; K256.prototype.imulK = function imulK(T) { T.words[T.length] = 0; T.words[T.length + 1] = 0; T.length += 2; var B = 0; for (var N = 0; N < T.length; N++) { var L = T.words[N] | 0; B += L * 977; T.words[N] = B & 67108863; B = L * 64 + (B / 67108864 | 0) } if (T.words[T.length - 1] === 0) { T.length--; if (T.words[T.length - 1] === 0) { T.length-- } } return T }; function P224() { MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001") } inherits(P224, MPrime); function P192() { MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff") } inherits(P192, MPrime); function P25519() { MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed") } inherits(P25519, MPrime); P25519.prototype.imulK = function imulK(T) { var B = 0; for (var N = 0; N < T.length; N++) { var L = (T.words[N] | 0) * 19 + B; var I = L & 67108863; L >>>= 26; T.words[N] = I; B = L } if (B !== 0) { T.words[T.length++] = B } return T }; BN._prime = function prime(T) { if (G[T]) return G[T]; var prime; if (T === "k256") { prime = new K256 } else if (T === "p224") { prime = new P224 } else if (T === "p192") { prime = new P192 } else if (T === "p25519") { prime = new P25519 } else { throw new Error("Unknown prime " + T) } G[T] = prime; return prime }; function Red(T) { if (typeof T === "string") { var B = BN._prime(T); this.m = B.p; this.prime = B } else { assert(T.gtn(1), "modulus must be greater than 1"); this.m = T; this.prime = null } } Red.prototype._verify1 = function _verify1(T) { assert(T.negative === 0, "red works only with positives"); assert(T.red, "red works only with red numbers") }; Red.prototype._verify2 = function _verify2(T, B) { assert((T.negative | B.negative) === 0, "red works only with positives"); assert(T.red && T.red === B.red, "red works only with red numbers") }; Red.prototype.imod = function imod(T) { if (this.prime) return this.prime.ireduce(T)._forceRed(this); move(T, T.umod(this.m)._forceRed(this)); return T }; Red.prototype.neg = function neg(T) { if (T.isZero()) { return T.clone() } return this.m.sub(T)._forceRed(this) }; Red.prototype.add = function add(T, B) { this._verify2(T, B); var N = T.add(B); if (N.cmp(this.m) >= 0) { N.isub(this.m) } return N._forceRed(this) }; Red.prototype.iadd = function iadd(T, B) { this._verify2(T, B); var N = T.iadd(B); if (N.cmp(this.m) >= 0) { N.isub(this.m) } return N }; Red.prototype.sub = function sub(T, B) { this._verify2(T, B); var N = T.sub(B); if (N.cmpn(0) < 0) { N.iadd(this.m) } return N._forceRed(this) }; Red.prototype.isub = function isub(T, B) { this._verify2(T, B); var N = T.isub(B); if (N.cmpn(0) < 0) { N.iadd(this.m) } return N }; Red.prototype.shl = function shl(T, B) { this._verify1(T); return this.imod(T.ushln(B)) }; Red.prototype.imul = function imul(T, B) { this._verify2(T, B); return this.imod(T.imul(B)) }; Red.prototype.mul = function mul(T, B) { this._verify2(T, B); return this.imod(T.mul(B)) }; Red.prototype.isqr = function isqr(T) { return this.imul(T, T.clone()) }; Red.prototype.sqr = function sqr(T) { return this.mul(T, T) }; Red.prototype.sqrt = function sqrt(T) { if (T.isZero()) return T.clone(); var B = this.m.andln(3); assert(B % 2 === 1); if (B === 3) { var N = this.m.add(new BN(1)).iushrn(2); return this.pow(T, N) } var L = this.m.subn(1); var I = 0; while (!L.isZero() && L.andln(1) === 0) { I++; L.iushrn(1) } assert(!L.isZero()); var J = new BN(1).toRed(this); var H = J.redNeg(); var U = this.m.subn(1).iushrn(1); var X = this.m.bitLength(); X = new BN(2 * X * X).toRed(this); while (this.pow(X, U).cmp(H) !== 0) { X.redIAdd(H) } var G = this.pow(X, L); var V = this.pow(T, L.addn(1).iushrn(1)); var Z = this.pow(T, L); var W = I; while (Z.cmp(J) !== 0) { var q = Z; for (var Q = 0; q.cmp(J) !== 0; Q++) { q = q.redSqr() } assert(Q < W); var Y = this.pow(G, new BN(1).iushln(W - Q - 1)); V = V.redMul(Y); G = Y.redSqr(); Z = Z.redMul(G); W = Q } return V }; Red.prototype.invm = function invm(T) { var B = T._invmp(this.m); if (B.negative !== 0) { B.negative = 0; return this.imod(B).redNeg() } else { return this.imod(B) } }; Red.prototype.pow = function pow(T, B) { if (B.isZero()) return new BN(1).toRed(this); if (B.cmpn(1) === 0) return T.clone(); var N = 4; var L = new Array(1 << N); L[0] = new BN(1).toRed(this); L[1] = T; for (var I = 2; I < L.length; I++) { L[I] = this.mul(L[I - 1], T) } var J = L[0]; var H = 0; var U = 0; var X = B.bitLength() % 26; if (X === 0) { X = 26 } for (I = B.length - 1; I >= 0; I--) { var G = B.words[I]; for (var V = X - 1; V >= 0; V--) { var Z = G >> V & 1; if (J !== L[0]) { J = this.sqr(J) } if (Z === 0 && H === 0) { U = 0; continue } H <<= 1; H |= Z; U++; if (U !== N && (I !== 0 || V !== 0)) continue; J = this.mul(J, L[H]); U = 0; H = 0 } X = 26 } return J }; Red.prototype.convertTo = function convertTo(T) { var B = T.umod(this.m); return B === T ? B.clone() : B }; Red.prototype.convertFrom = function convertFrom(T) { var B = T.clone(); B.red = null; return B }; BN.mont = function mont(T) { return new Mont(T) }; function Mont(T) { Red.call(this, T); this.shift = this.m.bitLength(); if (this.shift % 26 !== 0) { this.shift += 26 - this.shift % 26 } this.r = new BN(1).iushln(this.shift); this.r2 = this.imod(this.r.sqr()); this.rinv = this.r._invmp(this.m); this.minv = this.rinv.mul(this.r).isubn(1).div(this.m); this.minv = this.minv.umod(this.r); this.minv = this.r.sub(this.minv) } inherits(Mont, Red); Mont.prototype.convertTo = function convertTo(T) { return this.imod(T.ushln(this.shift)) }; Mont.prototype.convertFrom = function convertFrom(T) { var B = this.imod(T.mul(this.rinv)); B.red = null; return B }; Mont.prototype.imul = function imul(T, B) { if (T.isZero() || B.isZero()) { T.words[0] = 0; T.length = 1; return T } var N = T.imul(B); var L = N.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m); var I = N.isub(L).iushrn(this.shift); var J = I; if (I.cmp(this.m) >= 0) { J = I.isub(this.m) } else if (I.cmpn(0) < 0) { J = I.iadd(this.m) } return J._forceRed(this) }; Mont.prototype.mul = function mul(T, B) { if (T.isZero() || B.isZero()) return new BN(0)._forceRed(this); var N = T.mul(B); var L = N.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m); var I = N.isub(L).iushrn(this.shift); var J = I; if (I.cmp(this.m) >= 0) { J = I.isub(this.m) } else if (I.cmpn(0) < 0) { J = I.iadd(this.m) } return J._forceRed(this) }; Mont.prototype.invm = function invm(T) { var B = this.imod(T._invmp(this.m).mul(this.r2)); return B._forceRed(this) } })(false || T, this) }, 9586: (T, B, N) => { var L; T.exports = function rand(T) { if (!L) L = new Rand(null); return L.generate(T) }; function Rand(T) { this.rand = T } T.exports.Rand = Rand; Rand.prototype.generate = function generate(T) { return this._rand(T) }; Rand.prototype._rand = function _rand(T) { if (this.rand.getBytes) return this.rand.getBytes(T); var B = new Uint8Array(T); for (var N = 0; N < B.length; N++)B[N] = this.rand.getByte(); return B }; if (typeof self === "object") { if (self.crypto && self.crypto.getRandomValues) { Rand.prototype._rand = function _rand(T) { var B = new Uint8Array(T); self.crypto.getRandomValues(B); return B } } else if (self.msCrypto && self.msCrypto.getRandomValues) { Rand.prototype._rand = function _rand(T) { var B = new Uint8Array(T); self.msCrypto.getRandomValues(B); return B } } else if (typeof window === "object") { Rand.prototype._rand = function () { throw new Error("Not implemented yet") } } } else { try { var I = N(6982); if (typeof I.randomBytes !== "function") throw new Error("Not supported"); Rand.prototype._rand = function _rand(T) { return I.randomBytes(T) } } catch (T) { } } }, 3338: (T, B, N) => { const L = N(4434).EventEmitter; const I = N(5317).spawn; const J = N(6928); const H = N(9896); class Option { constructor(T, B) { this.flags = T; this.required = T.includes("<"); this.optional = T.includes("["); this.variadic = /\w\.\.\.[>\]]$/.test(T); this.mandatory = false; const N = _parseOptionFlags(T); this.short = N.shortFlag; this.long = N.longFlag; this.negate = false; if (this.long) { this.negate = this.long.startsWith("--no-") } this.description = B || ""; this.defaultValue = undefined } name() { if (this.long) { return this.long.replace(/^--/, "") } return this.short.replace(/^-/, "") } attributeName() { return camelcase(this.name().replace(/^no-/, "")) } is(T) { return this.short === T || this.long === T } } class CommanderError extends Error { constructor(T, B, N) { super(N); Error.captureStackTrace(this, this.constructor); this.name = this.constructor.name; this.code = B; this.exitCode = T; this.nestedError = undefined } } class Command extends L { constructor(T) { super(); this.commands = []; this.options = []; this.parent = null; this._allowUnknownOption = false; this._args = []; this.rawArgs = null; this._scriptPath = null; this._name = T || ""; this._optionValues = {}; this._storeOptionsAsProperties = true; this._storeOptionsAsPropertiesCalled = false; this._passCommandToAction = true; this._actionResults = []; this._actionHandler = null; this._executableHandler = false; this._executableFile = null; this._defaultCommandName = null; this._exitCallback = null; this._aliases = []; this._combineFlagAndOptionalValue = true; this._hidden = false; this._hasHelpOption = true; this._helpFlags = "-h, --help"; this._helpDescription = "display help for command"; this._helpShortFlag = "-h"; this._helpLongFlag = "--help"; this._hasImplicitHelpCommand = undefined; this._helpCommandName = "help"; this._helpCommandnameAndArgs = "help [command]"; this._helpCommandDescription = "display help for command" } command(T, B, N) { let L = B; let I = N; if (typeof L === "object" && L !== null) { I = L; L = null } I = I || {}; const J = T.split(/ +/); const H = this.createCommand(J.shift()); if (L) { H.description(L); H._executableHandler = true } if (I.isDefault) this._defaultCommandName = H._name; H._hidden = !!(I.noHelp || I.hidden); H._hasHelpOption = this._hasHelpOption; H._helpFlags = this._helpFlags; H._helpDescription = this._helpDescription; H._helpShortFlag = this._helpShortFlag; H._helpLongFlag = this._helpLongFlag; H._helpCommandName = this._helpCommandName; H._helpCommandnameAndArgs = this._helpCommandnameAndArgs; H._helpCommandDescription = this._helpCommandDescription; H._exitCallback = this._exitCallback; H._storeOptionsAsProperties = this._storeOptionsAsProperties; H._passCommandToAction = this._passCommandToAction; H._combineFlagAndOptionalValue = this._combineFlagAndOptionalValue; H._executableFile = I.executableFile || null; this.commands.push(H); H._parseExpectedArgs(J); H.parent = this; if (L) return this; return H } createCommand(T) { return new Command(T) } addCommand(T, B) { if (!T._name) throw new Error("Command passed to .addCommand() must have a name"); function checkExplicitNames(T) { T.forEach((T => { if (T._executableHandler && !T._executableFile) { throw new Error(`Must specify executableFile for deeply nested executable: ${T.name()}`) } checkExplicitNames(T.commands) })) } checkExplicitNames(T.commands); B = B || {}; if (B.isDefault) this._defaultCommandName = T._name; if (B.noHelp || B.hidden) T._hidden = true; this.commands.push(T); T.parent = this; return this } arguments(T) { return this._parseExpectedArgs(T.split(/ +/)) } addHelpCommand(T, B) { if (T === false) { this._hasImplicitHelpCommand = false } else { this._hasImplicitHelpCommand = true; if (typeof T === "string") { this._helpCommandName = T.split(" ")[0]; this._helpCommandnameAndArgs = T } this._helpCommandDescription = B || this._helpCommandDescription } return this } _lazyHasImplicitHelpCommand() { if (this._hasImplicitHelpCommand === undefined) { this._hasImplicitHelpCommand = this.commands.length && !this._actionHandler && !this._findCommand("help") } return this._hasImplicitHelpCommand } _parseExpectedArgs(T) { if (!T.length) return; T.forEach((T => { const B = { required: false, name: "", variadic: false }; switch (T[0]) { case "<": B.required = true; B.name = T.slice(1, -1); break; case "[": B.name = T.slice(1, -1); break }if (B.name.length > 3 && B.name.slice(-3) === "...") { B.variadic = true; B.name = B.name.slice(0, -3) } if (B.name) { this._args.push(B) } })); this._args.forEach(((T, B) => { if (T.variadic && B < this._args.length - 1) { throw new Error(`only the last argument can be variadic '${T.name}'`) } })); return this } exitOverride(T) { if (T) { this._exitCallback = T } else { this._exitCallback = T => { if (T.code !== "commander.executeSubCommandAsync") { throw T } else { } } } return this } _exit(T, B, N) { if (this._exitCallback) { this._exitCallback(new CommanderError(T, B, N)) } process.exit(T) } action(T) { const listener = B => { const N = this._args.length; const L = B.slice(0, N); if (this._passCommandToAction) { L[N] = this } else { L[N] = this.opts() } if (B.length > N) { L.push(B.slice(N)) } const I = T.apply(this, L); let J = this; while (J.parent) { J = J.parent } J._actionResults.push(I) }; this._actionHandler = listener; return this } _checkForOptionNameClash(T) { if (!this._storeOptionsAsProperties || this._storeOptionsAsPropertiesCalled) { return } if (T.name() === "help") { return } const B = this._getOptionValue(T.attributeName()); if (B === undefined) { return } let N = true; if (T.negate) { const B = T.long.replace(/^--no-/, "--"); N = !this._findOption(B) } else if (T.long) { const B = T.long.replace(/^--/, "--no-"); N = !this._findOption(B) } if (N) { throw new Error(`option '${T.name()}' clashes with existing property '${T.attributeName()}' on Command\n- call storeOptionsAsProperties(false) to store option values safely,\n- or call storeOptionsAsProperties(true) to suppress this check,\n- or change option name\n\nRead more on https://git.io/JJc0W`) } } _optionEx(T, B, N, L, I) { const J = new Option(B, N); const H = J.name(); const U = J.attributeName(); J.mandatory = !!T.mandatory; this._checkForOptionNameClash(J); if (typeof L !== "function") { if (L instanceof RegExp) { const T = L; L = (B, N) => { const L = T.exec(B); return L ? L[0] : N } } else { I = L; L = null } } if (J.negate || J.optional || J.required || typeof I === "boolean") { if (J.negate) { const T = J.long.replace(/^--no-/, "--"); I = this._findOption(T) ? this._getOptionValue(U) : true } if (I !== undefined) { this._setOptionValue(U, I); J.defaultValue = I } } this.options.push(J); this.on("option:" + H, (T => { const B = this._getOptionValue(U); if (T !== null && L) { T = L(T, B === undefined ? I : B) } else if (T !== null && J.variadic) { if (B === I || !Array.isArray(B)) { T = [T] } else { T = B.concat(T) } } if (typeof B === "boolean" || typeof B === "undefined") { if (T == null) { this._setOptionValue(U, J.negate ? false : I || true) } else { this._setOptionValue(U, T) } } else if (T !== null) { this._setOptionValue(U, J.negate ? false : T) } })); return this } option(T, B, N, L) { return this._optionEx({}, T, B, N, L) } requiredOption(T, B, N, L) { return this._optionEx({ mandatory: true }, T, B, N, L) } combineFlagAndOptionalValue(T) { this._combineFlagAndOptionalValue = T === undefined || T; return this } allowUnknownOption(T) { this._allowUnknownOption = T === undefined || T; return this } storeOptionsAsProperties(T) { this._storeOptionsAsPropertiesCalled = true; this._storeOptionsAsProperties = T === undefined || T; if (this.options.length) { throw new Error("call .storeOptionsAsProperties() before adding options") } return this } passCommandToAction(T) { this._passCommandToAction = T === undefined || T; return this } _setOptionValue(T, B) { if (this._storeOptionsAsProperties) { this[T] = B } else { this._optionValues[T] = B } } _getOptionValue(T) { if (this._storeOptionsAsProperties) { return this[T] } return this._optionValues[T] } parse(T, B) { if (T !== undefined && !Array.isArray(T)) { throw new Error("first parameter to parse must be array or undefined") } B = B || {}; if (T === undefined) { T = process.argv; if (process.versions && process.versions.electron) { B.from = "electron" } } this.rawArgs = T.slice(); let N; switch (B.from) { case undefined: case "node": this._scriptPath = T[1]; N = T.slice(2); break; case "electron": if (process.defaultApp) { this._scriptPath = T[1]; N = T.slice(2) } else { N = T.slice(1) } break; case "user": N = T.slice(0); break; default: throw new Error(`unexpected parse option { from: '${B.from}' }`) }if (!this._scriptPath && process.mainModule) { this._scriptPath = process.mainModule.filename } this._name = this._name || this._scriptPath && J.basename(this._scriptPath, J.extname(this._scriptPath)); this._parseCommand([], N); return this } parseAsync(T, B) { this.parse(T, B); return Promise.all(this._actionResults).then((() => this)) } _executeSubCommand(T, B) { B = B.slice(); let N = false; const L = [".js", ".ts", ".tsx", ".mjs"]; this._checkForMissingMandatoryOptions(); let U = this._scriptPath; if (!U && process.mainModule) { U = process.mainModule.filename } let X; try { const T = H.realpathSync(U); X = J.dirname(T) } catch (T) { X = "." } let G = J.basename(U, J.extname(U)) + "-" + T._name; if (T._executableFile) { G = T._executableFile } const V = J.join(X, G); if (H.existsSync(V)) { G = V } else { L.forEach((T => { if (H.existsSync(`${V}${T}`)) { G = `${V}${T}` } })) } N = L.includes(J.extname(G)); let Z; if (process.platform !== "win32") { if (N) { B.unshift(G); B = incrementNodeInspectorPort(process.execArgv).concat(B); Z = I(process.argv[0], B, { stdio: "inherit" }) } else { Z = I(G, B, { stdio: "inherit" }) } } else { B.unshift(G); B = incrementNodeInspectorPort(process.execArgv).concat(B); Z = I(process.execPath, B, { stdio: "inherit" }) } const W = ["SIGUSR1", "SIGUSR2", "SIGTERM", "SIGINT", "SIGHUP"]; W.forEach((T => { process.on(T, (() => { if (Z.killed === false && Z.exitCode === null) { Z.kill(T) } })) })); const q = this._exitCallback; if (!q) { Z.on("close", process.exit.bind(process)) } else { Z.on("close", (() => { q(new CommanderError(process.exitCode || 0, "commander.executeSubCommandAsync", "(close)")) })) } Z.on("error", (B => { if (B.code === "ENOENT") { const B = `'${G}' does not exist\n - if '${T._name}' is not meant to be an executable command, remove description parameter from '.command()' and use '.description()' instead\n - if the default executable name is not suitable, use the executableFile option to supply a custom name`; throw new Error(B) } else if (B.code === "EACCES") { throw new Error(`'${G}' not executable`) } if (!q) { process.exit(1) } else { const T = new CommanderError(1, "commander.executeSubCommandAsync", "(error)"); T.nestedError = B; q(T) } })); this.runningCommand = Z } _dispatchSubcommand(T, B, N) { const L = this._findCommand(T); if (!L) this._helpAndError(); if (L._executableHandler) { this._executeSubCommand(L, B.concat(N)) } else { L._parseCommand(B, N) } } _parseCommand(T, B) { const N = this.parseOptions(B); T = T.concat(N.operands); B = N.unknown; this.args = T.concat(B); if (T && this._findCommand(T[0])) { this._dispatchSubcommand(T[0], T.slice(1), B) } else if (this._lazyHasImplicitHelpCommand() && T[0] === this._helpCommandName) { if (T.length === 1) { this.help() } else { this._dispatchSubcommand(T[1], [], [this._helpLongFlag]) } } else if (this._defaultCommandName) { outputHelpIfRequested(this, B); this._dispatchSubcommand(this._defaultCommandName, T, B) } else { if (this.commands.length && this.args.length === 0 && !this._actionHandler && !this._defaultCommandName) { this._helpAndError() } outputHelpIfRequested(this, N.unknown); this._checkForMissingMandatoryOptions(); if (N.unknown.length > 0) { this.unknownOption(N.unknown[0]) } if (this._actionHandler) { const N = this.args.slice(); this._args.forEach(((T, B) => { if (T.required && N[B] == null) { this.missingArgument(T.name) } else if (T.variadic) { N[B] = N.splice(B) } })); this._actionHandler(N); this.emit("command:" + this.name(), T, B) } else if (T.length) { if (this._findCommand("*")) { this._dispatchSubcommand("*", T, B) } else if (this.listenerCount("command:*")) { this.emit("command:*", T, B) } else if (this.commands.length) { this.unknownCommand() } } else if (this.commands.length) { this._helpAndError() } else { } } } _findCommand(T) { if (!T) return undefined; return this.commands.find((B => B._name === T || B._aliases.includes(T))) } _findOption(T) { return this.options.find((B => B.is(T))) } _checkForMissingMandatoryOptions() { for (let T = this; T; T = T.parent) { T.options.forEach((B => { if (B.mandatory && T._getOptionValue(B.attributeName()) === undefined) { T.missingMandatoryOptionValue(B) } })) } } parseOptions(T) { const B = []; const N = []; let L = B; const I = T.slice(); function maybeOption(T) { return T.length > 1 && T[0] === "-" } let J = null; while (I.length) { const T = I.shift(); if (T === "--") { if (L === N) L.push(T); L.push(...I); break } if (J && !maybeOption(T)) { this.emit(`option:${J.name()}`, T); continue } J = null; if (maybeOption(T)) { const B = this._findOption(T); if (B) { if (B.required) { const T = I.shift(); if (T === undefined) this.optionMissingArgument(B); this.emit(`option:${B.name()}`, T) } else if (B.optional) { let T = null; if (I.length > 0 && !maybeOption(I[0])) { T = I.shift() } this.emit(`option:${B.name()}`, T) } else { this.emit(`option:${B.name()}`) } J = B.variadic ? B : null; continue } } if (T.length > 2 && T[0] === "-" && T[1] !== "-") { const B = this._findOption(`-${T[1]}`); if (B) { if (B.required || B.optional && this._combineFlagAndOptionalValue) { this.emit(`option:${B.name()}`, T.slice(2)) } else { this.emit(`option:${B.name()}`); I.unshift(`-${T.slice(2)}`) } continue } } if (/^--[^=]+=/.test(T)) { const B = T.indexOf("="); const N = this._findOption(T.slice(0, B)); if (N && (N.required || N.optional)) { this.emit(`option:${N.name()}`, T.slice(B + 1)); continue } } if (T.length > 1 && T[0] === "-") { L = N } L.push(T) } return { operands: B, unknown: N } } opts() { if (this._storeOptionsAsProperties) { const T = {}; const B = this.options.length; for (let N = 0; N < B; N++) { const B = this.options[N].attributeName(); T[B] = B === this._versionOptionName ? this._version : this[B] } return T } return this._optionValues } missingArgument(T) { const B = `error: missing required argument '${T}'`; console.error(B); this._exit(1, "commander.missingArgument", B) } optionMissingArgument(T, B) { let N; if (B) { N = `error: option '${T.flags}' argument missing, got '${B}'` } else { N = `error: option '${T.flags}' argument missing` } console.error(N); this._exit(1, "commander.optionMissingArgument", N) } missingMandatoryOptionValue(T) { const B = `error: required option '${T.flags}' not specified`; console.error(B); this._exit(1, "commander.missingMandatoryOptionValue", B) } unknownOption(T) { if (this._allowUnknownOption) return; const B = `error: unknown option '${T}'`; console.error(B); this._exit(1, "commander.unknownOption", B) } unknownCommand() { const T = [this.name()]; for (let B = this.parent; B; B = B.parent) { T.unshift(B.name()) } const B = T.join(" "); const N = `error: unknown command '${this.args[0]}'.` + (this._hasHelpOption ? ` See '${B} ${this._helpLongFlag}'.` : ""); console.error(N); this._exit(1, "commander.unknownCommand", N) } version(T, B, N) { if (T === undefined) return this._version; this._version = T; B = B || "-V, --version"; N = N || "output the version number"; const L = new Option(B, N); this._versionOptionName = L.attributeName(); this.options.push(L); this.on("option:" + L.name(), (() => { process.stdout.write(T + "\n"); this._exit(0, "commander.version", T) })); return this } description(T, B) { if (T === undefined && B === undefined) return this._description; this._description = T; this._argsDescription = B; return this } alias(T) { if (T === undefined) return this._aliases[0]; let B = this; if (this.commands.length !== 0 && this.commands[this.commands.length - 1]._executableHandler) { B = this.commands[this.commands.length - 1] } if (T === B._name) throw new Error("Command alias can't be the same as its name"); B._aliases.push(T); return this } aliases(T) { if (T === undefined) return this._aliases; T.forEach((T => this.alias(T))); return this } usage(T) { if (T === undefined) { if (this._usage) return this._usage; const T = this._args.map((T => humanReadableArgName(T))); return [].concat(this.options.length || this._hasHelpOption ? "[options]" : [], this.commands.length ? "[command]" : [], this._args.length ? T : []).join(" ") } this._usage = T; return this } name(T) { if (T === undefined) return this._name; this._name = T; return this } prepareCommands() { const T = this.commands.filter((T => !T._hidden)).map((T => { const B = T._args.map((T => humanReadableArgName(T))).join(" "); return [T._name + (T._aliases[0] ? "|" + T._aliases[0] : "") + (T.options.length ? " [options]" : "") + (B ? " " + B : ""), T._description] })); if (this._lazyHasImplicitHelpCommand()) { T.push([this._helpCommandnameAndArgs, this._helpCommandDescription]) } return T } largestCommandLength() { const T = this.prepareCommands(); return T.reduce(((T, B) => Math.max(T, B[0].length)), 0) } largestOptionLength() { const T = [].slice.call(this.options); T.push({ flags: this._helpFlags }); return T.reduce(((T, B) => Math.max(T, B.flags.length)), 0) } largestArgLength() { return this._args.reduce(((T, B) => Math.max(T, B.name.length)), 0) } padWidth() { let T = this.largestOptionLength(); if (this._argsDescription && this._args.length) { if (this.largestArgLength() > T) { T = this.largestArgLength() } } if (this.commands && this.commands.length) { if (this.largestCommandLength() > T) { T = this.largestCommandLength() } } return T } optionHelp() { const T = this.padWidth(); const B = process.stdout.columns || 80; const N = B - T - 4; function padOptionDetails(B, L) { return pad(B, T) + "  " + optionalWrap(L, N, T + 2) } const L = this.options.map((T => { const B = T.description + (!T.negate && T.defaultValue !== undefined ? " (default: " + JSON.stringify(T.defaultValue) + ")" : ""); return padOptionDetails(T.flags, B) })); const I = this._hasHelpOption && this._helpShortFlag && !this._findOption(this._helpShortFlag); const J = this._hasHelpOption && !this._findOption(this._helpLongFlag); if (I || J) { let T = this._helpFlags; if (!I) { T = this._helpLongFlag } else if (!J) { T = this._helpShortFlag } L.push(padOptionDetails(T, this._helpDescription)) } return L.join("\n") } commandHelp() { if (!this.commands.length && !this._lazyHasImplicitHelpCommand()) return ""; const T = this.prepareCommands(); const B = this.padWidth(); const N = process.stdout.columns || 80; const L = N - B - 4; return ["Commands:", T.map((T => { const N = T[1] ? "  " + T[1] : ""; return (N ? pad(T[0], B) : T[0]) + optionalWrap(N, L, B + 2) })).join("\n").replace(/^/gm, "  "), ""].join("\n") } helpInformation() { let T = []; if (this._description) { T = [this._description, ""]; const B = this._argsDescription; if (B && this._args.length) { const N = this.padWidth(); const L = process.stdout.columns || 80; const I = L - N - 5; T.push("Arguments:"); this._args.forEach((L => { T.push("  " + pad(L.name, N) + "  " + wrap(B[L.name] || "", I, N + 4)) })); T.push("") } } let B = this._name; if (this._aliases[0]) { B = B + "|" + this._aliases[0] } let N = ""; for (let T = this.parent; T; T = T.parent) { N = T.name() + " " + N } const L = ["Usage: " + N + B + " " + this.usage(), ""]; let I = []; const J = this.commandHelp(); if (J) I = [J]; let H = []; if (this._hasHelpOption || this.options.length > 0) { H = ["Options:", "" + this.optionHelp().replace(/^/gm, "  "), ""] } return L.concat(T).concat(H).concat(I).join("\n") } outputHelp(T) { if (!T) { T = T => T } const B = T(this.helpInformation()); if (typeof B !== "string" && !Buffer.isBuffer(B)) { throw new Error("outputHelp callback must return a string or a Buffer") } process.stdout.write(B); this.emit(this._helpLongFlag) } helpOption(T, B) { if (typeof T === "boolean") { this._hasHelpOption = T; return this } this._helpFlags = T || this._helpFlags; this._helpDescription = B || this._helpDescription; const N = _parseOptionFlags(this._helpFlags); this._helpShortFlag = N.shortFlag; this._helpLongFlag = N.longFlag; return this } help(T) { this.outputHelp(T); this._exit(process.exitCode || 0, "commander.help", "(outputHelp)") } _helpAndError() { this.outputHelp(); this._exit(1, "commander.help", "(outputHelp)") } } B = T.exports = new Command; B.program = B; B.Command = Command; B.Option = Option; B.CommanderError = CommanderError; function camelcase(T) { return T.split("-").reduce(((T, B) => T + B[0].toUpperCase() + B.slice(1))) } function pad(T, B) { const N = Math.max(0, B - T.length); return T + Array(N + 1).join(" ") } function wrap(T, B, N) { const L = new RegExp(".{1," + (B - 1) + "}([\\s​]|$)|[^\\s​]+?([\\s​]|$)", "g"); const I = T.match(L) || []; return I.map(((T, B) => { if (T.slice(-1) === "\n") { T = T.slice(0, T.length - 1) } return (B > 0 && N ? Array(N + 1).join(" ") : "") + T.trimRight() })).join("\n") } function optionalWrap(T, B, N) { if (T.match(/[\n]\s+/)) return T; const L = 40; if (B < L) return T; return wrap(T, B, N) } function outputHelpIfRequested(T, B) { const N = T._hasHelpOption && B.find((B => B === T._helpLongFlag || B === T._helpShortFlag)); if (N) { T.outputHelp(); T._exit(0, "commander.helpDisplayed", "(outputHelp)") } } function humanReadableArgName(T) { const B = T.name + (T.variadic === true ? "..." : ""); return T.required ? "<" + B + ">" : "[" + B + "]" } function _parseOptionFlags(T) { let B; let N; const L = T.split(/[ |,]+/); if (L.length > 1 && !/^[[<]/.test(L[1])) B = L.shift(); N = L.shift(); if (!B && /^-[^-]$/.test(N)) { B = N; N = undefined } return { shortFlag: B, longFlag: N } } function incrementNodeInspectorPort(T) { return T.map((T => { if (!T.startsWith("--inspect")) { return T } let B; let N = "127.0.0.1"; let L = "9229"; let I; if ((I = T.match(/^(--inspect(-brk)?)$/)) !== null) { B = I[1] } else if ((I = T.match(/^(--inspect(-brk|-port)?)=([^:]+)$/)) !== null) { B = I[1]; if (/^\d+$/.test(I[3])) { L = I[3] } else { N = I[3] } } else if ((I = T.match(/^(--inspect(-brk|-port)?)=([^:]+):(\d+)$/)) !== null) { B = I[1]; N = I[3]; L = I[4] } if (B && L !== "0") { return `${B}=${N}:${parseInt(L) + 1}` } return T })) } }, 7034: (T, B, N) => { "use strict"; var L = B; L.version = N(1636).rE; L.utils = N(5028); L.rand = N(9586); L.curve = N(7773); L.curves = N(997); L.ec = N(5070); L.eddsa = N(3225) }, 8088: (T, B, N) => { "use strict"; var L = N(7967); var I = N(5028); var J = I.getNAF; var H = I.getJSF; var U = I.assert; function BaseCurve(T, B) { this.type = T; this.p = new L(B.p, 16); this.red = B.prime ? L.red(B.prime) : L.mont(this.p); this.zero = new L(0).toRed(this.red); this.one = new L(1).toRed(this.red); this.two = new L(2).toRed(this.red); this.n = B.n && new L(B.n, 16); this.g = B.g && this.pointFromJSON(B.g, B.gRed); this._wnafT1 = new Array(4); this._wnafT2 = new Array(4); this._wnafT3 = new Array(4); this._wnafT4 = new Array(4); this._bitLength = this.n ? this.n.bitLength() : 0; var N = this.n && this.p.div(this.n); if (!N || N.cmpn(100) > 0) { this.redN = null } else { this._maxwellTrick = true; this.redN = this.n.toRed(this.red) } } T.exports = BaseCurve; BaseCurve.prototype.point = function point() { throw new Error("Not implemented") }; BaseCurve.prototype.validate = function validate() { throw new Error("Not implemented") }; BaseCurve.prototype._fixedNafMul = function _fixedNafMul(T, B) { U(T.precomputed); var N = T._getDoubles(); var L = J(B, 1, this._bitLength); var I = (1 << N.step + 1) - (N.step % 2 === 0 ? 2 : 1); I /= 3; var H = []; var X; var G; for (X = 0; X < L.length; X += N.step) { G = 0; for (var V = X + N.step - 1; V >= X; V--)G = (G << 1) + L[V]; H.push(G) } var Z = this.jpoint(null, null, null); var W = this.jpoint(null, null, null); for (var q = I; q > 0; q--) { for (X = 0; X < H.length; X++) { G = H[X]; if (G === q) W = W.mixedAdd(N.points[X]); else if (G === -q) W = W.mixedAdd(N.points[X].neg()) } Z = Z.add(W) } return Z.toP() }; BaseCurve.prototype._wnafMul = function _wnafMul(T, B) { var N = 4; var L = T._getNAFPoints(N); N = L.wnd; var I = L.points; var H = J(B, N, this._bitLength); var X = this.jpoint(null, null, null); for (var G = H.length - 1; G >= 0; G--) { for (var V = 0; G >= 0 && H[G] === 0; G--)V++; if (G >= 0) V++; X = X.dblp(V); if (G < 0) break; var Z = H[G]; U(Z !== 0); if (T.type === "affine") { if (Z > 0) X = X.mixedAdd(I[Z - 1 >> 1]); else X = X.mixedAdd(I[-Z - 1 >> 1].neg()) } else { if (Z > 0) X = X.add(I[Z - 1 >> 1]); else X = X.add(I[-Z - 1 >> 1].neg()) } } return T.type === "affine" ? X.toP() : X }; BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(T, B, N, L, I) { var U = this._wnafT1; var X = this._wnafT2; var G = this._wnafT3; var V = 0; var Z; var W; var q; for (Z = 0; Z < L; Z++) { q = B[Z]; var Q = q._getNAFPoints(T); U[Z] = Q.wnd; X[Z] = Q.points } for (Z = L - 1; Z >= 1; Z -= 2) { var Y = Z - 1; var ff = Z; if (U[Y] !== 1 || U[ff] !== 1) { G[Y] = J(N[Y], U[Y], this._bitLength); G[ff] = J(N[ff], U[ff], this._bitLength); V = Math.max(G[Y].length, V); V = Math.max(G[ff].length, V); continue } var ef = [B[Y], null, null, B[ff]]; if (B[Y].y.cmp(B[ff].y) === 0) { ef[1] = B[Y].add(B[ff]); ef[2] = B[Y].toJ().mixedAdd(B[ff].neg()) } else if (B[Y].y.cmp(B[ff].y.redNeg()) === 0) { ef[1] = B[Y].toJ().mixedAdd(B[ff]); ef[2] = B[Y].add(B[ff].neg()) } else { ef[1] = B[Y].toJ().mixedAdd(B[ff]); ef[2] = B[Y].toJ().mixedAdd(B[ff].neg()) } var tf = [-3, -1, -5, -7, 0, 7, 5, 1, 3]; var rf = H(N[Y], N[ff]); V = Math.max(rf[0].length, V); G[Y] = new Array(V); G[ff] = new Array(V); for (W = 0; W < V; W++) { var af = rf[0][W] | 0; var nf = rf[1][W] | 0; G[Y][W] = tf[(af + 1) * 3 + (nf + 1)]; G[ff][W] = 0; X[Y] = ef } } var of = this.jpoint(null, null, null); var sf = this._wnafT4; for (Z = V; Z >= 0; Z--) { var cf = 0; while (Z >= 0) { var bf = true; for (W = 0; W < L; W++) { sf[W] = G[W][Z] | 0; if (sf[W] !== 0) bf = false } if (!bf) break; cf++; Z-- } if (Z >= 0) cf++; of = of.dblp(cf); if (Z < 0) break; for (W = 0; W < L; W++) { var df = sf[W]; q; if (df === 0) continue; else if (df > 0) q = X[W][df - 1 >> 1]; else if (df < 0) q = X[W][-df - 1 >> 1].neg(); if (q.type === "affine") of = of.mixedAdd(q); else of = of.add(q) } } for (Z = 0; Z < L; Z++)X[Z] = null; if (I) return of; else return of.toP() }; function BasePoint(T, B) { this.curve = T; this.type = B; this.precomputed = null } BaseCurve.BasePoint = BasePoint; BasePoint.prototype.eq = function eq() { throw new Error("Not implemented") }; BasePoint.prototype.validate = function validate() { return this.curve.validate(this) }; BaseCurve.prototype.decodePoint = function decodePoint(T, B) { T = I.toArray(T, B); var N = this.p.byteLength(); if ((T[0] === 4 || T[0] === 6 || T[0] === 7) && T.length - 1 === 2 * N) { if (T[0] === 6) U(T[T.length - 1] % 2 === 0); else if (T[0] === 7) U(T[T.length - 1] % 2 === 1); var L = this.point(T.slice(1, 1 + N), T.slice(1 + N, 1 + 2 * N)); return L } else if ((T[0] === 2 || T[0] === 3) && T.length - 1 === N) { return this.pointFromX(T.slice(1, 1 + N), T[0] === 3) } throw new Error("Unknown point format") }; BasePoint.prototype.encodeCompressed = function encodeCompressed(T) { return this.encode(T, true) }; BasePoint.prototype._encode = function _encode(T) { var B = this.curve.p.byteLength(); var N = this.getX().toArray("be", B); if (T) return [this.getY().isEven() ? 2 : 3].concat(N); return [4].concat(N, this.getY().toArray("be", B)) }; BasePoint.prototype.encode = function encode(T, B) { return I.encode(this._encode(B), T) }; BasePoint.prototype.precompute = function precompute(T) { if (this.precomputed) return this; var B = { doubles: null, naf: null, beta: null }; B.naf = this._getNAFPoints(8); B.doubles = this._getDoubles(4, T); B.beta = this._getBeta(); this.precomputed = B; return this }; BasePoint.prototype._hasDoubles = function _hasDoubles(T) { if (!this.precomputed) return false; var B = this.precomputed.doubles; if (!B) return false; return B.points.length >= Math.ceil((T.bitLength() + 1) / B.step) }; BasePoint.prototype._getDoubles = function _getDoubles(T, B) { if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles; var N = [this]; var L = this; for (var I = 0; I < B; I += T) { for (var J = 0; J < T; J++)L = L.dbl(); N.push(L) } return { step: T, points: N } }; BasePoint.prototype._getNAFPoints = function _getNAFPoints(T) { if (this.precomputed && this.precomputed.naf) return this.precomputed.naf; var B = [this]; var N = (1 << T) - 1; var L = N === 1 ? null : this.dbl(); for (var I = 1; I < N; I++)B[I] = B[I - 1].add(L); return { wnd: T, points: B } }; BasePoint.prototype._getBeta = function _getBeta() { return null }; BasePoint.prototype.dblp = function dblp(T) { var B = this; for (var N = 0; N < T; N++)B = B.dbl(); return B } }, 9981: (T, B, N) => { "use strict"; var L = N(5028); var I = N(7967); var J = N(9598); var H = N(8088); var U = L.assert; function EdwardsCurve(T) { this.twisted = (T.a | 0) !== 1; this.mOneA = this.twisted && (T.a | 0) === -1; this.extended = this.mOneA; H.call(this, "edwards", T); this.a = new I(T.a, 16).umod(this.red.m); this.a = this.a.toRed(this.red); this.c = new I(T.c, 16).toRed(this.red); this.c2 = this.c.redSqr(); this.d = new I(T.d, 16).toRed(this.red); this.dd = this.d.redAdd(this.d); U(!this.twisted || this.c.fromRed().cmpn(1) === 0); this.oneC = (T.c | 0) === 1 } J(EdwardsCurve, H); T.exports = EdwardsCurve; EdwardsCurve.prototype._mulA = function _mulA(T) { if (this.mOneA) return T.redNeg(); else return this.a.redMul(T) }; EdwardsCurve.prototype._mulC = function _mulC(T) { if (this.oneC) return T; else return this.c.redMul(T) }; EdwardsCurve.prototype.jpoint = function jpoint(T, B, N, L) { return this.point(T, B, N, L) }; EdwardsCurve.prototype.pointFromX = function pointFromX(T, B) { T = new I(T, 16); if (!T.red) T = T.toRed(this.red); var N = T.redSqr(); var L = this.c2.redSub(this.a.redMul(N)); var J = this.one.redSub(this.c2.redMul(this.d).redMul(N)); var H = L.redMul(J.redInvm()); var U = H.redSqrt(); if (U.redSqr().redSub(H).cmp(this.zero) !== 0) throw new Error("invalid point"); var X = U.fromRed().isOdd(); if (B && !X || !B && X) U = U.redNeg(); return this.point(T, U) }; EdwardsCurve.prototype.pointFromY = function pointFromY(T, B) { T = new I(T, 16); if (!T.red) T = T.toRed(this.red); var N = T.redSqr(); var L = N.redSub(this.c2); var J = N.redMul(this.d).redMul(this.c2).redSub(this.a); var H = L.redMul(J.redInvm()); if (H.cmp(this.zero) === 0) { if (B) throw new Error("invalid point"); else return this.point(this.zero, T) } var U = H.redSqrt(); if (U.redSqr().redSub(H).cmp(this.zero) !== 0) throw new Error("invalid point"); if (U.fromRed().isOdd() !== B) U = U.redNeg(); return this.point(U, T) }; EdwardsCurve.prototype.validate = function validate(T) { if (T.isInfinity()) return true; T.normalize(); var B = T.x.redSqr(); var N = T.y.redSqr(); var L = B.redMul(this.a).redAdd(N); var I = this.c2.redMul(this.one.redAdd(this.d.redMul(B).redMul(N))); return L.cmp(I) === 0 }; function Point(T, B, N, L, J) { H.BasePoint.call(this, T, "projective"); if (B === null && N === null && L === null) { this.x = this.curve.zero; this.y = this.curve.one; this.z = this.curve.one; this.t = this.curve.zero; this.zOne = true } else { this.x = new I(B, 16); this.y = new I(N, 16); this.z = L ? new I(L, 16) : this.curve.one; this.t = J && new I(J, 16); if (!this.x.red) this.x = this.x.toRed(this.curve.red); if (!this.y.red) this.y = this.y.toRed(this.curve.red); if (!this.z.red) this.z = this.z.toRed(this.curve.red); if (this.t && !this.t.red) this.t = this.t.toRed(this.curve.red); this.zOne = this.z === this.curve.one; if (this.curve.extended && !this.t) { this.t = this.x.redMul(this.y); if (!this.zOne) this.t = this.t.redMul(this.z.redInvm()) } } } J(Point, H.BasePoint); EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(T) { return Point.fromJSON(this, T) }; EdwardsCurve.prototype.point = function point(T, B, N, L) { return new Point(this, T, B, N, L) }; Point.fromJSON = function fromJSON(T, B) { return new Point(T, B[0], B[1], B[2]) }; Point.prototype.inspect = function inspect() { if (this.isInfinity()) return "<EC Point Infinity>"; return "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">" }; Point.prototype.isInfinity = function isInfinity() { return this.x.cmpn(0) === 0 && (this.y.cmp(this.z) === 0 || this.zOne && this.y.cmp(this.curve.c) === 0) }; Point.prototype._extDbl = function _extDbl() { var T = this.x.redSqr(); var B = this.y.redSqr(); var N = this.z.redSqr(); N = N.redIAdd(N); var L = this.curve._mulA(T); var I = this.x.redAdd(this.y).redSqr().redISub(T).redISub(B); var J = L.redAdd(B); var H = J.redSub(N); var U = L.redSub(B); var X = I.redMul(H); var G = J.redMul(U); var V = I.redMul(U); var Z = H.redMul(J); return this.curve.point(X, G, Z, V) }; Point.prototype._projDbl = function _projDbl() { var T = this.x.redAdd(this.y).redSqr(); var B = this.x.redSqr(); var N = this.y.redSqr(); var L; var I; var J; var H; var U; var X; if (this.curve.twisted) { H = this.curve._mulA(B); var G = H.redAdd(N); if (this.zOne) { L = T.redSub(B).redSub(N).redMul(G.redSub(this.curve.two)); I = G.redMul(H.redSub(N)); J = G.redSqr().redSub(G).redSub(G) } else { U = this.z.redSqr(); X = G.redSub(U).redISub(U); L = T.redSub(B).redISub(N).redMul(X); I = G.redMul(H.redSub(N)); J = G.redMul(X) } } else { H = B.redAdd(N); U = this.curve._mulC(this.z).redSqr(); X = H.redSub(U).redSub(U); L = this.curve._mulC(T.redISub(H)).redMul(X); I = this.curve._mulC(H).redMul(B.redISub(N)); J = H.redMul(X) } return this.curve.point(L, I, J) }; Point.prototype.dbl = function dbl() { if (this.isInfinity()) return this; if (this.curve.extended) return this._extDbl(); else return this._projDbl() }; Point.prototype._extAdd = function _extAdd(T) { var B = this.y.redSub(this.x).redMul(T.y.redSub(T.x)); var N = this.y.redAdd(this.x).redMul(T.y.redAdd(T.x)); var L = this.t.redMul(this.curve.dd).redMul(T.t); var I = this.z.redMul(T.z.redAdd(T.z)); var J = N.redSub(B); var H = I.redSub(L); var U = I.redAdd(L); var X = N.redAdd(B); var G = J.redMul(H); var V = U.redMul(X); var Z = J.redMul(X); var W = H.redMul(U); return this.curve.point(G, V, W, Z) }; Point.prototype._projAdd = function _projAdd(T) { var B = this.z.redMul(T.z); var N = B.redSqr(); var L = this.x.redMul(T.x); var I = this.y.redMul(T.y); var J = this.curve.d.redMul(L).redMul(I); var H = N.redSub(J); var U = N.redAdd(J); var X = this.x.redAdd(this.y).redMul(T.x.redAdd(T.y)).redISub(L).redISub(I); var G = B.redMul(H).redMul(X); var V; var Z; if (this.curve.twisted) { V = B.redMul(U).redMul(I.redSub(this.curve._mulA(L))); Z = H.redMul(U) } else { V = B.redMul(U).redMul(I.redSub(L)); Z = this.curve._mulC(H).redMul(U) } return this.curve.point(G, V, Z) }; Point.prototype.add = function add(T) { if (this.isInfinity()) return T; if (T.isInfinity()) return this; if (this.curve.extended) return this._extAdd(T); else return this._projAdd(T) }; Point.prototype.mul = function mul(T) { if (this._hasDoubles(T)) return this.curve._fixedNafMul(this, T); else return this.curve._wnafMul(this, T) }; Point.prototype.mulAdd = function mulAdd(T, B, N) { return this.curve._wnafMulAdd(1, [this, B], [T, N], 2, false) }; Point.prototype.jmulAdd = function jmulAdd(T, B, N) { return this.curve._wnafMulAdd(1, [this, B], [T, N], 2, true) }; Point.prototype.normalize = function normalize() { if (this.zOne) return this; var T = this.z.redInvm(); this.x = this.x.redMul(T); this.y = this.y.redMul(T); if (this.t) this.t = this.t.redMul(T); this.z = this.curve.one; this.zOne = true; return this }; Point.prototype.neg = function neg() { return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg()) }; Point.prototype.getX = function getX() { this.normalize(); return this.x.fromRed() }; Point.prototype.getY = function getY() { this.normalize(); return this.y.fromRed() }; Point.prototype.eq = function eq(T) { return this === T || this.getX().cmp(T.getX()) === 0 && this.getY().cmp(T.getY()) === 0 }; Point.prototype.eqXToP = function eqXToP(T) { var B = T.toRed(this.curve.red).redMul(this.z); if (this.x.cmp(B) === 0) return true; var N = T.clone(); var L = this.curve.redN.redMul(this.z); for (; ;) { N.iadd(this.curve.n); if (N.cmp(this.curve.p) >= 0) return false; B.redIAdd(L); if (this.x.cmp(B) === 0) return true } }; Point.prototype.toP = Point.prototype.normalize; Point.prototype.mixedAdd = Point.prototype.add }, 7773: (T, B, N) => { "use strict"; var L = B; L.base = N(8088); L.short = N(3639); L.mont = N(1047); L.edwards = N(9981) }, 1047: (T, B, N) => { "use strict"; var L = N(7967); var I = N(9598); var J = N(8088); var H = N(5028); function MontCurve(T) { J.call(this, "mont", T); this.a = new L(T.a, 16).toRed(this.red); this.b = new L(T.b, 16).toRed(this.red); this.i4 = new L(4).toRed(this.red).redInvm(); this.two = new L(2).toRed(this.red); this.a24 = this.i4.redMul(this.a.redAdd(this.two)) } I(MontCurve, J); T.exports = MontCurve; MontCurve.prototype.validate = function validate(T) { var B = T.normalize().x; var N = B.redSqr(); var L = N.redMul(B).redAdd(N.redMul(this.a)).redAdd(B); var I = L.redSqrt(); return I.redSqr().cmp(L) === 0 }; function Point(T, B, N) { J.BasePoint.call(this, T, "projective"); if (B === null && N === null) { this.x = this.curve.one; this.z = this.curve.zero } else { this.x = new L(B, 16); this.z = new L(N, 16); if (!this.x.red) this.x = this.x.toRed(this.curve.red); if (!this.z.red) this.z = this.z.toRed(this.curve.red) } } I(Point, J.BasePoint); MontCurve.prototype.decodePoint = function decodePoint(T, B) { return this.point(H.toArray(T, B), 1) }; MontCurve.prototype.point = function point(T, B) { return new Point(this, T, B) }; MontCurve.prototype.pointFromJSON = function pointFromJSON(T) { return Point.fromJSON(this, T) }; Point.prototype.precompute = function precompute() { }; Point.prototype._encode = function _encode() { return this.getX().toArray("be", this.curve.p.byteLength()) }; Point.fromJSON = function fromJSON(T, B) { return new Point(T, B[0], B[1] || T.one) }; Point.prototype.inspect = function inspect() { if (this.isInfinity()) return "<EC Point Infinity>"; return "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">" }; Point.prototype.isInfinity = function isInfinity() { return this.z.cmpn(0) === 0 }; Point.prototype.dbl = function dbl() { var T = this.x.redAdd(this.z); var B = T.redSqr(); var N = this.x.redSub(this.z); var L = N.redSqr(); var I = B.redSub(L); var J = B.redMul(L); var H = I.redMul(L.redAdd(this.curve.a24.redMul(I))); return this.curve.point(J, H) }; Point.prototype.add = function add() { throw new Error("Not supported on Montgomery curve") }; Point.prototype.diffAdd = function diffAdd(T, B) { var N = this.x.redAdd(this.z); var L = this.x.redSub(this.z); var I = T.x.redAdd(T.z); var J = T.x.redSub(T.z); var H = J.redMul(N); var U = I.redMul(L); var X = B.z.redMul(H.redAdd(U).redSqr()); var G = B.x.redMul(H.redISub(U).redSqr()); return this.curve.point(X, G) }; Point.prototype.mul = function mul(T) { var B = T.clone(); var N = this; var L = this.curve.point(null, null); var I = this; for (var J = []; B.cmpn(0) !== 0; B.iushrn(1))J.push(B.andln(1)); for (var H = J.length - 1; H >= 0; H--) { if (J[H] === 0) { N = N.diffAdd(L, I); L = L.dbl() } else { L = N.diffAdd(L, I); N = N.dbl() } } return L }; Point.prototype.mulAdd = function mulAdd() { throw new Error("Not supported on Montgomery curve") }; Point.prototype.jumlAdd = function jumlAdd() { throw new Error("Not supported on Montgomery curve") }; Point.prototype.eq = function eq(T) { return this.getX().cmp(T.getX()) === 0 }; Point.prototype.normalize = function normalize() { this.x = this.x.redMul(this.z.redInvm()); this.z = this.curve.one; return this }; Point.prototype.getX = function getX() { this.normalize(); return this.x.fromRed() } }, 3639: (T, B, N) => { "use strict"; var L = N(5028); var I = N(7967); var J = N(9598); var H = N(8088); var U = L.assert; function ShortCurve(T) { H.call(this, "short", T); this.a = new I(T.a, 16).toRed(this.red); this.b = new I(T.b, 16).toRed(this.red); this.tinv = this.two.redInvm(); this.zeroA = this.a.fromRed().cmpn(0) === 0; this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0; this.endo = this._getEndomorphism(T); this._endoWnafT1 = new Array(4); this._endoWnafT2 = new Array(4) } J(ShortCurve, H); T.exports = ShortCurve; ShortCurve.prototype._getEndomorphism = function _getEndomorphism(T) { if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return; var B; var N; if (T.beta) { B = new I(T.beta, 16).toRed(this.red) } else { var L = this._getEndoRoots(this.p); B = L[0].cmp(L[1]) < 0 ? L[0] : L[1]; B = B.toRed(this.red) } if (T.lambda) { N = new I(T.lambda, 16) } else { var J = this._getEndoRoots(this.n); if (this.g.mul(J[0]).x.cmp(this.g.x.redMul(B)) === 0) { N = J[0] } else { N = J[1]; U(this.g.mul(N).x.cmp(this.g.x.redMul(B)) === 0) } } var H; if (T.basis) { H = T.basis.map((function (T) { return { a: new I(T.a, 16), b: new I(T.b, 16) } })) } else { H = this._getEndoBasis(N) } return { beta: B, lambda: N, basis: H } }; ShortCurve.prototype._getEndoRoots = function _getEndoRoots(T) { var B = T === this.p ? this.red : I.mont(T); var N = new I(2).toRed(B).redInvm(); var L = N.redNeg(); var J = new I(3).toRed(B).redNeg().redSqrt().redMul(N); var H = L.redAdd(J).fromRed(); var U = L.redSub(J).fromRed(); return [H, U] }; ShortCurve.prototype._getEndoBasis = function _getEndoBasis(T) { var B = this.n.ushrn(Math.floor(this.n.bitLength() / 2)); var N = T; var L = this.n.clone(); var J = new I(1); var H = new I(0); var U = new I(0); var X = new I(1); var G; var V; var Z; var W; var q; var Q; var Y; var ff = 0; var ef; var tf; while (N.cmpn(0) !== 0) { var rf = L.div(N); ef = L.sub(rf.mul(N)); tf = U.sub(rf.mul(J)); var af = X.sub(rf.mul(H)); if (!Z && ef.cmp(B) < 0) { G = Y.neg(); V = J; Z = ef.neg(); W = tf } else if (Z && ++ff === 2) { break } Y = ef; L = N; N = ef; U = J; J = tf; X = H; H = af } q = ef.neg(); Q = tf; var nf = Z.sqr().add(W.sqr()); var of = q.sqr().add(Q.sqr()); if (of.cmp(nf) >= 0) { q = G; Q = V } if (Z.negative) { Z = Z.neg(); W = W.neg() } if (q.negative) { q = q.neg(); Q = Q.neg() } return [{ a: Z, b: W }, { a: q, b: Q }] }; ShortCurve.prototype._endoSplit = function _endoSplit(T) { var B = this.endo.basis; var N = B[0]; var L = B[1]; var I = L.b.mul(T).divRound(this.n); var J = N.b.neg().mul(T).divRound(this.n); var H = I.mul(N.a); var U = J.mul(L.a); var X = I.mul(N.b); var G = J.mul(L.b); var V = T.sub(H).sub(U); var Z = X.add(G).neg(); return { k1: V, k2: Z } }; ShortCurve.prototype.pointFromX = function pointFromX(T, B) { T = new I(T, 16); if (!T.red) T = T.toRed(this.red); var N = T.redSqr().redMul(T).redIAdd(T.redMul(this.a)).redIAdd(this.b); var L = N.redSqrt(); if (L.redSqr().redSub(N).cmp(this.zero) !== 0) throw new Error("invalid point"); var J = L.fromRed().isOdd(); if (B && !J || !B && J) L = L.redNeg(); return this.point(T, L) }; ShortCurve.prototype.validate = function validate(T) { if (T.inf) return true; var B = T.x; var N = T.y; var L = this.a.redMul(B); var I = B.redSqr().redMul(B).redIAdd(L).redIAdd(this.b); return N.redSqr().redISub(I).cmpn(0) === 0 }; ShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(T, B, N) { var L = this._endoWnafT1; var I = this._endoWnafT2; for (var J = 0; J < T.length; J++) { var H = this._endoSplit(B[J]); var U = T[J]; var X = U._getBeta(); if (H.k1.negative) { H.k1.ineg(); U = U.neg(true) } if (H.k2.negative) { H.k2.ineg(); X = X.neg(true) } L[J * 2] = U; L[J * 2 + 1] = X; I[J * 2] = H.k1; I[J * 2 + 1] = H.k2 } var G = this._wnafMulAdd(1, L, I, J * 2, N); for (var V = 0; V < J * 2; V++) { L[V] = null; I[V] = null } return G }; function Point(T, B, N, L) { H.BasePoint.call(this, T, "affine"); if (B === null && N === null) { this.x = null; this.y = null; this.inf = true } else { this.x = new I(B, 16); this.y = new I(N, 16); if (L) { this.x.forceRed(this.curve.red); this.y.forceRed(this.curve.red) } if (!this.x.red) this.x = this.x.toRed(this.curve.red); if (!this.y.red) this.y = this.y.toRed(this.curve.red); this.inf = false } } J(Point, H.BasePoint); ShortCurve.prototype.point = function point(T, B, N) { return new Point(this, T, B, N) }; ShortCurve.prototype.pointFromJSON = function pointFromJSON(T, B) { return Point.fromJSON(this, T, B) }; Point.prototype._getBeta = function _getBeta() { if (!this.curve.endo) return; var T = this.precomputed; if (T && T.beta) return T.beta; var B = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y); if (T) { var N = this.curve; var endoMul = function (T) { return N.point(T.x.redMul(N.endo.beta), T.y) }; T.beta = B; B.precomputed = { beta: null, naf: T.naf && { wnd: T.naf.wnd, points: T.naf.points.map(endoMul) }, doubles: T.doubles && { step: T.doubles.step, points: T.doubles.points.map(endoMul) } } } return B }; Point.prototype.toJSON = function toJSON() { if (!this.precomputed) return [this.x, this.y]; return [this.x, this.y, this.precomputed && { doubles: this.precomputed.doubles && { step: this.precomputed.doubles.step, points: this.precomputed.doubles.points.slice(1) }, naf: this.precomputed.naf && { wnd: this.precomputed.naf.wnd, points: this.precomputed.naf.points.slice(1) } }] }; Point.fromJSON = function fromJSON(T, B, N) { if (typeof B === "string") B = JSON.parse(B); var L = T.point(B[0], B[1], N); if (!B[2]) return L; function obj2point(B) { return T.point(B[0], B[1], N) } var I = B[2]; L.precomputed = { beta: null, doubles: I.doubles && { step: I.doubles.step, points: [L].concat(I.doubles.points.map(obj2point)) }, naf: I.naf && { wnd: I.naf.wnd, points: [L].concat(I.naf.points.map(obj2point)) } }; return L }; Point.prototype.inspect = function inspect() { if (this.isInfinity()) return "<EC Point Infinity>"; return "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">" }; Point.prototype.isInfinity = function isInfinity() { return this.inf }; Point.prototype.add = function add(T) { if (this.inf) return T; if (T.inf) return this; if (this.eq(T)) return this.dbl(); if (this.neg().eq(T)) return this.curve.point(null, null); if (this.x.cmp(T.x) === 0) return this.curve.point(null, null); var B = this.y.redSub(T.y); if (B.cmpn(0) !== 0) B = B.redMul(this.x.redSub(T.x).redInvm()); var N = B.redSqr().redISub(this.x).redISub(T.x); var L = B.redMul(this.x.redSub(N)).redISub(this.y); return this.curve.point(N, L) }; Point.prototype.dbl = function dbl() { if (this.inf) return this; var T = this.y.redAdd(this.y); if (T.cmpn(0) === 0) return this.curve.point(null, null); var B = this.curve.a; var N = this.x.redSqr(); var L = T.redInvm(); var I = N.redAdd(N).redIAdd(N).redIAdd(B).redMul(L); var J = I.redSqr().redISub(this.x.redAdd(this.x)); var H = I.redMul(this.x.redSub(J)).redISub(this.y); return this.curve.point(J, H) }; Point.prototype.getX = function getX() { return this.x.fromRed() }; Point.prototype.getY = function getY() { return this.y.fromRed() }; Point.prototype.mul = function mul(T) { T = new I(T, 16); if (this.isInfinity()) return this; else if (this._hasDoubles(T)) return this.curve._fixedNafMul(this, T); else if (this.curve.endo) return this.curve._endoWnafMulAdd([this], [T]); else return this.curve._wnafMul(this, T) }; Point.prototype.mulAdd = function mulAdd(T, B, N) { var L = [this, B]; var I = [T, N]; if (this.curve.endo) return this.curve._endoWnafMulAdd(L, I); else return this.curve._wnafMulAdd(1, L, I, 2) }; Point.prototype.jmulAdd = function jmulAdd(T, B, N) { var L = [this, B]; var I = [T, N]; if (this.curve.endo) return this.curve._endoWnafMulAdd(L, I, true); else return this.curve._wnafMulAdd(1, L, I, 2, true) }; Point.prototype.eq = function eq(T) { return this === T || this.inf === T.inf && (this.inf || this.x.cmp(T.x) === 0 && this.y.cmp(T.y) === 0) }; Point.prototype.neg = function neg(T) { if (this.inf) return this; var B = this.curve.point(this.x, this.y.redNeg()); if (T && this.precomputed) { var N = this.precomputed; var negate = function (T) { return T.neg() }; B.precomputed = { naf: N.naf && { wnd: N.naf.wnd, points: N.naf.points.map(negate) }, doubles: N.doubles && { step: N.doubles.step, points: N.doubles.points.map(negate) } } } return B }; Point.prototype.toJ = function toJ() { if (this.inf) return this.curve.jpoint(null, null, null); var T = this.curve.jpoint(this.x, this.y, this.curve.one); return T }; function JPoint(T, B, N, L) { H.BasePoint.call(this, T, "jacobian"); if (B === null && N === null && L === null) { this.x = this.curve.one; this.y = this.curve.one; this.z = new I(0) } else { this.x = new I(B, 16); this.y = new I(N, 16); this.z = new I(L, 16) } if (!this.x.red) this.x = this.x.toRed(this.curve.red); if (!this.y.red) this.y = this.y.toRed(this.curve.red); if (!this.z.red) this.z = this.z.toRed(this.curve.red); this.zOne = this.z === this.curve.one } J(JPoint, H.BasePoint); ShortCurve.prototype.jpoint = function jpoint(T, B, N) { return new JPoint(this, T, B, N) }; JPoint.prototype.toP = function toP() { if (this.isInfinity()) return this.curve.point(null, null); var T = this.z.redInvm(); var B = T.redSqr(); var N = this.x.redMul(B); var L = this.y.redMul(B).redMul(T); return this.curve.point(N, L) }; JPoint.prototype.neg = function neg() { return this.curve.jpoint(this.x, this.y.redNeg(), this.z) }; JPoint.prototype.add = function add(T) { if (this.isInfinity()) return T; if (T.isInfinity()) return this; var B = T.z.redSqr(); var N = this.z.redSqr(); var L = this.x.redMul(B); var I = T.x.redMul(N); var J = this.y.redMul(B.redMul(T.z)); var H = T.y.redMul(N.redMul(this.z)); var U = L.redSub(I); var X = J.redSub(H); if (U.cmpn(0) === 0) { if (X.cmpn(0) !== 0) return this.curve.jpoint(null, null, null); else return this.dbl() } var G = U.redSqr(); var V = G.redMul(U); var Z = L.redMul(G); var W = X.redSqr().redIAdd(V).redISub(Z).redISub(Z); var q = X.redMul(Z.redISub(W)).redISub(J.redMul(V)); var Q = this.z.redMul(T.z).redMul(U); return this.curve.jpoint(W, q, Q) }; JPoint.prototype.mixedAdd = function mixedAdd(T) { if (this.isInfinity()) return T.toJ(); if (T.isInfinity()) return this; var B = this.z.redSqr(); var N = this.x; var L = T.x.redMul(B); var I = this.y; var J = T.y.redMul(B).redMul(this.z); var H = N.redSub(L); var U = I.redSub(J); if (H.cmpn(0) === 0) { if (U.cmpn(0) !== 0) return this.curve.jpoint(null, null, null); else return this.dbl() } var X = H.redSqr(); var G = X.redMul(H); var V = N.redMul(X); var Z = U.redSqr().redIAdd(G).redISub(V).redISub(V); var W = U.redMul(V.redISub(Z)).redISub(I.redMul(G)); var q = this.z.redMul(H); return this.curve.jpoint(Z, W, q) }; JPoint.prototype.dblp = function dblp(T) { if (T === 0) return this; if (this.isInfinity()) return this; if (!T) return this.dbl(); var B; if (this.curve.zeroA || this.curve.threeA) { var N = this; for (B = 0; B < T; B++)N = N.dbl(); return N } var L = this.curve.a; var I = this.curve.tinv; var J = this.x; var H = this.y; var U = this.z; var X = U.redSqr().redSqr(); var G = H.redAdd(H); for (B = 0; B < T; B++) { var V = J.redSqr(); var Z = G.redSqr(); var W = Z.redSqr(); var q = V.redAdd(V).redIAdd(V).redIAdd(L.redMul(X)); var Q = J.redMul(Z); var Y = q.redSqr().redISub(Q.redAdd(Q)); var ff = Q.redISub(Y); var ef = q.redMul(ff); ef = ef.redIAdd(ef).redISub(W); var tf = G.redMul(U); if (B + 1 < T) X = X.redMul(W); J = Y; U = tf; G = ef } return this.curve.jpoint(J, G.redMul(I), U) }; JPoint.prototype.dbl = function dbl() { if (this.isInfinity()) return this; if (this.curve.zeroA) return this._zeroDbl(); else if (this.curve.threeA) return this._threeDbl(); else return this._dbl() }; JPoint.prototype._zeroDbl = function _zeroDbl() { var T; var B; var N; if (this.zOne) { var L = this.x.redSqr(); var I = this.y.redSqr(); var J = I.redSqr(); var H = this.x.redAdd(I).redSqr().redISub(L).redISub(J); H = H.redIAdd(H); var U = L.redAdd(L).redIAdd(L); var X = U.redSqr().redISub(H).redISub(H); var G = J.redIAdd(J); G = G.redIAdd(G); G = G.redIAdd(G); T = X; B = U.redMul(H.redISub(X)).redISub(G); N = this.y.redAdd(this.y) } else { var V = this.x.redSqr(); var Z = this.y.redSqr(); var W = Z.redSqr(); var q = this.x.redAdd(Z).redSqr().redISub(V).redISub(W); q = q.redIAdd(q); var Q = V.redAdd(V).redIAdd(V); var Y = Q.redSqr(); var ff = W.redIAdd(W); ff = ff.redIAdd(ff); ff = ff.redIAdd(ff); T = Y.redISub(q).redISub(q); B = Q.redMul(q.redISub(T)).redISub(ff); N = this.y.redMul(this.z); N = N.redIAdd(N) } return this.curve.jpoint(T, B, N) }; JPoint.prototype._threeDbl = function _threeDbl() { var T; var B; var N; if (this.zOne) { var L = this.x.redSqr(); var I = this.y.redSqr(); var J = I.redSqr(); var H = this.x.redAdd(I).redSqr().redISub(L).redISub(J); H = H.redIAdd(H); var U = L.redAdd(L).redIAdd(L).redIAdd(this.curve.a); var X = U.redSqr().redISub(H).redISub(H); T = X; var G = J.redIAdd(J); G = G.redIAdd(G); G = G.redIAdd(G); B = U.redMul(H.redISub(X)).redISub(G); N = this.y.redAdd(this.y) } else { var V = this.z.redSqr(); var Z = this.y.redSqr(); var W = this.x.redMul(Z); var q = this.x.redSub(V).redMul(this.x.redAdd(V)); q = q.redAdd(q).redIAdd(q); var Q = W.redIAdd(W); Q = Q.redIAdd(Q); var Y = Q.redAdd(Q); T = q.redSqr().redISub(Y); N = this.y.redAdd(this.z).redSqr().redISub(Z).redISub(V); var ff = Z.redSqr(); ff = ff.redIAdd(ff); ff = ff.redIAdd(ff); ff = ff.redIAdd(ff); B = q.redMul(Q.redISub(T)).redISub(ff) } return this.curve.jpoint(T, B, N) }; JPoint.prototype._dbl = function _dbl() { var T = this.curve.a; var B = this.x; var N = this.y; var L = this.z; var I = L.redSqr().redSqr(); var J = B.redSqr(); var H = N.redSqr(); var U = J.redAdd(J).redIAdd(J).redIAdd(T.redMul(I)); var X = B.redAdd(B); X = X.redIAdd(X); var G = X.redMul(H); var V = U.redSqr().redISub(G.redAdd(G)); var Z = G.redISub(V); var W = H.redSqr(); W = W.redIAdd(W); W = W.redIAdd(W); W = W.redIAdd(W); var q = U.redMul(Z).redISub(W); var Q = N.redAdd(N).redMul(L); return this.curve.jpoint(V, q, Q) }; JPoint.prototype.trpl = function trpl() { if (!this.curve.zeroA) return this.dbl().add(this); var T = this.x.redSqr(); var B = this.y.redSqr(); var N = this.z.redSqr(); var L = B.redSqr(); var I = T.redAdd(T).redIAdd(T); var J = I.redSqr(); var H = this.x.redAdd(B).redSqr().redISub(T).redISub(L); H = H.redIAdd(H); H = H.redAdd(H).redIAdd(H); H = H.redISub(J); var U = H.redSqr(); var X = L.redIAdd(L); X = X.redIAdd(X); X = X.redIAdd(X); X = X.redIAdd(X); var G = I.redIAdd(H).redSqr().redISub(J).redISub(U).redISub(X); var V = B.redMul(G); V = V.redIAdd(V); V = V.redIAdd(V); var Z = this.x.redMul(U).redISub(V); Z = Z.redIAdd(Z); Z = Z.redIAdd(Z); var W = this.y.redMul(G.redMul(X.redISub(G)).redISub(H.redMul(U))); W = W.redIAdd(W); W = W.redIAdd(W); W = W.redIAdd(W); var q = this.z.redAdd(H).redSqr().redISub(N).redISub(U); return this.curve.jpoint(Z, W, q) }; JPoint.prototype.mul = function mul(T, B) { T = new I(T, B); return this.curve._wnafMul(this, T) }; JPoint.prototype.eq = function eq(T) { if (T.type === "affine") return this.eq(T.toJ()); if (this === T) return true; var B = this.z.redSqr(); var N = T.z.redSqr(); if (this.x.redMul(N).redISub(T.x.redMul(B)).cmpn(0) !== 0) return false; var L = B.redMul(this.z); var I = N.redMul(T.z); return this.y.redMul(I).redISub(T.y.redMul(L)).cmpn(0) === 0 }; JPoint.prototype.eqXToP = function eqXToP(T) { var B = this.z.redSqr(); var N = T.toRed(this.curve.red).redMul(B); if (this.x.cmp(N) === 0) return true; var L = T.clone(); var I = this.curve.redN.redMul(B); for (; ;) { L.iadd(this.curve.n); if (L.cmp(this.curve.p) >= 0) return false; N.redIAdd(I); if (this.x.cmp(N) === 0) return true } }; JPoint.prototype.inspect = function inspect() { if (this.isInfinity()) return "<EC JPoint Infinity>"; return "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">" }; JPoint.prototype.isInfinity = function isInfinity() { return this.z.cmpn(0) === 0 } }, 997: (T, B, N) => { "use strict"; var L = B; var I = N(7477); var J = N(7773); var H = N(5028); var U = H.assert; function PresetCurve(T) { if (T.type === "short") this.curve = new J.short(T); else if (T.type === "edwards") this.curve = new J.edwards(T); else this.curve = new J.mont(T); this.g = this.curve.g; this.n = this.curve.n; this.hash = T.hash; U(this.g.validate(), "Invalid curve"); U(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O") } L.PresetCurve = PresetCurve; function defineCurve(T, B) { Object.defineProperty(L, T, { configurable: true, enumerable: true, get: function () { var N = new PresetCurve(B); Object.defineProperty(L, T, { configurable: true, enumerable: true, value: N }); return N } }) } defineCurve("p192", { type: "short", prime: "p192", p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff", a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc", b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1", n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831", hash: I.sha256, gRed: false, g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"] }); defineCurve("p224", { type: "short", prime: "p224", p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001", a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe", b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4", n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d", hash: I.sha256, gRed: false, g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"] }); defineCurve("p256", { type: "short", prime: null, p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff", a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc", b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b", n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551", hash: I.sha256, gRed: false, g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"] }); defineCurve("p384", { type: "short", prime: null, p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff " + "fffffffe ffffffff 00000000 00000000 ffffffff", a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff " + "fffffffe ffffffff 00000000 00000000 fffffffc", b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f " + "5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef", n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 " + "f4372ddf 581a0db2 48b0a77a ecec196a ccc52973", hash: I.sha384, gRed: false, g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 " + "5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 " + "0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"] }); defineCurve("p521", { type: "short", prime: null, p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff " + "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff " + "ffffffff ffffffff ffffffff ffffffff ffffffff", a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff " + "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff " + "ffffffff ffffffff ffffffff ffffffff fffffffc", b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b " + "99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd " + "3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00", n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff " + "ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 " + "f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409", hash: I.sha512, gRed: false, g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 " + "053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 " + "a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 " + "579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 " + "3fad0761 353c7086 a272c240 88be9476 9fd16650"] }); defineCurve("curve25519", { type: "mont", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "76d06", b: "1", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: I.sha256, gRed: false, g: ["9"] }); defineCurve("ed25519", { type: "edwards", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "-1", c: "1", d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: I.sha256, gRed: false, g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"] }); var X; try { X = N(2252) } catch (T) { X = undefined } defineCurve("secp256k1", { type: "short", prime: "k256", p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f", a: "0", b: "7", n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141", h: "1", hash: I.sha256, beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee", lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72", basis: [{ a: "3086d221a7d46bcde86c90e49284eb15", b: "-e4437ed6010e88286f547fa90abfe4c3" }, { a: "114ca50f7a8e2f3f657c1108d9d44cfd8", b: "3086d221a7d46bcde86c90e49284eb15" }], gRed: false, g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", X] }) }, 5070: (T, B, N) => { "use strict"; var L = N(7967); var I = N(3768); var J = N(5028); var H = N(997); var U = N(9586); var X = J.assert; var G = N(3993); var V = N(4816); function EC(T) { if (!(this instanceof EC)) return new EC(T); if (typeof T === "string") { X(Object.prototype.hasOwnProperty.call(H, T), "Unknown curve " + T); T = H[T] } if (T instanceof H.PresetCurve) T = { curve: T }; this.curve = T.curve.curve; this.n = this.curve.n; this.nh = this.n.ushrn(1); this.g = this.curve.g; this.g = T.curve.g; this.g.precompute(T.curve.n.bitLength() + 1); this.hash = T.hash || T.curve.hash } T.exports = EC; EC.prototype.keyPair = function keyPair(T) { return new G(this, T) }; EC.prototype.keyFromPrivate = function keyFromPrivate(T, B) { return G.fromPrivate(this, T, B) }; EC.prototype.keyFromPublic = function keyFromPublic(T, B) { return G.fromPublic(this, T, B) }; EC.prototype.genKeyPair = function genKeyPair(T) { if (!T) T = {}; var B = new I({ hash: this.hash, pers: T.pers, persEnc: T.persEnc || "utf8", entropy: T.entropy || U(this.hash.hmacStrength), entropyEnc: T.entropy && T.entropyEnc || "utf8", nonce: this.n.toArray() }); var N = this.n.byteLength(); var J = this.n.sub(new L(2)); for (; ;) { var H = new L(B.generate(N)); if (H.cmp(J) > 0) continue; H.iaddn(1); return this.keyFromPrivate(H) } }; EC.prototype._truncateToN = function _truncateToN(T, B, N) { var I; if (L.isBN(T) || typeof T === "number") { T = new L(T, 16); I = T.byteLength() } else if (typeof T === "object") { I = T.length; T = new L(T, 16) } else { var J = T.toString(); I = J.length + 1 >>> 1; T = new L(J, 16) } if (typeof N !== "number") { N = I * 8 } var H = N - this.n.bitLength(); if (H > 0) T = T.ushrn(H); if (!B && T.cmp(this.n) >= 0) return T.sub(this.n); else return T }; EC.prototype.sign = function sign(T, B, N, J) { if (typeof N === "object") { J = N; N = null } if (!J) J = {}; if (typeof T !== "string" && typeof T !== "number" && !L.isBN(T)) { X(typeof T === "object" && T && typeof T.length === "number", "Expected message to be an array-like, a hex string, or a BN instance"); X(T.length >>> 0 === T.length); for (var H = 0; H < T.length; H++)X((T[H] & 255) === T[H]) } B = this.keyFromPrivate(B, N); T = this._truncateToN(T, false, J.msgBitLength); X(!T.isNeg(), "Can not sign a negative message"); var U = this.n.byteLength(); var G = B.getPrivate().toArray("be", U); var Z = T.toArray("be", U); X(new L(Z).eq(T), "Can not sign message"); var W = new I({ hash: this.hash, entropy: G, nonce: Z, pers: J.pers, persEnc: J.persEnc || "utf8" }); var q = this.n.sub(new L(1)); for (var Q = 0; ; Q++) { var Y = J.k ? J.k(Q) : new L(W.generate(this.n.byteLength())); Y = this._truncateToN(Y, true); if (Y.cmpn(1) <= 0 || Y.cmp(q) >= 0) continue; var ff = this.g.mul(Y); if (ff.isInfinity()) continue; var ef = ff.getX(); var tf = ef.umod(this.n); if (tf.cmpn(0) === 0) continue; var rf = Y.invm(this.n).mul(tf.mul(B.getPrivate()).iadd(T)); rf = rf.umod(this.n); if (rf.cmpn(0) === 0) continue; var af = (ff.getY().isOdd() ? 1 : 0) | (ef.cmp(tf) !== 0 ? 2 : 0); if (J.canonical && rf.cmp(this.nh) > 0) { rf = this.n.sub(rf); af ^= 1 } return new V({ r: tf, s: rf, recoveryParam: af }) } }; EC.prototype.verify = function verify(T, B, N, L, I) { if (!I) I = {}; T = this._truncateToN(T, false, I.msgBitLength); N = this.keyFromPublic(N, L); B = new V(B, "hex"); var J = B.r; var H = B.s; if (J.cmpn(1) < 0 || J.cmp(this.n) >= 0) return false; if (H.cmpn(1) < 0 || H.cmp(this.n) >= 0) return false; var U = H.invm(this.n); var X = U.mul(T).umod(this.n); var G = U.mul(J).umod(this.n); var Z; if (!this.curve._maxwellTrick) { Z = this.g.mulAdd(X, N.getPublic(), G); if (Z.isInfinity()) return false; return Z.getX().umod(this.n).cmp(J) === 0 } Z = this.g.jmulAdd(X, N.getPublic(), G); if (Z.isInfinity()) return false; return Z.eqXToP(J) }; EC.prototype.recoverPubKey = function (T, B, N, I) { X((3 & N) === N, "The recovery param is more than two bits"); B = new V(B, I); var J = this.n; var H = new L(T); var U = B.r; var G = B.s; var Z = N & 1; var W = N >> 1; if (U.cmp(this.curve.p.umod(this.curve.n)) >= 0 && W) throw new Error("Unable to find sencond key candinate"); if (W) U = this.curve.pointFromX(U.add(this.curve.n), Z); else U = this.curve.pointFromX(U, Z); var q = B.r.invm(J); var Q = J.sub(H).mul(q).umod(J); var Y = G.mul(q).umod(J); return this.g.mulAdd(Q, U, Y) }; EC.prototype.getKeyRecoveryParam = function (T, B, N, L) { B = new V(B, L); if (B.recoveryParam !== null) return B.recoveryParam; for (var I = 0; I < 4; I++) { var J; try { J = this.recoverPubKey(T, B, I) } catch (T) { continue } if (J.eq(N)) return I } throw new Error("Unable to find valid recovery factor") } }, 3993: (T, B, N) => { "use strict"; var L = N(7967); var I = N(5028); var J = I.assert; function KeyPair(T, B) { this.ec = T; this.priv = null; this.pub = null; if (B.priv) this._importPrivate(B.priv, B.privEnc); if (B.pub) this._importPublic(B.pub, B.pubEnc) } T.exports = KeyPair; KeyPair.fromPublic = function fromPublic(T, B, N) { if (B instanceof KeyPair) return B; return new KeyPair(T, { pub: B, pubEnc: N }) }; KeyPair.fromPrivate = function fromPrivate(T, B, N) { if (B instanceof KeyPair) return B; return new KeyPair(T, { priv: B, privEnc: N }) }; KeyPair.prototype.validate = function validate() { var T = this.getPublic(); if (T.isInfinity()) return { result: false, reason: "Invalid public key" }; if (!T.validate()) return { result: false, reason: "Public key is not a point" }; if (!T.mul(this.ec.curve.n).isInfinity()) return { result: false, reason: "Public key * N != O" }; return { result: true, reason: null } }; KeyPair.prototype.getPublic = function getPublic(T, B) { if (typeof T === "string") { B = T; T = null } if (!this.pub) this.pub = this.ec.g.mul(this.priv); if (!B) return this.pub; return this.pub.encode(B, T) }; KeyPair.prototype.getPrivate = function getPrivate(T) { if (T === "hex") return this.priv.toString(16, 2); else return this.priv }; KeyPair.prototype._importPrivate = function _importPrivate(T, B) { this.priv = new L(T, B || 16); this.priv = this.priv.umod(this.ec.curve.n) }; KeyPair.prototype._importPublic = function _importPublic(T, B) { if (T.x || T.y) { if (this.ec.curve.type === "mont") { J(T.x, "Need x coordinate") } else if (this.ec.curve.type === "short" || this.ec.curve.type === "edwards") { J(T.x && T.y, "Need both x and y coordinate") } this.pub = this.ec.curve.point(T.x, T.y); return } this.pub = this.ec.curve.decodePoint(T, B) }; KeyPair.prototype.derive = function derive(T) { if (!T.validate()) { J(T.validate(), "public point not validated") } return T.mul(this.priv).getX() }; KeyPair.prototype.sign = function sign(T, B, N) { return this.ec.sign(T, this, B, N) }; KeyPair.prototype.verify = function verify(T, B, N) { return this.ec.verify(T, B, this, undefined, N) }; KeyPair.prototype.inspect = function inspect() { return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >" } }, 4816: (T, B, N) => { "use strict"; var L = N(7967); var I = N(5028); var J = I.assert; function Signature(T, B) { if (T instanceof Signature) return T; if (this._importDER(T, B)) return; J(T.r && T.s, "Signature without r or s"); this.r = new L(T.r, 16); this.s = new L(T.s, 16); if (T.recoveryParam === undefined) this.recoveryParam = null; else this.recoveryParam = T.recoveryParam } T.exports = Signature; function Position() { this.place = 0 } function getLength(T, B) { var N = T[B.place++]; if (!(N & 128)) { return N } var L = N & 15; if (L === 0 || L > 4) { return false } if (T[B.place] === 0) { return false } var I = 0; for (var J = 0, H = B.place; J < L; J++, H++) { I <<= 8; I |= T[H]; I >>>= 0 } if (I <= 127) { return false } B.place = H; return I } function rmPadding(T) { var B = 0; var N = T.length - 1; while (!T[B] && !(T[B + 1] & 128) && B < N) { B++ } if (B === 0) { return T } return T.slice(B) } Signature.prototype._importDER = function _importDER(T, B) { T = I.toArray(T, B); var N = new Position; if (T[N.place++] !== 48) { return false } var J = getLength(T, N); if (J === false) { return false } if (J + N.place !== T.length) { return false } if (T[N.place++] !== 2) { return false } var H = getLength(T, N); if (H === false) { return false } if ((T[N.place] & 128) !== 0) { return false } var U = T.slice(N.place, H + N.place); N.place += H; if (T[N.place++] !== 2) { return false } var X = getLength(T, N); if (X === false) { return false } if (T.length !== X + N.place) { return false } if ((T[N.place] & 128) !== 0) { return false } var G = T.slice(N.place, X + N.place); if (U[0] === 0) { if (U[1] & 128) { U = U.slice(1) } else { return false } } if (G[0] === 0) { if (G[1] & 128) { G = G.slice(1) } else { return false } } this.r = new L(U); this.s = new L(G); this.recoveryParam = null; return true }; function constructLength(T, B) { if (B < 128) { T.push(B); return } var N = 1 + (Math.log(B) / Math.LN2 >>> 3); T.push(N | 128); while (--N) { T.push(B >>> (N << 3) & 255) } T.push(B) } Signature.prototype.toDER = function toDER(T) { var B = this.r.toArray(); var N = this.s.toArray(); if (B[0] & 128) B = [0].concat(B); if (N[0] & 128) N = [0].concat(N); B = rmPadding(B); N = rmPadding(N); while (!N[0] && !(N[1] & 128)) { N = N.slice(1) } var L = [2]; constructLength(L, B.length); L = L.concat(B); L.push(2); constructLength(L, N.length); var J = L.concat(N); var H = [48]; constructLength(H, J.length); H = H.concat(J); return I.encode(H, T) } }, 3225: (T, B, N) => { "use strict"; var L = N(7477); var I = N(997); var J = N(5028); var H = J.assert; var U = J.parseBytes; var X = N(3898); var G = N(2303); function EDDSA(T) { H(T === "ed25519", "only tested with ed25519 so far"); if (!(this instanceof EDDSA)) return new EDDSA(T); T = I[T].curve; this.curve = T; this.g = T.g; this.g.precompute(T.n.bitLength() + 1); this.pointClass = T.point().constructor; this.encodingLength = Math.ceil(T.n.bitLength() / 8); this.hash = L.sha512 } T.exports = EDDSA; EDDSA.prototype.sign = function sign(T, B) { T = U(T); var N = this.keyFromSecret(B); var L = this.hashInt(N.messagePrefix(), T); var I = this.g.mul(L); var J = this.encodePoint(I); var H = this.hashInt(J, N.pubBytes(), T).mul(N.priv()); var X = L.add(H).umod(this.curve.n); return this.makeSignature({ R: I, S: X, Rencoded: J }) }; EDDSA.prototype.verify = function verify(T, B, N) { T = U(T); B = this.makeSignature(B); if (B.S().gte(B.eddsa.curve.n) || B.S().isNeg()) { return false } var L = this.keyFromPublic(N); var I = this.hashInt(B.Rencoded(), L.pubBytes(), T); var J = this.g.mul(B.S()); var H = B.R().add(L.pub().mul(I)); return H.eq(J) }; EDDSA.prototype.hashInt = function hashInt() { var T = this.hash(); for (var B = 0; B < arguments.length; B++)T.update(arguments[B]); return J.intFromLE(T.digest()).umod(this.curve.n) }; EDDSA.prototype.keyFromPublic = function keyFromPublic(T) { return X.fromPublic(this, T) }; EDDSA.prototype.keyFromSecret = function keyFromSecret(T) { return X.fromSecret(this, T) }; EDDSA.prototype.makeSignature = function makeSignature(T) { if (T instanceof G) return T; return new G(this, T) }; EDDSA.prototype.encodePoint = function encodePoint(T) { var B = T.getY().toArray("le", this.encodingLength); B[this.encodingLength - 1] |= T.getX().isOdd() ? 128 : 0; return B }; EDDSA.prototype.decodePoint = function decodePoint(T) { T = J.parseBytes(T); var B = T.length - 1; var N = T.slice(0, B).concat(T[B] & ~128); var L = (T[B] & 128) !== 0; var I = J.intFromLE(N); return this.curve.pointFromY(I, L) }; EDDSA.prototype.encodeInt = function encodeInt(T) { return T.toArray("le", this.encodingLength) }; EDDSA.prototype.decodeInt = function decodeInt(T) { return J.intFromLE(T) }; EDDSA.prototype.isPoint = function isPoint(T) { return T instanceof this.pointClass } }, 3898: (T, B, N) => { "use strict"; var L = N(5028); var I = L.assert; var J = L.parseBytes; var H = L.cachedProperty; function KeyPair(T, B) { this.eddsa = T; this._secret = J(B.secret); if (T.isPoint(B.pub)) this._pub = B.pub; else this._pubBytes = J(B.pub) } KeyPair.fromPublic = function fromPublic(T, B) { if (B instanceof KeyPair) return B; return new KeyPair(T, { pub: B }) }; KeyPair.fromSecret = function fromSecret(T, B) { if (B instanceof KeyPair) return B; return new KeyPair(T, { secret: B }) }; KeyPair.prototype.secret = function secret() { return this._secret }; H(KeyPair, "pubBytes", (function pubBytes() { return this.eddsa.encodePoint(this.pub()) })); H(KeyPair, "pub", (function pub() { if (this._pubBytes) return this.eddsa.decodePoint(this._pubBytes); return this.eddsa.g.mul(this.priv()) })); H(KeyPair, "privBytes", (function privBytes() { var T = this.eddsa; var B = this.hash(); var N = T.encodingLength - 1; var L = B.slice(0, T.encodingLength); L[0] &= 248; L[N] &= 127; L[N] |= 64; return L })); H(KeyPair, "priv", (function priv() { return this.eddsa.decodeInt(this.privBytes()) })); H(KeyPair, "hash", (function hash() { return this.eddsa.hash().update(this.secret()).digest() })); H(KeyPair, "messagePrefix", (function messagePrefix() { return this.hash().slice(this.eddsa.encodingLength) })); KeyPair.prototype.sign = function sign(T) { I(this._secret, "KeyPair can only verify"); return this.eddsa.sign(T, this) }; KeyPair.prototype.verify = function verify(T, B) { return this.eddsa.verify(T, B, this) }; KeyPair.prototype.getSecret = function getSecret(T) { I(this._secret, "KeyPair is public only"); return L.encode(this.secret(), T) }; KeyPair.prototype.getPublic = function getPublic(T) { return L.encode(this.pubBytes(), T) }; T.exports = KeyPair }, 2303: (T, B, N) => { "use strict"; var L = N(7967); var I = N(5028); var J = I.assert; var H = I.cachedProperty; var U = I.parseBytes; function Signature(T, B) { this.eddsa = T; if (typeof B !== "object") B = U(B); if (Array.isArray(B)) { J(B.length === T.encodingLength * 2, "Signature has invalid size"); B = { R: B.slice(0, T.encodingLength), S: B.slice(T.encodingLength) } } J(B.R && B.S, "Signature without R or S"); if (T.isPoint(B.R)) this._R = B.R; if (B.S instanceof L) this._S = B.S; this._Rencoded = Array.isArray(B.R) ? B.R : B.Rencoded; this._Sencoded = Array.isArray(B.S) ? B.S : B.Sencoded } H(Signature, "S", (function S() { return this.eddsa.decodeInt(this.Sencoded()) })); H(Signature, "R", (function R() { return this.eddsa.decodePoint(this.Rencoded()) })); H(Signature, "Rencoded", (function Rencoded() { return this.eddsa.encodePoint(this.R()) })); H(Signature, "Sencoded", (function Sencoded() { return this.eddsa.encodeInt(this.S()) })); Signature.prototype.toBytes = function toBytes() { return this.Rencoded().concat(this.Sencoded()) }; Signature.prototype.toHex = function toHex() { return I.encode(this.toBytes(), "hex").toUpperCase() }; T.exports = Signature }, 2252: T => { T.exports = { doubles: { step: 4, points: [["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a", "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"], ["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508", "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"], ["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739", "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"], ["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640", "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"], ["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c", "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"], ["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda", "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"], ["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa", "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"], ["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0", "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"], ["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d", "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"], ["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d", "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"], ["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1", "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"], ["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0", "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"], ["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047", "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"], ["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862", "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"], ["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7", "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"], ["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd", "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"], ["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83", "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"], ["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a", "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"], ["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8", "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"], ["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d", "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"], ["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725", "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"], ["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754", "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"], ["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c", "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"], ["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6", "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"], ["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39", "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"], ["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891", "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"], ["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b", "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"], ["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03", "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"], ["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d", "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"], ["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070", "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"], ["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4", "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"], ["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da", "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"], ["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11", "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"], ["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e", "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"], ["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41", "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"], ["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef", "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"], ["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8", "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"], ["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d", "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"], ["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96", "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"], ["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd", "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"], ["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5", "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"], ["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266", "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"], ["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71", "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"], ["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac", "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"], ["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751", "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"], ["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e", "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"], ["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241", "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"], ["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3", "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"], ["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f", "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"], ["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19", "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"], ["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be", "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"], ["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9", "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"], ["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2", "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"], ["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13", "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"], ["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c", "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"], ["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba", "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"], ["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151", "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"], ["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073", "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"], ["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458", "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"], ["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b", "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"], ["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366", "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"], ["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa", "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"], ["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0", "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"], ["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787", "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"], ["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e", "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]] }, naf: { wnd: 7, points: [["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9", "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"], ["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4", "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"], ["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc", "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"], ["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe", "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"], ["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb", "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"], ["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8", "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"], ["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e", "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"], ["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34", "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"], ["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c", "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"], ["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5", "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"], ["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f", "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"], ["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714", "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"], ["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729", "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"], ["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db", "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"], ["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4", "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"], ["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5", "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"], ["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479", "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"], ["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d", "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"], ["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f", "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"], ["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb", "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"], ["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9", "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"], ["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963", "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"], ["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74", "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"], ["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530", "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"], ["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b", "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"], ["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247", "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"], ["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1", "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"], ["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120", "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"], ["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435", "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"], ["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18", "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"], ["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8", "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"], ["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb", "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"], ["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f", "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"], ["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143", "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"], ["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba", "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"], ["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45", "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"], ["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a", "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"], ["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e", "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"], ["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8", "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"], ["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c", "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"], ["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519", "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"], ["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab", "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"], ["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca", "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"], ["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf", "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"], ["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610", "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"], ["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4", "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"], ["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c", "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"], ["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940", "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"], ["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980", "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"], ["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3", "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"], ["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf", "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"], ["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63", "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"], ["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448", "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"], ["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf", "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"], ["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5", "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"], ["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6", "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"], ["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5", "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"], ["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99", "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"], ["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51", "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"], ["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5", "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"], ["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5", "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"], ["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997", "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"], ["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881", "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"], ["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5", "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"], ["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66", "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"], ["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726", "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"], ["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede", "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"], ["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94", "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"], ["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31", "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"], ["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51", "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"], ["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252", "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"], ["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5", "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"], ["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b", "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"], ["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4", "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"], ["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f", "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"], ["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889", "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"], ["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246", "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"], ["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984", "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"], ["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a", "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"], ["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030", "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"], ["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197", "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"], ["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593", "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"], ["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef", "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"], ["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38", "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"], ["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a", "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"], ["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111", "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"], ["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502", "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"], ["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea", "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"], ["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26", "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"], ["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986", "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"], ["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e", "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"], ["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4", "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"], ["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda", "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"], ["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859", "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"], ["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f", "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"], ["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c", "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"], ["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942", "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"], ["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a", "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"], ["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80", "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"], ["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d", "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"], ["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1", "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"], ["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63", "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"], ["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352", "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"], ["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193", "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"], ["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00", "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"], ["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58", "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"], ["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7", "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"], ["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8", "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"], ["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e", "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"], ["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d", "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"], ["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b", "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"], ["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f", "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"], ["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6", "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"], ["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297", "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"], ["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a", "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"], ["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c", "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"], ["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52", "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"], ["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb", "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"], ["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065", "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"], ["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917", "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"], ["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9", "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"], ["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3", "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"], ["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57", "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"], ["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66", "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"], ["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8", "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"], ["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721", "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"], ["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180", "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]] } } }, 5028: (T, B, N) => { "use strict"; var L = B; var I = N(7967); var J = N(3798); var H = N(8660); L.assert = J; L.toArray = H.toArray; L.zero2 = H.zero2; L.toHex = H.toHex; L.encode = H.encode; function getNAF(T, B, N) { var L = new Array(Math.max(T.bitLength(), N) + 1); var I; for (I = 0; I < L.length; I += 1) { L[I] = 0 } var J = 1 << B + 1; var H = T.clone(); for (I = 0; I < L.length; I++) { var U; var X = H.andln(J - 1); if (H.isOdd()) { if (X > (J >> 1) - 1) U = (J >> 1) - X; else U = X; H.isubn(U) } else { U = 0 } L[I] = U; H.iushrn(1) } return L } L.getNAF = getNAF; function getJSF(T, B) { var N = [[], []]; T = T.clone(); B = B.clone(); var L = 0; var I = 0; var J; while (T.cmpn(-L) > 0 || B.cmpn(-I) > 0) { var H = T.andln(3) + L & 3; var U = B.andln(3) + I & 3; if (H === 3) H = -1; if (U === 3) U = -1; var X; if ((H & 1) === 0) { X = 0 } else { J = T.andln(7) + L & 7; if ((J === 3 || J === 5) && U === 2) X = -H; else X = H } N[0].push(X); var G; if ((U & 1) === 0) { G = 0 } else { J = B.andln(7) + I & 7; if ((J === 3 || J === 5) && H === 2) G = -U; else G = U } N[1].push(G); if (2 * L === X + 1) L = 1 - L; if (2 * I === G + 1) I = 1 - I; T.iushrn(1); B.iushrn(1) } return N } L.getJSF = getJSF; function cachedProperty(T, B, N) { var L = "_" + B; T.prototype[B] = function cachedProperty() { return this[L] !== undefined ? this[L] : this[L] = N.call(this) } } L.cachedProperty = cachedProperty; function parseBytes(T) { return typeof T === "string" ? L.toArray(T, "hex") : T } L.parseBytes = parseBytes; function intFromLE(T) { return new I(T, "hex", "le") } L.intFromLE = intFromLE }, 7967: function (T, B, N) { T = N.nmd(T); (function (T, B) { "use strict"; function assert(T, B) { if (!T) throw new Error(B || "Assertion failed") } function inherits(T, B) { T.super_ = B; var TempCtor = function () { }; TempCtor.prototype = B.prototype; T.prototype = new TempCtor; T.prototype.constructor = T } function BN(T, B, N) { if (BN.isBN(T)) { return T } this.negative = 0; this.words = null; this.length = 0; this.red = null; if (T !== null) { if (B === "le" || B === "be") { N = B; B = 10 } this._init(T || 0, B || 10, N || "be") } } if (typeof T === "object") { T.exports = BN } else { B.BN = BN } BN.BN = BN; BN.wordSize = 26; var L; try { if (typeof window !== "undefined" && typeof window.Buffer !== "undefined") { L = window.Buffer } else { L = N(181).Buffer } } catch (T) { } BN.isBN = function isBN(T) { if (T instanceof BN) { return true } return T !== null && typeof T === "object" && T.constructor.wordSize === BN.wordSize && Array.isArray(T.words) }; BN.max = function max(T, B) { if (T.cmp(B) > 0) return T; return B }; BN.min = function min(T, B) { if (T.cmp(B) < 0) return T; return B }; BN.prototype._init = function init(T, B, N) { if (typeof T === "number") { return this._initNumber(T, B, N) } if (typeof T === "object") { return this._initArray(T, B, N) } if (B === "hex") { B = 16 } assert(B === (B | 0) && B >= 2 && B <= 36); T = T.toString().replace(/\s+/g, ""); var L = 0; if (T[0] === "-") { L++; this.negative = 1 } if (L < T.length) { if (B === 16) { this._parseHex(T, L, N) } else { this._parseBase(T, B, L); if (N === "le") { this._initArray(this.toArray(), B, N) } } } }; BN.prototype._initNumber = function _initNumber(T, B, N) { if (T < 0) { this.negative = 1; T = -T } if (T < 67108864) { this.words = [T & 67108863]; this.length = 1 } else if (T < 4503599627370496) { this.words = [T & 67108863, T / 67108864 & 67108863]; this.length = 2 } else { assert(T < 9007199254740992); this.words = [T & 67108863, T / 67108864 & 67108863, 1]; this.length = 3 } if (N !== "le") return; this._initArray(this.toArray(), B, N) }; BN.prototype._initArray = function _initArray(T, B, N) { assert(typeof T.length === "number"); if (T.length <= 0) { this.words = [0]; this.length = 1; return this } this.length = Math.ceil(T.length / 3); this.words = new Array(this.length); for (var L = 0; L < this.length; L++) { this.words[L] = 0 } var I, J; var H = 0; if (N === "be") { for (L = T.length - 1, I = 0; L >= 0; L -= 3) { J = T[L] | T[L - 1] << 8 | T[L - 2] << 16; this.words[I] |= J << H & 67108863; this.words[I + 1] = J >>> 26 - H & 67108863; H += 24; if (H >= 26) { H -= 26; I++ } } } else if (N === "le") { for (L = 0, I = 0; L < T.length; L += 3) { J = T[L] | T[L + 1] << 8 | T[L + 2] << 16; this.words[I] |= J << H & 67108863; this.words[I + 1] = J >>> 26 - H & 67108863; H += 24; if (H >= 26) { H -= 26; I++ } } } return this.strip() }; function parseHex4Bits(T, B) { var N = T.charCodeAt(B); if (N >= 65 && N <= 70) { return N - 55 } else if (N >= 97 && N <= 102) { return N - 87 } else { return N - 48 & 15 } } function parseHexByte(T, B, N) { var L = parseHex4Bits(T, N); if (N - 1 >= B) { L |= parseHex4Bits(T, N - 1) << 4 } return L } BN.prototype._parseHex = function _parseHex(T, B, N) { this.length = Math.ceil((T.length - B) / 6); this.words = new Array(this.length); for (var L = 0; L < this.length; L++) { this.words[L] = 0 } var I = 0; var J = 0; var H; if (N === "be") { for (L = T.length - 1; L >= B; L -= 2) { H = parseHexByte(T, B, L) << I; this.words[J] |= H & 67108863; if (I >= 18) { I -= 18; J += 1; this.words[J] |= H >>> 26 } else { I += 8 } } } else { var U = T.length - B; for (L = U % 2 === 0 ? B + 1 : B; L < T.length; L += 2) { H = parseHexByte(T, B, L) << I; this.words[J] |= H & 67108863; if (I >= 18) { I -= 18; J += 1; this.words[J] |= H >>> 26 } else { I += 8 } } } this.strip() }; function parseBase(T, B, N, L) { var I = 0; var J = Math.min(T.length, N); for (var H = B; H < J; H++) { var U = T.charCodeAt(H) - 48; I *= L; if (U >= 49) { I += U - 49 + 10 } else if (U >= 17) { I += U - 17 + 10 } else { I += U } } return I } BN.prototype._parseBase = function _parseBase(T, B, N) { this.words = [0]; this.length = 1; for (var L = 0, I = 1; I <= 67108863; I *= B) { L++ } L--; I = I / B | 0; var J = T.length - N; var H = J % L; var U = Math.min(J, J - H) + N; var X = 0; for (var G = N; G < U; G += L) { X = parseBase(T, G, G + L, B); this.imuln(I); if (this.words[0] + X < 67108864) { this.words[0] += X } else { this._iaddn(X) } } if (H !== 0) { var V = 1; X = parseBase(T, G, T.length, B); for (G = 0; G < H; G++) { V *= B } this.imuln(V); if (this.words[0] + X < 67108864) { this.words[0] += X } else { this._iaddn(X) } } this.strip() }; BN.prototype.copy = function copy(T) { T.words = new Array(this.length); for (var B = 0; B < this.length; B++) { T.words[B] = this.words[B] } T.length = this.length; T.negative = this.negative; T.red = this.red }; BN.prototype.clone = function clone() { var T = new BN(null); this.copy(T); return T }; BN.prototype._expand = function _expand(T) { while (this.length < T) { this.words[this.length++] = 0 } return this }; BN.prototype.strip = function strip() { while (this.length > 1 && this.words[this.length - 1] === 0) { this.length-- } return this._normSign() }; BN.prototype._normSign = function _normSign() { if (this.length === 1 && this.words[0] === 0) { this.negative = 0 } return this }; BN.prototype.inspect = function inspect() { return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">" }; var I = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"]; var J = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]; var H = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176]; BN.prototype.toString = function toString(T, B) { T = T || 10; B = B | 0 || 1; var N; if (T === 16 || T === "hex") { N = ""; var L = 0; var U = 0; for (var X = 0; X < this.length; X++) { var G = this.words[X]; var V = ((G << L | U) & 16777215).toString(16); U = G >>> 24 - L & 16777215; L += 2; if (L >= 26) { L -= 26; X-- } if (U !== 0 || X !== this.length - 1) { N = I[6 - V.length] + V + N } else { N = V + N } } if (U !== 0) { N = U.toString(16) + N } while (N.length % B !== 0) { N = "0" + N } if (this.negative !== 0) { N = "-" + N } return N } if (T === (T | 0) && T >= 2 && T <= 36) { var Z = J[T]; var W = H[T]; N = ""; var q = this.clone(); q.negative = 0; while (!q.isZero()) { var Q = q.modn(W).toString(T); q = q.idivn(W); if (!q.isZero()) { N = I[Z - Q.length] + Q + N } else { N = Q + N } } if (this.isZero()) { N = "0" + N } while (N.length % B !== 0) { N = "0" + N } if (this.negative !== 0) { N = "-" + N } return N } assert(false, "Base should be between 2 and 36") }; BN.prototype.toNumber = function toNumber() { var T = this.words[0]; if (this.length === 2) { T += this.words[1] * 67108864 } else if (this.length === 3 && this.words[2] === 1) { T += 4503599627370496 + this.words[1] * 67108864 } else if (this.length > 2) { assert(false, "Number can only safely store up to 53 bits") } return this.negative !== 0 ? -T : T }; BN.prototype.toJSON = function toJSON() { return this.toString(16) }; BN.prototype.toBuffer = function toBuffer(T, B) { assert(typeof L !== "undefined"); return this.toArrayLike(L, T, B) }; BN.prototype.toArray = function toArray(T, B) { return this.toArrayLike(Array, T, B) }; BN.prototype.toArrayLike = function toArrayLike(T, B, N) { var L = this.byteLength(); var I = N || Math.max(1, L); assert(L <= I, "byte array longer than desired length"); assert(I > 0, "Requested array length <= 0"); this.strip(); var J = B === "le"; var H = new T(I); var U, X; var G = this.clone(); if (!J) { for (X = 0; X < I - L; X++) { H[X] = 0 } for (X = 0; !G.isZero(); X++) { U = G.andln(255); G.iushrn(8); H[I - X - 1] = U } } else { for (X = 0; !G.isZero(); X++) { U = G.andln(255); G.iushrn(8); H[X] = U } for (; X < I; X++) { H[X] = 0 } } return H }; if (Math.clz32) { BN.prototype._countBits = function _countBits(T) { return 32 - Math.clz32(T) } } else { BN.prototype._countBits = function _countBits(T) { var B = T; var N = 0; if (B >= 4096) { N += 13; B >>>= 13 } if (B >= 64) { N += 7; B >>>= 7 } if (B >= 8) { N += 4; B >>>= 4 } if (B >= 2) { N += 2; B >>>= 2 } return N + B } } BN.prototype._zeroBits = function _zeroBits(T) { if (T === 0) return 26; var B = T; var N = 0; if ((B & 8191) === 0) { N += 13; B >>>= 13 } if ((B & 127) === 0) { N += 7; B >>>= 7 } if ((B & 15) === 0) { N += 4; B >>>= 4 } if ((B & 3) === 0) { N += 2; B >>>= 2 } if ((B & 1) === 0) { N++ } return N }; BN.prototype.bitLength = function bitLength() { var T = this.words[this.length - 1]; var B = this._countBits(T); return (this.length - 1) * 26 + B }; function toBitArray(T) { var B = new Array(T.bitLength()); for (var N = 0; N < B.length; N++) { var L = N / 26 | 0; var I = N % 26; B[N] = (T.words[L] & 1 << I) >>> I } return B } BN.prototype.zeroBits = function zeroBits() { if (this.isZero()) return 0; var T = 0; for (var B = 0; B < this.length; B++) { var N = this._zeroBits(this.words[B]); T += N; if (N !== 26) break } return T }; BN.prototype.byteLength = function byteLength() { return Math.ceil(this.bitLength() / 8) }; BN.prototype.toTwos = function toTwos(T) { if (this.negative !== 0) { return this.abs().inotn(T).iaddn(1) } return this.clone() }; BN.prototype.fromTwos = function fromTwos(T) { if (this.testn(T - 1)) { return this.notn(T).iaddn(1).ineg() } return this.clone() }; BN.prototype.isNeg = function isNeg() { return this.negative !== 0 }; BN.prototype.neg = function neg() { return this.clone().ineg() }; BN.prototype.ineg = function ineg() { if (!this.isZero()) { this.negative ^= 1 } return this }; BN.prototype.iuor = function iuor(T) { while (this.length < T.length) { this.words[this.length++] = 0 } for (var B = 0; B < T.length; B++) { this.words[B] = this.words[B] | T.words[B] } return this.strip() }; BN.prototype.ior = function ior(T) { assert((this.negative | T.negative) === 0); return this.iuor(T) }; BN.prototype.or = function or(T) { if (this.length > T.length) return this.clone().ior(T); return T.clone().ior(this) }; BN.prototype.uor = function uor(T) { if (this.length > T.length) return this.clone().iuor(T); return T.clone().iuor(this) }; BN.prototype.iuand = function iuand(T) { var B; if (this.length > T.length) { B = T } else { B = this } for (var N = 0; N < B.length; N++) { this.words[N] = this.words[N] & T.words[N] } this.length = B.length; return this.strip() }; BN.prototype.iand = function iand(T) { assert((this.negative | T.negative) === 0); return this.iuand(T) }; BN.prototype.and = function and(T) { if (this.length > T.length) return this.clone().iand(T); return T.clone().iand(this) }; BN.prototype.uand = function uand(T) { if (this.length > T.length) return this.clone().iuand(T); return T.clone().iuand(this) }; BN.prototype.iuxor = function iuxor(T) { var B; var N; if (this.length > T.length) { B = this; N = T } else { B = T; N = this } for (var L = 0; L < N.length; L++) { this.words[L] = B.words[L] ^ N.words[L] } if (this !== B) { for (; L < B.length; L++) { this.words[L] = B.words[L] } } this.length = B.length; return this.strip() }; BN.prototype.ixor = function ixor(T) { assert((this.negative | T.negative) === 0); return this.iuxor(T) }; BN.prototype.xor = function xor(T) { if (this.length > T.length) return this.clone().ixor(T); return T.clone().ixor(this) }; BN.prototype.uxor = function uxor(T) { if (this.length > T.length) return this.clone().iuxor(T); return T.clone().iuxor(this) }; BN.prototype.inotn = function inotn(T) { assert(typeof T === "number" && T >= 0); var B = Math.ceil(T / 26) | 0; var N = T % 26; this._expand(B); if (N > 0) { B-- } for (var L = 0; L < B; L++) { this.words[L] = ~this.words[L] & 67108863 } if (N > 0) { this.words[L] = ~this.words[L] & 67108863 >> 26 - N } return this.strip() }; BN.prototype.notn = function notn(T) { return this.clone().inotn(T) }; BN.prototype.setn = function setn(T, B) { assert(typeof T === "number" && T >= 0); var N = T / 26 | 0; var L = T % 26; this._expand(N + 1); if (B) { this.words[N] = this.words[N] | 1 << L } else { this.words[N] = this.words[N] & ~(1 << L) } return this.strip() }; BN.prototype.iadd = function iadd(T) { var B; if (this.negative !== 0 && T.negative === 0) { this.negative = 0; B = this.isub(T); this.negative ^= 1; return this._normSign() } else if (this.negative === 0 && T.negative !== 0) { T.negative = 0; B = this.isub(T); T.negative = 1; return B._normSign() } var N, L; if (this.length > T.length) { N = this; L = T } else { N = T; L = this } var I = 0; for (var J = 0; J < L.length; J++) { B = (N.words[J] | 0) + (L.words[J] | 0) + I; this.words[J] = B & 67108863; I = B >>> 26 } for (; I !== 0 && J < N.length; J++) { B = (N.words[J] | 0) + I; this.words[J] = B & 67108863; I = B >>> 26 } this.length = N.length; if (I !== 0) { this.words[this.length] = I; this.length++ } else if (N !== this) { for (; J < N.length; J++) { this.words[J] = N.words[J] } } return this }; BN.prototype.add = function add(T) { var B; if (T.negative !== 0 && this.negative === 0) { T.negative = 0; B = this.sub(T); T.negative ^= 1; return B } else if (T.negative === 0 && this.negative !== 0) { this.negative = 0; B = T.sub(this); this.negative = 1; return B } if (this.length > T.length) return this.clone().iadd(T); return T.clone().iadd(this) }; BN.prototype.isub = function isub(T) { if (T.negative !== 0) { T.negative = 0; var B = this.iadd(T); T.negative = 1; return B._normSign() } else if (this.negative !== 0) { this.negative = 0; this.iadd(T); this.negative = 1; return this._normSign() } var N = this.cmp(T); if (N === 0) { this.negative = 0; this.length = 1; this.words[0] = 0; return this } var L, I; if (N > 0) { L = this; I = T } else { L = T; I = this } var J = 0; for (var H = 0; H < I.length; H++) { B = (L.words[H] | 0) - (I.words[H] | 0) + J; J = B >> 26; this.words[H] = B & 67108863 } for (; J !== 0 && H < L.length; H++) { B = (L.words[H] | 0) + J; J = B >> 26; this.words[H] = B & 67108863 } if (J === 0 && H < L.length && L !== this) { for (; H < L.length; H++) { this.words[H] = L.words[H] } } this.length = Math.max(this.length, H); if (L !== this) { this.negative = 1 } return this.strip() }; BN.prototype.sub = function sub(T) { return this.clone().isub(T) }; function smallMulTo(T, B, N) { N.negative = B.negative ^ T.negative; var L = T.length + B.length | 0; N.length = L; L = L - 1 | 0; var I = T.words[0] | 0; var J = B.words[0] | 0; var H = I * J; var U = H & 67108863; var X = H / 67108864 | 0; N.words[0] = U; for (var G = 1; G < L; G++) { var V = X >>> 26; var Z = X & 67108863; var W = Math.min(G, B.length - 1); for (var q = Math.max(0, G - T.length + 1); q <= W; q++) { var Q = G - q | 0; I = T.words[Q] | 0; J = B.words[q] | 0; H = I * J + Z; V += H / 67108864 | 0; Z = H & 67108863 } N.words[G] = Z | 0; X = V | 0 } if (X !== 0) { N.words[G] = X | 0 } else { N.length-- } return N.strip() } var U = function comb10MulTo(T, B, N) { var L = T.words; var I = B.words; var J = N.words; var H = 0; var U; var X; var G; var V = L[0] | 0; var Z = V & 8191; var W = V >>> 13; var q = L[1] | 0; var Q = q & 8191; var Y = q >>> 13; var ff = L[2] | 0; var ef = ff & 8191; var tf = ff >>> 13; var rf = L[3] | 0; var af = rf & 8191; var nf = rf >>> 13; var of = L[4] | 0; var sf = of & 8191; var cf = of >>> 13; var bf = L[5] | 0; var df = bf & 8191; var uf = bf >>> 13; var lf = L[6] | 0; var hf = lf & 8191; var pf = lf >>> 13; var vf = L[7] | 0; var mf = vf & 8191; var yf = vf >>> 13; var gf = L[8] | 0; var _f = gf & 8191; var wf = gf >>> 13; var Af = L[9] | 0; var Sf = Af & 8191; var Tf = Af >>> 13; var Pf = I[0] | 0; var Ef = Pf & 8191; var Mf = Pf >>> 13; var kf = I[1] | 0; var Cf = kf & 8191; var Bf = kf >>> 13; var Of = I[2] | 0; var Nf = Of & 8191; var Ff = Of >>> 13; var Rf = I[3] | 0; var xf = Rf & 8191; var Lf = Rf >>> 13; var Df = I[4] | 0; var If = Df & 8191; var Jf = Df >>> 13; var Hf = I[5] | 0; var Uf = Hf & 8191; var jf = Hf >>> 13; var Xf = I[6] | 0; var Gf = Xf & 8191; var zf = Xf >>> 13; var Vf = I[7] | 0; var Kf = Vf & 8191; var Zf = Vf >>> 13; var Wf = I[8] | 0; var qf = Wf & 8191; var Qf = Wf >>> 13; var Yf = I[9] | 0; var $f = Yf & 8191; var fe = Yf >>> 13; N.negative = T.negative ^ B.negative; N.length = 19; U = Math.imul(Z, Ef); X = Math.imul(Z, Mf); X = X + Math.imul(W, Ef) | 0; G = Math.imul(W, Mf); var ee = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (ee >>> 26) | 0; ee &= 67108863; U = Math.imul(Q, Ef); X = Math.imul(Q, Mf); X = X + Math.imul(Y, Ef) | 0; G = Math.imul(Y, Mf); U = U + Math.imul(Z, Cf) | 0; X = X + Math.imul(Z, Bf) | 0; X = X + Math.imul(W, Cf) | 0; G = G + Math.imul(W, Bf) | 0; var te = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (te >>> 26) | 0; te &= 67108863; U = Math.imul(ef, Ef); X = Math.imul(ef, Mf); X = X + Math.imul(tf, Ef) | 0; G = Math.imul(tf, Mf); U = U + Math.imul(Q, Cf) | 0; X = X + Math.imul(Q, Bf) | 0; X = X + Math.imul(Y, Cf) | 0; G = G + Math.imul(Y, Bf) | 0; U = U + Math.imul(Z, Nf) | 0; X = X + Math.imul(Z, Ff) | 0; X = X + Math.imul(W, Nf) | 0; G = G + Math.imul(W, Ff) | 0; var re = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (re >>> 26) | 0; re &= 67108863; U = Math.imul(af, Ef); X = Math.imul(af, Mf); X = X + Math.imul(nf, Ef) | 0; G = Math.imul(nf, Mf); U = U + Math.imul(ef, Cf) | 0; X = X + Math.imul(ef, Bf) | 0; X = X + Math.imul(tf, Cf) | 0; G = G + Math.imul(tf, Bf) | 0; U = U + Math.imul(Q, Nf) | 0; X = X + Math.imul(Q, Ff) | 0; X = X + Math.imul(Y, Nf) | 0; G = G + Math.imul(Y, Ff) | 0; U = U + Math.imul(Z, xf) | 0; X = X + Math.imul(Z, Lf) | 0; X = X + Math.imul(W, xf) | 0; G = G + Math.imul(W, Lf) | 0; var ae = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (ae >>> 26) | 0; ae &= 67108863; U = Math.imul(sf, Ef); X = Math.imul(sf, Mf); X = X + Math.imul(cf, Ef) | 0; G = Math.imul(cf, Mf); U = U + Math.imul(af, Cf) | 0; X = X + Math.imul(af, Bf) | 0; X = X + Math.imul(nf, Cf) | 0; G = G + Math.imul(nf, Bf) | 0; U = U + Math.imul(ef, Nf) | 0; X = X + Math.imul(ef, Ff) | 0; X = X + Math.imul(tf, Nf) | 0; G = G + Math.imul(tf, Ff) | 0; U = U + Math.imul(Q, xf) | 0; X = X + Math.imul(Q, Lf) | 0; X = X + Math.imul(Y, xf) | 0; G = G + Math.imul(Y, Lf) | 0; U = U + Math.imul(Z, If) | 0; X = X + Math.imul(Z, Jf) | 0; X = X + Math.imul(W, If) | 0; G = G + Math.imul(W, Jf) | 0; var ne = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (ne >>> 26) | 0; ne &= 67108863; U = Math.imul(df, Ef); X = Math.imul(df, Mf); X = X + Math.imul(uf, Ef) | 0; G = Math.imul(uf, Mf); U = U + Math.imul(sf, Cf) | 0; X = X + Math.imul(sf, Bf) | 0; X = X + Math.imul(cf, Cf) | 0; G = G + Math.imul(cf, Bf) | 0; U = U + Math.imul(af, Nf) | 0; X = X + Math.imul(af, Ff) | 0; X = X + Math.imul(nf, Nf) | 0; G = G + Math.imul(nf, Ff) | 0; U = U + Math.imul(ef, xf) | 0; X = X + Math.imul(ef, Lf) | 0; X = X + Math.imul(tf, xf) | 0; G = G + Math.imul(tf, Lf) | 0; U = U + Math.imul(Q, If) | 0; X = X + Math.imul(Q, Jf) | 0; X = X + Math.imul(Y, If) | 0; G = G + Math.imul(Y, Jf) | 0; U = U + Math.imul(Z, Uf) | 0; X = X + Math.imul(Z, jf) | 0; X = X + Math.imul(W, Uf) | 0; G = G + Math.imul(W, jf) | 0; var ie = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (ie >>> 26) | 0; ie &= 67108863; U = Math.imul(hf, Ef); X = Math.imul(hf, Mf); X = X + Math.imul(pf, Ef) | 0; G = Math.imul(pf, Mf); U = U + Math.imul(df, Cf) | 0; X = X + Math.imul(df, Bf) | 0; X = X + Math.imul(uf, Cf) | 0; G = G + Math.imul(uf, Bf) | 0; U = U + Math.imul(sf, Nf) | 0; X = X + Math.imul(sf, Ff) | 0; X = X + Math.imul(cf, Nf) | 0; G = G + Math.imul(cf, Ff) | 0; U = U + Math.imul(af, xf) | 0; X = X + Math.imul(af, Lf) | 0; X = X + Math.imul(nf, xf) | 0; G = G + Math.imul(nf, Lf) | 0; U = U + Math.imul(ef, If) | 0; X = X + Math.imul(ef, Jf) | 0; X = X + Math.imul(tf, If) | 0; G = G + Math.imul(tf, Jf) | 0; U = U + Math.imul(Q, Uf) | 0; X = X + Math.imul(Q, jf) | 0; X = X + Math.imul(Y, Uf) | 0; G = G + Math.imul(Y, jf) | 0; U = U + Math.imul(Z, Gf) | 0; X = X + Math.imul(Z, zf) | 0; X = X + Math.imul(W, Gf) | 0; G = G + Math.imul(W, zf) | 0; var oe = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (oe >>> 26) | 0; oe &= 67108863; U = Math.imul(mf, Ef); X = Math.imul(mf, Mf); X = X + Math.imul(yf, Ef) | 0; G = Math.imul(yf, Mf); U = U + Math.imul(hf, Cf) | 0; X = X + Math.imul(hf, Bf) | 0; X = X + Math.imul(pf, Cf) | 0; G = G + Math.imul(pf, Bf) | 0; U = U + Math.imul(df, Nf) | 0; X = X + Math.imul(df, Ff) | 0; X = X + Math.imul(uf, Nf) | 0; G = G + Math.imul(uf, Ff) | 0; U = U + Math.imul(sf, xf) | 0; X = X + Math.imul(sf, Lf) | 0; X = X + Math.imul(cf, xf) | 0; G = G + Math.imul(cf, Lf) | 0; U = U + Math.imul(af, If) | 0; X = X + Math.imul(af, Jf) | 0; X = X + Math.imul(nf, If) | 0; G = G + Math.imul(nf, Jf) | 0; U = U + Math.imul(ef, Uf) | 0; X = X + Math.imul(ef, jf) | 0; X = X + Math.imul(tf, Uf) | 0; G = G + Math.imul(tf, jf) | 0; U = U + Math.imul(Q, Gf) | 0; X = X + Math.imul(Q, zf) | 0; X = X + Math.imul(Y, Gf) | 0; G = G + Math.imul(Y, zf) | 0; U = U + Math.imul(Z, Kf) | 0; X = X + Math.imul(Z, Zf) | 0; X = X + Math.imul(W, Kf) | 0; G = G + Math.imul(W, Zf) | 0; var se = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (se >>> 26) | 0; se &= 67108863; U = Math.imul(_f, Ef); X = Math.imul(_f, Mf); X = X + Math.imul(wf, Ef) | 0; G = Math.imul(wf, Mf); U = U + Math.imul(mf, Cf) | 0; X = X + Math.imul(mf, Bf) | 0; X = X + Math.imul(yf, Cf) | 0; G = G + Math.imul(yf, Bf) | 0; U = U + Math.imul(hf, Nf) | 0; X = X + Math.imul(hf, Ff) | 0; X = X + Math.imul(pf, Nf) | 0; G = G + Math.imul(pf, Ff) | 0; U = U + Math.imul(df, xf) | 0; X = X + Math.imul(df, Lf) | 0; X = X + Math.imul(uf, xf) | 0; G = G + Math.imul(uf, Lf) | 0; U = U + Math.imul(sf, If) | 0; X = X + Math.imul(sf, Jf) | 0; X = X + Math.imul(cf, If) | 0; G = G + Math.imul(cf, Jf) | 0; U = U + Math.imul(af, Uf) | 0; X = X + Math.imul(af, jf) | 0; X = X + Math.imul(nf, Uf) | 0; G = G + Math.imul(nf, jf) | 0; U = U + Math.imul(ef, Gf) | 0; X = X + Math.imul(ef, zf) | 0; X = X + Math.imul(tf, Gf) | 0; G = G + Math.imul(tf, zf) | 0; U = U + Math.imul(Q, Kf) | 0; X = X + Math.imul(Q, Zf) | 0; X = X + Math.imul(Y, Kf) | 0; G = G + Math.imul(Y, Zf) | 0; U = U + Math.imul(Z, qf) | 0; X = X + Math.imul(Z, Qf) | 0; X = X + Math.imul(W, qf) | 0; G = G + Math.imul(W, Qf) | 0; var ce = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (ce >>> 26) | 0; ce &= 67108863; U = Math.imul(Sf, Ef); X = Math.imul(Sf, Mf); X = X + Math.imul(Tf, Ef) | 0; G = Math.imul(Tf, Mf); U = U + Math.imul(_f, Cf) | 0; X = X + Math.imul(_f, Bf) | 0; X = X + Math.imul(wf, Cf) | 0; G = G + Math.imul(wf, Bf) | 0; U = U + Math.imul(mf, Nf) | 0; X = X + Math.imul(mf, Ff) | 0; X = X + Math.imul(yf, Nf) | 0; G = G + Math.imul(yf, Ff) | 0; U = U + Math.imul(hf, xf) | 0; X = X + Math.imul(hf, Lf) | 0; X = X + Math.imul(pf, xf) | 0; G = G + Math.imul(pf, Lf) | 0; U = U + Math.imul(df, If) | 0; X = X + Math.imul(df, Jf) | 0; X = X + Math.imul(uf, If) | 0; G = G + Math.imul(uf, Jf) | 0; U = U + Math.imul(sf, Uf) | 0; X = X + Math.imul(sf, jf) | 0; X = X + Math.imul(cf, Uf) | 0; G = G + Math.imul(cf, jf) | 0; U = U + Math.imul(af, Gf) | 0; X = X + Math.imul(af, zf) | 0; X = X + Math.imul(nf, Gf) | 0; G = G + Math.imul(nf, zf) | 0; U = U + Math.imul(ef, Kf) | 0; X = X + Math.imul(ef, Zf) | 0; X = X + Math.imul(tf, Kf) | 0; G = G + Math.imul(tf, Zf) | 0; U = U + Math.imul(Q, qf) | 0; X = X + Math.imul(Q, Qf) | 0; X = X + Math.imul(Y, qf) | 0; G = G + Math.imul(Y, Qf) | 0; U = U + Math.imul(Z, $f) | 0; X = X + Math.imul(Z, fe) | 0; X = X + Math.imul(W, $f) | 0; G = G + Math.imul(W, fe) | 0; var be = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (be >>> 26) | 0; be &= 67108863; U = Math.imul(Sf, Cf); X = Math.imul(Sf, Bf); X = X + Math.imul(Tf, Cf) | 0; G = Math.imul(Tf, Bf); U = U + Math.imul(_f, Nf) | 0; X = X + Math.imul(_f, Ff) | 0; X = X + Math.imul(wf, Nf) | 0; G = G + Math.imul(wf, Ff) | 0; U = U + Math.imul(mf, xf) | 0; X = X + Math.imul(mf, Lf) | 0; X = X + Math.imul(yf, xf) | 0; G = G + Math.imul(yf, Lf) | 0; U = U + Math.imul(hf, If) | 0; X = X + Math.imul(hf, Jf) | 0; X = X + Math.imul(pf, If) | 0; G = G + Math.imul(pf, Jf) | 0; U = U + Math.imul(df, Uf) | 0; X = X + Math.imul(df, jf) | 0; X = X + Math.imul(uf, Uf) | 0; G = G + Math.imul(uf, jf) | 0; U = U + Math.imul(sf, Gf) | 0; X = X + Math.imul(sf, zf) | 0; X = X + Math.imul(cf, Gf) | 0; G = G + Math.imul(cf, zf) | 0; U = U + Math.imul(af, Kf) | 0; X = X + Math.imul(af, Zf) | 0; X = X + Math.imul(nf, Kf) | 0; G = G + Math.imul(nf, Zf) | 0; U = U + Math.imul(ef, qf) | 0; X = X + Math.imul(ef, Qf) | 0; X = X + Math.imul(tf, qf) | 0; G = G + Math.imul(tf, Qf) | 0; U = U + Math.imul(Q, $f) | 0; X = X + Math.imul(Q, fe) | 0; X = X + Math.imul(Y, $f) | 0; G = G + Math.imul(Y, fe) | 0; var de = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (de >>> 26) | 0; de &= 67108863; U = Math.imul(Sf, Nf); X = Math.imul(Sf, Ff); X = X + Math.imul(Tf, Nf) | 0; G = Math.imul(Tf, Ff); U = U + Math.imul(_f, xf) | 0; X = X + Math.imul(_f, Lf) | 0; X = X + Math.imul(wf, xf) | 0; G = G + Math.imul(wf, Lf) | 0; U = U + Math.imul(mf, If) | 0; X = X + Math.imul(mf, Jf) | 0; X = X + Math.imul(yf, If) | 0; G = G + Math.imul(yf, Jf) | 0; U = U + Math.imul(hf, Uf) | 0; X = X + Math.imul(hf, jf) | 0; X = X + Math.imul(pf, Uf) | 0; G = G + Math.imul(pf, jf) | 0; U = U + Math.imul(df, Gf) | 0; X = X + Math.imul(df, zf) | 0; X = X + Math.imul(uf, Gf) | 0; G = G + Math.imul(uf, zf) | 0; U = U + Math.imul(sf, Kf) | 0; X = X + Math.imul(sf, Zf) | 0; X = X + Math.imul(cf, Kf) | 0; G = G + Math.imul(cf, Zf) | 0; U = U + Math.imul(af, qf) | 0; X = X + Math.imul(af, Qf) | 0; X = X + Math.imul(nf, qf) | 0; G = G + Math.imul(nf, Qf) | 0; U = U + Math.imul(ef, $f) | 0; X = X + Math.imul(ef, fe) | 0; X = X + Math.imul(tf, $f) | 0; G = G + Math.imul(tf, fe) | 0; var ue = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (ue >>> 26) | 0; ue &= 67108863; U = Math.imul(Sf, xf); X = Math.imul(Sf, Lf); X = X + Math.imul(Tf, xf) | 0; G = Math.imul(Tf, Lf); U = U + Math.imul(_f, If) | 0; X = X + Math.imul(_f, Jf) | 0; X = X + Math.imul(wf, If) | 0; G = G + Math.imul(wf, Jf) | 0; U = U + Math.imul(mf, Uf) | 0; X = X + Math.imul(mf, jf) | 0; X = X + Math.imul(yf, Uf) | 0; G = G + Math.imul(yf, jf) | 0; U = U + Math.imul(hf, Gf) | 0; X = X + Math.imul(hf, zf) | 0; X = X + Math.imul(pf, Gf) | 0; G = G + Math.imul(pf, zf) | 0; U = U + Math.imul(df, Kf) | 0; X = X + Math.imul(df, Zf) | 0; X = X + Math.imul(uf, Kf) | 0; G = G + Math.imul(uf, Zf) | 0; U = U + Math.imul(sf, qf) | 0; X = X + Math.imul(sf, Qf) | 0; X = X + Math.imul(cf, qf) | 0; G = G + Math.imul(cf, Qf) | 0; U = U + Math.imul(af, $f) | 0; X = X + Math.imul(af, fe) | 0; X = X + Math.imul(nf, $f) | 0; G = G + Math.imul(nf, fe) | 0; var le = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (le >>> 26) | 0; le &= 67108863; U = Math.imul(Sf, If); X = Math.imul(Sf, Jf); X = X + Math.imul(Tf, If) | 0; G = Math.imul(Tf, Jf); U = U + Math.imul(_f, Uf) | 0; X = X + Math.imul(_f, jf) | 0; X = X + Math.imul(wf, Uf) | 0; G = G + Math.imul(wf, jf) | 0; U = U + Math.imul(mf, Gf) | 0; X = X + Math.imul(mf, zf) | 0; X = X + Math.imul(yf, Gf) | 0; G = G + Math.imul(yf, zf) | 0; U = U + Math.imul(hf, Kf) | 0; X = X + Math.imul(hf, Zf) | 0; X = X + Math.imul(pf, Kf) | 0; G = G + Math.imul(pf, Zf) | 0; U = U + Math.imul(df, qf) | 0; X = X + Math.imul(df, Qf) | 0; X = X + Math.imul(uf, qf) | 0; G = G + Math.imul(uf, Qf) | 0; U = U + Math.imul(sf, $f) | 0; X = X + Math.imul(sf, fe) | 0; X = X + Math.imul(cf, $f) | 0; G = G + Math.imul(cf, fe) | 0; var he = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (he >>> 26) | 0; he &= 67108863; U = Math.imul(Sf, Uf); X = Math.imul(Sf, jf); X = X + Math.imul(Tf, Uf) | 0; G = Math.imul(Tf, jf); U = U + Math.imul(_f, Gf) | 0; X = X + Math.imul(_f, zf) | 0; X = X + Math.imul(wf, Gf) | 0; G = G + Math.imul(wf, zf) | 0; U = U + Math.imul(mf, Kf) | 0; X = X + Math.imul(mf, Zf) | 0; X = X + Math.imul(yf, Kf) | 0; G = G + Math.imul(yf, Zf) | 0; U = U + Math.imul(hf, qf) | 0; X = X + Math.imul(hf, Qf) | 0; X = X + Math.imul(pf, qf) | 0; G = G + Math.imul(pf, Qf) | 0; U = U + Math.imul(df, $f) | 0; X = X + Math.imul(df, fe) | 0; X = X + Math.imul(uf, $f) | 0; G = G + Math.imul(uf, fe) | 0; var pe = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (pe >>> 26) | 0; pe &= 67108863; U = Math.imul(Sf, Gf); X = Math.imul(Sf, zf); X = X + Math.imul(Tf, Gf) | 0; G = Math.imul(Tf, zf); U = U + Math.imul(_f, Kf) | 0; X = X + Math.imul(_f, Zf) | 0; X = X + Math.imul(wf, Kf) | 0; G = G + Math.imul(wf, Zf) | 0; U = U + Math.imul(mf, qf) | 0; X = X + Math.imul(mf, Qf) | 0; X = X + Math.imul(yf, qf) | 0; G = G + Math.imul(yf, Qf) | 0; U = U + Math.imul(hf, $f) | 0; X = X + Math.imul(hf, fe) | 0; X = X + Math.imul(pf, $f) | 0; G = G + Math.imul(pf, fe) | 0; var ve = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (ve >>> 26) | 0; ve &= 67108863; U = Math.imul(Sf, Kf); X = Math.imul(Sf, Zf); X = X + Math.imul(Tf, Kf) | 0; G = Math.imul(Tf, Zf); U = U + Math.imul(_f, qf) | 0; X = X + Math.imul(_f, Qf) | 0; X = X + Math.imul(wf, qf) | 0; G = G + Math.imul(wf, Qf) | 0; U = U + Math.imul(mf, $f) | 0; X = X + Math.imul(mf, fe) | 0; X = X + Math.imul(yf, $f) | 0; G = G + Math.imul(yf, fe) | 0; var me = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (me >>> 26) | 0; me &= 67108863; U = Math.imul(Sf, qf); X = Math.imul(Sf, Qf); X = X + Math.imul(Tf, qf) | 0; G = Math.imul(Tf, Qf); U = U + Math.imul(_f, $f) | 0; X = X + Math.imul(_f, fe) | 0; X = X + Math.imul(wf, $f) | 0; G = G + Math.imul(wf, fe) | 0; var ye = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (ye >>> 26) | 0; ye &= 67108863; U = Math.imul(Sf, $f); X = Math.imul(Sf, fe); X = X + Math.imul(Tf, $f) | 0; G = Math.imul(Tf, fe); var ge = (H + U | 0) + ((X & 8191) << 13) | 0; H = (G + (X >>> 13) | 0) + (ge >>> 26) | 0; ge &= 67108863; J[0] = ee; J[1] = te; J[2] = re; J[3] = ae; J[4] = ne; J[5] = ie; J[6] = oe; J[7] = se; J[8] = ce; J[9] = be; J[10] = de; J[11] = ue; J[12] = le; J[13] = he; J[14] = pe; J[15] = ve; J[16] = me; J[17] = ye; J[18] = ge; if (H !== 0) { J[19] = H; N.length++ } return N }; if (!Math.imul) { U = smallMulTo } function bigMulTo(T, B, N) { N.negative = B.negative ^ T.negative; N.length = T.length + B.length; var L = 0; var I = 0; for (var J = 0; J < N.length - 1; J++) { var H = I; I = 0; var U = L & 67108863; var X = Math.min(J, B.length - 1); for (var G = Math.max(0, J - T.length + 1); G <= X; G++) { var V = J - G; var Z = T.words[V] | 0; var W = B.words[G] | 0; var q = Z * W; var Q = q & 67108863; H = H + (q / 67108864 | 0) | 0; Q = Q + U | 0; U = Q & 67108863; H = H + (Q >>> 26) | 0; I += H >>> 26; H &= 67108863 } N.words[J] = U; L = H; H = I } if (L !== 0) { N.words[J] = L } else { N.length-- } return N.strip() } function jumboMulTo(T, B, N) { var L = new FFTM; return L.mulp(T, B, N) } BN.prototype.mulTo = function mulTo(T, B) { var N; var L = this.length + T.length; if (this.length === 10 && T.length === 10) { N = U(this, T, B) } else if (L < 63) { N = smallMulTo(this, T, B) } else if (L < 1024) { N = bigMulTo(this, T, B) } else { N = jumboMulTo(this, T, B) } return N }; function FFTM(T, B) { this.x = T; this.y = B } FFTM.prototype.makeRBT = function makeRBT(T) { var B = new Array(T); var N = BN.prototype._countBits(T) - 1; for (var L = 0; L < T; L++) { B[L] = this.revBin(L, N, T) } return B }; FFTM.prototype.revBin = function revBin(T, B, N) { if (T === 0 || T === N - 1) return T; var L = 0; for (var I = 0; I < B; I++) { L |= (T & 1) << B - I - 1; T >>= 1 } return L }; FFTM.prototype.permute = function permute(T, B, N, L, I, J) { for (var H = 0; H < J; H++) { L[H] = B[T[H]]; I[H] = N[T[H]] } }; FFTM.prototype.transform = function transform(T, B, N, L, I, J) { this.permute(J, T, B, N, L, I); for (var H = 1; H < I; H <<= 1) { var U = H << 1; var X = Math.cos(2 * Math.PI / U); var G = Math.sin(2 * Math.PI / U); for (var V = 0; V < I; V += U) { var Z = X; var W = G; for (var q = 0; q < H; q++) { var Q = N[V + q]; var Y = L[V + q]; var ff = N[V + q + H]; var ef = L[V + q + H]; var tf = Z * ff - W * ef; ef = Z * ef + W * ff; ff = tf; N[V + q] = Q + ff; L[V + q] = Y + ef; N[V + q + H] = Q - ff; L[V + q + H] = Y - ef; if (q !== U) { tf = X * Z - G * W; W = X * W + G * Z; Z = tf } } } } }; FFTM.prototype.guessLen13b = function guessLen13b(T, B) { var N = Math.max(B, T) | 1; var L = N & 1; var I = 0; for (N = N / 2 | 0; N; N = N >>> 1) { I++ } return 1 << I + 1 + L }; FFTM.prototype.conjugate = function conjugate(T, B, N) { if (N <= 1) return; for (var L = 0; L < N / 2; L++) { var I = T[L]; T[L] = T[N - L - 1]; T[N - L - 1] = I; I = B[L]; B[L] = -B[N - L - 1]; B[N - L - 1] = -I } }; FFTM.prototype.normalize13b = function normalize13b(T, B) { var N = 0; for (var L = 0; L < B / 2; L++) { var I = Math.round(T[2 * L + 1] / B) * 8192 + Math.round(T[2 * L] / B) + N; T[L] = I & 67108863; if (I < 67108864) { N = 0 } else { N = I / 67108864 | 0 } } return T }; FFTM.prototype.convert13b = function convert13b(T, B, N, L) { var I = 0; for (var J = 0; J < B; J++) { I = I + (T[J] | 0); N[2 * J] = I & 8191; I = I >>> 13; N[2 * J + 1] = I & 8191; I = I >>> 13 } for (J = 2 * B; J < L; ++J) { N[J] = 0 } assert(I === 0); assert((I & ~8191) === 0) }; FFTM.prototype.stub = function stub(T) { var B = new Array(T); for (var N = 0; N < T; N++) { B[N] = 0 } return B }; FFTM.prototype.mulp = function mulp(T, B, N) { var L = 2 * this.guessLen13b(T.length, B.length); var I = this.makeRBT(L); var J = this.stub(L); var H = new Array(L); var U = new Array(L); var X = new Array(L); var G = new Array(L); var V = new Array(L); var Z = new Array(L); var W = N.words; W.length = L; this.convert13b(T.words, T.length, H, L); this.convert13b(B.words, B.length, G, L); this.transform(H, J, U, X, L, I); this.transform(G, J, V, Z, L, I); for (var q = 0; q < L; q++) { var Q = U[q] * V[q] - X[q] * Z[q]; X[q] = U[q] * Z[q] + X[q] * V[q]; U[q] = Q } this.conjugate(U, X, L); this.transform(U, X, W, J, L, I); this.conjugate(W, J, L); this.normalize13b(W, L); N.negative = T.negative ^ B.negative; N.length = T.length + B.length; return N.strip() }; BN.prototype.mul = function mul(T) { var B = new BN(null); B.words = new Array(this.length + T.length); return this.mulTo(T, B) }; BN.prototype.mulf = function mulf(T) { var B = new BN(null); B.words = new Array(this.length + T.length); return jumboMulTo(this, T, B) }; BN.prototype.imul = function imul(T) { return this.clone().mulTo(T, this) }; BN.prototype.imuln = function imuln(T) { assert(typeof T === "number"); assert(T < 67108864); var B = 0; for (var N = 0; N < this.length; N++) { var L = (this.words[N] | 0) * T; var I = (L & 67108863) + (B & 67108863); B >>= 26; B += L / 67108864 | 0; B += I >>> 26; this.words[N] = I & 67108863 } if (B !== 0) { this.words[N] = B; this.length++ } this.length = T === 0 ? 1 : this.length; return this }; BN.prototype.muln = function muln(T) { return this.clone().imuln(T) }; BN.prototype.sqr = function sqr() { return this.mul(this) }; BN.prototype.isqr = function isqr() { return this.imul(this.clone()) }; BN.prototype.pow = function pow(T) { var B = toBitArray(T); if (B.length === 0) return new BN(1); var N = this; for (var L = 0; L < B.length; L++, N = N.sqr()) { if (B[L] !== 0) break } if (++L < B.length) { for (var I = N.sqr(); L < B.length; L++, I = I.sqr()) { if (B[L] === 0) continue; N = N.mul(I) } } return N }; BN.prototype.iushln = function iushln(T) { assert(typeof T === "number" && T >= 0); var B = T % 26; var N = (T - B) / 26; var L = 67108863 >>> 26 - B << 26 - B; var I; if (B !== 0) { var J = 0; for (I = 0; I < this.length; I++) { var H = this.words[I] & L; var U = (this.words[I] | 0) - H << B; this.words[I] = U | J; J = H >>> 26 - B } if (J) { this.words[I] = J; this.length++ } } if (N !== 0) { for (I = this.length - 1; I >= 0; I--) { this.words[I + N] = this.words[I] } for (I = 0; I < N; I++) { this.words[I] = 0 } this.length += N } return this.strip() }; BN.prototype.ishln = function ishln(T) { assert(this.negative === 0); return this.iushln(T) }; BN.prototype.iushrn = function iushrn(T, B, N) { assert(typeof T === "number" && T >= 0); var L; if (B) { L = (B - B % 26) / 26 } else { L = 0 } var I = T % 26; var J = Math.min((T - I) / 26, this.length); var H = 67108863 ^ 67108863 >>> I << I; var U = N; L -= J; L = Math.max(0, L); if (U) { for (var X = 0; X < J; X++) { U.words[X] = this.words[X] } U.length = J } if (J === 0) { } else if (this.length > J) { this.length -= J; for (X = 0; X < this.length; X++) { this.words[X] = this.words[X + J] } } else { this.words[0] = 0; this.length = 1 } var G = 0; for (X = this.length - 1; X >= 0 && (G !== 0 || X >= L); X--) { var V = this.words[X] | 0; this.words[X] = G << 26 - I | V >>> I; G = V & H } if (U && G !== 0) { U.words[U.length++] = G } if (this.length === 0) { this.words[0] = 0; this.length = 1 } return this.strip() }; BN.prototype.ishrn = function ishrn(T, B, N) { assert(this.negative === 0); return this.iushrn(T, B, N) }; BN.prototype.shln = function shln(T) { return this.clone().ishln(T) }; BN.prototype.ushln = function ushln(T) { return this.clone().iushln(T) }; BN.prototype.shrn = function shrn(T) { return this.clone().ishrn(T) }; BN.prototype.ushrn = function ushrn(T) { return this.clone().iushrn(T) }; BN.prototype.testn = function testn(T) { assert(typeof T === "number" && T >= 0); var B = T % 26; var N = (T - B) / 26; var L = 1 << B; if (this.length <= N) return false; var I = this.words[N]; return !!(I & L) }; BN.prototype.imaskn = function imaskn(T) { assert(typeof T === "number" && T >= 0); var B = T % 26; var N = (T - B) / 26; assert(this.negative === 0, "imaskn works only with positive numbers"); if (this.length <= N) { return this } if (B !== 0) { N++ } this.length = Math.min(N, this.length); if (B !== 0) { var L = 67108863 ^ 67108863 >>> B << B; this.words[this.length - 1] &= L } return this.strip() }; BN.prototype.maskn = function maskn(T) { return this.clone().imaskn(T) }; BN.prototype.iaddn = function iaddn(T) { assert(typeof T === "number"); assert(T < 67108864); if (T < 0) return this.isubn(-T); if (this.negative !== 0) { if (this.length === 1 && (this.words[0] | 0) < T) { this.words[0] = T - (this.words[0] | 0); this.negative = 0; return this } this.negative = 0; this.isubn(T); this.negative = 1; return this } return this._iaddn(T) }; BN.prototype._iaddn = function _iaddn(T) { this.words[0] += T; for (var B = 0; B < this.length && this.words[B] >= 67108864; B++) { this.words[B] -= 67108864; if (B === this.length - 1) { this.words[B + 1] = 1 } else { this.words[B + 1]++ } } this.length = Math.max(this.length, B + 1); return this }; BN.prototype.isubn = function isubn(T) { assert(typeof T === "number"); assert(T < 67108864); if (T < 0) return this.iaddn(-T); if (this.negative !== 0) { this.negative = 0; this.iaddn(T); this.negative = 1; return this } this.words[0] -= T; if (this.length === 1 && this.words[0] < 0) { this.words[0] = -this.words[0]; this.negative = 1 } else { for (var B = 0; B < this.length && this.words[B] < 0; B++) { this.words[B] += 67108864; this.words[B + 1] -= 1 } } return this.strip() }; BN.prototype.addn = function addn(T) { return this.clone().iaddn(T) }; BN.prototype.subn = function subn(T) { return this.clone().isubn(T) }; BN.prototype.iabs = function iabs() { this.negative = 0; return this }; BN.prototype.abs = function abs() { return this.clone().iabs() }; BN.prototype._ishlnsubmul = function _ishlnsubmul(T, B, N) { var L = T.length + N; var I; this._expand(L); var J; var H = 0; for (I = 0; I < T.length; I++) { J = (this.words[I + N] | 0) + H; var U = (T.words[I] | 0) * B; J -= U & 67108863; H = (J >> 26) - (U / 67108864 | 0); this.words[I + N] = J & 67108863 } for (; I < this.length - N; I++) { J = (this.words[I + N] | 0) + H; H = J >> 26; this.words[I + N] = J & 67108863 } if (H === 0) return this.strip(); assert(H === -1); H = 0; for (I = 0; I < this.length; I++) { J = -(this.words[I] | 0) + H; H = J >> 26; this.words[I] = J & 67108863 } this.negative = 1; return this.strip() }; BN.prototype._wordDiv = function _wordDiv(T, B) { var N = this.length - T.length; var L = this.clone(); var I = T; var J = I.words[I.length - 1] | 0; var H = this._countBits(J); N = 26 - H; if (N !== 0) { I = I.ushln(N); L.iushln(N); J = I.words[I.length - 1] | 0 } var U = L.length - I.length; var X; if (B !== "mod") { X = new BN(null); X.length = U + 1; X.words = new Array(X.length); for (var G = 0; G < X.length; G++) { X.words[G] = 0 } } var V = L.clone()._ishlnsubmul(I, 1, U); if (V.negative === 0) { L = V; if (X) { X.words[U] = 1 } } for (var Z = U - 1; Z >= 0; Z--) { var W = (L.words[I.length + Z] | 0) * 67108864 + (L.words[I.length + Z - 1] | 0); W = Math.min(W / J | 0, 67108863); L._ishlnsubmul(I, W, Z); while (L.negative !== 0) { W--; L.negative = 0; L._ishlnsubmul(I, 1, Z); if (!L.isZero()) { L.negative ^= 1 } } if (X) { X.words[Z] = W } } if (X) { X.strip() } L.strip(); if (B !== "div" && N !== 0) { L.iushrn(N) } return { div: X || null, mod: L } }; BN.prototype.divmod = function divmod(T, B, N) { assert(!T.isZero()); if (this.isZero()) { return { div: new BN(0), mod: new BN(0) } } var L, I, J; if (this.negative !== 0 && T.negative === 0) { J = this.neg().divmod(T, B); if (B !== "mod") { L = J.div.neg() } if (B !== "div") { I = J.mod.neg(); if (N && I.negative !== 0) { I.iadd(T) } } return { div: L, mod: I } } if (this.negative === 0 && T.negative !== 0) { J = this.divmod(T.neg(), B); if (B !== "mod") { L = J.div.neg() } return { div: L, mod: J.mod } } if ((this.negative & T.negative) !== 0) { J = this.neg().divmod(T.neg(), B); if (B !== "div") { I = J.mod.neg(); if (N && I.negative !== 0) { I.isub(T) } } return { div: J.div, mod: I } } if (T.length > this.length || this.cmp(T) < 0) { return { div: new BN(0), mod: this } } if (T.length === 1) { if (B === "div") { return { div: this.divn(T.words[0]), mod: null } } if (B === "mod") { return { div: null, mod: new BN(this.modn(T.words[0])) } } return { div: this.divn(T.words[0]), mod: new BN(this.modn(T.words[0])) } } return this._wordDiv(T, B) }; BN.prototype.div = function div(T) { return this.divmod(T, "div", false).div }; BN.prototype.mod = function mod(T) { return this.divmod(T, "mod", false).mod }; BN.prototype.umod = function umod(T) { return this.divmod(T, "mod", true).mod }; BN.prototype.divRound = function divRound(T) { var B = this.divmod(T); if (B.mod.isZero()) return B.div; var N = B.div.negative !== 0 ? B.mod.isub(T) : B.mod; var L = T.ushrn(1); var I = T.andln(1); var J = N.cmp(L); if (J < 0 || I === 1 && J === 0) return B.div; return B.div.negative !== 0 ? B.div.isubn(1) : B.div.iaddn(1) }; BN.prototype.modn = function modn(T) { assert(T <= 67108863); var B = (1 << 26) % T; var N = 0; for (var L = this.length - 1; L >= 0; L--) { N = (B * N + (this.words[L] | 0)) % T } return N }; BN.prototype.idivn = function idivn(T) { assert(T <= 67108863); var B = 0; for (var N = this.length - 1; N >= 0; N--) { var L = (this.words[N] | 0) + B * 67108864; this.words[N] = L / T | 0; B = L % T } return this.strip() }; BN.prototype.divn = function divn(T) { return this.clone().idivn(T) }; BN.prototype.egcd = function egcd(T) { assert(T.negative === 0); assert(!T.isZero()); var B = this; var N = T.clone(); if (B.negative !== 0) { B = B.umod(T) } else { B = B.clone() } var L = new BN(1); var I = new BN(0); var J = new BN(0); var H = new BN(1); var U = 0; while (B.isEven() && N.isEven()) { B.iushrn(1); N.iushrn(1); ++U } var X = N.clone(); var G = B.clone(); while (!B.isZero()) { for (var V = 0, Z = 1; (B.words[0] & Z) === 0 && V < 26; ++V, Z <<= 1); if (V > 0) { B.iushrn(V); while (V-- > 0) { if (L.isOdd() || I.isOdd()) { L.iadd(X); I.isub(G) } L.iushrn(1); I.iushrn(1) } } for (var W = 0, q = 1; (N.words[0] & q) === 0 && W < 26; ++W, q <<= 1); if (W > 0) { N.iushrn(W); while (W-- > 0) { if (J.isOdd() || H.isOdd()) { J.iadd(X); H.isub(G) } J.iushrn(1); H.iushrn(1) } } if (B.cmp(N) >= 0) { B.isub(N); L.isub(J); I.isub(H) } else { N.isub(B); J.isub(L); H.isub(I) } } return { a: J, b: H, gcd: N.iushln(U) } }; BN.prototype._invmp = function _invmp(T) { assert(T.negative === 0); assert(!T.isZero()); var B = this; var N = T.clone(); if (B.negative !== 0) { B = B.umod(T) } else { B = B.clone() } var L = new BN(1); var I = new BN(0); var J = N.clone(); while (B.cmpn(1) > 0 && N.cmpn(1) > 0) { for (var H = 0, U = 1; (B.words[0] & U) === 0 && H < 26; ++H, U <<= 1); if (H > 0) { B.iushrn(H); while (H-- > 0) { if (L.isOdd()) { L.iadd(J) } L.iushrn(1) } } for (var X = 0, G = 1; (N.words[0] & G) === 0 && X < 26; ++X, G <<= 1); if (X > 0) { N.iushrn(X); while (X-- > 0) { if (I.isOdd()) { I.iadd(J) } I.iushrn(1) } } if (B.cmp(N) >= 0) { B.isub(N); L.isub(I) } else { N.isub(B); I.isub(L) } } var V; if (B.cmpn(1) === 0) { V = L } else { V = I } if (V.cmpn(0) < 0) { V.iadd(T) } return V }; BN.prototype.gcd = function gcd(T) { if (this.isZero()) return T.abs(); if (T.isZero()) return this.abs(); var B = this.clone(); var N = T.clone(); B.negative = 0; N.negative = 0; for (var L = 0; B.isEven() && N.isEven(); L++) { B.iushrn(1); N.iushrn(1) } do { while (B.isEven()) { B.iushrn(1) } while (N.isEven()) { N.iushrn(1) } var I = B.cmp(N); if (I < 0) { var J = B; B = N; N = J } else if (I === 0 || N.cmpn(1) === 0) { break } B.isub(N) } while (true); return N.iushln(L) }; BN.prototype.invm = function invm(T) { return this.egcd(T).a.umod(T) }; BN.prototype.isEven = function isEven() { return (this.words[0] & 1) === 0 }; BN.prototype.isOdd = function isOdd() { return (this.words[0] & 1) === 1 }; BN.prototype.andln = function andln(T) { return this.words[0] & T }; BN.prototype.bincn = function bincn(T) { assert(typeof T === "number"); var B = T % 26; var N = (T - B) / 26; var L = 1 << B; if (this.length <= N) { this._expand(N + 1); this.words[N] |= L; return this } var I = L; for (var J = N; I !== 0 && J < this.length; J++) { var H = this.words[J] | 0; H += I; I = H >>> 26; H &= 67108863; this.words[J] = H } if (I !== 0) { this.words[J] = I; this.length++ } return this }; BN.prototype.isZero = function isZero() { return this.length === 1 && this.words[0] === 0 }; BN.prototype.cmpn = function cmpn(T) { var B = T < 0; if (this.negative !== 0 && !B) return -1; if (this.negative === 0 && B) return 1; this.strip(); var N; if (this.length > 1) { N = 1 } else { if (B) { T = -T } assert(T <= 67108863, "Number is too big"); var L = this.words[0] | 0; N = L === T ? 0 : L < T ? -1 : 1 } if (this.negative !== 0) return -N | 0; return N }; BN.prototype.cmp = function cmp(T) { if (this.negative !== 0 && T.negative === 0) return -1; if (this.negative === 0 && T.negative !== 0) return 1; var B = this.ucmp(T); if (this.negative !== 0) return -B | 0; return B }; BN.prototype.ucmp = function ucmp(T) { if (this.length > T.length) return 1; if (this.length < T.length) return -1; var B = 0; for (var N = this.length - 1; N >= 0; N--) { var L = this.words[N] | 0; var I = T.words[N] | 0; if (L === I) continue; if (L < I) { B = -1 } else if (L > I) { B = 1 } break } return B }; BN.prototype.gtn = function gtn(T) { return this.cmpn(T) === 1 }; BN.prototype.gt = function gt(T) { return this.cmp(T) === 1 }; BN.prototype.gten = function gten(T) { return this.cmpn(T) >= 0 }; BN.prototype.gte = function gte(T) { return this.cmp(T) >= 0 }; BN.prototype.ltn = function ltn(T) { return this.cmpn(T) === -1 }; BN.prototype.lt = function lt(T) { return this.cmp(T) === -1 }; BN.prototype.lten = function lten(T) { return this.cmpn(T) <= 0 }; BN.prototype.lte = function lte(T) { return this.cmp(T) <= 0 }; BN.prototype.eqn = function eqn(T) { return this.cmpn(T) === 0 }; BN.prototype.eq = function eq(T) { return this.cmp(T) === 0 }; BN.red = function red(T) { return new Red(T) }; BN.prototype.toRed = function toRed(T) { assert(!this.red, "Already a number in reduction context"); assert(this.negative === 0, "red works only with positives"); return T.convertTo(this)._forceRed(T) }; BN.prototype.fromRed = function fromRed() { assert(this.red, "fromRed works only with numbers in reduction context"); return this.red.convertFrom(this) }; BN.prototype._forceRed = function _forceRed(T) { this.red = T; return this }; BN.prototype.forceRed = function forceRed(T) { assert(!this.red, "Already a number in reduction context"); return this._forceRed(T) }; BN.prototype.redAdd = function redAdd(T) { assert(this.red, "redAdd works only with red numbers"); return this.red.add(this, T) }; BN.prototype.redIAdd = function redIAdd(T) { assert(this.red, "redIAdd works only with red numbers"); return this.red.iadd(this, T) }; BN.prototype.redSub = function redSub(T) { assert(this.red, "redSub works only with red numbers"); return this.red.sub(this, T) }; BN.prototype.redISub = function redISub(T) { assert(this.red, "redISub works only with red numbers"); return this.red.isub(this, T) }; BN.prototype.redShl = function redShl(T) { assert(this.red, "redShl works only with red numbers"); return this.red.shl(this, T) }; BN.prototype.redMul = function redMul(T) { assert(this.red, "redMul works only with red numbers"); this.red._verify2(this, T); return this.red.mul(this, T) }; BN.prototype.redIMul = function redIMul(T) { assert(this.red, "redMul works only with red numbers"); this.red._verify2(this, T); return this.red.imul(this, T) }; BN.prototype.redSqr = function redSqr() { assert(this.red, "redSqr works only with red numbers"); this.red._verify1(this); return this.red.sqr(this) }; BN.prototype.redISqr = function redISqr() { assert(this.red, "redISqr works only with red numbers"); this.red._verify1(this); return this.red.isqr(this) }; BN.prototype.redSqrt = function redSqrt() { assert(this.red, "redSqrt works only with red numbers"); this.red._verify1(this); return this.red.sqrt(this) }; BN.prototype.redInvm = function redInvm() { assert(this.red, "redInvm works only with red numbers"); this.red._verify1(this); return this.red.invm(this) }; BN.prototype.redNeg = function redNeg() { assert(this.red, "redNeg works only with red numbers"); this.red._verify1(this); return this.red.neg(this) }; BN.prototype.redPow = function redPow(T) { assert(this.red && !T.red, "redPow(normalNum)"); this.red._verify1(this); return this.red.pow(this, T) }; var X = { k256: null, p224: null, p192: null, p25519: null }; function MPrime(T, B) { this.name = T; this.p = new BN(B, 16); this.n = this.p.bitLength(); this.k = new BN(1).iushln(this.n).isub(this.p); this.tmp = this._tmp() } MPrime.prototype._tmp = function _tmp() { var T = new BN(null); T.words = new Array(Math.ceil(this.n / 13)); return T }; MPrime.prototype.ireduce = function ireduce(T) { var B = T; var N; do { this.split(B, this.tmp); B = this.imulK(B); B = B.iadd(this.tmp); N = B.bitLength() } while (N > this.n); var L = N < this.n ? -1 : B.ucmp(this.p); if (L === 0) { B.words[0] = 0; B.length = 1 } else if (L > 0) { B.isub(this.p) } else { if (B.strip !== undefined) { B.strip() } else { B._strip() } } return B }; MPrime.prototype.split = function split(T, B) { T.iushrn(this.n, 0, B) }; MPrime.prototype.imulK = function imulK(T) { return T.imul(this.k) }; function K256() { MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f") } inherits(K256, MPrime); K256.prototype.split = function split(T, B) { var N = 4194303; var L = Math.min(T.length, 9); for (var I = 0; I < L; I++) { B.words[I] = T.words[I] } B.length = L; if (T.length <= 9) { T.words[0] = 0; T.length = 1; return } var J = T.words[9]; B.words[B.length++] = J & N; for (I = 10; I < T.length; I++) { var H = T.words[I] | 0; T.words[I - 10] = (H & N) << 4 | J >>> 22; J = H } J >>>= 22; T.words[I - 10] = J; if (J === 0 && T.length > 10) { T.length -= 10 } else { T.length -= 9 } }; K256.prototype.imulK = function imulK(T) { T.words[T.length] = 0; T.words[T.length + 1] = 0; T.length += 2; var B = 0; for (var N = 0; N < T.length; N++) { var L = T.words[N] | 0; B += L * 977; T.words[N] = B & 67108863; B = L * 64 + (B / 67108864 | 0) } if (T.words[T.length - 1] === 0) { T.length--; if (T.words[T.length - 1] === 0) { T.length-- } } return T }; function P224() { MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001") } inherits(P224, MPrime); function P192() { MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff") } inherits(P192, MPrime); function P25519() { MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed") } inherits(P25519, MPrime); P25519.prototype.imulK = function imulK(T) { var B = 0; for (var N = 0; N < T.length; N++) { var L = (T.words[N] | 0) * 19 + B; var I = L & 67108863; L >>>= 26; T.words[N] = I; B = L } if (B !== 0) { T.words[T.length++] = B } return T }; BN._prime = function prime(T) { if (X[T]) return X[T]; var prime; if (T === "k256") { prime = new K256 } else if (T === "p224") { prime = new P224 } else if (T === "p192") { prime = new P192 } else if (T === "p25519") { prime = new P25519 } else { throw new Error("Unknown prime " + T) } X[T] = prime; return prime }; function Red(T) { if (typeof T === "string") { var B = BN._prime(T); this.m = B.p; this.prime = B } else { assert(T.gtn(1), "modulus must be greater than 1"); this.m = T; this.prime = null } } Red.prototype._verify1 = function _verify1(T) { assert(T.negative === 0, "red works only with positives"); assert(T.red, "red works only with red numbers") }; Red.prototype._verify2 = function _verify2(T, B) { assert((T.negative | B.negative) === 0, "red works only with positives"); assert(T.red && T.red === B.red, "red works only with red numbers") }; Red.prototype.imod = function imod(T) { if (this.prime) return this.prime.ireduce(T)._forceRed(this); return T.umod(this.m)._forceRed(this) }; Red.prototype.neg = function neg(T) { if (T.isZero()) { return T.clone() } return this.m.sub(T)._forceRed(this) }; Red.prototype.add = function add(T, B) { this._verify2(T, B); var N = T.add(B); if (N.cmp(this.m) >= 0) { N.isub(this.m) } return N._forceRed(this) }; Red.prototype.iadd = function iadd(T, B) { this._verify2(T, B); var N = T.iadd(B); if (N.cmp(this.m) >= 0) { N.isub(this.m) } return N }; Red.prototype.sub = function sub(T, B) { this._verify2(T, B); var N = T.sub(B); if (N.cmpn(0) < 0) { N.iadd(this.m) } return N._forceRed(this) }; Red.prototype.isub = function isub(T, B) { this._verify2(T, B); var N = T.isub(B); if (N.cmpn(0) < 0) { N.iadd(this.m) } return N }; Red.prototype.shl = function shl(T, B) { this._verify1(T); return this.imod(T.ushln(B)) }; Red.prototype.imul = function imul(T, B) { this._verify2(T, B); return this.imod(T.imul(B)) }; Red.prototype.mul = function mul(T, B) { this._verify2(T, B); return this.imod(T.mul(B)) }; Red.prototype.isqr = function isqr(T) { return this.imul(T, T.clone()) }; Red.prototype.sqr = function sqr(T) { return this.mul(T, T) }; Red.prototype.sqrt = function sqrt(T) { if (T.isZero()) return T.clone(); var B = this.m.andln(3); assert(B % 2 === 1); if (B === 3) { var N = this.m.add(new BN(1)).iushrn(2); return this.pow(T, N) } var L = this.m.subn(1); var I = 0; while (!L.isZero() && L.andln(1) === 0) { I++; L.iushrn(1) } assert(!L.isZero()); var J = new BN(1).toRed(this); var H = J.redNeg(); var U = this.m.subn(1).iushrn(1); var X = this.m.bitLength(); X = new BN(2 * X * X).toRed(this); while (this.pow(X, U).cmp(H) !== 0) { X.redIAdd(H) } var G = this.pow(X, L); var V = this.pow(T, L.addn(1).iushrn(1)); var Z = this.pow(T, L); var W = I; while (Z.cmp(J) !== 0) { var q = Z; for (var Q = 0; q.cmp(J) !== 0; Q++) { q = q.redSqr() } assert(Q < W); var Y = this.pow(G, new BN(1).iushln(W - Q - 1)); V = V.redMul(Y); G = Y.redSqr(); Z = Z.redMul(G); W = Q } return V }; Red.prototype.invm = function invm(T) { var B = T._invmp(this.m); if (B.negative !== 0) { B.negative = 0; return this.imod(B).redNeg() } else { return this.imod(B) } }; Red.prototype.pow = function pow(T, B) { if (B.isZero()) return new BN(1).toRed(this); if (B.cmpn(1) === 0) return T.clone(); var N = 4; var L = new Array(1 << N); L[0] = new BN(1).toRed(this); L[1] = T; for (var I = 2; I < L.length; I++) { L[I] = this.mul(L[I - 1], T) } var J = L[0]; var H = 0; var U = 0; var X = B.bitLength() % 26; if (X === 0) { X = 26 } for (I = B.length - 1; I >= 0; I--) { var G = B.words[I]; for (var V = X - 1; V >= 0; V--) { var Z = G >> V & 1; if (J !== L[0]) { J = this.sqr(J) } if (Z === 0 && H === 0) { U = 0; continue } H <<= 1; H |= Z; U++; if (U !== N && (I !== 0 || V !== 0)) continue; J = this.mul(J, L[H]); U = 0; H = 0 } X = 26 } return J }; Red.prototype.convertTo = function convertTo(T) { var B = T.umod(this.m); return B === T ? B.clone() : B }; Red.prototype.convertFrom = function convertFrom(T) { var B = T.clone(); B.red = null; return B }; BN.mont = function mont(T) { return new Mont(T) }; function Mont(T) { Red.call(this, T); this.shift = this.m.bitLength(); if (this.shift % 26 !== 0) { this.shift += 26 - this.shift % 26 } this.r = new BN(1).iushln(this.shift); this.r2 = this.imod(this.r.sqr()); this.rinv = this.r._invmp(this.m); this.minv = this.rinv.mul(this.r).isubn(1).div(this.m); this.minv = this.minv.umod(this.r); this.minv = this.r.sub(this.minv) } inherits(Mont, Red); Mont.prototype.convertTo = function convertTo(T) { return this.imod(T.ushln(this.shift)) }; Mont.prototype.convertFrom = function convertFrom(T) { var B = this.imod(T.mul(this.rinv)); B.red = null; return B }; Mont.prototype.imul = function imul(T, B) { if (T.isZero() || B.isZero()) { T.words[0] = 0; T.length = 1; return T } var N = T.imul(B); var L = N.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m); var I = N.isub(L).iushrn(this.shift); var J = I; if (I.cmp(this.m) >= 0) { J = I.isub(this.m) } else if (I.cmpn(0) < 0) { J = I.iadd(this.m) } return J._forceRed(this) }; Mont.prototype.mul = function mul(T, B) { if (T.isZero() || B.isZero()) return new BN(0)._forceRed(this); var N = T.mul(B); var L = N.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m); var I = N.isub(L).iushrn(this.shift); var J = I; if (I.cmp(this.m) >= 0) { J = I.isub(this.m) } else if (I.cmpn(0) < 0) { J = I.iadd(this.m) } return J._forceRed(this) }; Mont.prototype.invm = function invm(T) { var B = this.imod(T._invmp(this.m).mul(this.r2)); return B._forceRed(this) } })(false || T, this) }, 7477: (T, B, N) => { var L = B; L.utils = N(3215); L.common = N(7265); L.sha = N(316); L.ripemd = N(8831); L.hmac = N(6535); L.sha1 = L.sha.sha1; L.sha256 = L.sha.sha256; L.sha224 = L.sha.sha224; L.sha384 = L.sha.sha384; L.sha512 = L.sha.sha512; L.ripemd160 = L.ripemd.ripemd160 }, 7265: (T, B, N) => { "use strict"; var L = N(3215); var I = N(3798); function BlockHash() { this.pending = null; this.pendingTotal = 0; this.blockSize = this.constructor.blockSize; this.outSize = this.constructor.outSize; this.hmacStrength = this.constructor.hmacStrength; this.padLength = this.constructor.padLength / 8; this.endian = "big"; this._delta8 = this.blockSize / 8; this._delta32 = this.blockSize / 32 } B.BlockHash = BlockHash; BlockHash.prototype.update = function update(T, B) { T = L.toArray(T, B); if (!this.pending) this.pending = T; else this.pending = this.pending.concat(T); this.pendingTotal += T.length; if (this.pending.length >= this._delta8) { T = this.pending; var N = T.length % this._delta8; this.pending = T.slice(T.length - N, T.length); if (this.pending.length === 0) this.pending = null; T = L.join32(T, 0, T.length - N, this.endian); for (var I = 0; I < T.length; I += this._delta32)this._update(T, I, I + this._delta32) } return this }; BlockHash.prototype.digest = function digest(T) { this.update(this._pad()); I(this.pending === null); return this._digest(T) }; BlockHash.prototype._pad = function pad() { var T = this.pendingTotal; var B = this._delta8; var N = B - (T + this.padLength) % B; var L = new Array(N + this.padLength); L[0] = 128; for (var I = 1; I < N; I++)L[I] = 0; T <<= 3; if (this.endian === "big") { for (var J = 8; J < this.padLength; J++)L[I++] = 0; L[I++] = 0; L[I++] = 0; L[I++] = 0; L[I++] = 0; L[I++] = T >>> 24 & 255; L[I++] = T >>> 16 & 255; L[I++] = T >>> 8 & 255; L[I++] = T & 255 } else { L[I++] = T & 255; L[I++] = T >>> 8 & 255; L[I++] = T >>> 16 & 255; L[I++] = T >>> 24 & 255; L[I++] = 0; L[I++] = 0; L[I++] = 0; L[I++] = 0; for (J = 8; J < this.padLength; J++)L[I++] = 0 } return L } }, 6535: (T, B, N) => { "use strict"; var L = N(3215); var I = N(3798); function Hmac(T, B, N) { if (!(this instanceof Hmac)) return new Hmac(T, B, N); this.Hash = T; this.blockSize = T.blockSize / 8; this.outSize = T.outSize / 8; this.inner = null; this.outer = null; this._init(L.toArray(B, N)) } T.exports = Hmac; Hmac.prototype._init = function init(T) { if (T.length > this.blockSize) T = (new this.Hash).update(T).digest(); I(T.length <= this.blockSize); for (var B = T.length; B < this.blockSize; B++)T.push(0); for (B = 0; B < T.length; B++)T[B] ^= 54; this.inner = (new this.Hash).update(T); for (B = 0; B < T.length; B++)T[B] ^= 106; this.outer = (new this.Hash).update(T) }; Hmac.prototype.update = function update(T, B) { this.inner.update(T, B); return this }; Hmac.prototype.digest = function digest(T) { this.outer.update(this.inner.digest()); return this.outer.digest(T) } }, 8831: (T, B, N) => { "use strict"; var L = N(3215); var I = N(7265); var J = L.rotl32; var H = L.sum32; var U = L.sum32_3; var X = L.sum32_4; var G = I.BlockHash; function RIPEMD160() { if (!(this instanceof RIPEMD160)) return new RIPEMD160; G.call(this); this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520]; this.endian = "little" } L.inherits(RIPEMD160, G); B.ripemd160 = RIPEMD160; RIPEMD160.blockSize = 512; RIPEMD160.outSize = 160; RIPEMD160.hmacStrength = 192; RIPEMD160.padLength = 64; RIPEMD160.prototype._update = function update(T, B) { var N = this.h[0]; var L = this.h[1]; var I = this.h[2]; var G = this.h[3]; var Q = this.h[4]; var Y = N; var ff = L; var ef = I; var tf = G; var rf = Q; for (var af = 0; af < 80; af++) { var nf = H(J(X(N, f(af, L, I, G), T[V[af] + B], K(af)), W[af]), Q); N = Q; Q = G; G = J(I, 10); I = L; L = nf; nf = H(J(X(Y, f(79 - af, ff, ef, tf), T[Z[af] + B], Kh(af)), q[af]), rf); Y = rf; rf = tf; tf = J(ef, 10); ef = ff; ff = nf } nf = U(this.h[1], I, tf); this.h[1] = U(this.h[2], G, rf); this.h[2] = U(this.h[3], Q, Y); this.h[3] = U(this.h[4], N, ff); this.h[4] = U(this.h[0], L, ef); this.h[0] = nf }; RIPEMD160.prototype._digest = function digest(T) { if (T === "hex") return L.toHex32(this.h, "little"); else return L.split32(this.h, "little") }; function f(T, B, N, L) { if (T <= 15) return B ^ N ^ L; else if (T <= 31) return B & N | ~B & L; else if (T <= 47) return (B | ~N) ^ L; else if (T <= 63) return B & L | N & ~L; else return B ^ (N | ~L) } function K(T) { if (T <= 15) return 0; else if (T <= 31) return 1518500249; else if (T <= 47) return 1859775393; else if (T <= 63) return 2400959708; else return 2840853838 } function Kh(T) { if (T <= 15) return 1352829926; else if (T <= 31) return 1548603684; else if (T <= 47) return 1836072691; else if (T <= 63) return 2053994217; else return 0 } var V = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]; var Z = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]; var W = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]; var q = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11] }, 316: (T, B, N) => { "use strict"; B.sha1 = N(2576); B.sha224 = N(3239); B.sha256 = N(7190); B.sha384 = N(1926); B.sha512 = N(2423) }, 2576: (T, B, N) => { "use strict"; var L = N(3215); var I = N(7265); var J = N(9562); var H = L.rotl32; var U = L.sum32; var X = L.sum32_5; var G = J.ft_1; var V = I.BlockHash; var Z = [1518500249, 1859775393, 2400959708, 3395469782]; function SHA1() { if (!(this instanceof SHA1)) return new SHA1; V.call(this); this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520]; this.W = new Array(80) } L.inherits(SHA1, V); T.exports = SHA1; SHA1.blockSize = 512; SHA1.outSize = 160; SHA1.hmacStrength = 80; SHA1.padLength = 64; SHA1.prototype._update = function _update(T, B) { var N = this.W; for (var L = 0; L < 16; L++)N[L] = T[B + L]; for (; L < N.length; L++)N[L] = H(N[L - 3] ^ N[L - 8] ^ N[L - 14] ^ N[L - 16], 1); var I = this.h[0]; var J = this.h[1]; var V = this.h[2]; var W = this.h[3]; var q = this.h[4]; for (L = 0; L < N.length; L++) { var Q = ~~(L / 20); var Y = X(H(I, 5), G(Q, J, V, W), q, N[L], Z[Q]); q = W; W = V; V = H(J, 30); J = I; I = Y } this.h[0] = U(this.h[0], I); this.h[1] = U(this.h[1], J); this.h[2] = U(this.h[2], V); this.h[3] = U(this.h[3], W); this.h[4] = U(this.h[4], q) }; SHA1.prototype._digest = function digest(T) { if (T === "hex") return L.toHex32(this.h, "big"); else return L.split32(this.h, "big") } }, 3239: (T, B, N) => { "use strict"; var L = N(3215); var I = N(7190); function SHA224() { if (!(this instanceof SHA224)) return new SHA224; I.call(this); this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428] } L.inherits(SHA224, I); T.exports = SHA224; SHA224.blockSize = 512; SHA224.outSize = 224; SHA224.hmacStrength = 192; SHA224.padLength = 64; SHA224.prototype._digest = function digest(T) { if (T === "hex") return L.toHex32(this.h.slice(0, 7), "big"); else return L.split32(this.h.slice(0, 7), "big") } }, 7190: (T, B, N) => { "use strict"; var L = N(3215); var I = N(7265); var J = N(9562); var H = N(3798); var U = L.sum32; var X = L.sum32_4; var G = L.sum32_5; var V = J.ch32; var Z = J.maj32; var W = J.s0_256; var q = J.s1_256; var Q = J.g0_256; var Y = J.g1_256; var ff = I.BlockHash; var ef = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]; function SHA256() { if (!(this instanceof SHA256)) return new SHA256; ff.call(this); this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225]; this.k = ef; this.W = new Array(64) } L.inherits(SHA256, ff); T.exports = SHA256; SHA256.blockSize = 512; SHA256.outSize = 256; SHA256.hmacStrength = 192; SHA256.padLength = 64; SHA256.prototype._update = function _update(T, B) { var N = this.W; for (var L = 0; L < 16; L++)N[L] = T[B + L]; for (; L < N.length; L++)N[L] = X(Y(N[L - 2]), N[L - 7], Q(N[L - 15]), N[L - 16]); var I = this.h[0]; var J = this.h[1]; var ff = this.h[2]; var ef = this.h[3]; var tf = this.h[4]; var rf = this.h[5]; var af = this.h[6]; var nf = this.h[7]; H(this.k.length === N.length); for (L = 0; L < N.length; L++) { var of = G(nf, q(tf), V(tf, rf, af), this.k[L], N[L]); var sf = U(W(I), Z(I, J, ff)); nf = af; af = rf; rf = tf; tf = U(ef, of); ef = ff; ff = J; J = I; I = U(of, sf) } this.h[0] = U(this.h[0], I); this.h[1] = U(this.h[1], J); this.h[2] = U(this.h[2], ff); this.h[3] = U(this.h[3], ef); this.h[4] = U(this.h[4], tf); this.h[5] = U(this.h[5], rf); this.h[6] = U(this.h[6], af); this.h[7] = U(this.h[7], nf) }; SHA256.prototype._digest = function digest(T) { if (T === "hex") return L.toHex32(this.h, "big"); else return L.split32(this.h, "big") } }, 1926: (T, B, N) => { "use strict"; var L = N(3215); var I = N(2423); function SHA384() { if (!(this instanceof SHA384)) return new SHA384; I.call(this); this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428] } L.inherits(SHA384, I); T.exports = SHA384; SHA384.blockSize = 1024; SHA384.outSize = 384; SHA384.hmacStrength = 192; SHA384.padLength = 128; SHA384.prototype._digest = function digest(T) { if (T === "hex") return L.toHex32(this.h.slice(0, 12), "big"); else return L.split32(this.h.slice(0, 12), "big") } }, 2423: (T, B, N) => { "use strict"; var L = N(3215); var I = N(7265); var J = N(3798); var H = L.rotr64_hi; var U = L.rotr64_lo; var X = L.shr64_hi; var G = L.shr64_lo; var V = L.sum64; var Z = L.sum64_hi; var W = L.sum64_lo; var q = L.sum64_4_hi; var Q = L.sum64_4_lo; var Y = L.sum64_5_hi; var ff = L.sum64_5_lo; var ef = I.BlockHash; var tf = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591]; function SHA512() { if (!(this instanceof SHA512)) return new SHA512; ef.call(this); this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209]; this.k = tf; this.W = new Array(160) } L.inherits(SHA512, ef); T.exports = SHA512; SHA512.blockSize = 1024; SHA512.outSize = 512; SHA512.hmacStrength = 192; SHA512.padLength = 128; SHA512.prototype._prepareBlock = function _prepareBlock(T, B) { var N = this.W; for (var L = 0; L < 32; L++)N[L] = T[B + L]; for (; L < N.length; L += 2) { var I = g1_512_hi(N[L - 4], N[L - 3]); var J = g1_512_lo(N[L - 4], N[L - 3]); var H = N[L - 14]; var U = N[L - 13]; var X = g0_512_hi(N[L - 30], N[L - 29]); var G = g0_512_lo(N[L - 30], N[L - 29]); var V = N[L - 32]; var Z = N[L - 31]; N[L] = q(I, J, H, U, X, G, V, Z); N[L + 1] = Q(I, J, H, U, X, G, V, Z) } }; SHA512.prototype._update = function _update(T, B) { this._prepareBlock(T, B); var N = this.W; var L = this.h[0]; var I = this.h[1]; var H = this.h[2]; var U = this.h[3]; var X = this.h[4]; var G = this.h[5]; var q = this.h[6]; var Q = this.h[7]; var ef = this.h[8]; var tf = this.h[9]; var rf = this.h[10]; var af = this.h[11]; var nf = this.h[12]; var of = this.h[13]; var sf = this.h[14]; var cf = this.h[15]; J(this.k.length === N.length); for (var bf = 0; bf < N.length; bf += 2) { var df = sf; var uf = cf; var lf = s1_512_hi(ef, tf); var hf = s1_512_lo(ef, tf); var pf = ch64_hi(ef, tf, rf, af, nf, of); var vf = ch64_lo(ef, tf, rf, af, nf, of); var mf = this.k[bf]; var yf = this.k[bf + 1]; var gf = N[bf]; var _f = N[bf + 1]; var wf = Y(df, uf, lf, hf, pf, vf, mf, yf, gf, _f); var Af = ff(df, uf, lf, hf, pf, vf, mf, yf, gf, _f); df = s0_512_hi(L, I); uf = s0_512_lo(L, I); lf = maj64_hi(L, I, H, U, X, G); hf = maj64_lo(L, I, H, U, X, G); var Sf = Z(df, uf, lf, hf); var Tf = W(df, uf, lf, hf); sf = nf; cf = of; nf = rf; of = af; rf = ef; af = tf; ef = Z(q, Q, wf, Af); tf = W(Q, Q, wf, Af); q = X; Q = G; X = H; G = U; H = L; U = I; L = Z(wf, Af, Sf, Tf); I = W(wf, Af, Sf, Tf) } V(this.h, 0, L, I); V(this.h, 2, H, U); V(this.h, 4, X, G); V(this.h, 6, q, Q); V(this.h, 8, ef, tf); V(this.h, 10, rf, af); V(this.h, 12, nf, of); V(this.h, 14, sf, cf) }; SHA512.prototype._digest = function digest(T) { if (T === "hex") return L.toHex32(this.h, "big"); else return L.split32(this.h, "big") }; function ch64_hi(T, B, N, L, I) { var J = T & N ^ ~T & I; if (J < 0) J += 4294967296; return J } function ch64_lo(T, B, N, L, I, J) { var H = B & L ^ ~B & J; if (H < 0) H += 4294967296; return H } function maj64_hi(T, B, N, L, I) { var J = T & N ^ T & I ^ N & I; if (J < 0) J += 4294967296; return J } function maj64_lo(T, B, N, L, I, J) { var H = B & L ^ B & J ^ L & J; if (H < 0) H += 4294967296; return H } function s0_512_hi(T, B) { var N = H(T, B, 28); var L = H(B, T, 2); var I = H(B, T, 7); var J = N ^ L ^ I; if (J < 0) J += 4294967296; return J } function s0_512_lo(T, B) { var N = U(T, B, 28); var L = U(B, T, 2); var I = U(B, T, 7); var J = N ^ L ^ I; if (J < 0) J += 4294967296; return J } function s1_512_hi(T, B) { var N = H(T, B, 14); var L = H(T, B, 18); var I = H(B, T, 9); var J = N ^ L ^ I; if (J < 0) J += 4294967296; return J } function s1_512_lo(T, B) { var N = U(T, B, 14); var L = U(T, B, 18); var I = U(B, T, 9); var J = N ^ L ^ I; if (J < 0) J += 4294967296; return J } function g0_512_hi(T, B) { var N = H(T, B, 1); var L = H(T, B, 8); var I = X(T, B, 7); var J = N ^ L ^ I; if (J < 0) J += 4294967296; return J } function g0_512_lo(T, B) { var N = U(T, B, 1); var L = U(T, B, 8); var I = G(T, B, 7); var J = N ^ L ^ I; if (J < 0) J += 4294967296; return J } function g1_512_hi(T, B) { var N = H(T, B, 19); var L = H(B, T, 29); var I = X(T, B, 6); var J = N ^ L ^ I; if (J < 0) J += 4294967296; return J } function g1_512_lo(T, B) { var N = U(T, B, 19); var L = U(B, T, 29); var I = G(T, B, 6); var J = N ^ L ^ I; if (J < 0) J += 4294967296; return J } }, 9562: (T, B, N) => { "use strict"; var L = N(3215); var I = L.rotr32; function ft_1(T, B, N, L) { if (T === 0) return ch32(B, N, L); if (T === 1 || T === 3) return p32(B, N, L); if (T === 2) return maj32(B, N, L) } B.ft_1 = ft_1; function ch32(T, B, N) { return T & B ^ ~T & N } B.ch32 = ch32; function maj32(T, B, N) { return T & B ^ T & N ^ B & N } B.maj32 = maj32; function p32(T, B, N) { return T ^ B ^ N } B.p32 = p32; function s0_256(T) { return I(T, 2) ^ I(T, 13) ^ I(T, 22) } B.s0_256 = s0_256; function s1_256(T) { return I(T, 6) ^ I(T, 11) ^ I(T, 25) } B.s1_256 = s1_256; function g0_256(T) { return I(T, 7) ^ I(T, 18) ^ T >>> 3 } B.g0_256 = g0_256; function g1_256(T) { return I(T, 17) ^ I(T, 19) ^ T >>> 10 } B.g1_256 = g1_256 }, 3215: (T, B, N) => { "use strict"; var L = N(3798); var I = N(9598); B.inherits = I; function isSurrogatePair(T, B) { if ((T.charCodeAt(B) & 64512) !== 55296) { return false } if (B < 0 || B + 1 >= T.length) { return false } return (T.charCodeAt(B + 1) & 64512) === 56320 } function toArray(T, B) { if (Array.isArray(T)) return T.slice(); if (!T) return []; var N = []; if (typeof T === "string") { if (!B) { var L = 0; for (var I = 0; I < T.length; I++) { var J = T.charCodeAt(I); if (J < 128) { N[L++] = J } else if (J < 2048) { N[L++] = J >> 6 | 192; N[L++] = J & 63 | 128 } else if (isSurrogatePair(T, I)) { J = 65536 + ((J & 1023) << 10) + (T.charCodeAt(++I) & 1023); N[L++] = J >> 18 | 240; N[L++] = J >> 12 & 63 | 128; N[L++] = J >> 6 & 63 | 128; N[L++] = J & 63 | 128 } else { N[L++] = J >> 12 | 224; N[L++] = J >> 6 & 63 | 128; N[L++] = J & 63 | 128 } } } else if (B === "hex") { T = T.replace(/[^a-z0-9]+/gi, ""); if (T.length % 2 !== 0) T = "0" + T; for (I = 0; I < T.length; I += 2)N.push(parseInt(T[I] + T[I + 1], 16)) } } else { for (I = 0; I < T.length; I++)N[I] = T[I] | 0 } return N } B.toArray = toArray; function toHex(T) { var B = ""; for (var N = 0; N < T.length; N++)B += zero2(T[N].toString(16)); return B } B.toHex = toHex; function htonl(T) { var B = T >>> 24 | T >>> 8 & 65280 | T << 8 & 16711680 | (T & 255) << 24; return B >>> 0 } B.htonl = htonl; function toHex32(T, B) { var N = ""; for (var L = 0; L < T.length; L++) { var I = T[L]; if (B === "little") I = htonl(I); N += zero8(I.toString(16)) } return N } B.toHex32 = toHex32; function zero2(T) { if (T.length === 1) return "0" + T; else return T } B.zero2 = zero2; function zero8(T) { if (T.length === 7) return "0" + T; else if (T.length === 6) return "00" + T; else if (T.length === 5) return "000" + T; else if (T.length === 4) return "0000" + T; else if (T.length === 3) return "00000" + T; else if (T.length === 2) return "000000" + T; else if (T.length === 1) return "0000000" + T; else return T } B.zero8 = zero8; function join32(T, B, N, I) { var J = N - B; L(J % 4 === 0); var H = new Array(J / 4); for (var U = 0, X = B; U < H.length; U++, X += 4) { var G; if (I === "big") G = T[X] << 24 | T[X + 1] << 16 | T[X + 2] << 8 | T[X + 3]; else G = T[X + 3] << 24 | T[X + 2] << 16 | T[X + 1] << 8 | T[X]; H[U] = G >>> 0 } return H } B.join32 = join32; function split32(T, B) { var N = new Array(T.length * 4); for (var L = 0, I = 0; L < T.length; L++, I += 4) { var J = T[L]; if (B === "big") { N[I] = J >>> 24; N[I + 1] = J >>> 16 & 255; N[I + 2] = J >>> 8 & 255; N[I + 3] = J & 255 } else { N[I + 3] = J >>> 24; N[I + 2] = J >>> 16 & 255; N[I + 1] = J >>> 8 & 255; N[I] = J & 255 } } return N } B.split32 = split32; function rotr32(T, B) { return T >>> B | T << 32 - B } B.rotr32 = rotr32; function rotl32(T, B) { return T << B | T >>> 32 - B } B.rotl32 = rotl32; function sum32(T, B) { return T + B >>> 0 } B.sum32 = sum32; function sum32_3(T, B, N) { return T + B + N >>> 0 } B.sum32_3 = sum32_3; function sum32_4(T, B, N, L) { return T + B + N + L >>> 0 } B.sum32_4 = sum32_4; function sum32_5(T, B, N, L, I) { return T + B + N + L + I >>> 0 } B.sum32_5 = sum32_5; function sum64(T, B, N, L) { var I = T[B]; var J = T[B + 1]; var H = L + J >>> 0; var U = (H < L ? 1 : 0) + N + I; T[B] = U >>> 0; T[B + 1] = H } B.sum64 = sum64; function sum64_hi(T, B, N, L) { var I = B + L >>> 0; var J = (I < B ? 1 : 0) + T + N; return J >>> 0 } B.sum64_hi = sum64_hi; function sum64_lo(T, B, N, L) { var I = B + L; return I >>> 0 } B.sum64_lo = sum64_lo; function sum64_4_hi(T, B, N, L, I, J, H, U) { var X = 0; var G = B; G = G + L >>> 0; X += G < B ? 1 : 0; G = G + J >>> 0; X += G < J ? 1 : 0; G = G + U >>> 0; X += G < U ? 1 : 0; var V = T + N + I + H + X; return V >>> 0 } B.sum64_4_hi = sum64_4_hi; function sum64_4_lo(T, B, N, L, I, J, H, U) { var X = B + L + J + U; return X >>> 0 } B.sum64_4_lo = sum64_4_lo; function sum64_5_hi(T, B, N, L, I, J, H, U, X, G) { var V = 0; var Z = B; Z = Z + L >>> 0; V += Z < B ? 1 : 0; Z = Z + J >>> 0; V += Z < J ? 1 : 0; Z = Z + U >>> 0; V += Z < U ? 1 : 0; Z = Z + G >>> 0; V += Z < G ? 1 : 0; var W = T + N + I + H + X + V; return W >>> 0 } B.sum64_5_hi = sum64_5_hi; function sum64_5_lo(T, B, N, L, I, J, H, U, X, G) { var V = B + L + J + U + G; return V >>> 0 } B.sum64_5_lo = sum64_5_lo; function rotr64_hi(T, B, N) { var L = B << 32 - N | T >>> N; return L >>> 0 } B.rotr64_hi = rotr64_hi; function rotr64_lo(T, B, N) { var L = T << 32 - N | B >>> N; return L >>> 0 } B.rotr64_lo = rotr64_lo; function shr64_hi(T, B, N) { return T >>> N } B.shr64_hi = shr64_hi; function shr64_lo(T, B, N) { var L = T << 32 - N | B >>> N; return L >>> 0 } B.shr64_lo = shr64_lo }, 3768: (T, B, N) => { "use strict"; var L = N(7477); var I = N(8660); var J = N(3798); function HmacDRBG(T) { if (!(this instanceof HmacDRBG)) return new HmacDRBG(T); this.hash = T.hash; this.predResist = !!T.predResist; this.outLen = this.hash.outSize; this.minEntropy = T.minEntropy || this.hash.hmacStrength; this._reseed = null; this.reseedInterval = null; this.K = null; this.V = null; var B = I.toArray(T.entropy, T.entropyEnc || "hex"); var N = I.toArray(T.nonce, T.nonceEnc || "hex"); var L = I.toArray(T.pers, T.persEnc || "hex"); J(B.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"); this._init(B, N, L) } T.exports = HmacDRBG; HmacDRBG.prototype._init = function init(T, B, N) { var L = T.concat(B).concat(N); this.K = new Array(this.outLen / 8); this.V = new Array(this.outLen / 8); for (var I = 0; I < this.V.length; I++) { this.K[I] = 0; this.V[I] = 1 } this._update(L); this._reseed = 1; this.reseedInterval = 281474976710656 }; HmacDRBG.prototype._hmac = function hmac() { return new L.hmac(this.hash, this.K) }; HmacDRBG.prototype._update = function update(T) { var B = this._hmac().update(this.V).update([0]); if (T) B = B.update(T); this.K = B.digest(); this.V = this._hmac().update(this.V).digest(); if (!T) return; this.K = this._hmac().update(this.V).update([1]).update(T).digest(); this.V = this._hmac().update(this.V).digest() }; HmacDRBG.prototype.reseed = function reseed(T, B, N, L) { if (typeof B !== "string") { L = N; N = B; B = null } T = I.toArray(T, B); N = I.toArray(N, L); J(T.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"); this._update(T.concat(N || [])); this._reseed = 1 }; HmacDRBG.prototype.generate = function generate(T, B, N, L) { if (this._reseed > this.reseedInterval) throw new Error("Reseed is required"); if (typeof B !== "string") { L = N; N = B; B = null } if (N) { N = I.toArray(N, L || "hex"); this._update(N) } var J = []; while (J.length < T) { this.V = this._hmac().update(this.V).digest(); J = J.concat(this.V) } var H = J.slice(0, T); this._update(N); this._reseed++; return I.encode(H, B) } }, 930: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); var N; var L = typeof Symbol !== "undefined" && typeof Symbol("x") === "symbol"; var I = typeof Map !== "undefined"; var J = typeof Set !== "undefined"; var H = typeof Proxy !== "undefined" && typeof Proxy.revocable !== "undefined" && typeof Reflect !== "undefined"; var U = L ? Symbol.for("immer-nothing") : (N = {}, N["immer-nothing"] = true, N); var X = L ? Symbol.for("immer-draftable") : "__$immer_draftable"; var G = L ? Symbol.for("immer-state") : "__$immer_state"; var V = typeof Symbol != "undefined" && Symbol.iterator || "@@iterator"; var Z = { 0: "Illegal state", 1: "Immer drafts cannot have computed properties", 2: "This object has been frozen and should not be mutated", 3: function _(T) { return "Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? " + T }, 4: "An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.", 5: "Immer forbids circular references", 6: "The first or second argument to `produce` must be a function", 7: "The third argument to `produce` must be a function or undefined", 8: "First argument to `createDraft` must be a plain object, an array, or an immerable object", 9: "First argument to `finishDraft` must be a draft returned by `createDraft`", 10: "The given draft is already finalized", 11: "Object.defineProperty() cannot be used on an Immer draft", 12: "Object.setPrototypeOf() cannot be used on an Immer draft", 13: "Immer only supports deleting array indices", 14: "Immer only supports setting array indices and the 'length' property", 15: function _(T) { return "Cannot apply patch, path doesn't resolve: " + T }, 16: 'Sets cannot have "replace" patches.', 17: function _(T) { return "Unsupported patch operation: " + T }, 18: function _(T) { return "The plugin for '" + T + "' has not been loaded into Immer. To enable the plugin, import and call `enable" + T + "()` when initializing your application." }, 20: "Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available", 21: function _(T) { return "produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '" + T + "'" }, 22: function _(T) { return "'current' expects a draft, got: " + T }, 23: function _(T) { return "'original' expects a draft, got: " + T } }; function die(T) { for (var B = arguments.length, N = new Array(B > 1 ? B - 1 : 0), L = 1; L < B; L++) { N[L - 1] = arguments[L] } { var I = Z[T]; var J = !I ? "unknown error nr: " + T : typeof I === "function" ? I.apply(null, N) : I; throw new Error("[Immer] " + J) } } var W = 0; var q = 1; var Q = 2; var Y = 3; var ff = 0; var ef = 1; var tf = 4; var rf = 5; var af = 2; var nf = 3; function isDraft(T) { return !!T && !!T[G] } function isDraftable(T) { if (!T) return false; return isPlainObject(T) || Array.isArray(T) || !!T[X] || !!T.constructor[X] || isMap(T) || isSet(T) } function isPlainObject(T) { if (!T || typeof T !== "object") return false; var B = Object.getPrototypeOf(T); return !B || B === Object.prototype } function original(T) { if (!isDraft(T)) die(23, T); return T[G].base_ } var of = typeof Reflect !== "undefined" && Reflect.ownKeys ? Reflect.ownKeys : typeof Object.getOwnPropertySymbols !== "undefined" ? function (T) { return Object.getOwnPropertyNames(T).concat(Object.getOwnPropertySymbols(T)) } : Object.getOwnPropertyNames; var sf = Object.getOwnPropertyDescriptors || function getOwnPropertyDescriptors(T) { var B = {}; of(T).forEach((function (N) { B[N] = Object.getOwnPropertyDescriptor(T, N) })); return B }; function each(T, B, N) { if (N === void 0) { N = false } if (getArchtype(T) === W) { (N ? Object.keys : of)(T).forEach((function (L) { if (!N || typeof L !== "symbol") B(L, T[L], T) })) } else { T.forEach((function (N, L) { return B(L, N, T) })) } } function getArchtype(T) { var B = T[G]; return B ? B.type_ > 3 ? B.type_ - 4 : B.type_ : Array.isArray(T) ? q : isMap(T) ? Q : isSet(T) ? Y : W } function has(T, B) { return getArchtype(T) === Q ? T.has(B) : Object.prototype.hasOwnProperty.call(T, B) } function get(T, B) { return getArchtype(T) === Q ? T.get(B) : T[B] } function set(T, B, N) { var L = getArchtype(T); if (L === Q) T.set(B, N); else if (L === Y) { T.delete(B); T.add(N) } else T[B] = N } function is(T, B) { if (T === B) { return T !== 0 || 1 / T === 1 / B } else { return T !== T && B !== B } } function isMap(T) { return I && T instanceof Map } function isSet(T) { return J && T instanceof Set } function latest(T) { return T.copy_ || T.base_ } function shallowCopy(T) { if (Array.isArray(T)) return Array.prototype.slice.call(T); var B = sf(T); delete B[G]; var N = of(B); for (var L = 0; L < N.length; L++) { var I = N[L]; var J = B[I]; if (J.writable === false) { J.writable = true; J.configurable = true } if (J.get || J.set) B[I] = { configurable: true, writable: true, enumerable: J.enumerable, value: T[I] } } return Object.create(Object.getPrototypeOf(T), B) } function freeze(T, B) { if (isFrozen(T) || isDraft(T) || !isDraftable(T)) return; if (getArchtype(T) > 1) { T.set = T.add = T.clear = T.delete = dontMutateFrozenCollections } Object.freeze(T); if (B) each(T, (function (T, B) { return freeze(B, true) }), true) } function dontMutateFrozenCollections() { die(2) } function isFrozen(T) { if (T == null || typeof T !== "object") return true; return Object.isFrozen(T) } var cf = {}; function getPlugin(T) { var B = cf[T]; if (!B) { die(18, T) } return B } function loadPlugin(T, B) { if (!cf[T]) cf[T] = B } var bf; function getCurrentScope() { if (!bf) die(0); return bf } function createScope(T, B) { return { drafts_: [], parent_: T, immer_: B, canAutoFreeze_: true, unfinalizedDrafts_: 0 } } function usePatchesInScope(T, B) { if (B) { getPlugin("Patches"); T.patches_ = []; T.inversePatches_ = []; T.patchListener_ = B } } function revokeScope(T) { leaveScope(T); T.drafts_.forEach(revokeDraft); T.drafts_ = null } function leaveScope(T) { if (T === bf) { bf = T.parent_ } } function enterScope(T) { return bf = createScope(bf, T) } function revokeDraft(T) { var B = T[G]; if (B.type_ === ff || B.type_ === ef) B.revoke_(); else B.revoked_ = true } function processResult(T, B) { B.unfinalizedDrafts_ = B.drafts_.length; var N = B.drafts_[0]; var L = T !== undefined && T !== N; if (!B.immer_.useProxies_) getPlugin("ES5").willFinalizeES5_(B, T, L); if (L) { if (N[G].modified_) { revokeScope(B); die(4) } if (isDraftable(T)) { T = finalize(B, T); if (!B.parent_) maybeFreeze(B, T) } if (B.patches_) { getPlugin("Patches").generateReplacementPatches_(N[G], T, B.patches_, B.inversePatches_) } } else { T = finalize(B, N, []) } revokeScope(B); if (B.patches_) { B.patchListener_(B.patches_, B.inversePatches_) } return T !== U ? T : undefined } function finalize(T, B, N) { if (isFrozen(B)) return B; var L = B[G]; if (!L) { each(B, (function (I, J) { return finalizeProperty(T, L, B, I, J, N) }), true); return B } if (L.scope_ !== T) return B; if (!L.modified_) { maybeFreeze(T, L.base_, true); return L.base_ } if (!L.finalized_) { L.finalized_ = true; L.scope_.unfinalizedDrafts_--; var I = L.type_ === tf || L.type_ === rf ? L.copy_ = shallowCopy(L.draft_) : L.copy_; each(L.type_ === nf ? new Set(I) : I, (function (B, J) { return finalizeProperty(T, L, I, B, J, N) })); maybeFreeze(T, I, false); if (N && T.patches_) { getPlugin("Patches").generatePatches_(L, N, T.patches_, T.inversePatches_) } } return L.copy_ } function finalizeProperty(T, B, N, L, I, J) { if (I === N) die(5); if (isDraft(I)) { var H = J && B && B.type_ !== nf && !has(B.assigned_, L) ? J.concat(L) : undefined; var U = finalize(T, I, H); set(N, L, U); if (isDraft(U)) { T.canAutoFreeze_ = false } else return } if (isDraftable(I) && !isFrozen(I)) { if (!T.immer_.autoFreeze_ && T.unfinalizedDrafts_ < 1) { return } finalize(T, I); if (!B || !B.scope_.parent_) maybeFreeze(T, I) } } function maybeFreeze(T, B, N) { if (N === void 0) { N = false } if (T.immer_.autoFreeze_ && T.canAutoFreeze_) { freeze(B, N) } } function createProxyProxy(T, B) { var N = Array.isArray(T); var L = { type_: N ? ef : ff, scope_: B ? B.scope_ : getCurrentScope(), modified_: false, finalized_: false, assigned_: {}, parent_: B, base_: T, draft_: null, copy_: null, revoke_: null, isManual_: false }; var I = L; var J = df; if (N) { I = [L]; J = uf } var H = Proxy.revocable(I, J), U = H.revoke, X = H.proxy; L.draft_ = X; L.revoke_ = U; return X } var df = { get: function get(T, B) { if (B === G) return T; var N = latest(T); if (!has(N, B)) { return readPropFromProto(T, N, B) } var L = N[B]; if (T.finalized_ || !isDraftable(L)) { return L } if (L === peek(T.base_, B)) { prepareCopy(T); return T.copy_[B] = createProxy(T.scope_.immer_, L, T) } return L }, has: function has(T, B) { return B in latest(T) }, ownKeys: function ownKeys(T) { return Reflect.ownKeys(latest(T)) }, set: function set(T, B, N) { var L = getDescriptorFromProto(latest(T), B); if (L === null || L === void 0 ? void 0 : L.set) { L.set.call(T.draft_, N); return true } if (!T.modified_) { var I = peek(latest(T), B); var J = I === null || I === void 0 ? void 0 : I[G]; if (J && J.base_ === N) { T.copy_[B] = N; T.assigned_[B] = false; return true } if (is(N, I) && (N !== undefined || has(T.base_, B))) return true; prepareCopy(T); markChanged(T) } T.copy_[B] = N; T.assigned_[B] = true; return true }, deleteProperty: function deleteProperty(T, B) { if (peek(T.base_, B) !== undefined || B in T.base_) { T.assigned_[B] = false; prepareCopy(T); markChanged(T) } else { delete T.assigned_[B] } if (T.copy_) delete T.copy_[B]; return true }, getOwnPropertyDescriptor: function getOwnPropertyDescriptor(T, B) { var N = latest(T); var L = Reflect.getOwnPropertyDescriptor(N, B); if (!L) return L; return { writable: true, configurable: T.type_ !== ef || B !== "length", enumerable: L.enumerable, value: N[B] } }, defineProperty: function defineProperty() { die(11) }, getPrototypeOf: function getPrototypeOf(T) { return Object.getPrototypeOf(T.base_) }, setPrototypeOf: function setPrototypeOf() { die(12) } }; var uf = {}; each(df, (function (T, B) { uf[T] = function () { arguments[0] = arguments[0][0]; return B.apply(this, arguments) } })); uf.deleteProperty = function (T, B) { if (isNaN(parseInt(B))) die(13); return df.deleteProperty.call(this, T[0], B) }; uf.set = function (T, B, N) { if (B !== "length" && isNaN(parseInt(B))) die(14); return df.set.call(this, T[0], B, N, T[0]) }; function peek(T, B) { var N = T[G]; var L = N ? latest(N) : T; return L[B] } function readPropFromProto(T, B, N) { var L; var I = getDescriptorFromProto(B, N); return I ? "value" in I ? I.value : (L = I.get) === null || L === void 0 ? void 0 : L.call(T.draft_) : undefined } function getDescriptorFromProto(T, B) { if (!(B in T)) return undefined; var N = Object.getPrototypeOf(T); while (N) { var L = Object.getOwnPropertyDescriptor(N, B); if (L) return L; N = Object.getPrototypeOf(N) } return undefined } function markChanged(T) { if (!T.modified_) { T.modified_ = true; if (T.parent_) { markChanged(T.parent_) } } } function prepareCopy(T) { if (!T.copy_) { T.copy_ = shallowCopy(T.base_) } } var lf = function () { function Immer(T) { this.useProxies_ = H; this.autoFreeze_ = true; if (typeof (T === null || T === void 0 ? void 0 : T.useProxies) === "boolean") this.setUseProxies(T.useProxies); if (typeof (T === null || T === void 0 ? void 0 : T.autoFreeze) === "boolean") this.setAutoFreeze(T.autoFreeze); this.produce = this.produce.bind(this); this.produceWithPatches = this.produceWithPatches.bind(this) } var T = Immer.prototype; T.produce = function produce(T, B, N) { if (typeof T === "function" && typeof B !== "function") { var L = B; B = T; var I = this; return function curriedProduce(T) { var N = this; if (T === void 0) { T = L } for (var J = arguments.length, H = new Array(J > 1 ? J - 1 : 0), U = 1; U < J; U++) { H[U - 1] = arguments[U] } return I.produce(T, (function (T) { var L; return (L = B).call.apply(L, [N, T].concat(H)) })) } } if (typeof B !== "function") die(6); if (N !== undefined && typeof N !== "function") die(7); var J; if (isDraftable(T)) { var H = enterScope(this); var X = createProxy(this, T, undefined); var G = true; try { J = B(X); G = false } finally { if (G) revokeScope(H); else leaveScope(H) } if (typeof Promise !== "undefined" && J instanceof Promise) { return J.then((function (T) { usePatchesInScope(H, N); return processResult(T, H) }), (function (T) { revokeScope(H); throw T })) } usePatchesInScope(H, N); return processResult(J, H) } else if (!T || typeof T !== "object") { J = B(T); if (J === U) return undefined; if (J === undefined) J = T; if (this.autoFreeze_) freeze(J, true); return J } else die(21, T) }; T.produceWithPatches = function produceWithPatches(T, B, N) { var L = this; if (typeof T === "function") { return function (B) { for (var N = arguments.length, I = new Array(N > 1 ? N - 1 : 0), J = 1; J < N; J++) { I[J - 1] = arguments[J] } return L.produceWithPatches(B, (function (B) { return T.apply(void 0, [B].concat(I)) })) } } var I, J; var H = this.produce(T, B, (function (T, B) { I = T; J = B })); return [H, I, J] }; T.createDraft = function createDraft(T) { if (!isDraftable(T)) die(8); if (isDraft(T)) T = current(T); var B = enterScope(this); var N = createProxy(this, T, undefined); N[G].isManual_ = true; leaveScope(B); return N }; T.finishDraft = function finishDraft(T, B) { var N = T && T[G]; { if (!N || !N.isManual_) die(9); if (N.finalized_) die(10) } var L = N.scope_; usePatchesInScope(L, B); return processResult(undefined, L) }; T.setAutoFreeze = function setAutoFreeze(T) { this.autoFreeze_ = T }; T.setUseProxies = function setUseProxies(T) { if (T && !H) { die(20) } this.useProxies_ = T }; T.applyPatches = function applyPatches(T, B) { var N; for (N = B.length - 1; N >= 0; N--) { var L = B[N]; if (L.path.length === 0 && L.op === "replace") { T = L.value; break } } var I = getPlugin("Patches").applyPatches_; if (isDraft(T)) { return I(T, B) } return this.produce(T, (function (T) { return I(T, B.slice(N + 1)) })) }; return Immer }(); function createProxy(T, B, N) { var L = isMap(B) ? getPlugin("MapSet").proxyMap_(B, N) : isSet(B) ? getPlugin("MapSet").proxySet_(B, N) : T.useProxies_ ? createProxyProxy(B, N) : getPlugin("ES5").createES5Proxy_(B, N); var I = N ? N.scope_ : getCurrentScope(); I.drafts_.push(L); return L } function current(T) { if (!isDraft(T)) die(22, T); return currentImpl(T) } function currentImpl(T) { if (!isDraftable(T)) return T; var B = T[G]; var N; var L = getArchtype(T); if (B) { if (!B.modified_ && (B.type_ < 4 || !getPlugin("ES5").hasChanges_(B))) return B.base_; B.finalized_ = true; N = copyHelper(T, L); B.finalized_ = false } else { N = copyHelper(T, L) } each(N, (function (T, L) { if (B && get(B.base_, T) === L) return; set(N, T, currentImpl(L)) })); return L === Y ? new Set(N) : N } function copyHelper(T, B) { switch (B) { case Q: return new Map(T); case Y: return Array.from(T) }return shallowCopy(T) } function enableES5() { function willFinalizeES5_(T, B, N) { if (!N) { if (T.patches_) { markChangesRecursively(T.drafts_[0]) } markChangesSweep(T.drafts_) } else if (isDraft(B) && B[G].scope_ === T) { markChangesSweep(T.drafts_) } } function createES5Draft(T, B) { if (T) { var N = new Array(B.length); for (var L = 0; L < B.length; L++) { Object.defineProperty(N, "" + L, proxyProperty(L, true)) } return N } else { var I = sf(B); delete I[G]; var J = of(I); for (var H = 0; H < J.length; H++) { var U = J[H]; I[U] = proxyProperty(U, T || !!I[U].enumerable) } return Object.create(Object.getPrototypeOf(B), I) } } function createES5Proxy_(T, B) { var N = Array.isArray(T); var L = createES5Draft(N, T); var I = { type_: N ? rf : tf, scope_: B ? B.scope_ : getCurrentScope(), modified_: false, finalized_: false, assigned_: {}, parent_: B, base_: T, draft_: L, copy_: null, revoked_: false, isManual_: false }; Object.defineProperty(L, G, { value: I, writable: true }); return L } var T = {}; function proxyProperty(B, N) { var L = T[B]; if (L) { L.enumerable = N } else { T[B] = L = { configurable: true, enumerable: N, get: function get() { var T = this[G]; assertUnrevoked(T); return df.get(T, B) }, set: function set(T) { var N = this[G]; assertUnrevoked(N); df.set(N, B, T) } } } return L } function markChangesSweep(T) { for (var B = T.length - 1; B >= 0; B--) { var N = T[B][G]; if (!N.modified_) { switch (N.type_) { case rf: if (hasArrayChanges(N)) markChanged(N); break; case tf: if (hasObjectChanges(N)) markChanged(N); break } } } } function markChangesRecursively(T) { if (!T || typeof T !== "object") return; var B = T[G]; if (!B) return; var N = B.base_, L = B.draft_, I = B.assigned_, J = B.type_; if (J === tf) { each(L, (function (T) { if (T === G) return; if (N[T] === undefined && !has(N, T)) { I[T] = true; markChanged(B) } else if (!I[T]) { markChangesRecursively(L[T]) } })); each(N, (function (T) { if (L[T] === undefined && !has(L, T)) { I[T] = false; markChanged(B) } })) } else if (J === rf) { if (hasArrayChanges(B)) { markChanged(B); I.length = true } if (L.length < N.length) { for (var H = L.length; H < N.length; H++) { I[H] = false } } else { for (var U = N.length; U < L.length; U++) { I[U] = true } } var X = Math.min(L.length, N.length); for (var V = 0; V < X; V++) { if (I[V] === undefined) markChangesRecursively(L[V]) } } } function hasObjectChanges(T) { var B = T.base_, N = T.draft_; var L = of(N); for (var I = L.length - 1; I >= 0; I--) { var J = L[I]; if (J === G) continue; var H = B[J]; if (H === undefined && !has(B, J)) { return true } else { var U = N[J]; var X = U && U[G]; if (X ? X.base_ !== H : !is(U, H)) { return true } } } var V = !!B[G]; return L.length !== of(B).length + (V ? 0 : 1) } function hasArrayChanges(T) { var B = T.draft_; if (B.length !== T.base_.length) return true; var N = Object.getOwnPropertyDescriptor(B, B.length - 1); if (N && !N.get) return true; return false } function hasChanges_(T) { return T.type_ === tf ? hasObjectChanges(T) : hasArrayChanges(T) } function assertUnrevoked(T) { if (T.revoked_) die(3, JSON.stringify(latest(T))) } loadPlugin("ES5", { createES5Proxy_: createES5Proxy_, willFinalizeES5_: willFinalizeES5_, hasChanges_: hasChanges_ }) } function enablePatches() { var T = "replace"; var B = "add"; var N = "remove"; function generatePatches_(T, B, N, L) { switch (T.type_) { case ff: case tf: case af: return generatePatchesFromAssigned(T, B, N, L); case rf: case ef: return generateArrayPatches(T, B, N, L); case nf: return generateSetPatches(T, B, N, L) } } function generateArrayPatches(N, L, I, J) { var H = N.base_, U = N.assigned_; var X = N.copy_; if (X.length < H.length) { var G = [X, H]; H = G[0]; X = G[1]; var V = [J, I]; I = V[0]; J = V[1] } for (var Z = 0; Z < H.length; Z++) { if (U[Z] && X[Z] !== H[Z]) { var W = L.concat([Z]); I.push({ op: T, path: W, value: clonePatchValueIfNeeded(X[Z]) }); J.push({ op: T, path: W, value: clonePatchValueIfNeeded(H[Z]) }) } } for (var q = H.length; q < X.length; q++) { var Q = L.concat([q]); I.push({ op: B, path: Q, value: clonePatchValueIfNeeded(X[q]) }) } if (H.length < X.length) { J.push({ op: T, path: L.concat(["length"]), value: H.length }) } } function generatePatchesFromAssigned(L, I, J, H) { var U = L.base_, X = L.copy_; each(L.assigned_, (function (L, G) { var V = get(U, L); var Z = get(X, L); var W = !G ? N : has(U, L) ? T : B; if (V === Z && W === T) return; var q = I.concat(L); J.push(W === N ? { op: W, path: q } : { op: W, path: q, value: Z }); H.push(W === B ? { op: N, path: q } : W === N ? { op: B, path: q, value: clonePatchValueIfNeeded(V) } : { op: T, path: q, value: clonePatchValueIfNeeded(V) }) })) } function generateSetPatches(T, L, I, J) { var H = T.base_, U = T.copy_; var X = 0; H.forEach((function (T) { if (!U.has(T)) { var H = L.concat([X]); I.push({ op: N, path: H, value: T }); J.unshift({ op: B, path: H, value: T }) } X++ })); X = 0; U.forEach((function (T) { if (!H.has(T)) { var U = L.concat([X]); I.push({ op: B, path: U, value: T }); J.unshift({ op: N, path: U, value: T }) } X++ })) } function generateReplacementPatches_(B, N, L, I) { L.push({ op: T, path: [], value: N }); I.push({ op: T, path: [], value: B.base_ }) } function applyPatches_(L, I) { I.forEach((function (I) { var J = I.path, H = I.op; var U = L; for (var X = 0; X < J.length - 1; X++) { U = get(U, J[X]); if (typeof U !== "object") die(15, J.join("/")) } var G = getArchtype(U); var V = deepClonePatchValue(I.value); var Z = J[J.length - 1]; switch (H) { case T: switch (G) { case Q: return U.set(Z, V); case Y: die(16); default: return U[Z] = V }case B: switch (G) { case q: return U.splice(Z, 0, V); case Q: return U.set(Z, V); case Y: return U.add(V); default: return U[Z] = V }case N: switch (G) { case q: return U.splice(Z, 1); case Q: return U.delete(Z); case Y: return U.delete(I.value); default: return delete U[Z] }default: die(17, H) } })); return L } function deepClonePatchValue(T) { if (!isDraftable(T)) return T; if (Array.isArray(T)) return T.map(deepClonePatchValue); if (isMap(T)) return new Map(Array.from(T.entries()).map((function (T) { var B = T[0], N = T[1]; return [B, deepClonePatchValue(N)] }))); if (isSet(T)) return new Set(Array.from(T).map(deepClonePatchValue)); var B = Object.create(Object.getPrototypeOf(T)); for (var N in T) { B[N] = deepClonePatchValue(T[N]) } return B } function clonePatchValueIfNeeded(T) { if (isDraft(T)) { return deepClonePatchValue(T) } else return T } loadPlugin("Patches", { applyPatches_: applyPatches_, generatePatches_: generatePatches_, generateReplacementPatches_: generateReplacementPatches_ }) } function enableMapSet() { var T = function extendStatics(B, N) { T = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) { if (B.hasOwnProperty(N)) T[N] = B[N] } }; return T(B, N) }; function __extends(B, N) { T(B, N); function __() { this.constructor = B } B.prototype = (__.prototype = N.prototype, new __) } var B = function (T) { __extends(DraftMap, T); function DraftMap(T, B) { this[G] = { type_: af, parent_: B, scope_: B ? B.scope_ : getCurrentScope(), modified_: false, finalized_: false, copy_: undefined, assigned_: undefined, base_: T, draft_: this, isManual_: false, revoked_: false }; return this } var B = DraftMap.prototype; Object.defineProperty(B, "size", { get: function get() { return latest(this[G]).size } }); B.has = function (T) { return latest(this[G]).has(T) }; B.set = function (T, B) { var N = this[G]; assertUnrevoked(N); if (!latest(N).has(T) || latest(N).get(T) !== B) { prepareMapCopy(N); markChanged(N); N.assigned_.set(T, true); N.copy_.set(T, B); N.assigned_.set(T, true) } return this }; B.delete = function (T) { if (!this.has(T)) { return false } var B = this[G]; assertUnrevoked(B); prepareMapCopy(B); markChanged(B); B.assigned_.set(T, false); B.copy_.delete(T); return true }; B.clear = function () { var T = this[G]; assertUnrevoked(T); if (latest(T).size) { prepareMapCopy(T); markChanged(T); T.assigned_ = new Map; each(T.base_, (function (B) { T.assigned_.set(B, false) })); T.copy_.clear() } }; B.forEach = function (T, B) { var N = this; var L = this[G]; latest(L).forEach((function (L, I, J) { T.call(B, N.get(I), I, N) })) }; B.get = function (T) { var B = this[G]; assertUnrevoked(B); var N = latest(B).get(T); if (B.finalized_ || !isDraftable(N)) { return N } if (N !== B.base_.get(T)) { return N } var L = createProxy(B.scope_.immer_, N, B); prepareMapCopy(B); B.copy_.set(T, L); return L }; B.keys = function () { return latest(this[G]).keys() }; B.values = function () { var T = this, B; var N = this.keys(); return B = {}, B[V] = function () { return T.values() }, B.next = function next() { var B = N.next(); if (B.done) return B; var L = T.get(B.value); return { done: false, value: L } }, B }; B.entries = function () { var T = this, B; var N = this.keys(); return B = {}, B[V] = function () { return T.entries() }, B.next = function next() { var B = N.next(); if (B.done) return B; var L = T.get(B.value); return { done: false, value: [B.value, L] } }, B }; B[V] = function () { return this.entries() }; return DraftMap }(Map); function proxyMap_(T, N) { return new B(T, N) } function prepareMapCopy(T) { if (!T.copy_) { T.assigned_ = new Map; T.copy_ = new Map(T.base_) } } var N = function (T) { __extends(DraftSet, T); function DraftSet(T, B) { this[G] = { type_: nf, parent_: B, scope_: B ? B.scope_ : getCurrentScope(), modified_: false, finalized_: false, copy_: undefined, base_: T, draft_: this, drafts_: new Map, revoked_: false, isManual_: false }; return this } var B = DraftSet.prototype; Object.defineProperty(B, "size", { get: function get() { return latest(this[G]).size } }); B.has = function (T) { var B = this[G]; assertUnrevoked(B); if (!B.copy_) { return B.base_.has(T) } if (B.copy_.has(T)) return true; if (B.drafts_.has(T) && B.copy_.has(B.drafts_.get(T))) return true; return false }; B.add = function (T) { var B = this[G]; assertUnrevoked(B); if (!this.has(T)) { prepareSetCopy(B); markChanged(B); B.copy_.add(T) } return this }; B.delete = function (T) { if (!this.has(T)) { return false } var B = this[G]; assertUnrevoked(B); prepareSetCopy(B); markChanged(B); return B.copy_.delete(T) || (B.drafts_.has(T) ? B.copy_.delete(B.drafts_.get(T)) : false) }; B.clear = function () { var T = this[G]; assertUnrevoked(T); if (latest(T).size) { prepareSetCopy(T); markChanged(T); T.copy_.clear() } }; B.values = function () { var T = this[G]; assertUnrevoked(T); prepareSetCopy(T); return T.copy_.values() }; B.entries = function entries() { var T = this[G]; assertUnrevoked(T); prepareSetCopy(T); return T.copy_.entries() }; B.keys = function () { return this.values() }; B[V] = function () { return this.values() }; B.forEach = function forEach(T, B) { var N = this.values(); var L = N.next(); while (!L.done) { T.call(B, L.value, L.value, this); L = N.next() } }; return DraftSet }(Set); function proxySet_(T, B) { return new N(T, B) } function prepareSetCopy(T) { if (!T.copy_) { T.copy_ = new Set; T.base_.forEach((function (B) { if (isDraftable(B)) { var N = createProxy(T.scope_.immer_, B, T); T.drafts_.set(B, N); T.copy_.add(N) } else { T.copy_.add(B) } })) } } function assertUnrevoked(T) { if (T.revoked_) die(3, JSON.stringify(latest(T))) } loadPlugin("MapSet", { proxyMap_: proxyMap_, proxySet_: proxySet_ }) } function enableAllPlugins() { enableES5(); enableMapSet(); enablePatches() } var hf = new lf; var pf = hf.produce; var vf = hf.produceWithPatches.bind(hf); var mf = hf.setAutoFreeze.bind(hf); var yf = hf.setUseProxies.bind(hf); var gf = hf.applyPatches.bind(hf); var _f = hf.createDraft.bind(hf); var wf = hf.finishDraft.bind(hf); function castDraft(T) { return T } function castImmutable(T) { return T } B.Immer = lf; B.applyPatches = gf; B.castDraft = castDraft; B.castImmutable = castImmutable; B.createDraft = _f; B.current = current; B["default"] = pf; B.enableAllPlugins = enableAllPlugins; B.enableES5 = enableES5; B.enableMapSet = enableMapSet; B.enablePatches = enablePatches; B.finishDraft = wf; B.immerable = X; B.isDraft = isDraft; B.isDraftable = isDraftable; B.nothing = U; B.original = original; B.produce = pf; B.produceWithPatches = vf; B.setAutoFreeze = mf; B.setUseProxies = yf }, 9354: (T, B) => { function t(T) { for (var B = arguments.length, N = Array(B > 1 ? B - 1 : 0), L = 1; L < B; L++)N[L - 1] = arguments[L]; throw Error("[Immer] minified error nr: " + T + (N.length ? " " + N.map((function (T) { return "'" + T + "'" })).join(",") : "") + ". Find the full error at: https://bit.ly/3cXEKWf") } function n(T) { return !!T && !!T[V] } function r(T) { return !!T && (function (T) { if (!T || "object" != typeof T) return !1; var B = Object.getPrototypeOf(T); return !B || B === Object.prototype }(T) || Array.isArray(T) || !!T[G] || !!T.constructor[G] || c(T) || s(T)) } function e(T, B, N) { void 0 === N && (N = !1), 0 === i(T) ? (N ? Object.keys : W)(T).forEach((function (L) { N && "symbol" == typeof L || B(L, T[L], T) })) : T.forEach((function (N, L) { return B(L, N, T) })) } function i(T) { var B = T[V]; return B ? B.t > 3 ? B.t - 4 : B.t : Array.isArray(T) ? 1 : c(T) ? 2 : s(T) ? 3 : 0 } function u(T, B) { return 2 === i(T) ? T.has(B) : Object.prototype.hasOwnProperty.call(T, B) } function o(T, B) { return 2 === i(T) ? T.get(B) : T[B] } function f(T, B, N) { var L = i(T); 2 === L ? T.set(B, N) : 3 === L ? (T.delete(B), T.add(N)) : T[B] = N } function a(T, B) { return T === B ? 0 !== T || 1 / T == 1 / B : T != T && B != B } function c(T) { return J && T instanceof Map } function s(T) { return H && T instanceof Set } function v(T) { return T.i || T.u } function p(T) { if (Array.isArray(T)) return Array.prototype.slice.call(T); var B = q(T); delete B[V]; for (var N = W(B), L = 0; L < N.length; L++) { var I = N[L], J = B[I]; !1 === J.writable && (J.writable = !0, J.configurable = !0), (J.get || J.set) && (B[I] = { configurable: !0, writable: !0, enumerable: J.enumerable, value: T[I] }) } return Object.create(Object.getPrototypeOf(T), B) } function l(T, B) { d(T) || n(T) || !r(T) || (i(T) > 1 && (T.set = T.add = T.clear = T.delete = h), Object.freeze(T), B && e(T, (function (T, B) { return l(B, !0) }), !0)) } function h() { t(2) } function d(T) { return null == T || "object" != typeof T || Object.isFrozen(T) } function y(T) { var B = Q[T]; return B || t(18, T), B } function _(T, B) { Q[T] || (Q[T] = B) } function b() { return L } function m(T, B) { B && (y("Patches"), T.o = [], T.s = [], T.v = B) } function j(T) { O(T), T.p.forEach(x), T.p = null } function O(T) { T === L && (L = T.l) } function w(T) { return L = { p: [], l: L, h: T, _: !0, m: 0 } } function x(T) { var B = T[V]; 0 === B.t || 1 === B.t ? B.j() : B.O = !0 } function S(T, B) { B.m = B.p.length; var N = B.p[0], L = void 0 !== T && T !== N; return B.h.S || y("ES5").M(B, T, L), L ? (N[V].P && (j(B), t(4)), r(T) && (T = M(B, T), B.l || g(B, T)), B.o && y("Patches").g(N[V], T, B.o, B.s)) : T = M(B, N, []), j(B), B.o && B.v(B.o, B.s), T !== X ? T : void 0 } function M(T, B, N) { if (d(B)) return B; var L = B[V]; if (!L) return e(B, (function (I, J) { return P(T, L, B, I, J, N) }), !0), B; if (L.A !== T) return B; if (!L.P) return g(T, L.u, !0), L.u; if (!L.R) { L.R = !0, L.A.m--; var I = 4 === L.t || 5 === L.t ? L.i = p(L.k) : L.i; e(3 === L.t ? new Set(I) : I, (function (B, J) { return P(T, L, I, B, J, N) })), g(T, I, !1), N && T.o && y("Patches").F(L, N, T.o, T.s) } return L.i } function P(T, B, N, L, I, J) { if (n(I)) { var H = M(T, I, J && B && 3 !== B.t && !u(B.D, L) ? J.concat(L) : void 0); if (f(N, L, H), !n(H)) return; T._ = !1 } if (r(I) && !d(I)) { if (!T.h.K && T.m < 1) return; M(T, I), B && B.A.l || g(T, I) } } function g(T, B, N) { void 0 === N && (N = !1), T.h.K && T._ && l(B, N) } function A(T, B) { var N = T[V]; return (N ? v(N) : T)[B] } function z(T, B) { if (B in T) for (var N = Object.getPrototypeOf(T); N;) { var L = Object.getOwnPropertyDescriptor(N, B); if (L) return L; N = Object.getPrototypeOf(N) } } function E(T) { T.P || (T.P = !0, T.l && E(T.l)) } function R(T) { T.i || (T.i = p(T.u)) } function k(T, B, N) { var L = c(B) ? y("MapSet").$(B, N) : s(B) ? y("MapSet").C(B, N) : T.S ? function (T, B) { var N = Array.isArray(T), L = { t: N ? 1 : 0, A: B ? B.A : b(), P: !1, R: !1, D: {}, l: B, u: T, k: null, i: null, j: null, I: !1 }, I = L, J = Y; N && (I = [L], J = ff); var H = Proxy.revocable(I, J), U = H.revoke, X = H.proxy; return L.k = X, L.j = U, X }(B, N) : y("ES5").J(B, N); return (N ? N.A : b()).p.push(L), L } function F(T) { return n(T) || t(22, T), function t(T) { if (!r(T)) return T; var B, N = T[V], L = i(T); if (N) { if (!N.P && (N.t < 4 || !y("ES5").N(N))) return N.u; N.R = !0, B = D(T, L), N.R = !1 } else B = D(T, L); return e(B, (function (T, L) { N && o(N.u, T) === L || f(B, T, t(L)) })), 3 === L ? new Set(B) : B }(T) } function D(T, B) { switch (B) { case 2: return new Map(T); case 3: return Array.from(T) }return p(T) } function K() { function t(B, N) { var L = T[B]; return L ? L.enumerable = N : T[B] = L = { configurable: !0, enumerable: N, get: function () { return Y.get(this[V], B) }, set: function (T) { Y.set(this[V], B, T) } }, L } function r(T) { for (var B = T.length - 1; B >= 0; B--) { var N = T[B][V]; if (!N.P) switch (N.t) { case 5: o(N) && E(N); break; case 4: i(N) && E(N) } } } function i(T) { for (var B = T.u, N = T.k, L = W(N), I = L.length - 1; I >= 0; I--) { var J = L[I]; if (J !== V) { var H = B[J]; if (void 0 === H && !u(B, J)) return !0; var U = N[J], X = U && U[V]; if (X ? X.u !== H : !a(U, H)) return !0 } } var G = !!B[V]; return L.length !== W(B).length + (G ? 0 : 1) } function o(T) { var B = T.k; if (B.length !== T.u.length) return !0; var N = Object.getOwnPropertyDescriptor(B, B.length - 1); return !(!N || N.get) } var T = {}; _("ES5", { J: function (T, B) { var N = Array.isArray(T), L = function (T, B) { if (T) { for (var N = Array(B.length), L = 0; L < B.length; L++)Object.defineProperty(N, "" + L, t(L, !0)); return N } var I = q(B); delete I[V]; for (var J = W(I), H = 0; H < J.length; H++) { var U = J[H]; I[U] = t(U, T || !!I[U].enumerable) } return Object.create(Object.getPrototypeOf(B), I) }(N, T), I = { t: N ? 5 : 4, A: B ? B.A : b(), P: !1, R: !1, D: {}, l: B, u: T, k: L, i: null, O: !1, I: !1 }; return Object.defineProperty(L, V, { value: I, writable: !0 }), L }, M: function (T, B, N) { N ? n(B) && B[V].A === T && r(T.p) : (T.o && function t(T) { if (T && "object" == typeof T) { var B = T[V]; if (B) { var N = B.u, L = B.k, I = B.D, J = B.t; if (4 === J) e(L, (function (T) { T !== V && (void 0 !== N[T] || u(N, T) ? I[T] || t(L[T]) : (I[T] = !0, E(B))) })), e(N, (function (T) { void 0 !== L[T] || u(L, T) || (I[T] = !1, E(B)) })); else if (5 === J) { if (o(B) && (E(B), I.length = !0), L.length < N.length) for (var H = L.length; H < N.length; H++)I[H] = !1; else for (var U = N.length; U < L.length; U++)I[U] = !0; for (var X = Math.min(L.length, N.length), G = 0; G < X; G++)void 0 === I[G] && t(L[G]) } } } }(T.p[0]), r(T.p)) }, N: function (T) { return 4 === T.t ? i(T) : o(T) } }) } function $() { function f(T) { if (!r(T)) return T; if (Array.isArray(T)) return T.map(f); if (c(T)) return new Map(Array.from(T.entries()).map((function (T) { return [T[0], f(T[1])] }))); if (s(T)) return new Set(Array.from(T).map(f)); var B = Object.create(Object.getPrototypeOf(T)); for (var N in T) B[N] = f(T[N]); return B } function a(T) { return n(T) ? f(T) : T } var T = "add"; _("Patches", { W: function (B, N) { return N.forEach((function (N) { for (var L = N.path, I = N.op, J = B, H = 0; H < L.length - 1; H++)"object" != typeof (J = o(J, L[H])) && t(15, L.join("/")); var U = i(J), X = f(N.value), G = L[L.length - 1]; switch (I) { case "replace": switch (U) { case 2: return J.set(G, X); case 3: t(16); default: return J[G] = X }case T: switch (U) { case 1: return J.splice(G, 0, X); case 2: return J.set(G, X); case 3: return J.add(X); default: return J[G] = X }case "remove": switch (U) { case 1: return J.splice(G, 1); case 2: return J.delete(G); case 3: return J.delete(N.value); default: return delete J[G] }default: t(17, I) } })), B }, F: function (B, N, L, I) { switch (B.t) { case 0: case 4: case 2: return function (B, N, L, I) { var J = B.u, H = B.i; e(B.D, (function (B, U) { var X = o(J, B), G = o(H, B), V = U ? u(J, B) ? "replace" : T : "remove"; if (X !== G || "replace" !== V) { var Z = N.concat(B); L.push("remove" === V ? { op: V, path: Z } : { op: V, path: Z, value: G }), I.push(V === T ? { op: "remove", path: Z } : "remove" === V ? { op: T, path: Z, value: a(X) } : { op: "replace", path: Z, value: a(X) }) } })) }(B, N, L, I); case 5: case 1: return function (B, N, L, I) { var J = B.u, H = B.D, U = B.i; if (U.length < J.length) { var X = [U, J]; J = X[0], U = X[1]; var G = [I, L]; L = G[0], I = G[1] } for (var V = 0; V < J.length; V++)if (H[V] && U[V] !== J[V]) { var Z = N.concat([V]); L.push({ op: "replace", path: Z, value: a(U[V]) }), I.push({ op: "replace", path: Z, value: a(J[V]) }) } for (var W = J.length; W < U.length; W++) { var q = N.concat([W]); L.push({ op: T, path: q, value: a(U[W]) }) } J.length < U.length && I.push({ op: "replace", path: N.concat(["length"]), value: J.length }) }(B, N, L, I); case 3: return function (B, N, L, I) { var J = B.u, H = B.i, U = 0; J.forEach((function (B) { if (!H.has(B)) { var J = N.concat([U]); L.push({ op: "remove", path: J, value: B }), I.unshift({ op: T, path: J, value: B }) } U++ })), U = 0, H.forEach((function (B) { if (!J.has(B)) { var H = N.concat([U]); L.push({ op: T, path: H, value: B }), I.unshift({ op: "remove", path: H, value: B }) } U++ })) }(B, N, L, I) } }, g: function (T, B, N, L) { N.push({ op: "replace", path: [], value: B }), L.push({ op: "replace", path: [], value: T.u }) } }) } function C() { function n(T, B) { function r() { this.constructor = T } f(T, B), T.prototype = (r.prototype = B.prototype, new r) } function i(T) { T.i || (T.D = new Map, T.i = new Map(T.u)) } function u(T) { T.i || (T.i = new Set, T.u.forEach((function (B) { if (r(B)) { var N = k(T.A.h, B, T); T.p.set(B, N), T.i.add(N) } else T.i.add(B) }))) } function o(T) { T.O && t(3, JSON.stringify(v(T))) } var f = function (T, B) { return (f = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (T, B) { T.__proto__ = B } || function (T, B) { for (var N in B) B.hasOwnProperty(N) && (T[N] = B[N]) })(T, B) }, T = function () { function t(T, B) { return this[V] = { t: 2, l: B, A: B ? B.A : b(), P: !1, R: !1, i: void 0, D: void 0, u: T, k: this, I: !1, O: !1 }, this } n(t, Map); var T = t.prototype; return Object.defineProperty(T, "size", { get: function () { return v(this[V]).size } }), T.has = function (T) { return v(this[V]).has(T) }, T.set = function (T, B) { var N = this[V]; return o(N), v(N).has(T) && v(N).get(T) === B || (i(N), E(N), N.D.set(T, !0), N.i.set(T, B), N.D.set(T, !0)), this }, T.delete = function (T) { if (!this.has(T)) return !1; var B = this[V]; return o(B), i(B), E(B), B.D.set(T, !1), B.i.delete(T), !0 }, T.clear = function () { var T = this[V]; o(T), v(T).size && (i(T), E(T), T.D = new Map, e(T.u, (function (B) { T.D.set(B, !1) })), T.i.clear()) }, T.forEach = function (T, B) { var N = this; v(this[V]).forEach((function (L, I) { T.call(B, N.get(I), I, N) })) }, T.get = function (T) { var B = this[V]; o(B); var N = v(B).get(T); if (B.R || !r(N)) return N; if (N !== B.u.get(T)) return N; var L = k(B.A.h, N, B); return i(B), B.i.set(T, L), L }, T.keys = function () { return v(this[V]).keys() }, T.values = function () { var T, B = this, N = this.keys(); return (T = {})[Z] = function () { return B.values() }, T.next = function () { var T = N.next(); return T.done ? T : { done: !1, value: B.get(T.value) } }, T }, T.entries = function () { var T, B = this, N = this.keys(); return (T = {})[Z] = function () { return B.entries() }, T.next = function () { var T = N.next(); if (T.done) return T; var L = B.get(T.value); return { done: !1, value: [T.value, L] } }, T }, T[Z] = function () { return this.entries() }, t }(), B = function () { function t(T, B) { return this[V] = { t: 3, l: B, A: B ? B.A : b(), P: !1, R: !1, i: void 0, u: T, k: this, p: new Map, O: !1, I: !1 }, this } n(t, Set); var T = t.prototype; return Object.defineProperty(T, "size", { get: function () { return v(this[V]).size } }), T.has = function (T) { var B = this[V]; return o(B), B.i ? !!B.i.has(T) || !(!B.p.has(T) || !B.i.has(B.p.get(T))) : B.u.has(T) }, T.add = function (T) { var B = this[V]; return o(B), this.has(T) || (u(B), E(B), B.i.add(T)), this }, T.delete = function (T) { if (!this.has(T)) return !1; var B = this[V]; return o(B), u(B), E(B), B.i.delete(T) || !!B.p.has(T) && B.i.delete(B.p.get(T)) }, T.clear = function () { var T = this[V]; o(T), v(T).size && (u(T), E(T), T.i.clear()) }, T.values = function () { var T = this[V]; return o(T), u(T), T.i.values() }, T.entries = function () { var T = this[V]; return o(T), u(T), T.i.entries() }, T.keys = function () { return this.values() }, T[Z] = function () { return this.values() }, T.forEach = function (T, B) { for (var N = this.values(), L = N.next(); !L.done;)T.call(B, L.value, L.value, this), L = N.next() }, t }(); _("MapSet", { $: function (B, N) { return new T(B, N) }, C: function (T, N) { return new B(T, N) } }) } var N; Object.defineProperty(B, "__esModule", { value: !0 }); var L, I = "undefined" != typeof Symbol && "symbol" == typeof Symbol("x"), J = "undefined" != typeof Map, H = "undefined" != typeof Set, U = "undefined" != typeof Proxy && void 0 !== Proxy.revocable && "undefined" != typeof Reflect, X = I ? Symbol.for("immer-nothing") : ((N = {})["immer-nothing"] = !0, N), G = I ? Symbol.for("immer-draftable") : "__$immer_draftable", V = I ? Symbol.for("immer-state") : "__$immer_state", Z = "undefined" != typeof Symbol && Symbol.iterator || "@@iterator", W = "undefined" != typeof Reflect && Reflect.ownKeys ? Reflect.ownKeys : void 0 !== Object.getOwnPropertySymbols ? function (T) { return Object.getOwnPropertyNames(T).concat(Object.getOwnPropertySymbols(T)) } : Object.getOwnPropertyNames, q = Object.getOwnPropertyDescriptors || function (T) { var B = {}; return W(T).forEach((function (N) { B[N] = Object.getOwnPropertyDescriptor(T, N) })), B }, Q = {}, Y = { get: function (T, B) { if (B === V) return T; var N = v(T); if (!u(N, B)) return function (T, B, N) { var L, I = z(B, N); return I ? "value" in I ? I.value : null === (L = I.get) || void 0 === L ? void 0 : L.call(T.k) : void 0 }(T, N, B); var L = N[B]; return T.R || !r(L) ? L : L === A(T.u, B) ? (R(T), T.i[B] = k(T.A.h, L, T)) : L }, has: function (T, B) { return B in v(T) }, ownKeys: function (T) { return Reflect.ownKeys(v(T)) }, set: function (T, B, N) { var L = z(v(T), B); if (null == L ? void 0 : L.set) return L.set.call(T.k, N), !0; if (!T.P) { var I = A(v(T), B), J = null == I ? void 0 : I[V]; if (J && J.u === N) return T.i[B] = N, T.D[B] = !1, !0; if (a(N, I) && (void 0 !== N || u(T.u, B))) return !0; R(T), E(T) } return T.i[B] = N, T.D[B] = !0, !0 }, deleteProperty: function (T, B) { return void 0 !== A(T.u, B) || B in T.u ? (T.D[B] = !1, R(T), E(T)) : delete T.D[B], T.i && delete T.i[B], !0 }, getOwnPropertyDescriptor: function (T, B) { var N = v(T), L = Reflect.getOwnPropertyDescriptor(N, B); return L ? { writable: !0, configurable: 1 !== T.t || "length" !== B, enumerable: L.enumerable, value: N[B] } : L }, defineProperty: function () { t(11) }, getPrototypeOf: function (T) { return Object.getPrototypeOf(T.u) }, setPrototypeOf: function () { t(12) } }, ff = {}; e(Y, (function (T, B) { ff[T] = function () { return arguments[0] = arguments[0][0], B.apply(this, arguments) } })), ff.deleteProperty = function (T, B) { return Y.deleteProperty.call(this, T[0], B) }, ff.set = function (T, B, N) { return Y.set.call(this, T[0], B, N, T[0]) }; var ef = function () { function e(T) { this.S = U, this.K = !1, "boolean" == typeof (null == T ? void 0 : T.useProxies) && this.setUseProxies(T.useProxies), "boolean" == typeof (null == T ? void 0 : T.autoFreeze) && this.setAutoFreeze(T.autoFreeze), this.produce = this.produce.bind(this), this.produceWithPatches = this.produceWithPatches.bind(this) } var T = e.prototype; return T.produce = function (T, B, N) { if ("function" == typeof T && "function" != typeof B) { var L = B; B = T; var I = this; return function (T) { var N = this; void 0 === T && (T = L); for (var J = arguments.length, H = Array(J > 1 ? J - 1 : 0), U = 1; U < J; U++)H[U - 1] = arguments[U]; return I.produce(T, (function (T) { var L; return (L = B).call.apply(L, [N, T].concat(H)) })) } } var J; if ("function" != typeof B && t(6), void 0 !== N && "function" != typeof N && t(7), r(T)) { var H = w(this), U = k(this, T, void 0), G = !0; try { J = B(U), G = !1 } finally { G ? j(H) : O(H) } return "undefined" != typeof Promise && J instanceof Promise ? J.then((function (T) { return m(H, N), S(T, H) }), (function (T) { throw j(H), T })) : (m(H, N), S(J, H)) } if (!T || "object" != typeof T) { if ((J = B(T)) === X) return; return void 0 === J && (J = T), this.K && l(J, !0), J } t(21, T) }, T.produceWithPatches = function (T, B) { var N, L, I = this; return "function" == typeof T ? function (B) { for (var N = arguments.length, L = Array(N > 1 ? N - 1 : 0), J = 1; J < N; J++)L[J - 1] = arguments[J]; return I.produceWithPatches(B, (function (B) { return T.apply(void 0, [B].concat(L)) })) } : [this.produce(T, B, (function (T, B) { N = T, L = B })), N, L] }, T.createDraft = function (T) { r(T) || t(8), n(T) && (T = F(T)); var B = w(this), N = k(this, T, void 0); return N[V].I = !0, O(B), N }, T.finishDraft = function (T, B) { var N = (T && T[V]).A; return m(N, B), S(void 0, N) }, T.setAutoFreeze = function (T) { this.K = T }, T.setUseProxies = function (T) { T && !U && t(20), this.S = T }, T.applyPatches = function (T, B) { var N; for (N = B.length - 1; N >= 0; N--) { var L = B[N]; if (0 === L.path.length && "replace" === L.op) { T = L.value; break } } var I = y("Patches").W; return n(T) ? I(T, B) : this.produce(T, (function (T) { return I(T, B.slice(N + 1)) })) }, e }(), tf = new ef, rf = tf.produce, af = tf.produceWithPatches.bind(tf), nf = tf.setAutoFreeze.bind(tf), of = tf.setUseProxies.bind(tf), sf = tf.applyPatches.bind(tf), cf = tf.createDraft.bind(tf), bf = tf.finishDraft.bind(tf); B.Immer = ef, B.applyPatches = sf, B.castDraft = function (T) { return T }, B.castImmutable = function (T) { return T }, B.createDraft = cf, B.current = F, B["default"] = rf, B.enableAllPlugins = function () { K(), C(), $() }, B.enableES5 = K, B.enableMapSet = C, B.enablePatches = $, B.finishDraft = bf, B.immerable = G, B.isDraft = n, B.isDraftable = r, B.nothing = X, B.original = function (T) { return n(T) || t(23, T), T[V].u }, B.produce = rf, B.produceWithPatches = af, B.setAutoFreeze = nf, B.setUseProxies = of }, 7259: (T, B, N) => { "use strict"; if (process.env.NODE_ENV === "production") { T.exports = N(9354) } else { T.exports = N(930) } }, 9598: (T, B, N) => { try { var L = N(9023); if (typeof L.inherits !== "function") throw ""; T.exports = L.inherits } catch (B) { T.exports = N(6589) } }, 6589: T => { if (typeof Object.create === "function") { T.exports = function inherits(T, B) { if (B) { T.super_ = B; T.prototype = Object.create(B.prototype, { constructor: { value: T, enumerable: false, writable: true, configurable: true } }) } } } else { T.exports = function inherits(T, B) { if (B) { T.super_ = B; var TempCtor = function () { }; TempCtor.prototype = B.prototype; T.prototype = new TempCtor; T.prototype.constructor = T } } } }, 2157: T => {
            /**
             * [js-sha3]{@link https://github.com/emn178/js-sha3}
             *
             * @version 0.8.0
             * @author Chen, Yi-Cyuan [emn178@gmail.com]
             * @copyright Chen, Yi-Cyuan 2015-2018
             * @license MIT
             */
            (function () { "use strict"; var B = "input is invalid type"; var N = "finalize already called"; var L = typeof window === "object"; var I = L ? window : {}; if (I.JS_SHA3_NO_WINDOW) { L = false } var J = !L && typeof self === "object"; var H = !I.JS_SHA3_NO_NODE_JS && typeof process === "object" && process.versions && process.versions.node; if (H) { I = global } else if (J) { I = self } var U = !I.JS_SHA3_NO_COMMON_JS && "object" === "object" && T.exports; var X = typeof define === "function" && define.amd; var G = !I.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== "undefined"; var V = "0123456789abcdef".split(""); var Z = [31, 7936, 2031616, 520093696]; var W = [4, 1024, 262144, 67108864]; var q = [1, 256, 65536, 16777216]; var Q = [6, 1536, 393216, 100663296]; var Y = [0, 8, 16, 24]; var ff = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648]; var ef = [224, 256, 384, 512]; var tf = [128, 256]; var rf = ["hex", "buffer", "arrayBuffer", "array", "digest"]; var af = { 128: 168, 256: 136 }; if (I.JS_SHA3_NO_NODE_JS || !Array.isArray) { Array.isArray = function (T) { return Object.prototype.toString.call(T) === "[object Array]" } } if (G && (I.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) { ArrayBuffer.isView = function (T) { return typeof T === "object" && T.buffer && T.buffer.constructor === ArrayBuffer } } var createOutputMethod = function (T, B, N) { return function (L) { return new Keccak(T, B, T).update(L)[N]() } }; var createShakeOutputMethod = function (T, B, N) { return function (L, I) { return new Keccak(T, B, I).update(L)[N]() } }; var createCshakeOutputMethod = function (T, B, N) { return function (B, L, I, J) { return of["cshake" + T].update(B, L, I, J)[N]() } }; var createKmacOutputMethod = function (T, B, N) { return function (B, L, I, J) { return of["kmac" + T].update(B, L, I, J)[N]() } }; var createOutputMethods = function (T, B, N, L) { for (var I = 0; I < rf.length; ++I) { var J = rf[I]; T[J] = B(N, L, J) } return T }; var createMethod = function (T, B) { var N = createOutputMethod(T, B, "hex"); N.create = function () { return new Keccak(T, B, T) }; N.update = function (T) { return N.create().update(T) }; return createOutputMethods(N, createOutputMethod, T, B) }; var createShakeMethod = function (T, B) { var N = createShakeOutputMethod(T, B, "hex"); N.create = function (N) { return new Keccak(T, B, N) }; N.update = function (T, B) { return N.create(B).update(T) }; return createOutputMethods(N, createShakeOutputMethod, T, B) }; var createCshakeMethod = function (T, B) { var N = af[T]; var L = createCshakeOutputMethod(T, B, "hex"); L.create = function (L, I, J) { if (!I && !J) { return of["shake" + T].create(L) } else { return new Keccak(T, B, L).bytepad([I, J], N) } }; L.update = function (T, B, N, I) { return L.create(B, N, I).update(T) }; return createOutputMethods(L, createCshakeOutputMethod, T, B) }; var createKmacMethod = function (T, B) { var N = af[T]; var L = createKmacOutputMethod(T, B, "hex"); L.create = function (L, I, J) { return new Kmac(T, B, I).bytepad(["KMAC", J], N).bytepad([L], N) }; L.update = function (T, B, N, I) { return L.create(T, N, I).update(B) }; return createOutputMethods(L, createKmacOutputMethod, T, B) }; var nf = [{ name: "keccak", padding: q, bits: ef, createMethod: createMethod }, { name: "sha3", padding: Q, bits: ef, createMethod: createMethod }, { name: "shake", padding: Z, bits: tf, createMethod: createShakeMethod }, { name: "cshake", padding: W, bits: tf, createMethod: createCshakeMethod }, { name: "kmac", padding: W, bits: tf, createMethod: createKmacMethod }]; var of = {}, sf = []; for (var cf = 0; cf < nf.length; ++cf) { var bf = nf[cf]; var df = bf.bits; for (var uf = 0; uf < df.length; ++uf) { var lf = bf.name + "_" + df[uf]; sf.push(lf); of[lf] = bf.createMethod(df[uf], bf.padding); if (bf.name !== "sha3") { var hf = bf.name + df[uf]; sf.push(hf); of[hf] = of[lf] } } } function Keccak(T, B, N) { this.blocks = []; this.s = []; this.padding = B; this.outputBits = N; this.reset = true; this.finalized = false; this.block = 0; this.start = 0; this.blockCount = 1600 - (T << 1) >> 5; this.byteCount = this.blockCount << 2; this.outputBlocks = N >> 5; this.extraBytes = (N & 31) >> 3; for (var L = 0; L < 50; ++L) { this.s[L] = 0 } } Keccak.prototype.update = function (T) { if (this.finalized) { throw new Error(N) } var L, I = typeof T; if (I !== "string") { if (I === "object") { if (T === null) { throw new Error(B) } else if (G && T.constructor === ArrayBuffer) { T = new Uint8Array(T) } else if (!Array.isArray(T)) { if (!G || !ArrayBuffer.isView(T)) { throw new Error(B) } } } else { throw new Error(B) } L = true } var J = this.blocks, H = this.byteCount, U = T.length, X = this.blockCount, V = 0, Z = this.s, W, q; while (V < U) { if (this.reset) { this.reset = false; J[0] = this.block; for (W = 1; W < X + 1; ++W) { J[W] = 0 } } if (L) { for (W = this.start; V < U && W < H; ++V) { J[W >> 2] |= T[V] << Y[W++ & 3] } } else { for (W = this.start; V < U && W < H; ++V) { q = T.charCodeAt(V); if (q < 128) { J[W >> 2] |= q << Y[W++ & 3] } else if (q < 2048) { J[W >> 2] |= (192 | q >> 6) << Y[W++ & 3]; J[W >> 2] |= (128 | q & 63) << Y[W++ & 3] } else if (q < 55296 || q >= 57344) { J[W >> 2] |= (224 | q >> 12) << Y[W++ & 3]; J[W >> 2] |= (128 | q >> 6 & 63) << Y[W++ & 3]; J[W >> 2] |= (128 | q & 63) << Y[W++ & 3] } else { q = 65536 + ((q & 1023) << 10 | T.charCodeAt(++V) & 1023); J[W >> 2] |= (240 | q >> 18) << Y[W++ & 3]; J[W >> 2] |= (128 | q >> 12 & 63) << Y[W++ & 3]; J[W >> 2] |= (128 | q >> 6 & 63) << Y[W++ & 3]; J[W >> 2] |= (128 | q & 63) << Y[W++ & 3] } } } this.lastByteIndex = W; if (W >= H) { this.start = W - H; this.block = J[X]; for (W = 0; W < X; ++W) { Z[W] ^= J[W] } f(Z); this.reset = true } else { this.start = W } } return this }; Keccak.prototype.encode = function (T, B) { var N = T & 255, L = 1; var I = [N]; T = T >> 8; N = T & 255; while (N > 0) { I.unshift(N); T = T >> 8; N = T & 255; ++L } if (B) { I.push(L) } else { I.unshift(L) } this.update(I); return I.length }; Keccak.prototype.encodeString = function (T) { var N, L = typeof T; if (L !== "string") { if (L === "object") { if (T === null) { throw new Error(B) } else if (G && T.constructor === ArrayBuffer) { T = new Uint8Array(T) } else if (!Array.isArray(T)) { if (!G || !ArrayBuffer.isView(T)) { throw new Error(B) } } } else { throw new Error(B) } N = true } var I = 0, J = T.length; if (N) { I = J } else { for (var H = 0; H < T.length; ++H) { var U = T.charCodeAt(H); if (U < 128) { I += 1 } else if (U < 2048) { I += 2 } else if (U < 55296 || U >= 57344) { I += 3 } else { U = 65536 + ((U & 1023) << 10 | T.charCodeAt(++H) & 1023); I += 4 } } } I += this.encode(I * 8); this.update(T); return I }; Keccak.prototype.bytepad = function (T, B) { var N = this.encode(B); for (var L = 0; L < T.length; ++L) { N += this.encodeString(T[L]) } var I = B - N % B; var J = []; J.length = I; this.update(J); return this }; Keccak.prototype.finalize = function () { if (this.finalized) { return } this.finalized = true; var T = this.blocks, B = this.lastByteIndex, N = this.blockCount, L = this.s; T[B >> 2] |= this.padding[B & 3]; if (this.lastByteIndex === this.byteCount) { T[0] = T[N]; for (B = 1; B < N + 1; ++B) { T[B] = 0 } } T[N - 1] |= 2147483648; for (B = 0; B < N; ++B) { L[B] ^= T[B] } f(L) }; Keccak.prototype.toString = Keccak.prototype.hex = function () { this.finalize(); var T = this.blockCount, B = this.s, N = this.outputBlocks, L = this.extraBytes, I = 0, J = 0; var H = "", U; while (J < N) { for (I = 0; I < T && J < N; ++I, ++J) { U = B[I]; H += V[U >> 4 & 15] + V[U & 15] + V[U >> 12 & 15] + V[U >> 8 & 15] + V[U >> 20 & 15] + V[U >> 16 & 15] + V[U >> 28 & 15] + V[U >> 24 & 15] } if (J % T === 0) { f(B); I = 0 } } if (L) { U = B[I]; H += V[U >> 4 & 15] + V[U & 15]; if (L > 1) { H += V[U >> 12 & 15] + V[U >> 8 & 15] } if (L > 2) { H += V[U >> 20 & 15] + V[U >> 16 & 15] } } return H }; Keccak.prototype.arrayBuffer = function () { this.finalize(); var T = this.blockCount, B = this.s, N = this.outputBlocks, L = this.extraBytes, I = 0, J = 0; var H = this.outputBits >> 3; var U; if (L) { U = new ArrayBuffer(N + 1 << 2) } else { U = new ArrayBuffer(H) } var X = new Uint32Array(U); while (J < N) { for (I = 0; I < T && J < N; ++I, ++J) { X[J] = B[I] } if (J % T === 0) { f(B) } } if (L) { X[I] = B[I]; U = U.slice(0, H) } return U }; Keccak.prototype.buffer = Keccak.prototype.arrayBuffer; Keccak.prototype.digest = Keccak.prototype.array = function () { this.finalize(); var T = this.blockCount, B = this.s, N = this.outputBlocks, L = this.extraBytes, I = 0, J = 0; var H = [], U, X; while (J < N) { for (I = 0; I < T && J < N; ++I, ++J) { U = J << 2; X = B[I]; H[U] = X & 255; H[U + 1] = X >> 8 & 255; H[U + 2] = X >> 16 & 255; H[U + 3] = X >> 24 & 255 } if (J % T === 0) { f(B) } } if (L) { U = J << 2; X = B[I]; H[U] = X & 255; if (L > 1) { H[U + 1] = X >> 8 & 255 } if (L > 2) { H[U + 2] = X >> 16 & 255 } } return H }; function Kmac(T, B, N) { Keccak.call(this, T, B, N) } Kmac.prototype = new Keccak; Kmac.prototype.finalize = function () { this.encode(this.outputBits, true); return Keccak.prototype.finalize.call(this) }; var f = function (T) { var B, N, L, I, J, H, U, X, G, V, Z, W, q, Q, Y, ef, tf, rf, af, nf, of, sf, cf, bf, df, uf, lf, hf, pf, vf, mf, yf, gf, _f, wf, Af, Sf, Tf, Pf, Ef, Mf, kf, Cf, Bf, Of, Nf, Ff, Rf, xf, Lf, Df, If, Jf, Hf, Uf, jf, Xf, Gf, zf, Vf, Kf, Zf, Wf; for (L = 0; L < 48; L += 2) { I = T[0] ^ T[10] ^ T[20] ^ T[30] ^ T[40]; J = T[1] ^ T[11] ^ T[21] ^ T[31] ^ T[41]; H = T[2] ^ T[12] ^ T[22] ^ T[32] ^ T[42]; U = T[3] ^ T[13] ^ T[23] ^ T[33] ^ T[43]; X = T[4] ^ T[14] ^ T[24] ^ T[34] ^ T[44]; G = T[5] ^ T[15] ^ T[25] ^ T[35] ^ T[45]; V = T[6] ^ T[16] ^ T[26] ^ T[36] ^ T[46]; Z = T[7] ^ T[17] ^ T[27] ^ T[37] ^ T[47]; W = T[8] ^ T[18] ^ T[28] ^ T[38] ^ T[48]; q = T[9] ^ T[19] ^ T[29] ^ T[39] ^ T[49]; B = W ^ (H << 1 | U >>> 31); N = q ^ (U << 1 | H >>> 31); T[0] ^= B; T[1] ^= N; T[10] ^= B; T[11] ^= N; T[20] ^= B; T[21] ^= N; T[30] ^= B; T[31] ^= N; T[40] ^= B; T[41] ^= N; B = I ^ (X << 1 | G >>> 31); N = J ^ (G << 1 | X >>> 31); T[2] ^= B; T[3] ^= N; T[12] ^= B; T[13] ^= N; T[22] ^= B; T[23] ^= N; T[32] ^= B; T[33] ^= N; T[42] ^= B; T[43] ^= N; B = H ^ (V << 1 | Z >>> 31); N = U ^ (Z << 1 | V >>> 31); T[4] ^= B; T[5] ^= N; T[14] ^= B; T[15] ^= N; T[24] ^= B; T[25] ^= N; T[34] ^= B; T[35] ^= N; T[44] ^= B; T[45] ^= N; B = X ^ (W << 1 | q >>> 31); N = G ^ (q << 1 | W >>> 31); T[6] ^= B; T[7] ^= N; T[16] ^= B; T[17] ^= N; T[26] ^= B; T[27] ^= N; T[36] ^= B; T[37] ^= N; T[46] ^= B; T[47] ^= N; B = V ^ (I << 1 | J >>> 31); N = Z ^ (J << 1 | I >>> 31); T[8] ^= B; T[9] ^= N; T[18] ^= B; T[19] ^= N; T[28] ^= B; T[29] ^= N; T[38] ^= B; T[39] ^= N; T[48] ^= B; T[49] ^= N; Q = T[0]; Y = T[1]; Nf = T[11] << 4 | T[10] >>> 28; Ff = T[10] << 4 | T[11] >>> 28; hf = T[20] << 3 | T[21] >>> 29; pf = T[21] << 3 | T[20] >>> 29; Vf = T[31] << 9 | T[30] >>> 23; Kf = T[30] << 9 | T[31] >>> 23; kf = T[40] << 18 | T[41] >>> 14; Cf = T[41] << 18 | T[40] >>> 14; _f = T[2] << 1 | T[3] >>> 31; wf = T[3] << 1 | T[2] >>> 31; ef = T[13] << 12 | T[12] >>> 20; tf = T[12] << 12 | T[13] >>> 20; Rf = T[22] << 10 | T[23] >>> 22; xf = T[23] << 10 | T[22] >>> 22; vf = T[33] << 13 | T[32] >>> 19; mf = T[32] << 13 | T[33] >>> 19; Zf = T[42] << 2 | T[43] >>> 30; Wf = T[43] << 2 | T[42] >>> 30; Hf = T[5] << 30 | T[4] >>> 2; Uf = T[4] << 30 | T[5] >>> 2; Af = T[14] << 6 | T[15] >>> 26; Sf = T[15] << 6 | T[14] >>> 26; rf = T[25] << 11 | T[24] >>> 21; af = T[24] << 11 | T[25] >>> 21; Lf = T[34] << 15 | T[35] >>> 17; Df = T[35] << 15 | T[34] >>> 17; yf = T[45] << 29 | T[44] >>> 3; gf = T[44] << 29 | T[45] >>> 3; bf = T[6] << 28 | T[7] >>> 4; df = T[7] << 28 | T[6] >>> 4; jf = T[17] << 23 | T[16] >>> 9; Xf = T[16] << 23 | T[17] >>> 9; Tf = T[26] << 25 | T[27] >>> 7; Pf = T[27] << 25 | T[26] >>> 7; nf = T[36] << 21 | T[37] >>> 11; of = T[37] << 21 | T[36] >>> 11; If = T[47] << 24 | T[46] >>> 8; Jf = T[46] << 24 | T[47] >>> 8; Bf = T[8] << 27 | T[9] >>> 5; Of = T[9] << 27 | T[8] >>> 5; uf = T[18] << 20 | T[19] >>> 12; lf = T[19] << 20 | T[18] >>> 12; Gf = T[29] << 7 | T[28] >>> 25; zf = T[28] << 7 | T[29] >>> 25; Ef = T[38] << 8 | T[39] >>> 24; Mf = T[39] << 8 | T[38] >>> 24; sf = T[48] << 14 | T[49] >>> 18; cf = T[49] << 14 | T[48] >>> 18; T[0] = Q ^ ~ef & rf; T[1] = Y ^ ~tf & af; T[10] = bf ^ ~uf & hf; T[11] = df ^ ~lf & pf; T[20] = _f ^ ~Af & Tf; T[21] = wf ^ ~Sf & Pf; T[30] = Bf ^ ~Nf & Rf; T[31] = Of ^ ~Ff & xf; T[40] = Hf ^ ~jf & Gf; T[41] = Uf ^ ~Xf & zf; T[2] = ef ^ ~rf & nf; T[3] = tf ^ ~af & of; T[12] = uf ^ ~hf & vf; T[13] = lf ^ ~pf & mf; T[22] = Af ^ ~Tf & Ef; T[23] = Sf ^ ~Pf & Mf; T[32] = Nf ^ ~Rf & Lf; T[33] = Ff ^ ~xf & Df; T[42] = jf ^ ~Gf & Vf; T[43] = Xf ^ ~zf & Kf; T[4] = rf ^ ~nf & sf; T[5] = af ^ ~of & cf; T[14] = hf ^ ~vf & yf; T[15] = pf ^ ~mf & gf; T[24] = Tf ^ ~Ef & kf; T[25] = Pf ^ ~Mf & Cf; T[34] = Rf ^ ~Lf & If; T[35] = xf ^ ~Df & Jf; T[44] = Gf ^ ~Vf & Zf; T[45] = zf ^ ~Kf & Wf; T[6] = nf ^ ~sf & Q; T[7] = of ^ ~cf & Y; T[16] = vf ^ ~yf & bf; T[17] = mf ^ ~gf & df; T[26] = Ef ^ ~kf & _f; T[27] = Mf ^ ~Cf & wf; T[36] = Lf ^ ~If & Bf; T[37] = Df ^ ~Jf & Of; T[46] = Vf ^ ~Zf & Hf; T[47] = Kf ^ ~Wf & Uf; T[8] = sf ^ ~Q & ef; T[9] = cf ^ ~Y & tf; T[18] = yf ^ ~bf & uf; T[19] = gf ^ ~df & lf; T[28] = kf ^ ~_f & Af; T[29] = Cf ^ ~wf & Sf; T[38] = If ^ ~Bf & Nf; T[39] = Jf ^ ~Of & Ff; T[48] = Zf ^ ~Hf & jf; T[49] = Wf ^ ~Uf & Xf; T[0] ^= ff[L]; T[1] ^= ff[L + 1] } }; if (U) { T.exports = of } else { for (cf = 0; cf < sf.length; ++cf) { I[sf[cf]] = of[sf[cf]] } if (X) { define((function () { return of })) } } })()
        }, 3798: T => { T.exports = assert; function assert(T, B) { if (!T) throw new Error(B || "Assertion failed") } assert.equal = function assertEqual(T, B, N) { if (T != B) throw new Error(N || "Assertion failed: " + T + " != " + B) } }, 8660: (T, B) => { "use strict"; var N = B; function toArray(T, B) { if (Array.isArray(T)) return T.slice(); if (!T) return []; var N = []; if (typeof T !== "string") { for (var L = 0; L < T.length; L++)N[L] = T[L] | 0; return N } if (B === "hex") { T = T.replace(/[^a-z0-9]+/gi, ""); if (T.length % 2 !== 0) T = "0" + T; for (var L = 0; L < T.length; L += 2)N.push(parseInt(T[L] + T[L + 1], 16)) } else { for (var L = 0; L < T.length; L++) { var I = T.charCodeAt(L); var J = I >> 8; var H = I & 255; if (J) N.push(J, H); else N.push(H) } } return N } N.toArray = toArray; function zero2(T) { if (T.length === 1) return "0" + T; else return T } N.zero2 = zero2; function toHex(T) { var B = ""; for (var N = 0; N < T.length; N++)B += zero2(T[N].toString(16)); return B } N.toHex = toHex; N.encode = function encode(T, B) { if (B === "hex") return toHex(T); else return T } }, 6606: function (T) { "use strict"; (function (B) { const N = 2147483647; function SHA256(T) { const B = new Uint32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]); let N = 1779033703, L = 3144134277, I = 1013904242, J = 2773480762; let H = 1359893119, U = 2600822924, X = 528734635, G = 1541459225; const V = new Uint32Array(64); function blocks(T) { let Z = 0, W = T.length; while (W >= 64) { let q = N, Q = L, Y = I, ff = J, ef = H, tf = U, rf = X, af = G, nf, of, sf, cf, bf; for (of = 0; of < 16; of++) { sf = Z + of * 4; V[of] = (T[sf] & 255) << 24 | (T[sf + 1] & 255) << 16 | (T[sf + 2] & 255) << 8 | T[sf + 3] & 255 } for (of = 16; of < 64; of++) { nf = V[of - 2]; cf = (nf >>> 17 | nf << 32 - 17) ^ (nf >>> 19 | nf << 32 - 19) ^ nf >>> 10; nf = V[of - 15]; bf = (nf >>> 7 | nf << 32 - 7) ^ (nf >>> 18 | nf << 32 - 18) ^ nf >>> 3; V[of] = (cf + V[of - 7] | 0) + (bf + V[of - 16] | 0) | 0 } for (of = 0; of < 64; of++) { cf = (((ef >>> 6 | ef << 32 - 6) ^ (ef >>> 11 | ef << 32 - 11) ^ (ef >>> 25 | ef << 32 - 25)) + (ef & tf ^ ~ef & rf) | 0) + (af + (B[of] + V[of] | 0) | 0) | 0; bf = ((q >>> 2 | q << 32 - 2) ^ (q >>> 13 | q << 32 - 13) ^ (q >>> 22 | q << 32 - 22)) + (q & Q ^ q & Y ^ Q & Y) | 0; af = rf; rf = tf; tf = ef; ef = ff + cf | 0; ff = Y; Y = Q; Q = q; q = cf + bf | 0 } N = N + q | 0; L = L + Q | 0; I = I + Y | 0; J = J + ff | 0; H = H + ef | 0; U = U + tf | 0; X = X + rf | 0; G = G + af | 0; Z += 64; W -= 64 } } blocks(T); let Z, W = T.length % 64, q = T.length / 536870912 | 0, Q = T.length << 3, Y = W < 56 ? 56 : 120, ff = T.slice(T.length - W, T.length); ff.push(128); for (Z = W + 1; Z < Y; Z++) { ff.push(0) } ff.push(q >>> 24 & 255); ff.push(q >>> 16 & 255); ff.push(q >>> 8 & 255); ff.push(q >>> 0 & 255); ff.push(Q >>> 24 & 255); ff.push(Q >>> 16 & 255); ff.push(Q >>> 8 & 255); ff.push(Q >>> 0 & 255); blocks(ff); return [N >>> 24 & 255, N >>> 16 & 255, N >>> 8 & 255, N >>> 0 & 255, L >>> 24 & 255, L >>> 16 & 255, L >>> 8 & 255, L >>> 0 & 255, I >>> 24 & 255, I >>> 16 & 255, I >>> 8 & 255, I >>> 0 & 255, J >>> 24 & 255, J >>> 16 & 255, J >>> 8 & 255, J >>> 0 & 255, H >>> 24 & 255, H >>> 16 & 255, H >>> 8 & 255, H >>> 0 & 255, U >>> 24 & 255, U >>> 16 & 255, U >>> 8 & 255, U >>> 0 & 255, X >>> 24 & 255, X >>> 16 & 255, X >>> 8 & 255, X >>> 0 & 255, G >>> 24 & 255, G >>> 16 & 255, G >>> 8 & 255, G >>> 0 & 255] } function PBKDF2_HMAC_SHA256_OneIter(T, B, N) { T = T.length <= 64 ? T : SHA256(T); const L = 64 + B.length + 4; const I = new Array(L); const J = new Array(64); let H; let U = []; for (H = 0; H < 64; H++) { I[H] = 54 } for (H = 0; H < T.length; H++) { I[H] ^= T[H] } for (H = 0; H < B.length; H++) { I[64 + H] = B[H] } for (H = L - 4; H < L; H++) { I[H] = 0 } for (H = 0; H < 64; H++)J[H] = 92; for (H = 0; H < T.length; H++)J[H] ^= T[H]; function incrementCounter() { for (let T = L - 1; T >= L - 4; T--) { I[T]++; if (I[T] <= 255) return; I[T] = 0 } } while (N >= 32) { incrementCounter(); U = U.concat(SHA256(J.concat(SHA256(I)))); N -= 32 } if (N > 0) { incrementCounter(); U = U.concat(SHA256(J.concat(SHA256(I))).slice(0, N)) } return U } function blockmix_salsa8(T, B, N, L, I) { let J; arraycopy(T, (2 * N - 1) * 16, I, 0, 16); for (J = 0; J < 2 * N; J++) { blockxor(T, J * 16, I, 16); salsa20_8(I, L); arraycopy(I, 0, T, B + J * 16, 16) } for (J = 0; J < N; J++) { arraycopy(T, B + J * 2 * 16, T, J * 16, 16) } for (J = 0; J < N; J++) { arraycopy(T, B + (J * 2 + 1) * 16, T, (J + N) * 16, 16) } } function R(T, B) { return T << B | T >>> 32 - B } function salsa20_8(T, B) { arraycopy(T, 0, B, 0, 16); for (let T = 8; T > 0; T -= 2) { B[4] ^= R(B[0] + B[12], 7); B[8] ^= R(B[4] + B[0], 9); B[12] ^= R(B[8] + B[4], 13); B[0] ^= R(B[12] + B[8], 18); B[9] ^= R(B[5] + B[1], 7); B[13] ^= R(B[9] + B[5], 9); B[1] ^= R(B[13] + B[9], 13); B[5] ^= R(B[1] + B[13], 18); B[14] ^= R(B[10] + B[6], 7); B[2] ^= R(B[14] + B[10], 9); B[6] ^= R(B[2] + B[14], 13); B[10] ^= R(B[6] + B[2], 18); B[3] ^= R(B[15] + B[11], 7); B[7] ^= R(B[3] + B[15], 9); B[11] ^= R(B[7] + B[3], 13); B[15] ^= R(B[11] + B[7], 18); B[1] ^= R(B[0] + B[3], 7); B[2] ^= R(B[1] + B[0], 9); B[3] ^= R(B[2] + B[1], 13); B[0] ^= R(B[3] + B[2], 18); B[6] ^= R(B[5] + B[4], 7); B[7] ^= R(B[6] + B[5], 9); B[4] ^= R(B[7] + B[6], 13); B[5] ^= R(B[4] + B[7], 18); B[11] ^= R(B[10] + B[9], 7); B[8] ^= R(B[11] + B[10], 9); B[9] ^= R(B[8] + B[11], 13); B[10] ^= R(B[9] + B[8], 18); B[12] ^= R(B[15] + B[14], 7); B[13] ^= R(B[12] + B[15], 9); B[14] ^= R(B[13] + B[12], 13); B[15] ^= R(B[14] + B[13], 18) } for (let N = 0; N < 16; ++N) { T[N] += B[N] } } function blockxor(T, B, N, L) { for (let I = 0; I < L; I++) { N[I] ^= T[B + I] } } function arraycopy(T, B, N, L, I) { while (I--) { N[L++] = T[B++] } } function checkBufferish(T) { if (!T || typeof T.length !== "number") { return false } for (let B = 0; B < T.length; B++) { const N = T[B]; if (typeof N !== "number" || N % 1 || N < 0 || N >= 256) { return false } } return true } function ensureInteger(T, B) { if (typeof T !== "number" || T % 1) { throw new Error("invalid " + B) } return T } function _scrypt(T, B, L, I, J, H, U) { L = ensureInteger(L, "N"); I = ensureInteger(I, "r"); J = ensureInteger(J, "p"); H = ensureInteger(H, "dkLen"); if (L === 0 || (L & L - 1) !== 0) { throw new Error("N must be power of 2") } if (L > N / 128 / I) { throw new Error("N too large") } if (I > N / 128 / J) { throw new Error("r too large") } if (!checkBufferish(T)) { throw new Error("password must be an array or buffer") } T = Array.prototype.slice.call(T); if (!checkBufferish(B)) { throw new Error("salt must be an array or buffer") } B = Array.prototype.slice.call(B); let X = PBKDF2_HMAC_SHA256_OneIter(T, B, J * 128 * I); const G = new Uint32Array(J * 32 * I); for (let T = 0; T < G.length; T++) { const B = T * 4; G[T] = (X[B + 3] & 255) << 24 | (X[B + 2] & 255) << 16 | (X[B + 1] & 255) << 8 | (X[B + 0] & 255) << 0 } const V = new Uint32Array(64 * I); const Z = new Uint32Array(32 * I * L); const W = 32 * I; const q = new Uint32Array(16); const Q = new Uint32Array(16); const Y = J * L * 2; let ff = 0; let ef = null; let tf = false; let rf = 0; let af = 0, nf; let of; const sf = U ? parseInt(1e3 / I) : 4294967295; const cf = typeof setImmediate !== "undefined" ? setImmediate : setTimeout; const incrementalSMix = function () { if (tf) { return U(new Error("cancelled"), ff / Y) } let B; switch (rf) { case 0: of = af * 32 * I; arraycopy(G, of, V, 0, W); rf = 1; nf = 0; case 1: B = L - nf; if (B > sf) { B = sf } for (let T = 0; T < B; T++) { arraycopy(V, 0, Z, (nf + T) * W, W); blockmix_salsa8(V, W, I, q, Q) } nf += B; ff += B; if (U) { const T = parseInt(1e3 * ff / Y); if (T !== ef) { tf = U(null, ff / Y); if (tf) { break } ef = T } } if (nf < L) { break } nf = 0; rf = 2; case 2: B = L - nf; if (B > sf) { B = sf } for (let T = 0; T < B; T++) { const T = (2 * I - 1) * 16; const B = V[T] & L - 1; blockxor(Z, B * W, V, W); blockmix_salsa8(V, W, I, q, Q) } nf += B; ff += B; if (U) { const T = parseInt(1e3 * ff / Y); if (T !== ef) { tf = U(null, ff / Y); if (tf) { break } ef = T } } if (nf < L) { break } arraycopy(V, 0, G, of, W); af++; if (af < J) { rf = 0; break } X = []; for (let T = 0; T < G.length; T++) { X.push(G[T] >> 0 & 255); X.push(G[T] >> 8 & 255); X.push(G[T] >> 16 & 255); X.push(G[T] >> 24 & 255) } const N = PBKDF2_HMAC_SHA256_OneIter(T, X, H); if (U) { U(null, 1, N) } return N }if (U) { cf(incrementalSMix) } }; if (!U) { while (true) { const T = incrementalSMix(); if (T != undefined) { return T } } } incrementalSMix() } const L = { scrypt: function (T, B, N, L, I, J, H) { return new Promise((function (U, X) { let G = 0; if (H) { H(0) } _scrypt(T, B, N, L, I, J, (function (T, B, N) { if (T) { X(T) } else if (N) { if (H && G !== 1) { H(1) } U(new Uint8Array(N)) } else if (H && B !== G) { G = B; return H(B) } })) })) }, syncScrypt: function (T, B, N, L, I, J) { return new Uint8Array(_scrypt(T, B, N, L, I, J)) } }; if (true) { T.exports = L } else { } })(this) }, 1354: (T, B, N) => { "use strict"; const L = N(6681); L.createWebSocketStream = N(6412); L.Server = N(129); L.Receiver = N(893); L.Sender = N(7389); L.WebSocket = L; L.WebSocketServer = L.Server; T.exports = L }, 5803: (T, B, N) => { "use strict"; const { EMPTY_BUFFER: L } = N(1791); const I = Buffer[Symbol.species]; function concat(T, B) { if (T.length === 0) return L; if (T.length === 1) return T[0]; const N = Buffer.allocUnsafe(B); let J = 0; for (let B = 0; B < T.length; B++) { const L = T[B]; N.set(L, J); J += L.length } if (J < B) { return new I(N.buffer, N.byteOffset, J) } return N } function _mask(T, B, N, L, I) { for (let J = 0; J < I; J++) { N[L + J] = T[J] ^ B[J & 3] } } function _unmask(T, B) { for (let N = 0; N < T.length; N++) { T[N] ^= B[N & 3] } } function toArrayBuffer(T) { if (T.length === T.buffer.byteLength) { return T.buffer } return T.buffer.slice(T.byteOffset, T.byteOffset + T.length) } function toBuffer(T) { toBuffer.readOnly = true; if (Buffer.isBuffer(T)) return T; let B; if (T instanceof ArrayBuffer) { B = new I(T) } else if (ArrayBuffer.isView(T)) { B = new I(T.buffer, T.byteOffset, T.byteLength) } else { B = Buffer.from(T); toBuffer.readOnly = false } return B } T.exports = { concat: concat, mask: _mask, toArrayBuffer: toArrayBuffer, toBuffer: toBuffer, unmask: _unmask }; if (!process.env.WS_NO_BUFFER_UTIL) { try { const B = N(8327); T.exports.mask = function (T, N, L, I, J) { if (J < 48) _mask(T, N, L, I, J); else B.mask(T, N, L, I, J) }; T.exports.unmask = function (T, N) { if (T.length < 32) _unmask(T, N); else B.unmask(T, N) } } catch (T) { } } }, 1791: T => { "use strict"; const B = ["nodebuffer", "arraybuffer", "fragments"]; const N = typeof Blob !== "undefined"; if (N) B.push("blob"); T.exports = { BINARY_TYPES: B, EMPTY_BUFFER: Buffer.alloc(0), GUID: "258EAFA5-E914-47DA-95CA-C5AB0DC85B11", hasBlob: N, kForOnEventAttribute: Symbol("kIsForOnEventAttribute"), kListener: Symbol("kListener"), kStatusCode: Symbol("status-code"), kWebSocket: Symbol("websocket"), NOOP: () => { } } }, 4634: (T, B, N) => { "use strict"; const { kForOnEventAttribute: L, kListener: I } = N(1791); const J = Symbol("kCode"); const H = Symbol("kData"); const U = Symbol("kError"); const X = Symbol("kMessage"); const G = Symbol("kReason"); const V = Symbol("kTarget"); const Z = Symbol("kType"); const W = Symbol("kWasClean"); class Event { constructor(T) { this[V] = null; this[Z] = T } get target() { return this[V] } get type() { return this[Z] } } Object.defineProperty(Event.prototype, "target", { enumerable: true }); Object.defineProperty(Event.prototype, "type", { enumerable: true }); class CloseEvent extends Event { constructor(T, B = {}) { super(T); this[J] = B.code === undefined ? 0 : B.code; this[G] = B.reason === undefined ? "" : B.reason; this[W] = B.wasClean === undefined ? false : B.wasClean } get code() { return this[J] } get reason() { return this[G] } get wasClean() { return this[W] } } Object.defineProperty(CloseEvent.prototype, "code", { enumerable: true }); Object.defineProperty(CloseEvent.prototype, "reason", { enumerable: true }); Object.defineProperty(CloseEvent.prototype, "wasClean", { enumerable: true }); class ErrorEvent extends Event { constructor(T, B = {}) { super(T); this[U] = B.error === undefined ? null : B.error; this[X] = B.message === undefined ? "" : B.message } get error() { return this[U] } get message() { return this[X] } } Object.defineProperty(ErrorEvent.prototype, "error", { enumerable: true }); Object.defineProperty(ErrorEvent.prototype, "message", { enumerable: true }); class MessageEvent extends Event { constructor(T, B = {}) { super(T); this[H] = B.data === undefined ? null : B.data } get data() { return this[H] } } Object.defineProperty(MessageEvent.prototype, "data", { enumerable: true }); const q = { addEventListener(T, B, N = {}) { for (const J of this.listeners(T)) { if (!N[L] && J[I] === B && !J[L]) { return } } let J; if (T === "message") { J = function onMessage(T, N) { const L = new MessageEvent("message", { data: N ? T : T.toString() }); L[V] = this; callListener(B, this, L) } } else if (T === "close") { J = function onClose(T, N) { const L = new CloseEvent("close", { code: T, reason: N.toString(), wasClean: this._closeFrameReceived && this._closeFrameSent }); L[V] = this; callListener(B, this, L) } } else if (T === "error") { J = function onError(T) { const N = new ErrorEvent("error", { error: T, message: T.message }); N[V] = this; callListener(B, this, N) } } else if (T === "open") { J = function onOpen() { const T = new Event("open"); T[V] = this; callListener(B, this, T) } } else { return } J[L] = !!N[L]; J[I] = B; if (N.once) { this.once(T, J) } else { this.on(T, J) } }, removeEventListener(T, B) { for (const N of this.listeners(T)) { if (N[I] === B && !N[L]) { this.removeListener(T, N); break } } } }; T.exports = { CloseEvent: CloseEvent, ErrorEvent: ErrorEvent, Event: Event, EventTarget: q, MessageEvent: MessageEvent }; function callListener(T, B, N) { if (typeof T === "object" && T.handleEvent) { T.handleEvent.call(T, N) } else { T.call(B, N) } } }, 1335: (T, B, N) => { "use strict"; const { tokenChars: L } = N(6615); function push(T, B, N) { if (T[B] === undefined) T[B] = [N]; else T[B].push(N) } function parse(T) { const B = Object.create(null); let N = Object.create(null); let I = false; let J = false; let H = false; let U; let X; let G = -1; let V = -1; let Z = -1; let W = 0; for (; W < T.length; W++) { V = T.charCodeAt(W); if (U === undefined) { if (Z === -1 && L[V] === 1) { if (G === -1) G = W } else if (W !== 0 && (V === 32 || V === 9)) { if (Z === -1 && G !== -1) Z = W } else if (V === 59 || V === 44) { if (G === -1) { throw new SyntaxError(`Unexpected character at index ${W}`) } if (Z === -1) Z = W; const L = T.slice(G, Z); if (V === 44) { push(B, L, N); N = Object.create(null) } else { U = L } G = Z = -1 } else { throw new SyntaxError(`Unexpected character at index ${W}`) } } else if (X === undefined) { if (Z === -1 && L[V] === 1) { if (G === -1) G = W } else if (V === 32 || V === 9) { if (Z === -1 && G !== -1) Z = W } else if (V === 59 || V === 44) { if (G === -1) { throw new SyntaxError(`Unexpected character at index ${W}`) } if (Z === -1) Z = W; push(N, T.slice(G, Z), true); if (V === 44) { push(B, U, N); N = Object.create(null); U = undefined } G = Z = -1 } else if (V === 61 && G !== -1 && Z === -1) { X = T.slice(G, W); G = Z = -1 } else { throw new SyntaxError(`Unexpected character at index ${W}`) } } else { if (J) { if (L[V] !== 1) { throw new SyntaxError(`Unexpected character at index ${W}`) } if (G === -1) G = W; else if (!I) I = true; J = false } else if (H) { if (L[V] === 1) { if (G === -1) G = W } else if (V === 34 && G !== -1) { H = false; Z = W } else if (V === 92) { J = true } else { throw new SyntaxError(`Unexpected character at index ${W}`) } } else if (V === 34 && T.charCodeAt(W - 1) === 61) { H = true } else if (Z === -1 && L[V] === 1) { if (G === -1) G = W } else if (G !== -1 && (V === 32 || V === 9)) { if (Z === -1) Z = W } else if (V === 59 || V === 44) { if (G === -1) { throw new SyntaxError(`Unexpected character at index ${W}`) } if (Z === -1) Z = W; let L = T.slice(G, Z); if (I) { L = L.replace(/\\/g, ""); I = false } push(N, X, L); if (V === 44) { push(B, U, N); N = Object.create(null); U = undefined } X = undefined; G = Z = -1 } else { throw new SyntaxError(`Unexpected character at index ${W}`) } } } if (G === -1 || H || V === 32 || V === 9) { throw new SyntaxError("Unexpected end of input") } if (Z === -1) Z = W; const q = T.slice(G, Z); if (U === undefined) { push(B, q, N) } else { if (X === undefined) { push(N, q, true) } else if (I) { push(N, X, q.replace(/\\/g, "")) } else { push(N, X, q) } push(B, U, N) } return B } function format(T) { return Object.keys(T).map((B => { let N = T[B]; if (!Array.isArray(N)) N = [N]; return N.map((T => [B].concat(Object.keys(T).map((B => { let N = T[B]; if (!Array.isArray(N)) N = [N]; return N.map((T => T === true ? B : `${B}=${T}`)).join("; ") }))).join("; "))).join(", ") })).join(", ") } T.exports = { format: format, parse: parse } }, 958: T => { "use strict"; const B = Symbol("kDone"); const N = Symbol("kRun"); class Limiter { constructor(T) { this[B] = () => { this.pending--; this[N]() }; this.concurrency = T || Infinity; this.jobs = []; this.pending = 0 } add(T) { this.jobs.push(T); this[N]() } [N]() { if (this.pending === this.concurrency) return; if (this.jobs.length) { const T = this.jobs.shift(); this.pending++; T(this[B]) } } } T.exports = Limiter }, 4376: (T, B, N) => { "use strict"; const L = N(3106); const I = N(5803); const J = N(958); const { kStatusCode: H } = N(1791); const U = Buffer[Symbol.species]; const X = Buffer.from([0, 0, 255, 255]); const G = Symbol("permessage-deflate"); const V = Symbol("total-length"); const Z = Symbol("callback"); const W = Symbol("buffers"); const q = Symbol("error"); let Q; class PerMessageDeflate { constructor(T, B, N) { this._maxPayload = N | 0; this._options = T || {}; this._threshold = this._options.threshold !== undefined ? this._options.threshold : 1024; this._isServer = !!B; this._deflate = null; this._inflate = null; this.params = null; if (!Q) { const T = this._options.concurrencyLimit !== undefined ? this._options.concurrencyLimit : 10; Q = new J(T) } } static get extensionName() { return "permessage-deflate" } offer() { const T = {}; if (this._options.serverNoContextTakeover) { T.server_no_context_takeover = true } if (this._options.clientNoContextTakeover) { T.client_no_context_takeover = true } if (this._options.serverMaxWindowBits) { T.server_max_window_bits = this._options.serverMaxWindowBits } if (this._options.clientMaxWindowBits) { T.client_max_window_bits = this._options.clientMaxWindowBits } else if (this._options.clientMaxWindowBits == null) { T.client_max_window_bits = true } return T } accept(T) { T = this.normalizeParams(T); this.params = this._isServer ? this.acceptAsServer(T) : this.acceptAsClient(T); return this.params } cleanup() { if (this._inflate) { this._inflate.close(); this._inflate = null } if (this._deflate) { const T = this._deflate[Z]; this._deflate.close(); this._deflate = null; if (T) { T(new Error("The deflate stream was closed while data was being processed")) } } } acceptAsServer(T) { const B = this._options; const N = T.find((T => { if (B.serverNoContextTakeover === false && T.server_no_context_takeover || T.server_max_window_bits && (B.serverMaxWindowBits === false || typeof B.serverMaxWindowBits === "number" && B.serverMaxWindowBits > T.server_max_window_bits) || typeof B.clientMaxWindowBits === "number" && !T.client_max_window_bits) { return false } return true })); if (!N) { throw new Error("None of the extension offers can be accepted") } if (B.serverNoContextTakeover) { N.server_no_context_takeover = true } if (B.clientNoContextTakeover) { N.client_no_context_takeover = true } if (typeof B.serverMaxWindowBits === "number") { N.server_max_window_bits = B.serverMaxWindowBits } if (typeof B.clientMaxWindowBits === "number") { N.client_max_window_bits = B.clientMaxWindowBits } else if (N.client_max_window_bits === true || B.clientMaxWindowBits === false) { delete N.client_max_window_bits } return N } acceptAsClient(T) { const B = T[0]; if (this._options.clientNoContextTakeover === false && B.client_no_context_takeover) { throw new Error('Unexpected parameter "client_no_context_takeover"') } if (!B.client_max_window_bits) { if (typeof this._options.clientMaxWindowBits === "number") { B.client_max_window_bits = this._options.clientMaxWindowBits } } else if (this._options.clientMaxWindowBits === false || typeof this._options.clientMaxWindowBits === "number" && B.client_max_window_bits > this._options.clientMaxWindowBits) { throw new Error('Unexpected or invalid parameter "client_max_window_bits"') } return B } normalizeParams(T) { T.forEach((T => { Object.keys(T).forEach((B => { let N = T[B]; if (N.length > 1) { throw new Error(`Parameter "${B}" must have only a single value`) } N = N[0]; if (B === "client_max_window_bits") { if (N !== true) { const T = +N; if (!Number.isInteger(T) || T < 8 || T > 15) { throw new TypeError(`Invalid value for parameter "${B}": ${N}`) } N = T } else if (!this._isServer) { throw new TypeError(`Invalid value for parameter "${B}": ${N}`) } } else if (B === "server_max_window_bits") { const T = +N; if (!Number.isInteger(T) || T < 8 || T > 15) { throw new TypeError(`Invalid value for parameter "${B}": ${N}`) } N = T } else if (B === "client_no_context_takeover" || B === "server_no_context_takeover") { if (N !== true) { throw new TypeError(`Invalid value for parameter "${B}": ${N}`) } } else { throw new Error(`Unknown parameter "${B}"`) } T[B] = N })) })); return T } decompress(T, B, N) { Q.add((L => { this._decompress(T, B, ((T, B) => { L(); N(T, B) })) })) } compress(T, B, N) { Q.add((L => { this._compress(T, B, ((T, B) => { L(); N(T, B) })) })) } _decompress(T, B, N) { const J = this._isServer ? "client" : "server"; if (!this._inflate) { const T = `${J}_max_window_bits`; const B = typeof this.params[T] !== "number" ? L.Z_DEFAULT_WINDOWBITS : this.params[T]; this._inflate = L.createInflateRaw({ ...this._options.zlibInflateOptions, windowBits: B }); this._inflate[G] = this; this._inflate[V] = 0; this._inflate[W] = []; this._inflate.on("error", inflateOnError); this._inflate.on("data", inflateOnData) } this._inflate[Z] = N; this._inflate.write(T); if (B) this._inflate.write(X); this._inflate.flush((() => { const T = this._inflate[q]; if (T) { this._inflate.close(); this._inflate = null; N(T); return } const L = I.concat(this._inflate[W], this._inflate[V]); if (this._inflate._readableState.endEmitted) { this._inflate.close(); this._inflate = null } else { this._inflate[V] = 0; this._inflate[W] = []; if (B && this.params[`${J}_no_context_takeover`]) { this._inflate.reset() } } N(null, L) })) } _compress(T, B, N) { const J = this._isServer ? "server" : "client"; if (!this._deflate) { const T = `${J}_max_window_bits`; const B = typeof this.params[T] !== "number" ? L.Z_DEFAULT_WINDOWBITS : this.params[T]; this._deflate = L.createDeflateRaw({ ...this._options.zlibDeflateOptions, windowBits: B }); this._deflate[V] = 0; this._deflate[W] = []; this._deflate.on("data", deflateOnData) } this._deflate[Z] = N; this._deflate.write(T); this._deflate.flush(L.Z_SYNC_FLUSH, (() => { if (!this._deflate) { return } let T = I.concat(this._deflate[W], this._deflate[V]); if (B) { T = new U(T.buffer, T.byteOffset, T.length - 4) } this._deflate[Z] = null; this._deflate[V] = 0; this._deflate[W] = []; if (B && this.params[`${J}_no_context_takeover`]) { this._deflate.reset() } N(null, T) })) } } T.exports = PerMessageDeflate; function deflateOnData(T) { this[W].push(T); this[V] += T.length } function inflateOnData(T) { this[V] += T.length; if (this[G]._maxPayload < 1 || this[V] <= this[G]._maxPayload) { this[W].push(T); return } this[q] = new RangeError("Max payload size exceeded"); this[q].code = "WS_ERR_UNSUPPORTED_MESSAGE_LENGTH"; this[q][H] = 1009; this.removeListener("data", inflateOnData); this.reset() } function inflateOnError(T) { this[G]._inflate = null; T[H] = 1007; this[Z](T) } }, 893: (T, B, N) => { "use strict"; const { Writable: L } = N(2203); const I = N(4376); const { BINARY_TYPES: J, EMPTY_BUFFER: H, kStatusCode: U, kWebSocket: X } = N(1791); const { concat: G, toArrayBuffer: V, unmask: Z } = N(5803); const { isValidStatusCode: W, isValidUTF8: q } = N(6615); const Q = Buffer[Symbol.species]; const Y = 0; const ff = 1; const ef = 2; const tf = 3; const rf = 4; const af = 5; const nf = 6; class Receiver extends L { constructor(T = {}) { super(); this._allowSynchronousEvents = T.allowSynchronousEvents !== undefined ? T.allowSynchronousEvents : true; this._binaryType = T.binaryType || J[0]; this._extensions = T.extensions || {}; this._isServer = !!T.isServer; this._maxPayload = T.maxPayload | 0; this._skipUTF8Validation = !!T.skipUTF8Validation; this[X] = undefined; this._bufferedBytes = 0; this._buffers = []; this._compressed = false; this._payloadLength = 0; this._mask = undefined; this._fragmented = 0; this._masked = false; this._fin = false; this._opcode = 0; this._totalPayloadLength = 0; this._messageLength = 0; this._fragments = []; this._errored = false; this._loop = false; this._state = Y } _write(T, B, N) { if (this._opcode === 8 && this._state == Y) return N(); this._bufferedBytes += T.length; this._buffers.push(T); this.startLoop(N) } consume(T) { this._bufferedBytes -= T; if (T === this._buffers[0].length) return this._buffers.shift(); if (T < this._buffers[0].length) { const B = this._buffers[0]; this._buffers[0] = new Q(B.buffer, B.byteOffset + T, B.length - T); return new Q(B.buffer, B.byteOffset, T) } const B = Buffer.allocUnsafe(T); do { const N = this._buffers[0]; const L = B.length - T; if (T >= N.length) { B.set(this._buffers.shift(), L) } else { B.set(new Uint8Array(N.buffer, N.byteOffset, T), L); this._buffers[0] = new Q(N.buffer, N.byteOffset + T, N.length - T) } T -= N.length } while (T > 0); return B } startLoop(T) { this._loop = true; do { switch (this._state) { case Y: this.getInfo(T); break; case ff: this.getPayloadLength16(T); break; case ef: this.getPayloadLength64(T); break; case tf: this.getMask(); break; case rf: this.getData(T); break; case af: case nf: this._loop = false; return } } while (this._loop); if (!this._errored) T() } getInfo(T) { if (this._bufferedBytes < 2) { this._loop = false; return } const B = this.consume(2); if ((B[0] & 48) !== 0) { const B = this.createError(RangeError, "RSV2 and RSV3 must be clear", true, 1002, "WS_ERR_UNEXPECTED_RSV_2_3"); T(B); return } const N = (B[0] & 64) === 64; if (N && !this._extensions[I.extensionName]) { const B = this.createError(RangeError, "RSV1 must be clear", true, 1002, "WS_ERR_UNEXPECTED_RSV_1"); T(B); return } this._fin = (B[0] & 128) === 128; this._opcode = B[0] & 15; this._payloadLength = B[1] & 127; if (this._opcode === 0) { if (N) { const B = this.createError(RangeError, "RSV1 must be clear", true, 1002, "WS_ERR_UNEXPECTED_RSV_1"); T(B); return } if (!this._fragmented) { const B = this.createError(RangeError, "invalid opcode 0", true, 1002, "WS_ERR_INVALID_OPCODE"); T(B); return } this._opcode = this._fragmented } else if (this._opcode === 1 || this._opcode === 2) { if (this._fragmented) { const B = this.createError(RangeError, `invalid opcode ${this._opcode}`, true, 1002, "WS_ERR_INVALID_OPCODE"); T(B); return } this._compressed = N } else if (this._opcode > 7 && this._opcode < 11) { if (!this._fin) { const B = this.createError(RangeError, "FIN must be set", true, 1002, "WS_ERR_EXPECTED_FIN"); T(B); return } if (N) { const B = this.createError(RangeError, "RSV1 must be clear", true, 1002, "WS_ERR_UNEXPECTED_RSV_1"); T(B); return } if (this._payloadLength > 125 || this._opcode === 8 && this._payloadLength === 1) { const B = this.createError(RangeError, `invalid payload length ${this._payloadLength}`, true, 1002, "WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH"); T(B); return } } else { const B = this.createError(RangeError, `invalid opcode ${this._opcode}`, true, 1002, "WS_ERR_INVALID_OPCODE"); T(B); return } if (!this._fin && !this._fragmented) this._fragmented = this._opcode; this._masked = (B[1] & 128) === 128; if (this._isServer) { if (!this._masked) { const B = this.createError(RangeError, "MASK must be set", true, 1002, "WS_ERR_EXPECTED_MASK"); T(B); return } } else if (this._masked) { const B = this.createError(RangeError, "MASK must be clear", true, 1002, "WS_ERR_UNEXPECTED_MASK"); T(B); return } if (this._payloadLength === 126) this._state = ff; else if (this._payloadLength === 127) this._state = ef; else this.haveLength(T) } getPayloadLength16(T) { if (this._bufferedBytes < 2) { this._loop = false; return } this._payloadLength = this.consume(2).readUInt16BE(0); this.haveLength(T) } getPayloadLength64(T) { if (this._bufferedBytes < 8) { this._loop = false; return } const B = this.consume(8); const N = B.readUInt32BE(0); if (N > Math.pow(2, 53 - 32) - 1) { const B = this.createError(RangeError, "Unsupported WebSocket frame: payload length > 2^53 - 1", false, 1009, "WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH"); T(B); return } this._payloadLength = N * Math.pow(2, 32) + B.readUInt32BE(4); this.haveLength(T) } haveLength(T) { if (this._payloadLength && this._opcode < 8) { this._totalPayloadLength += this._payloadLength; if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) { const B = this.createError(RangeError, "Max payload size exceeded", false, 1009, "WS_ERR_UNSUPPORTED_MESSAGE_LENGTH"); T(B); return } } if (this._masked) this._state = tf; else this._state = rf } getMask() { if (this._bufferedBytes < 4) { this._loop = false; return } this._mask = this.consume(4); this._state = rf } getData(T) { let B = H; if (this._payloadLength) { if (this._bufferedBytes < this._payloadLength) { this._loop = false; return } B = this.consume(this._payloadLength); if (this._masked && (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0) { Z(B, this._mask) } } if (this._opcode > 7) { this.controlMessage(B, T); return } if (this._compressed) { this._state = af; this.decompress(B, T); return } if (B.length) { this._messageLength = this._totalPayloadLength; this._fragments.push(B) } this.dataMessage(T) } decompress(T, B) { const N = this._extensions[I.extensionName]; N.decompress(T, this._fin, ((T, N) => { if (T) return B(T); if (N.length) { this._messageLength += N.length; if (this._messageLength > this._maxPayload && this._maxPayload > 0) { const T = this.createError(RangeError, "Max payload size exceeded", false, 1009, "WS_ERR_UNSUPPORTED_MESSAGE_LENGTH"); B(T); return } this._fragments.push(N) } this.dataMessage(B); if (this._state === Y) this.startLoop(B) })) } dataMessage(T) { if (!this._fin) { this._state = Y; return } const B = this._messageLength; const N = this._fragments; this._totalPayloadLength = 0; this._messageLength = 0; this._fragmented = 0; this._fragments = []; if (this._opcode === 2) { let L; if (this._binaryType === "nodebuffer") { L = G(N, B) } else if (this._binaryType === "arraybuffer") { L = V(G(N, B)) } else if (this._binaryType === "blob") { L = new Blob(N) } else { L = N } if (this._allowSynchronousEvents) { this.emit("message", L, true); this._state = Y } else { this._state = nf; setImmediate((() => { this.emit("message", L, true); this._state = Y; this.startLoop(T) })) } } else { const L = G(N, B); if (!this._skipUTF8Validation && !q(L)) { const B = this.createError(Error, "invalid UTF-8 sequence", true, 1007, "WS_ERR_INVALID_UTF8"); T(B); return } if (this._state === af || this._allowSynchronousEvents) { this.emit("message", L, false); this._state = Y } else { this._state = nf; setImmediate((() => { this.emit("message", L, false); this._state = Y; this.startLoop(T) })) } } } controlMessage(T, B) { if (this._opcode === 8) { if (T.length === 0) { this._loop = false; this.emit("conclude", 1005, H); this.end() } else { const N = T.readUInt16BE(0); if (!W(N)) { const T = this.createError(RangeError, `invalid status code ${N}`, true, 1002, "WS_ERR_INVALID_CLOSE_CODE"); B(T); return } const L = new Q(T.buffer, T.byteOffset + 2, T.length - 2); if (!this._skipUTF8Validation && !q(L)) { const T = this.createError(Error, "invalid UTF-8 sequence", true, 1007, "WS_ERR_INVALID_UTF8"); B(T); return } this._loop = false; this.emit("conclude", N, L); this.end() } this._state = Y; return } if (this._allowSynchronousEvents) { this.emit(this._opcode === 9 ? "ping" : "pong", T); this._state = Y } else { this._state = nf; setImmediate((() => { this.emit(this._opcode === 9 ? "ping" : "pong", T); this._state = Y; this.startLoop(B) })) } } createError(T, B, N, L, I) { this._loop = false; this._errored = true; const J = new T(N ? `Invalid WebSocket frame: ${B}` : B); Error.captureStackTrace(J, this.createError); J.code = I; J[U] = L; return J } } T.exports = Receiver }, 7389: (T, B, N) => { "use strict"; const { Duplex: L } = N(2203); const { randomFillSync: I } = N(6982); const J = N(4376); const { EMPTY_BUFFER: H, kWebSocket: U, NOOP: X } = N(1791); const { isBlob: G, isValidStatusCode: V } = N(6615); const { mask: Z, toBuffer: W } = N(5803); const q = Symbol("kByteLength"); const Q = Buffer.alloc(4); const Y = 8 * 1024; let ff; let ef = Y; const tf = 0; const rf = 1; const af = 2; class Sender { constructor(T, B, N) { this._extensions = B || {}; if (N) { this._generateMask = N; this._maskBuffer = Buffer.alloc(4) } this._socket = T; this._firstFragment = true; this._compress = false; this._bufferedBytes = 0; this._queue = []; this._state = tf; this.onerror = X; this[U] = undefined } static frame(T, B) { let N; let L = false; let J = 2; let H = false; if (B.mask) { N = B.maskBuffer || Q; if (B.generateMask) { B.generateMask(N) } else { if (ef === Y) { if (ff === undefined) { ff = Buffer.alloc(Y) } I(ff, 0, Y); ef = 0 } N[0] = ff[ef++]; N[1] = ff[ef++]; N[2] = ff[ef++]; N[3] = ff[ef++] } H = (N[0] | N[1] | N[2] | N[3]) === 0; J = 6 } let U; if (typeof T === "string") { if ((!B.mask || H) && B[q] !== undefined) { U = B[q] } else { T = Buffer.from(T); U = T.length } } else { U = T.length; L = B.mask && B.readOnly && !H } let X = U; if (U >= 65536) { J += 8; X = 127 } else if (U > 125) { J += 2; X = 126 } const G = Buffer.allocUnsafe(L ? U + J : J); G[0] = B.fin ? B.opcode | 128 : B.opcode; if (B.rsv1) G[0] |= 64; G[1] = X; if (X === 126) { G.writeUInt16BE(U, 2) } else if (X === 127) { G[2] = G[3] = 0; G.writeUIntBE(U, 4, 6) } if (!B.mask) return [G, T]; G[1] |= 128; G[J - 4] = N[0]; G[J - 3] = N[1]; G[J - 2] = N[2]; G[J - 1] = N[3]; if (H) return [G, T]; if (L) { Z(T, N, G, J, U); return [G] } Z(T, N, T, 0, U); return [G, T] } close(T, B, N, L) { let I; if (T === undefined) { I = H } else if (typeof T !== "number" || !V(T)) { throw new TypeError("First argument must be a valid error code number") } else if (B === undefined || !B.length) { I = Buffer.allocUnsafe(2); I.writeUInt16BE(T, 0) } else { const N = Buffer.byteLength(B); if (N > 123) { throw new RangeError("The message must not be greater than 123 bytes") } I = Buffer.allocUnsafe(2 + N); I.writeUInt16BE(T, 0); if (typeof B === "string") { I.write(B, 2) } else { I.set(B, 2) } } const J = { [q]: I.length, fin: true, generateMask: this._generateMask, mask: N, maskBuffer: this._maskBuffer, opcode: 8, readOnly: false, rsv1: false }; if (this._state !== tf) { this.enqueue([this.dispatch, I, false, J, L]) } else { this.sendFrame(Sender.frame(I, J), L) } } ping(T, B, N) { let L; let I; if (typeof T === "string") { L = Buffer.byteLength(T); I = false } else if (G(T)) { L = T.size; I = false } else { T = W(T); L = T.length; I = W.readOnly } if (L > 125) { throw new RangeError("The data size must not be greater than 125 bytes") } const J = { [q]: L, fin: true, generateMask: this._generateMask, mask: B, maskBuffer: this._maskBuffer, opcode: 9, readOnly: I, rsv1: false }; if (G(T)) { if (this._state !== tf) { this.enqueue([this.getBlobData, T, false, J, N]) } else { this.getBlobData(T, false, J, N) } } else if (this._state !== tf) { this.enqueue([this.dispatch, T, false, J, N]) } else { this.sendFrame(Sender.frame(T, J), N) } } pong(T, B, N) { let L; let I; if (typeof T === "string") { L = Buffer.byteLength(T); I = false } else if (G(T)) { L = T.size; I = false } else { T = W(T); L = T.length; I = W.readOnly } if (L > 125) { throw new RangeError("The data size must not be greater than 125 bytes") } const J = { [q]: L, fin: true, generateMask: this._generateMask, mask: B, maskBuffer: this._maskBuffer, opcode: 10, readOnly: I, rsv1: false }; if (G(T)) { if (this._state !== tf) { this.enqueue([this.getBlobData, T, false, J, N]) } else { this.getBlobData(T, false, J, N) } } else if (this._state !== tf) { this.enqueue([this.dispatch, T, false, J, N]) } else { this.sendFrame(Sender.frame(T, J), N) } } send(T, B, N) { const L = this._extensions[J.extensionName]; let I = B.binary ? 2 : 1; let H = B.compress; let U; let X; if (typeof T === "string") { U = Buffer.byteLength(T); X = false } else if (G(T)) { U = T.size; X = false } else { T = W(T); U = T.length; X = W.readOnly } if (this._firstFragment) { this._firstFragment = false; if (H && L && L.params[L._isServer ? "server_no_context_takeover" : "client_no_context_takeover"]) { H = U >= L._threshold } this._compress = H } else { H = false; I = 0 } if (B.fin) this._firstFragment = true; const V = { [q]: U, fin: B.fin, generateMask: this._generateMask, mask: B.mask, maskBuffer: this._maskBuffer, opcode: I, readOnly: X, rsv1: H }; if (G(T)) { if (this._state !== tf) { this.enqueue([this.getBlobData, T, this._compress, V, N]) } else { this.getBlobData(T, this._compress, V, N) } } else if (this._state !== tf) { this.enqueue([this.dispatch, T, this._compress, V, N]) } else { this.dispatch(T, this._compress, V, N) } } getBlobData(T, B, N, L) { this._bufferedBytes += N[q]; this._state = af; T.arrayBuffer().then((T => { if (this._socket.destroyed) { const T = new Error("The socket was closed while the blob was being read"); process.nextTick(callCallbacks, this, T, L); return } this._bufferedBytes -= N[q]; const I = W(T); if (!B) { this._state = tf; this.sendFrame(Sender.frame(I, N), L); this.dequeue() } else { this.dispatch(I, B, N, L) } })).catch((T => { process.nextTick(onError, this, T, L) })) } dispatch(T, B, N, L) { if (!B) { this.sendFrame(Sender.frame(T, N), L); return } const I = this._extensions[J.extensionName]; this._bufferedBytes += N[q]; this._state = rf; I.compress(T, N.fin, ((T, B) => { if (this._socket.destroyed) { const T = new Error("The socket was closed while data was being compressed"); callCallbacks(this, T, L); return } this._bufferedBytes -= N[q]; this._state = tf; N.readOnly = false; this.sendFrame(Sender.frame(B, N), L); this.dequeue() })) } dequeue() { while (this._state === tf && this._queue.length) { const T = this._queue.shift(); this._bufferedBytes -= T[3][q]; Reflect.apply(T[0], this, T.slice(1)) } } enqueue(T) { this._bufferedBytes += T[3][q]; this._queue.push(T) } sendFrame(T, B) { if (T.length === 2) { this._socket.cork(); this._socket.write(T[0]); this._socket.write(T[1], B); this._socket.uncork() } else { this._socket.write(T[0], B) } } } T.exports = Sender; function callCallbacks(T, B, N) { if (typeof N === "function") N(B); for (let N = 0; N < T._queue.length; N++) { const L = T._queue[N]; const I = L[L.length - 1]; if (typeof I === "function") I(B) } } function onError(T, B, N) { callCallbacks(T, B, N); T.onerror(B) } }, 6412: (T, B, N) => { "use strict"; const { Duplex: L } = N(2203); function emitClose(T) { T.emit("close") } function duplexOnEnd() { if (!this.destroyed && this._writableState.finished) { this.destroy() } } function duplexOnError(T) { this.removeListener("error", duplexOnError); this.destroy(); if (this.listenerCount("error") === 0) { this.emit("error", T) } } function createWebSocketStream(T, B) { let N = true; const I = new L({ ...B, autoDestroy: false, emitClose: false, objectMode: false, writableObjectMode: false }); T.on("message", (function message(B, N) { const L = !N && I._readableState.objectMode ? B.toString() : B; if (!I.push(L)) T.pause() })); T.once("error", (function error(T) { if (I.destroyed) return; N = false; I.destroy(T) })); T.once("close", (function close() { if (I.destroyed) return; I.push(null) })); I._destroy = function (B, L) { if (T.readyState === T.CLOSED) { L(B); process.nextTick(emitClose, I); return } let J = false; T.once("error", (function error(T) { J = true; L(T) })); T.once("close", (function close() { if (!J) L(B); process.nextTick(emitClose, I) })); if (N) T.terminate() }; I._final = function (B) { if (T.readyState === T.CONNECTING) { T.once("open", (function open() { I._final(B) })); return } if (T._socket === null) return; if (T._socket._writableState.finished) { B(); if (I._readableState.endEmitted) I.destroy() } else { T._socket.once("finish", (function finish() { B() })); T.close() } }; I._read = function () { if (T.isPaused) T.resume() }; I._write = function (B, N, L) { if (T.readyState === T.CONNECTING) { T.once("open", (function open() { I._write(B, N, L) })); return } T.send(B, L) }; I.on("end", duplexOnEnd); I.on("error", duplexOnError); return I } T.exports = createWebSocketStream }, 3332: (T, B, N) => { "use strict"; const { tokenChars: L } = N(6615); function parse(T) { const B = new Set; let N = -1; let I = -1; let J = 0; for (J; J < T.length; J++) { const H = T.charCodeAt(J); if (I === -1 && L[H] === 1) { if (N === -1) N = J } else if (J !== 0 && (H === 32 || H === 9)) { if (I === -1 && N !== -1) I = J } else if (H === 44) { if (N === -1) { throw new SyntaxError(`Unexpected character at index ${J}`) } if (I === -1) I = J; const L = T.slice(N, I); if (B.has(L)) { throw new SyntaxError(`The "${L}" subprotocol is duplicated`) } B.add(L); N = I = -1 } else { throw new SyntaxError(`Unexpected character at index ${J}`) } } if (N === -1 || I !== -1) { throw new SyntaxError("Unexpected end of input") } const H = T.slice(N, J); if (B.has(H)) { throw new SyntaxError(`The "${H}" subprotocol is duplicated`) } B.add(H); return B } T.exports = { parse: parse } }, 6615: (T, B, N) => { "use strict"; const { isUtf8: L } = N(181); const { hasBlob: I } = N(1791); const J = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0]; function isValidStatusCode(T) { return T >= 1e3 && T <= 1014 && T !== 1004 && T !== 1005 && T !== 1006 || T >= 3e3 && T <= 4999 } function _isValidUTF8(T) { const B = T.length; let N = 0; while (N < B) { if ((T[N] & 128) === 0) { N++ } else if ((T[N] & 224) === 192) { if (N + 1 === B || (T[N + 1] & 192) !== 128 || (T[N] & 254) === 192) { return false } N += 2 } else if ((T[N] & 240) === 224) { if (N + 2 >= B || (T[N + 1] & 192) !== 128 || (T[N + 2] & 192) !== 128 || T[N] === 224 && (T[N + 1] & 224) === 128 || T[N] === 237 && (T[N + 1] & 224) === 160) { return false } N += 3 } else if ((T[N] & 248) === 240) { if (N + 3 >= B || (T[N + 1] & 192) !== 128 || (T[N + 2] & 192) !== 128 || (T[N + 3] & 192) !== 128 || T[N] === 240 && (T[N + 1] & 240) === 128 || T[N] === 244 && T[N + 1] > 143 || T[N] > 244) { return false } N += 4 } else { return false } } return true } function isBlob(T) { return I && typeof T === "object" && typeof T.arrayBuffer === "function" && typeof T.type === "string" && typeof T.stream === "function" && (T[Symbol.toStringTag] === "Blob" || T[Symbol.toStringTag] === "File") } T.exports = { isBlob: isBlob, isValidStatusCode: isValidStatusCode, isValidUTF8: _isValidUTF8, tokenChars: J }; if (L) { T.exports.isValidUTF8 = function (T) { return T.length < 24 ? _isValidUTF8(T) : L(T) } } else if (!process.env.WS_NO_UTF_8_VALIDATE) { try { const B = N(2414); T.exports.isValidUTF8 = function (T) { return T.length < 32 ? _isValidUTF8(T) : B(T) } } catch (T) { } } }, 129: (T, B, N) => { "use strict"; const L = N(4434); const I = N(8611); const { Duplex: J } = N(2203); const { createHash: H } = N(6982); const U = N(1335); const X = N(4376); const G = N(3332); const V = N(6681); const { GUID: Z, kWebSocket: W } = N(1791); const q = /^[+/0-9A-Za-z]{22}==$/; const Q = 0; const Y = 1; const ff = 2; class WebSocketServer extends L { constructor(T, B) { super(); T = { allowSynchronousEvents: true, autoPong: true, maxPayload: 100 * 1024 * 1024, skipUTF8Validation: false, perMessageDeflate: false, handleProtocols: null, clientTracking: true, verifyClient: null, noServer: false, backlog: null, server: null, host: null, path: null, port: null, WebSocket: V, ...T }; if (T.port == null && !T.server && !T.noServer || T.port != null && (T.server || T.noServer) || T.server && T.noServer) { throw new TypeError('One and only one of the "port", "server", or "noServer" options ' + "must be specified") } if (T.port != null) { this._server = I.createServer(((T, B) => { const N = I.STATUS_CODES[426]; B.writeHead(426, { "Content-Length": N.length, "Content-Type": "text/plain" }); B.end(N) })); this._server.listen(T.port, T.host, T.backlog, B) } else if (T.server) { this._server = T.server } if (this._server) { const T = this.emit.bind(this, "connection"); this._removeListeners = addListeners(this._server, { listening: this.emit.bind(this, "listening"), error: this.emit.bind(this, "error"), upgrade: (B, N, L) => { this.handleUpgrade(B, N, L, T) } }) } if (T.perMessageDeflate === true) T.perMessageDeflate = {}; if (T.clientTracking) { this.clients = new Set; this._shouldEmitClose = false } this.options = T; this._state = Q } address() { if (this.options.noServer) { throw new Error('The server is operating in "noServer" mode') } if (!this._server) return null; return this._server.address() } close(T) { if (this._state === ff) { if (T) { this.once("close", (() => { T(new Error("The server is not running")) })) } process.nextTick(emitClose, this); return } if (T) this.once("close", T); if (this._state === Y) return; this._state = Y; if (this.options.noServer || this.options.server) { if (this._server) { this._removeListeners(); this._removeListeners = this._server = null } if (this.clients) { if (!this.clients.size) { process.nextTick(emitClose, this) } else { this._shouldEmitClose = true } } else { process.nextTick(emitClose, this) } } else { const T = this._server; this._removeListeners(); this._removeListeners = this._server = null; T.close((() => { emitClose(this) })) } } shouldHandle(T) { if (this.options.path) { const B = T.url.indexOf("?"); const N = B !== -1 ? T.url.slice(0, B) : T.url; if (N !== this.options.path) return false } return true } handleUpgrade(T, B, N, L) { B.on("error", socketOnError); const I = T.headers["sec-websocket-key"]; const J = T.headers.upgrade; const H = +T.headers["sec-websocket-version"]; if (T.method !== "GET") { const N = "Invalid HTTP method"; abortHandshakeOrEmitwsClientError(this, T, B, 405, N); return } if (J === undefined || J.toLowerCase() !== "websocket") { const N = "Invalid Upgrade header"; abortHandshakeOrEmitwsClientError(this, T, B, 400, N); return } if (I === undefined || !q.test(I)) { const N = "Missing or invalid Sec-WebSocket-Key header"; abortHandshakeOrEmitwsClientError(this, T, B, 400, N); return } if (H !== 8 && H !== 13) { const N = "Missing or invalid Sec-WebSocket-Version header"; abortHandshakeOrEmitwsClientError(this, T, B, 400, N); return } if (!this.shouldHandle(T)) { abortHandshake(B, 400); return } const V = T.headers["sec-websocket-protocol"]; let Z = new Set; if (V !== undefined) { try { Z = G.parse(V) } catch (N) { const L = "Invalid Sec-WebSocket-Protocol header"; abortHandshakeOrEmitwsClientError(this, T, B, 400, L); return } } const W = T.headers["sec-websocket-extensions"]; const Q = {}; if (this.options.perMessageDeflate && W !== undefined) { const N = new X(this.options.perMessageDeflate, true, this.options.maxPayload); try { const T = U.parse(W); if (T[X.extensionName]) { N.accept(T[X.extensionName]); Q[X.extensionName] = N } } catch (N) { const L = "Invalid or unacceptable Sec-WebSocket-Extensions header"; abortHandshakeOrEmitwsClientError(this, T, B, 400, L); return } } if (this.options.verifyClient) { const J = { origin: T.headers[`${H === 8 ? "sec-websocket-origin" : "origin"}`], secure: !!(T.socket.authorized || T.socket.encrypted), req: T }; if (this.options.verifyClient.length === 2) { this.options.verifyClient(J, ((J, H, U, X) => { if (!J) { return abortHandshake(B, H || 401, U, X) } this.completeUpgrade(Q, I, Z, T, B, N, L) })); return } if (!this.options.verifyClient(J)) return abortHandshake(B, 401) } this.completeUpgrade(Q, I, Z, T, B, N, L) } completeUpgrade(T, B, N, L, I, J, G) { if (!I.readable || !I.writable) return I.destroy(); if (I[W]) { throw new Error("server.handleUpgrade() was called more than once with the same " + "socket, possibly due to a misconfiguration") } if (this._state > Q) return abortHandshake(I, 503); const V = H("sha1").update(B + Z).digest("base64"); const q = ["HTTP/1.1 101 Switching Protocols", "Upgrade: websocket", "Connection: Upgrade", `Sec-WebSocket-Accept: ${V}`]; const Y = new this.options.WebSocket(null, undefined, this.options); if (N.size) { const T = this.options.handleProtocols ? this.options.handleProtocols(N, L) : N.values().next().value; if (T) { q.push(`Sec-WebSocket-Protocol: ${T}`); Y._protocol = T } } if (T[X.extensionName]) { const B = T[X.extensionName].params; const N = U.format({ [X.extensionName]: [B] }); q.push(`Sec-WebSocket-Extensions: ${N}`); Y._extensions = T } this.emit("headers", q, L); I.write(q.concat("\r\n").join("\r\n")); I.removeListener("error", socketOnError); Y.setSocket(I, J, { allowSynchronousEvents: this.options.allowSynchronousEvents, maxPayload: this.options.maxPayload, skipUTF8Validation: this.options.skipUTF8Validation }); if (this.clients) { this.clients.add(Y); Y.on("close", (() => { this.clients.delete(Y); if (this._shouldEmitClose && !this.clients.size) { process.nextTick(emitClose, this) } })) } G(Y, L) } } T.exports = WebSocketServer; function addListeners(T, B) { for (const N of Object.keys(B)) T.on(N, B[N]); return function removeListeners() { for (const N of Object.keys(B)) { T.removeListener(N, B[N]) } } } function emitClose(T) { T._state = ff; T.emit("close") } function socketOnError() { this.destroy() } function abortHandshake(T, B, N, L) { N = N || I.STATUS_CODES[B]; L = { Connection: "close", "Content-Type": "text/html", "Content-Length": Buffer.byteLength(N), ...L }; T.once("finish", T.destroy); T.end(`HTTP/1.1 ${B} ${I.STATUS_CODES[B]}\r\n` + Object.keys(L).map((T => `${T}: ${L[T]}`)).join("\r\n") + "\r\n\r\n" + N) } function abortHandshakeOrEmitwsClientError(T, B, N, L, I) { if (T.listenerCount("wsClientError")) { const L = new Error(I); Error.captureStackTrace(L, abortHandshakeOrEmitwsClientError); T.emit("wsClientError", L, N, B) } else { abortHandshake(N, L, I) } } }, 6681: (T, B, N) => { "use strict"; const L = N(4434); const I = N(5692); const J = N(8611); const H = N(9278); const U = N(4756); const { randomBytes: X, createHash: G } = N(6982); const { Duplex: V, Readable: Z } = N(2203); const { URL: W } = N(7016); const q = N(4376); const Q = N(893); const Y = N(7389); const { isBlob: ff } = N(6615); const { BINARY_TYPES: ef, EMPTY_BUFFER: tf, GUID: rf, kForOnEventAttribute: af, kListener: nf, kStatusCode: of, kWebSocket: sf, NOOP: cf } = N(1791); const { EventTarget: { addEventListener: bf, removeEventListener: df } } = N(4634); const { format: uf, parse: lf } = N(1335); const { toBuffer: hf } = N(5803); const pf = 30 * 1e3; const vf = Symbol("kAborted"); const mf = [8, 13]; const yf = ["CONNECTING", "OPEN", "CLOSING", "CLOSED"]; const gf = /^[!#$%&'*+\-.0-9A-Z^_`|a-z~]+$/; class WebSocket extends L { constructor(T, B, N) { super(); this._binaryType = ef[0]; this._closeCode = 1006; this._closeFrameReceived = false; this._closeFrameSent = false; this._closeMessage = tf; this._closeTimer = null; this._errorEmitted = false; this._extensions = {}; this._paused = false; this._protocol = ""; this._readyState = WebSocket.CONNECTING; this._receiver = null; this._sender = null; this._socket = null; if (T !== null) { this._bufferedAmount = 0; this._isServer = false; this._redirects = 0; if (B === undefined) { B = [] } else if (!Array.isArray(B)) { if (typeof B === "object" && B !== null) { N = B; B = [] } else { B = [B] } } initAsClient(this, T, B, N) } else { this._autoPong = N.autoPong; this._isServer = true } } get binaryType() { return this._binaryType } set binaryType(T) { if (!ef.includes(T)) return; this._binaryType = T; if (this._receiver) this._receiver._binaryType = T } get bufferedAmount() { if (!this._socket) return this._bufferedAmount; return this._socket._writableState.length + this._sender._bufferedBytes } get extensions() { return Object.keys(this._extensions).join() } get isPaused() { return this._paused } get onclose() { return null } get onerror() { return null } get onopen() { return null } get onmessage() { return null } get protocol() { return this._protocol } get readyState() { return this._readyState } get url() { return this._url } setSocket(T, B, N) { const L = new Q({ allowSynchronousEvents: N.allowSynchronousEvents, binaryType: this.binaryType, extensions: this._extensions, isServer: this._isServer, maxPayload: N.maxPayload, skipUTF8Validation: N.skipUTF8Validation }); const I = new Y(T, this._extensions, N.generateMask); this._receiver = L; this._sender = I; this._socket = T; L[sf] = this; I[sf] = this; T[sf] = this; L.on("conclude", receiverOnConclude); L.on("drain", receiverOnDrain); L.on("error", receiverOnError); L.on("message", receiverOnMessage); L.on("ping", receiverOnPing); L.on("pong", receiverOnPong); I.onerror = senderOnError; if (T.setTimeout) T.setTimeout(0); if (T.setNoDelay) T.setNoDelay(); if (B.length > 0) T.unshift(B); T.on("close", socketOnClose); T.on("data", socketOnData); T.on("end", socketOnEnd); T.on("error", socketOnError); this._readyState = WebSocket.OPEN; this.emit("open") } emitClose() { if (!this._socket) { this._readyState = WebSocket.CLOSED; this.emit("close", this._closeCode, this._closeMessage); return } if (this._extensions[q.extensionName]) { this._extensions[q.extensionName].cleanup() } this._receiver.removeAllListeners(); this._readyState = WebSocket.CLOSED; this.emit("close", this._closeCode, this._closeMessage) } close(T, B) { if (this.readyState === WebSocket.CLOSED) return; if (this.readyState === WebSocket.CONNECTING) { const T = "WebSocket was closed before the connection was established"; abortHandshake(this, this._req, T); return } if (this.readyState === WebSocket.CLOSING) { if (this._closeFrameSent && (this._closeFrameReceived || this._receiver._writableState.errorEmitted)) { this._socket.end() } return } this._readyState = WebSocket.CLOSING; this._sender.close(T, B, !this._isServer, (T => { if (T) return; this._closeFrameSent = true; if (this._closeFrameReceived || this._receiver._writableState.errorEmitted) { this._socket.end() } })); setCloseTimer(this) } pause() { if (this.readyState === WebSocket.CONNECTING || this.readyState === WebSocket.CLOSED) { return } this._paused = true; this._socket.pause() } ping(T, B, N) { if (this.readyState === WebSocket.CONNECTING) { throw new Error("WebSocket is not open: readyState 0 (CONNECTING)") } if (typeof T === "function") { N = T; T = B = undefined } else if (typeof B === "function") { N = B; B = undefined } if (typeof T === "number") T = T.toString(); if (this.readyState !== WebSocket.OPEN) { sendAfterClose(this, T, N); return } if (B === undefined) B = !this._isServer; this._sender.ping(T || tf, B, N) } pong(T, B, N) { if (this.readyState === WebSocket.CONNECTING) { throw new Error("WebSocket is not open: readyState 0 (CONNECTING)") } if (typeof T === "function") { N = T; T = B = undefined } else if (typeof B === "function") { N = B; B = undefined } if (typeof T === "number") T = T.toString(); if (this.readyState !== WebSocket.OPEN) { sendAfterClose(this, T, N); return } if (B === undefined) B = !this._isServer; this._sender.pong(T || tf, B, N) } resume() { if (this.readyState === WebSocket.CONNECTING || this.readyState === WebSocket.CLOSED) { return } this._paused = false; if (!this._receiver._writableState.needDrain) this._socket.resume() } send(T, B, N) { if (this.readyState === WebSocket.CONNECTING) { throw new Error("WebSocket is not open: readyState 0 (CONNECTING)") } if (typeof B === "function") { N = B; B = {} } if (typeof T === "number") T = T.toString(); if (this.readyState !== WebSocket.OPEN) { sendAfterClose(this, T, N); return } const L = { binary: typeof T !== "string", mask: !this._isServer, compress: true, fin: true, ...B }; if (!this._extensions[q.extensionName]) { L.compress = false } this._sender.send(T || tf, L, N) } terminate() { if (this.readyState === WebSocket.CLOSED) return; if (this.readyState === WebSocket.CONNECTING) { const T = "WebSocket was closed before the connection was established"; abortHandshake(this, this._req, T); return } if (this._socket) { this._readyState = WebSocket.CLOSING; this._socket.destroy() } } } Object.defineProperty(WebSocket, "CONNECTING", { enumerable: true, value: yf.indexOf("CONNECTING") }); Object.defineProperty(WebSocket.prototype, "CONNECTING", { enumerable: true, value: yf.indexOf("CONNECTING") }); Object.defineProperty(WebSocket, "OPEN", { enumerable: true, value: yf.indexOf("OPEN") }); Object.defineProperty(WebSocket.prototype, "OPEN", { enumerable: true, value: yf.indexOf("OPEN") }); Object.defineProperty(WebSocket, "CLOSING", { enumerable: true, value: yf.indexOf("CLOSING") }); Object.defineProperty(WebSocket.prototype, "CLOSING", { enumerable: true, value: yf.indexOf("CLOSING") }); Object.defineProperty(WebSocket, "CLOSED", { enumerable: true, value: yf.indexOf("CLOSED") }); Object.defineProperty(WebSocket.prototype, "CLOSED", { enumerable: true, value: yf.indexOf("CLOSED") });["binaryType", "bufferedAmount", "extensions", "isPaused", "protocol", "readyState", "url"].forEach((T => { Object.defineProperty(WebSocket.prototype, T, { enumerable: true }) }));["open", "error", "close", "message"].forEach((T => { Object.defineProperty(WebSocket.prototype, `on${T}`, { enumerable: true, get() { for (const B of this.listeners(T)) { if (B[af]) return B[nf] } return null }, set(B) { for (const B of this.listeners(T)) { if (B[af]) { this.removeListener(T, B); break } } if (typeof B !== "function") return; this.addEventListener(T, B, { [af]: true }) } }) })); WebSocket.prototype.addEventListener = bf; WebSocket.prototype.removeEventListener = df; T.exports = WebSocket; function initAsClient(T, B, N, L) { const H = { allowSynchronousEvents: true, autoPong: true, protocolVersion: mf[1], maxPayload: 100 * 1024 * 1024, skipUTF8Validation: false, perMessageDeflate: true, followRedirects: false, maxRedirects: 10, ...L, socketPath: undefined, hostname: undefined, protocol: undefined, timeout: undefined, method: "GET", host: undefined, path: undefined, port: undefined }; T._autoPong = H.autoPong; if (!mf.includes(H.protocolVersion)) { throw new RangeError(`Unsupported protocol version: ${H.protocolVersion} ` + `(supported versions: ${mf.join(", ")})`) } let U; if (B instanceof W) { U = B } else { try { U = new W(B) } catch (T) { throw new SyntaxError(`Invalid URL: ${B}`) } } if (U.protocol === "http:") { U.protocol = "ws:" } else if (U.protocol === "https:") { U.protocol = "wss:" } T._url = U.href; const V = U.protocol === "wss:"; const Z = U.protocol === "ws+unix:"; let Q; if (U.protocol !== "ws:" && !V && !Z) { Q = 'The URL\'s protocol must be one of "ws:", "wss:", ' + '"http:", "https", or "ws+unix:"' } else if (Z && !U.pathname) { Q = "The URL's pathname is empty" } else if (U.hash) { Q = "The URL contains a fragment identifier" } if (Q) { const B = new SyntaxError(Q); if (T._redirects === 0) { throw B } else { emitErrorAndClose(T, B); return } } const Y = V ? 443 : 80; const ff = X(16).toString("base64"); const ef = V ? I.request : J.request; const tf = new Set; let af; H.createConnection = H.createConnection || (V ? tlsConnect : netConnect); H.defaultPort = H.defaultPort || Y; H.port = U.port || Y; H.host = U.hostname.startsWith("[") ? U.hostname.slice(1, -1) : U.hostname; H.headers = { ...H.headers, "Sec-WebSocket-Version": H.protocolVersion, "Sec-WebSocket-Key": ff, Connection: "Upgrade", Upgrade: "websocket" }; H.path = U.pathname + U.search; H.timeout = H.handshakeTimeout; if (H.perMessageDeflate) { af = new q(H.perMessageDeflate !== true ? H.perMessageDeflate : {}, false, H.maxPayload); H.headers["Sec-WebSocket-Extensions"] = uf({ [q.extensionName]: af.offer() }) } if (N.length) { for (const T of N) { if (typeof T !== "string" || !gf.test(T) || tf.has(T)) { throw new SyntaxError("An invalid or duplicated subprotocol was specified") } tf.add(T) } H.headers["Sec-WebSocket-Protocol"] = N.join(",") } if (H.origin) { if (H.protocolVersion < 13) { H.headers["Sec-WebSocket-Origin"] = H.origin } else { H.headers.Origin = H.origin } } if (U.username || U.password) { H.auth = `${U.username}:${U.password}` } if (Z) { const T = H.path.split(":"); H.socketPath = T[0]; H.path = T[1] } let nf; if (H.followRedirects) { if (T._redirects === 0) { T._originalIpc = Z; T._originalSecure = V; T._originalHostOrSocketPath = Z ? H.socketPath : U.host; const B = L && L.headers; L = { ...L, headers: {} }; if (B) { for (const [T, N] of Object.entries(B)) { L.headers[T.toLowerCase()] = N } } } else if (T.listenerCount("redirect") === 0) { const B = Z ? T._originalIpc ? H.socketPath === T._originalHostOrSocketPath : false : T._originalIpc ? false : U.host === T._originalHostOrSocketPath; if (!B || T._originalSecure && !V) { delete H.headers.authorization; delete H.headers.cookie; if (!B) delete H.headers.host; H.auth = undefined } } if (H.auth && !L.headers.authorization) { L.headers.authorization = "Basic " + Buffer.from(H.auth).toString("base64") } nf = T._req = ef(H); if (T._redirects) { T.emit("redirect", T.url, nf) } } else { nf = T._req = ef(H) } if (H.timeout) { nf.on("timeout", (() => { abortHandshake(T, nf, "Opening handshake has timed out") })) } nf.on("error", (B => { if (nf === null || nf[vf]) return; nf = T._req = null; emitErrorAndClose(T, B) })); nf.on("response", (I => { const J = I.headers.location; const U = I.statusCode; if (J && H.followRedirects && U >= 300 && U < 400) { if (++T._redirects > H.maxRedirects) { abortHandshake(T, nf, "Maximum redirects exceeded"); return } nf.abort(); let I; try { I = new W(J, B) } catch (B) { const N = new SyntaxError(`Invalid URL: ${J}`); emitErrorAndClose(T, N); return } initAsClient(T, I, N, L) } else if (!T.emit("unexpected-response", nf, I)) { abortHandshake(T, nf, `Unexpected server response: ${I.statusCode}`) } })); nf.on("upgrade", ((B, N, L) => { T.emit("upgrade", B); if (T.readyState !== WebSocket.CONNECTING) return; nf = T._req = null; const I = B.headers.upgrade; if (I === undefined || I.toLowerCase() !== "websocket") { abortHandshake(T, N, "Invalid Upgrade header"); return } const J = G("sha1").update(ff + rf).digest("base64"); if (B.headers["sec-websocket-accept"] !== J) { abortHandshake(T, N, "Invalid Sec-WebSocket-Accept header"); return } const U = B.headers["sec-websocket-protocol"]; let X; if (U !== undefined) { if (!tf.size) { X = "Server sent a subprotocol but none was requested" } else if (!tf.has(U)) { X = "Server sent an invalid subprotocol" } } else if (tf.size) { X = "Server sent no subprotocol" } if (X) { abortHandshake(T, N, X); return } if (U) T._protocol = U; const V = B.headers["sec-websocket-extensions"]; if (V !== undefined) { if (!af) { const B = "Server sent a Sec-WebSocket-Extensions header but no extension " + "was requested"; abortHandshake(T, N, B); return } let B; try { B = lf(V) } catch (B) { const L = "Invalid Sec-WebSocket-Extensions header"; abortHandshake(T, N, L); return } const L = Object.keys(B); if (L.length !== 1 || L[0] !== q.extensionName) { const B = "Server indicated an extension that was not requested"; abortHandshake(T, N, B); return } try { af.accept(B[q.extensionName]) } catch (B) { const L = "Invalid Sec-WebSocket-Extensions header"; abortHandshake(T, N, L); return } T._extensions[q.extensionName] = af } T.setSocket(N, L, { allowSynchronousEvents: H.allowSynchronousEvents, generateMask: H.generateMask, maxPayload: H.maxPayload, skipUTF8Validation: H.skipUTF8Validation }) })); if (H.finishRequest) { H.finishRequest(nf, T) } else { nf.end() } } function emitErrorAndClose(T, B) { T._readyState = WebSocket.CLOSING; T._errorEmitted = true; T.emit("error", B); T.emitClose() } function netConnect(T) { T.path = T.socketPath; return H.connect(T) } function tlsConnect(T) { T.path = undefined; if (!T.servername && T.servername !== "") { T.servername = H.isIP(T.host) ? "" : T.host } return U.connect(T) } function abortHandshake(T, B, N) { T._readyState = WebSocket.CLOSING; const L = new Error(N); Error.captureStackTrace(L, abortHandshake); if (B.setHeader) { B[vf] = true; B.abort(); if (B.socket && !B.socket.destroyed) { B.socket.destroy() } process.nextTick(emitErrorAndClose, T, L) } else { B.destroy(L); B.once("error", T.emit.bind(T, "error")); B.once("close", T.emitClose.bind(T)) } } function sendAfterClose(T, B, N) { if (B) { const N = ff(B) ? B.size : hf(B).length; if (T._socket) T._sender._bufferedBytes += N; else T._bufferedAmount += N } if (N) { const B = new Error(`WebSocket is not open: readyState ${T.readyState} ` + `(${yf[T.readyState]})`); process.nextTick(N, B) } } function receiverOnConclude(T, B) { const N = this[sf]; N._closeFrameReceived = true; N._closeMessage = B; N._closeCode = T; if (N._socket[sf] === undefined) return; N._socket.removeListener("data", socketOnData); process.nextTick(resume, N._socket); if (T === 1005) N.close(); else N.close(T, B) } function receiverOnDrain() { const T = this[sf]; if (!T.isPaused) T._socket.resume() } function receiverOnError(T) { const B = this[sf]; if (B._socket[sf] !== undefined) { B._socket.removeListener("data", socketOnData); process.nextTick(resume, B._socket); B.close(T[of]) } if (!B._errorEmitted) { B._errorEmitted = true; B.emit("error", T) } } function receiverOnFinish() { this[sf].emitClose() } function receiverOnMessage(T, B) { this[sf].emit("message", T, B) } function receiverOnPing(T) { const B = this[sf]; if (B._autoPong) B.pong(T, !this._isServer, cf); B.emit("ping", T) } function receiverOnPong(T) { this[sf].emit("pong", T) } function resume(T) { T.resume() } function senderOnError(T) { const B = this[sf]; if (B.readyState === WebSocket.CLOSED) return; if (B.readyState === WebSocket.OPEN) { B._readyState = WebSocket.CLOSING; setCloseTimer(B) } this._socket.end(); if (!B._errorEmitted) { B._errorEmitted = true; B.emit("error", T) } } function setCloseTimer(T) { T._closeTimer = setTimeout(T._socket.destroy.bind(T._socket), pf) } function socketOnClose() { const T = this[sf]; this.removeListener("close", socketOnClose); this.removeListener("data", socketOnData); this.removeListener("end", socketOnEnd); T._readyState = WebSocket.CLOSING; let B; if (!this._readableState.endEmitted && !T._closeFrameReceived && !T._receiver._writableState.errorEmitted && (B = T._socket.read()) !== null) { T._receiver.write(B) } T._receiver.end(); this[sf] = undefined; clearTimeout(T._closeTimer); if (T._receiver._writableState.finished || T._receiver._writableState.errorEmitted) { T.emitClose() } else { T._receiver.on("error", receiverOnFinish); T._receiver.on("finish", receiverOnFinish) } } function socketOnData(T) { if (!this[sf]._receiver.write(T)) { this.pause() } } function socketOnEnd() { const T = this[sf]; T._readyState = WebSocket.CLOSING; T._receiver.end(); this.end() } function socketOnError() { const T = this[sf]; this.removeListener("error", socketOnError); this.on("error", cf); if (T) { T._readyState = WebSocket.CLOSING; this.destroy() } } }, 98: function (T, B, N) { "use strict"; var L = this && this.__awaiter || function (T, B, N, L) { function adopt(T) { return T instanceof N ? T : new N((function (B) { B(T) })) } return new (N || (N = Promise))((function (N, I) { function fulfilled(T) { try { step(L.next(T)) } catch (T) { I(T) } } function rejected(T) { try { step(L["throw"](T)) } catch (T) { I(T) } } function step(T) { T.done ? N(T.value) : adopt(T.value).then(fulfilled, rejected) } step((L = L.apply(T, B || [])).next()) })) }; var I = this && this.__generator || function (T, B) { var N = { label: 0, sent: function () { if (J[0] & 1) throw J[1]; return J[1] }, trys: [], ops: [] }, L, I, J, H; return H = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (H[Symbol.iterator] = function () { return this }), H; function verb(T) { return function (B) { return step([T, B]) } } function step(H) { if (L) throw new TypeError("Generator is already executing."); while (N) try { if (L = 1, I && (J = H[0] & 2 ? I["return"] : H[0] ? I["throw"] || ((J = I["return"]) && J.call(I), 0) : I.next) && !(J = J.call(I, H[1])).done) return J; if (I = 0, J) H = [H[0] & 2, J.value]; switch (H[0]) { case 0: case 1: J = H; break; case 4: N.label++; return { value: H[1], done: false }; case 5: N.label++; I = H[1]; H = [0]; continue; case 7: H = N.ops.pop(); N.trys.pop(); continue; default: if (!(J = N.trys, J = J.length > 0 && J[J.length - 1]) && (H[0] === 6 || H[0] === 2)) { N = 0; continue } if (H[0] === 3 && (!J || H[1] > J[0] && H[1] < J[3])) { N.label = H[1]; break } if (H[0] === 6 && N.label < J[1]) { N.label = J[1]; J = H; break } if (J && N.label < J[2]) { N.label = J[2]; N.ops.push(H); break } if (J[2]) N.ops.pop(); N.trys.pop(); continue }H = B.call(T, N) } catch (T) { H = [6, T]; I = 0 } finally { L = J = 0 } if (H[0] & 5) throw H[1]; return { value: H[0] ? H[1] : void 0, done: true } } }; var J = this && this.__asyncValues || function (T) { if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined."); var B = T[Symbol.asyncIterator], N; return B ? B.call(T) : (T = typeof __values === "function" ? __values(T) : T[Symbol.iterator](), N = {}, verb("next"), verb("throw"), verb("return"), N[Symbol.asyncIterator] = function () { return this }, N); function verb(B) { N[B] = T[B] && function (N) { return new Promise((function (L, I) { N = T[B](N), settle(L, I, N.done, N.value) })) } } function settle(T, B, N, L) { Promise.resolve(L).then((function (B) { T({ value: B, done: N }) }), B) } }; var H = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); var U = N(3338); var X = N(806); var G = N(4983); var V = N(9848); var Z = N(5745); var W = H(N(9896)); var q = H(N(9880)); var Q = N(7913); var Y = N(8330); U.program.requiredOption("-pk, --private-key <string>", "Private key used to deploy all contracts").requiredOption("-j, --json-rpc <url>", "JSON RPC URL where the program should be deployed").requiredOption("-w9, --weth9-address <address>", "Address of the WETH9 contract on this chain").requiredOption("-ncl, --native-currency-label <string>", "Native currency label, e.g. ETH").requiredOption("-o, --owner-address <address>", "Contract address that will own the deployed artifacts after the script runs").option("-s, --state <path>", "Path to the JSON file containing the migrations state (optional)", "./state.json").option("-v2, --v2-core-factory-address <address>", "The V2 core factory address used in the swap router (optional)").option("-g, --gas-price <number>", "The gas price to pay in GWEI for each transaction (optional)").option("-c, --confirmations <number>", "How many confirmations to wait for after each transaction (optional)", "2"); U.program.name("npx @uniswap/deploy-v3").version(Y.version).parse(process.argv); if (!/^0x[a-zA-Z0-9]{64}$/.test(U.program.privateKey)) { console.error("Invalid private key!"); process.exit(1) } var ff; try { ff = new URL(U.program.jsonRpc) } catch (T) { console.error("Invalid JSON RPC URL", T.message); process.exit(1) } var ef; try { ef = U.program.gasPrice ? parseInt(U.program.gasPrice) : undefined } catch (T) { console.error("Failed to parse gas price", T.message); process.exit(1) } var tf; try { tf = parseInt(U.program.confirmations) } catch (T) { console.error("Failed to parse confirmations", T.message); process.exit(1) } var rf; try { rf = (0, Q.asciiStringToBytes32)(U.program.nativeCurrencyLabel) } catch (T) { console.error("Invalid native currency label", T.message); process.exit(1) } var af; try { af = (0, Z.getAddress)(U.program.weth9Address) } catch (T) { console.error("Invalid WETH9 address", T.message); process.exit(1) } var nf; if (typeof U.program.v2CoreFactoryAddress === "undefined") { nf = V.AddressZero } else { try { nf = (0, Z.getAddress)(U.program.v2CoreFactoryAddress) } catch (T) { console.error("Invalid V2 factory address", T.message); process.exit(1) } } var of; try { of = (0, Z.getAddress)(U.program.ownerAddress) } catch (T) { console.error("Invalid owner address", T.message); process.exit(1) } var sf = new X.Wallet(U.program.privateKey, new G.JsonRpcProvider({ url: ff.href })); var cf; if (W.default.existsSync(U.program.state)) { try { cf = JSON.parse(W.default.readFileSync(U.program.state, { encoding: "utf8" })) } catch (T) { console.error("Failed to load and parse migration state file", T.message); process.exit(1) } } else { cf = {} } var bf; var onStateChange = function (T) { return L(void 0, void 0, void 0, (function () { return I(this, (function (B) { W.default.writeFileSync(U.program.state, JSON.stringify(T)); bf = T; return [2] })) })) }; function run() { var T, B; return L(this, void 0, void 0, (function () { var N, L, H, U, X, G, V; return I(this, (function (I) { switch (I.label) { case 0: N = 1; L = []; H = (0, q.default)({ signer: sf, gasPrice: ef, nativeCurrencyLabelBytes: rf, v2CoreFactoryAddress: nf, ownerAddress: of, weth9Address: af, initialState: cf, onStateChange: onStateChange }); I.label = 1; case 1: I.trys.push([1, 7, 8, 13]); U = J(H); I.label = 2; case 2: return [4, U.next()]; case 3: if (!(X = I.sent(), !X.done)) return [3, 6]; G = X.value; console.log("Step ".concat(N++, " complete"), G); L.push(G); return [4, Promise.all(G.map((function (T) { if (T.hash) { return sf.provider.waitForTransaction(T.hash, tf, 1e3 * 60 * 15) } else { return Promise.resolve(true) } })))]; case 4: I.sent(); I.label = 5; case 5: return [3, 2]; case 6: return [3, 13]; case 7: V = I.sent(); T = { error: V }; return [3, 13]; case 8: I.trys.push([8, , 11, 12]); if (!(X && !X.done && (B = U.return))) return [3, 10]; return [4, B.call(U)]; case 9: I.sent(); I.label = 10; case 10: return [3, 12]; case 11: if (T) throw T.error; return [7]; case 12: return [7]; case 13: return [2, L] } })) })) } run().then((function (T) { console.log("Deployment succeeded"); console.log(JSON.stringify(T)); console.log("Final state"); console.log(JSON.stringify(bf)); process.exit(0) })).catch((function (T) { console.error("Deployment failed", T); console.log("Final state"); console.log(JSON.stringify(bf)); process.exit(1) })) }, 9880: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); var L = N(8202); var I = N(4810); var J = N(5566); var H = N(6972); var U = N(1798); var X = N(2968); var G = N(1444); var V = N(915); var Z = N(7964); var W = N(353); var q = N(8474); var Q = N(1843); var Y = N(9780); var ff = N(1059); var ef = N(2835); var tf = N(9739); var rf = N(4813); var af = [Q.DEPLOY_V3_CORE_FACTORY, J.ADD_1BP_FEE_TIER, H.DEPLOY_MULTICALL2, V.DEPLOY_PROXY_ADMIN, W.DEPLOY_TICK_LENS, U.DEPLOY_NFT_DESCRIPTOR_LIBRARY_V1_3_0, X.DEPLOY_NFT_POSITION_DESCRIPTOR_V1_3_0, q.DEPLOY_TRANSPARENT_PROXY_DESCRIPTOR, G.DEPLOY_NONFUNGIBLE_POSITION_MANAGER, Y.DEPLOY_V3_MIGRATOR, rf.TRANSFER_V3_CORE_FACTORY_OWNER, ff.DEPLOY_V3_STAKER, Z.DEPLOY_QUOTER_V2, ef.DEPLOY_V3_SWAP_ROUTER_02, tf.TRANSFER_PROXY_ADMIN]; function deploy(T) { var B = T.signer, N = T.gasPrice, J = T.initialState, H = T.onStateChange, U = T.weth9Address, X = T.nativeCurrencyLabelBytes, G = T.v2CoreFactoryAddress, V = T.ownerAddress; var Z = typeof N === "number" ? L.BigNumber.from(N).mul(L.BigNumber.from(10).pow(9)) : undefined; return (0, I.migrate)({ steps: af, config: { gasPrice: Z, signer: B, weth9Address: U, nativeCurrencyLabelBytes: X, v2CoreFactoryAddress: G, ownerAddress: V }, initialState: J, onStateChange: H }) } B["default"] = deploy }, 4810: function (T, B, N) { "use strict"; var L = this && this.__generator || function (T, B) { var N = { label: 0, sent: function () { if (J[0] & 1) throw J[1]; return J[1] }, trys: [], ops: [] }, L, I, J, H; return H = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (H[Symbol.iterator] = function () { return this }), H; function verb(T) { return function (B) { return step([T, B]) } } function step(H) { if (L) throw new TypeError("Generator is already executing."); while (N) try { if (L = 1, I && (J = H[0] & 2 ? I["return"] : H[0] ? I["throw"] || ((J = I["return"]) && J.call(I), 0) : I.next) && !(J = J.call(I, H[1])).done) return J; if (I = 0, J) H = [H[0] & 2, J.value]; switch (H[0]) { case 0: case 1: J = H; break; case 4: N.label++; return { value: H[1], done: false }; case 5: N.label++; I = H[1]; H = [0]; continue; case 7: H = N.ops.pop(); N.trys.pop(); continue; default: if (!(J = N.trys, J = J.length > 0 && J[J.length - 1]) && (H[0] === 6 || H[0] === 2)) { N = 0; continue } if (H[0] === 3 && (!J || H[1] > J[0] && H[1] < J[3])) { N.label = H[1]; break } if (H[0] === 6 && N.label < J[1]) { N.label = J[1]; J = H; break } if (J && N.label < J[2]) { N.label = J[2]; N.ops.push(H); break } if (J[2]) N.ops.pop(); N.trys.pop(); continue }H = B.call(T, N) } catch (T) { H = [6, T]; I = 0 } finally { L = J = 0 } if (H[0] & 5) throw H[1]; return { value: H[0] ? H[1] : void 0, done: true } } }; var I = this && this.__await || function (T) { return this instanceof I ? (this.v = T, this) : new I(T) }; var J = this && this.__asyncGenerator || function (T, B, N) { if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined."); var L = N.apply(T, B || []), J, H = []; return J = {}, verb("next"), verb("throw"), verb("return"), J[Symbol.asyncIterator] = function () { return this }, J; function verb(T) { if (L[T]) J[T] = function (B) { return new Promise((function (N, L) { H.push([T, B, N, L]) > 1 || resume(T, B) })) } } function resume(T, B) { try { step(L[T](B)) } catch (T) { settle(H[0][3], T) } } function step(T) { T.value instanceof I ? Promise.resolve(T.value.v).then(fulfill, reject) : settle(H[0][2], T) } function fulfill(T) { resume("next", T) } function reject(T) { resume("throw", T) } function settle(T, B) { if (T(B), H.shift(), H.length) resume(H[0][0], H[0][1]) } }; Object.defineProperty(B, "__esModule", { value: true }); B.migrate = void 0; var H = N(7259); function migrate(T) { var B = T.onStateChange, N = T.initialState, U = T.config, X = T.steps; return J(this, arguments, (function migrate_1() { var T, J, G, V; return L(this, (function (L) { switch (L.label) { case 0: T = (0, H.createDraft)(N); J = 0; L.label = 1; case 1: if (!(J < X.length)) return [3, 7]; return [4, I(X[J](T, U))]; case 2: G = L.sent(); V = (0, H.current)(T); return [4, I(B(V))]; case 3: L.sent(); return [4, I(G)]; case 4: return [4, L.sent()]; case 5: L.sent(); L.label = 6; case 6: J++; return [3, 1]; case 7: return [2] } })) })) } B.migrate = migrate }, 5566: function (T, B, N) { "use strict"; var L = this && this.__awaiter || function (T, B, N, L) { function adopt(T) { return T instanceof N ? T : new N((function (B) { B(T) })) } return new (N || (N = Promise))((function (N, I) { function fulfilled(T) { try { step(L.next(T)) } catch (T) { I(T) } } function rejected(T) { try { step(L["throw"](T)) } catch (T) { I(T) } } function step(T) { T.done ? N(T.value) : adopt(T.value).then(fulfilled, rejected) } step((L = L.apply(T, B || [])).next()) })) }; var I = this && this.__generator || function (T, B) { var N = { label: 0, sent: function () { if (J[0] & 1) throw J[1]; return J[1] }, trys: [], ops: [] }, L, I, J, H; return H = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (H[Symbol.iterator] = function () { return this }), H; function verb(T) { return function (B) { return step([T, B]) } } function step(H) { if (L) throw new TypeError("Generator is already executing."); while (N) try { if (L = 1, I && (J = H[0] & 2 ? I["return"] : H[0] ? I["throw"] || ((J = I["return"]) && J.call(I), 0) : I.next) && !(J = J.call(I, H[1])).done) return J; if (I = 0, J) H = [H[0] & 2, J.value]; switch (H[0]) { case 0: case 1: J = H; break; case 4: N.label++; return { value: H[1], done: false }; case 5: N.label++; I = H[1]; H = [0]; continue; case 7: H = N.ops.pop(); N.trys.pop(); continue; default: if (!(J = N.trys, J = J.length > 0 && J[J.length - 1]) && (H[0] === 6 || H[0] === 2)) { N = 0; continue } if (H[0] === 3 && (!J || H[1] > J[0] && H[1] < J[3])) { N.label = H[1]; break } if (H[0] === 6 && N.label < J[1]) { N.label = J[1]; J = H; break } if (J && N.label < J[2]) { N.label = J[2]; N.ops.push(H); break } if (J[2]) N.ops.pop(); N.trys.pop(); continue }H = B.call(T, N) } catch (T) { H = [6, T]; I = 0 } finally { L = J = 0 } if (H[0] & 5) throw H[1]; return { value: H[0] ? H[1] : void 0, done: true } } }; var J = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); B.ADD_1BP_FEE_TIER = void 0; var H = J(N(760)); var U = N(8322); var X = 100; var G = 1; var ADD_1BP_FEE_TIER = function (T, B) { var N = B.signer, J = B.gasPrice; return L(void 0, void 0, void 0, (function () { var B, L, V, Z; return I(this, (function (I) { switch (I.label) { case 0: if (T.v3CoreFactoryAddress === undefined) { throw new Error("Missing UniswapV3Factory") } B = new U.Contract(T.v3CoreFactoryAddress, H.default.abi, N); return [4, B.owner()]; case 1: L = I.sent(); V = L; return [4, N.getAddress()]; case 2: if (V !== I.sent()) { throw new Error("UniswapV3Factory.owner is not signer") } return [4, B.enableFeeAmount(X, G, { gasPrice: J })]; case 3: Z = I.sent(); return [2, [{ message: "UniswapV3Factory added a new fee tier ".concat(X / 100, " bps with tick spacing ").concat(G), hash: Z.hash }]] } })) })) }; B.ADD_1BP_FEE_TIER = ADD_1BP_FEE_TIER }, 6972: function (T, B, N) { "use strict"; var L = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); B.DEPLOY_MULTICALL2 = void 0; var I = L(N(4704)); var J = L(N(5234)); B.DEPLOY_MULTICALL2 = (0, J.default)({ key: "multicall2Address", artifact: I.default }) }, 1798: function (T, B, N) { "use strict"; var L = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); B.DEPLOY_NFT_DESCRIPTOR_LIBRARY_V1_3_0 = void 0; var I = L(N(8728)); var J = L(N(1721)); B.DEPLOY_NFT_DESCRIPTOR_LIBRARY_V1_3_0 = (0, J.default)({ key: "nftDescriptorLibraryAddressV1_3_0", artifact: I.default }) }, 2968: function (T, B, N) { "use strict"; var L = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); B.DEPLOY_NFT_POSITION_DESCRIPTOR_V1_3_0 = void 0; var I = L(N(9906)); var J = L(N(5234)); B.DEPLOY_NFT_POSITION_DESCRIPTOR_V1_3_0 = (0, J.default)({ key: "nonfungibleTokenPositionDescriptorAddressV1_3_0", artifact: I.default, computeLibraries: function (T) { if (T.nftDescriptorLibraryAddressV1_3_0 === undefined) { throw new Error("NFTDescriptor library missing") } return { NFTDescriptor: T.nftDescriptorLibraryAddressV1_3_0 } }, computeArguments: function (T, B) { var N = B.weth9Address, L = B.nativeCurrencyLabelBytes; return [N, L] } }) }, 1444: function (T, B, N) { "use strict"; var L = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); B.DEPLOY_NONFUNGIBLE_POSITION_MANAGER = void 0; var I = L(N(6907)); var J = L(N(5234)); B.DEPLOY_NONFUNGIBLE_POSITION_MANAGER = (0, J.default)({ key: "nonfungibleTokenPositionManagerAddress", artifact: I.default, computeArguments: function (T, B) { if (T.v3CoreFactoryAddress === undefined) { throw new Error("Missing V3 Core Factory") } if (T.descriptorProxyAddress === undefined) { throw new Error("Missing NonfungibleTokenDescriptorProxyAddress") } return [T.v3CoreFactoryAddress, B.weth9Address, T.descriptorProxyAddress] } }) }, 915: function (T, B, N) { "use strict"; var L = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); B.DEPLOY_PROXY_ADMIN = void 0; var I = L(N(991)); var J = L(N(5234)); B.DEPLOY_PROXY_ADMIN = (0, J.default)({ key: "proxyAdminAddress", artifact: I.default }) }, 7964: function (T, B, N) { "use strict"; var L = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); B.DEPLOY_QUOTER_V2 = void 0; var I = L(N(9917)); var J = L(N(5234)); B.DEPLOY_QUOTER_V2 = (0, J.default)({ key: "quoterV2Address", artifact: I.default, computeArguments: function (T, B) { if (T.v3CoreFactoryAddress === undefined) { throw new Error("Missing V3 Core Factory") } return [T.v3CoreFactoryAddress, B.weth9Address] } }) }, 353: function (T, B, N) { "use strict"; var L = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); B.DEPLOY_TICK_LENS = void 0; var I = L(N(9788)); var J = L(N(5234)); B.DEPLOY_TICK_LENS = (0, J.default)({ key: "tickLensAddress", artifact: I.default }) }, 8474: function (T, B, N) { "use strict"; var L = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); B.DEPLOY_TRANSPARENT_PROXY_DESCRIPTOR = void 0; var I = L(N(4854)); var J = L(N(5234)); B.DEPLOY_TRANSPARENT_PROXY_DESCRIPTOR = (0, J.default)({ key: "descriptorProxyAddress", artifact: I.default, computeArguments: function (T) { if (T.nonfungibleTokenPositionDescriptorAddressV1_3_0 === undefined) { throw new Error("Missing NonfungibleTokenPositionDescriptor") } if (T.proxyAdminAddress === undefined) { throw new Error("Missing ProxyAdmin") } return [T.nonfungibleTokenPositionDescriptorAddressV1_3_0, T.proxyAdminAddress, "0x"] } }) }, 1843: function (T, B, N) { "use strict"; var L = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); B.DEPLOY_V3_CORE_FACTORY = void 0; var I = L(N(760)); var J = L(N(5234)); B.DEPLOY_V3_CORE_FACTORY = (0, J.default)({ key: "v3CoreFactoryAddress", artifact: I.default }) }, 9780: function (T, B, N) { "use strict"; var L = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); B.DEPLOY_V3_MIGRATOR = void 0; var I = L(N(1173)); var J = L(N(5234)); B.DEPLOY_V3_MIGRATOR = (0, J.default)({ key: "v3MigratorAddress", artifact: I.default, computeArguments: function (T, B) { if (T.v3CoreFactoryAddress === undefined) { throw new Error("Missing V3 Core Factory") } if (T.nonfungibleTokenPositionManagerAddress === undefined) { throw new Error("Missing NonfungiblePositionManager") } return [T.v3CoreFactoryAddress, B.weth9Address, T.nonfungibleTokenPositionManagerAddress] } }) }, 1059: function (T, B, N) { "use strict"; var L = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); B.DEPLOY_V3_STAKER = void 0; var I = L(N(3465)); var J = L(N(5234)); var H = 60; var U = H * 60; var X = U * 24; var G = X * 30; var V = X * 365; var Z = G; var W = V * 2; B.DEPLOY_V3_STAKER = (0, J.default)({ key: "v3StakerAddress", artifact: I.default, computeArguments: function (T) { if (T.v3CoreFactoryAddress === undefined) { throw new Error("Missing V3 Core Factory") } if (T.nonfungibleTokenPositionManagerAddress === undefined) { throw new Error("Missing NFT contract") } return [T.v3CoreFactoryAddress, T.nonfungibleTokenPositionManagerAddress, Z, W] } }) }, 2835: function (T, B, N) { "use strict"; var L = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); B.DEPLOY_V3_SWAP_ROUTER_02 = void 0; var I = L(N(3492)); var J = L(N(5234)); B.DEPLOY_V3_SWAP_ROUTER_02 = (0, J.default)({ key: "swapRouter02", artifact: I.default, computeArguments: function (T, B) { if (T.v3CoreFactoryAddress === undefined) { throw new Error("Missing V3 Core Factory") } if (T.nonfungibleTokenPositionManagerAddress === undefined) { throw new Error("Missing NFT manager") } return [B.v2CoreFactoryAddress, T.v3CoreFactoryAddress, T.nonfungibleTokenPositionManagerAddress, B.weth9Address] } }) }, 5234: function (T, B, N) { "use strict"; var L = this && this.__awaiter || function (T, B, N, L) { function adopt(T) { return T instanceof N ? T : new N((function (B) { B(T) })) } return new (N || (N = Promise))((function (N, I) { function fulfilled(T) { try { step(L.next(T)) } catch (T) { I(T) } } function rejected(T) { try { step(L["throw"](T)) } catch (T) { I(T) } } function step(T) { T.done ? N(T.value) : adopt(T.value).then(fulfilled, rejected) } step((L = L.apply(T, B || [])).next()) })) }; var I = this && this.__generator || function (T, B) { var N = { label: 0, sent: function () { if (J[0] & 1) throw J[1]; return J[1] }, trys: [], ops: [] }, L, I, J, H; return H = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (H[Symbol.iterator] = function () { return this }), H; function verb(T) { return function (B) { return step([T, B]) } } function step(H) { if (L) throw new TypeError("Generator is already executing."); while (N) try { if (L = 1, I && (J = H[0] & 2 ? I["return"] : H[0] ? I["throw"] || ((J = I["return"]) && J.call(I), 0) : I.next) && !(J = J.call(I, H[1])).done) return J; if (I = 0, J) H = [H[0] & 2, J.value]; switch (H[0]) { case 0: case 1: J = H; break; case 4: N.label++; return { value: H[1], done: false }; case 5: N.label++; I = H[1]; H = [0]; continue; case 7: H = N.ops.pop(); N.trys.pop(); continue; default: if (!(J = N.trys, J = J.length > 0 && J[J.length - 1]) && (H[0] === 6 || H[0] === 2)) { N = 0; continue } if (H[0] === 3 && (!J || H[1] > J[0] && H[1] < J[3])) { N.label = H[1]; break } if (H[0] === 6 && N.label < J[1]) { N.label = J[1]; J = H; break } if (J && N.label < J[2]) { N.label = J[2]; N.ops.push(H); break } if (J[2]) N.ops.pop(); N.trys.pop(); continue }H = B.call(T, N) } catch (T) { H = [6, T]; I = 0 } finally { L = J = 0 } if (H[0] & 5) throw H[1]; return { value: H[0] ? H[1] : void 0, done: true } } }; var J = this && this.__spreadArray || function (T, B, N) { if (N || arguments.length === 2) for (var L = 0, I = B.length, J; L < I; L++) { if (J || !(L in B)) { if (!J) J = Array.prototype.slice.call(B, 0, L); J[L] = B[L] } } return T.concat(J || Array.prototype.slice.call(B)) }; var H = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); var U = N(8322); var X = H(N(4779)); function createDeployContractStep(T) { var B = this; var N = T.key, H = T.artifact, G = H.contractName, V = H.abi, Z = H.bytecode, W = H.linkReferences, q = T.computeLibraries, Q = T.computeArguments; if (W && Object.keys(W).length > 0 && !q) { throw new Error("Missing function to compute library addresses") } else if (q && (!W || Object.keys(W).length === 0)) { throw new Error("Compute libraries passed but no link references") } return function (T, H) { return L(B, void 0, void 0, (function () { var B, L, Y, ff; return I(this, (function (I) { switch (I.label) { case 0: if (!(T[N] === undefined)) return [3, 5]; B = Q ? Q(T, H) : []; L = new U.ContractFactory(V, W && q ? (0, X.default)({ bytecode: Z, linkReferences: W }, q(T, H)) : Z, H.signer); Y = void 0; I.label = 1; case 1: I.trys.push([1, 3, , 4]); return [4, L.deploy.apply(L, J(J([], B, false), [{ gasPrice: H.gasPrice }], false))]; case 2: Y = I.sent(); return [3, 4]; case 3: ff = I.sent(); console.error("Failed to deploy ".concat(G)); throw ff; case 4: T[N] = Y.address; return [2, [{ message: "Contract ".concat(G, " deployed"), address: Y.address, hash: Y.deployTransaction.hash }]]; case 5: return [2, [{ message: "Contract ".concat(G, " was already deployed"), address: T[N] }]] } })) })) } } B["default"] = createDeployContractStep }, 1721: function (T, B, N) { "use strict"; var L = this && this.__awaiter || function (T, B, N, L) { function adopt(T) { return T instanceof N ? T : new N((function (B) { B(T) })) } return new (N || (N = Promise))((function (N, I) { function fulfilled(T) { try { step(L.next(T)) } catch (T) { I(T) } } function rejected(T) { try { step(L["throw"](T)) } catch (T) { I(T) } } function step(T) { T.done ? N(T.value) : adopt(T.value).then(fulfilled, rejected) } step((L = L.apply(T, B || [])).next()) })) }; var I = this && this.__generator || function (T, B) { var N = { label: 0, sent: function () { if (J[0] & 1) throw J[1]; return J[1] }, trys: [], ops: [] }, L, I, J, H; return H = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (H[Symbol.iterator] = function () { return this }), H; function verb(T) { return function (B) { return step([T, B]) } } function step(H) { if (L) throw new TypeError("Generator is already executing."); while (N) try { if (L = 1, I && (J = H[0] & 2 ? I["return"] : H[0] ? I["throw"] || ((J = I["return"]) && J.call(I), 0) : I.next) && !(J = J.call(I, H[1])).done) return J; if (I = 0, J) H = [H[0] & 2, J.value]; switch (H[0]) { case 0: case 1: J = H; break; case 4: N.label++; return { value: H[1], done: false }; case 5: N.label++; I = H[1]; H = [0]; continue; case 7: H = N.ops.pop(); N.trys.pop(); continue; default: if (!(J = N.trys, J = J.length > 0 && J[J.length - 1]) && (H[0] === 6 || H[0] === 2)) { N = 0; continue } if (H[0] === 3 && (!J || H[1] > J[0] && H[1] < J[3])) { N.label = H[1]; break } if (H[0] === 6 && N.label < J[1]) { N.label = J[1]; J = H; break } if (J && N.label < J[2]) { N.label = J[2]; N.ops.push(H); break } if (J[2]) N.ops.pop(); N.trys.pop(); continue }H = B.call(T, N) } catch (T) { H = [6, T]; I = 0 } finally { L = J = 0 } if (H[0] & 5) throw H[1]; return { value: H[0] ? H[1] : void 0, done: true } } }; Object.defineProperty(B, "__esModule", { value: true }); var J = N(8322); function createDeployLibraryStep(T) { var B = this; var N = T.key, H = T.artifact, U = H.contractName, X = H.abi, G = H.bytecode; return function (T, H) { var V = H.signer, Z = H.gasPrice; return L(B, void 0, void 0, (function () { var B, L; return I(this, (function (I) { switch (I.label) { case 0: if (!(T[N] === undefined)) return [3, 2]; B = new J.ContractFactory(X, G, V); return [4, B.deploy({ gasPrice: Z })]; case 1: L = I.sent(); T[N] = L.address; return [2, [{ message: "Library ".concat(U, " deployed"), address: L.address, hash: L.deployTransaction.hash }]]; case 2: return [2, [{ message: "Library ".concat(U, " was already deployed"), address: T[N] }]] } })) })) } } B["default"] = createDeployLibraryStep }, 9739: function (T, B, N) { "use strict"; var L = this && this.__awaiter || function (T, B, N, L) { function adopt(T) { return T instanceof N ? T : new N((function (B) { B(T) })) } return new (N || (N = Promise))((function (N, I) { function fulfilled(T) { try { step(L.next(T)) } catch (T) { I(T) } } function rejected(T) { try { step(L["throw"](T)) } catch (T) { I(T) } } function step(T) { T.done ? N(T.value) : adopt(T.value).then(fulfilled, rejected) } step((L = L.apply(T, B || [])).next()) })) }; var I = this && this.__generator || function (T, B) { var N = { label: 0, sent: function () { if (J[0] & 1) throw J[1]; return J[1] }, trys: [], ops: [] }, L, I, J, H; return H = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (H[Symbol.iterator] = function () { return this }), H; function verb(T) { return function (B) { return step([T, B]) } } function step(H) { if (L) throw new TypeError("Generator is already executing."); while (N) try { if (L = 1, I && (J = H[0] & 2 ? I["return"] : H[0] ? I["throw"] || ((J = I["return"]) && J.call(I), 0) : I.next) && !(J = J.call(I, H[1])).done) return J; if (I = 0, J) H = [H[0] & 2, J.value]; switch (H[0]) { case 0: case 1: J = H; break; case 4: N.label++; return { value: H[1], done: false }; case 5: N.label++; I = H[1]; H = [0]; continue; case 7: H = N.ops.pop(); N.trys.pop(); continue; default: if (!(J = N.trys, J = J.length > 0 && J[J.length - 1]) && (H[0] === 6 || H[0] === 2)) { N = 0; continue } if (H[0] === 3 && (!J || H[1] > J[0] && H[1] < J[3])) { N.label = H[1]; break } if (H[0] === 6 && N.label < J[1]) { N.label = J[1]; J = H; break } if (J && N.label < J[2]) { N.label = J[2]; N.ops.push(H); break } if (J[2]) N.ops.pop(); N.trys.pop(); continue }H = B.call(T, N) } catch (T) { H = [6, T]; I = 0 } finally { L = J = 0 } if (H[0] & 5) throw H[1]; return { value: H[0] ? H[1] : void 0, done: true } } }; var J = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); B.TRANSFER_PROXY_ADMIN = void 0; var H = J(N(991)); var U = N(8322); var TRANSFER_PROXY_ADMIN = function (T, B) { var N = B.signer, J = B.gasPrice, X = B.ownerAddress; return L(void 0, void 0, void 0, (function () { var B, L, G, V; return I(this, (function (I) { switch (I.label) { case 0: if (T.proxyAdminAddress === undefined) { throw new Error("Missing ProxyAdmin") } B = new U.Contract(T.proxyAdminAddress, H.default.abi, N); return [4, B.owner()]; case 1: L = I.sent(); if (L === X) return [2, [{ message: "ProxyAdmin owned by ".concat(X, " already") }]]; G = L; return [4, N.getAddress()]; case 2: if (G !== I.sent()) { throw new Error("ProxyAdmin.owner is not signer") } return [4, B.transferOwnership(X, { gasPrice: J })]; case 3: V = I.sent(); return [2, [{ message: "ProxyAdmin ownership set to ".concat(X), hash: V.hash }]] } })) })) }; B.TRANSFER_PROXY_ADMIN = TRANSFER_PROXY_ADMIN }, 4813: function (T, B, N) { "use strict"; var L = this && this.__awaiter || function (T, B, N, L) { function adopt(T) { return T instanceof N ? T : new N((function (B) { B(T) })) } return new (N || (N = Promise))((function (N, I) { function fulfilled(T) { try { step(L.next(T)) } catch (T) { I(T) } } function rejected(T) { try { step(L["throw"](T)) } catch (T) { I(T) } } function step(T) { T.done ? N(T.value) : adopt(T.value).then(fulfilled, rejected) } step((L = L.apply(T, B || [])).next()) })) }; var I = this && this.__generator || function (T, B) { var N = { label: 0, sent: function () { if (J[0] & 1) throw J[1]; return J[1] }, trys: [], ops: [] }, L, I, J, H; return H = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (H[Symbol.iterator] = function () { return this }), H; function verb(T) { return function (B) { return step([T, B]) } } function step(H) { if (L) throw new TypeError("Generator is already executing."); while (N) try { if (L = 1, I && (J = H[0] & 2 ? I["return"] : H[0] ? I["throw"] || ((J = I["return"]) && J.call(I), 0) : I.next) && !(J = J.call(I, H[1])).done) return J; if (I = 0, J) H = [H[0] & 2, J.value]; switch (H[0]) { case 0: case 1: J = H; break; case 4: N.label++; return { value: H[1], done: false }; case 5: N.label++; I = H[1]; H = [0]; continue; case 7: H = N.ops.pop(); N.trys.pop(); continue; default: if (!(J = N.trys, J = J.length > 0 && J[J.length - 1]) && (H[0] === 6 || H[0] === 2)) { N = 0; continue } if (H[0] === 3 && (!J || H[1] > J[0] && H[1] < J[3])) { N.label = H[1]; break } if (H[0] === 6 && N.label < J[1]) { N.label = J[1]; J = H; break } if (J && N.label < J[2]) { N.label = J[2]; N.ops.push(H); break } if (J[2]) N.ops.pop(); N.trys.pop(); continue }H = B.call(T, N) } catch (T) { H = [6, T]; I = 0 } finally { L = J = 0 } if (H[0] & 5) throw H[1]; return { value: H[0] ? H[1] : void 0, done: true } } }; var J = this && this.__importDefault || function (T) { return T && T.__esModule ? T : { default: T } }; Object.defineProperty(B, "__esModule", { value: true }); B.TRANSFER_V3_CORE_FACTORY_OWNER = void 0; var H = J(N(760)); var U = N(8322); var TRANSFER_V3_CORE_FACTORY_OWNER = function (T, B) { var N = B.signer, J = B.gasPrice, X = B.ownerAddress; return L(void 0, void 0, void 0, (function () { var B, L, G, V; return I(this, (function (I) { switch (I.label) { case 0: if (T.v3CoreFactoryAddress === undefined) { throw new Error("Missing UniswapV3Factory") } B = new U.Contract(T.v3CoreFactoryAddress, H.default.abi, N); return [4, B.owner()]; case 1: L = I.sent(); if (L === X) return [2, [{ message: "UniswapV3Factory owned by ".concat(X, " already") }]]; G = L; return [4, N.getAddress()]; case 2: if (G !== I.sent()) { throw new Error("UniswapV3Factory.owner is not signer") } return [4, B.setOwner(X, { gasPrice: J })]; case 3: V = I.sent(); return [2, [{ message: "UniswapV3Factory ownership set to ".concat(X), hash: V.hash }]] } })) })) }; B.TRANSFER_V3_CORE_FACTORY_OWNER = TRANSFER_V3_CORE_FACTORY_OWNER }, 7913: (T, B) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); B.asciiStringToBytes32 = B.isAscii = void 0; function isAscii(T) { return /^[\x00-\x7F]*$/.test(T) } B.isAscii = isAscii; function asciiStringToBytes32(T) { if (T.length > 32 || !isAscii(T)) { throw new Error("Invalid label, must be less than 32 characters") } return "0x" + Buffer.from(T, "ascii").toString("hex").padEnd(64, "0") } B.asciiStringToBytes32 = asciiStringToBytes32 }, 4779: (T, B, N) => { "use strict"; Object.defineProperty(B, "__esModule", { value: true }); var L = N(5745); function linkLibraries(T, B) { var N = T.bytecode, I = T.linkReferences; Object.keys(I).forEach((function (T) { Object.keys(I[T]).forEach((function (J) { if (!B.hasOwnProperty(J)) { throw new Error("Missing link library name ".concat(J)) } var H = (0, L.getAddress)(B[J]).toLowerCase().slice(2); I[T][J].forEach((function (T) { var B = T.start, L = T.length; var I = 2 + B * 2; var J = L * 2; N = N.slice(0, I).concat(H).concat(N.slice(I + J, N.length)) })) })) })); return N } B["default"] = linkLibraries }, 8327: module => { module.exports = eval("require")("bufferutil") }, 2414: module => { module.exports = eval("require")("utf-8-validate") }, 181: T => { "use strict"; T.exports = require("buffer") }, 5317: T => { "use strict"; T.exports = require("child_process") }, 6982: T => { "use strict"; T.exports = require("crypto") }, 4434: T => { "use strict"; T.exports = require("events") }, 9896: T => { "use strict"; T.exports = require("fs") }, 8611: T => { "use strict"; T.exports = require("http") }, 5692: T => { "use strict"; T.exports = require("https") }, 9278: T => { "use strict"; T.exports = require("net") }, 6928: T => { "use strict"; T.exports = require("path") }, 2203: T => { "use strict"; T.exports = require("stream") }, 4756: T => { "use strict"; T.exports = require("tls") }, 7016: T => { "use strict"; T.exports = require("url") }, 9023: T => { "use strict"; T.exports = require("util") }, 3106: T => { "use strict"; T.exports = require("zlib") }, 991: T => { "use strict"; T.exports = JSON.parse('{"contractName":"ProxyAdmin","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"contract TransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"newAdmin","type":"address"}],"name":"changeProxyAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract TransparentUpgradeableProxy","name":"proxy","type":"address"}],"name":"getProxyAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract TransparentUpgradeableProxy","name":"proxy","type":"address"}],"name":"getProxyImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract TransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"implementation","type":"address"}],"name":"upgrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract TransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"implementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b5060006100216100c460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100cc565b600033905090565b610d83806100db6000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d146101c457806399a88ec4146102bf578063f2fde38b14610330578063f3b7dead146103815761007b565b8063204e1c7a14610080578063715018a6146100fb5780637eff275e146101125780638da5cb5b14610183575b600080fd5b34801561008c57600080fd5b506100cf600480360360208110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103fc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561010757600080fd5b506101106104c4565b005b34801561011e57600080fd5b506101816004803603604081101561013557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610631565b005b34801561018f57600080fd5b50610198610765565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102bd600480360360608110156101da57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561023757600080fd5b82018360208201111561024957600080fd5b8035906020019184600183028401116401000000008311171561026b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061078e565b005b3480156102cb57600080fd5b5061032e600480360360408110156102e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610931565b005b34801561033c57600080fd5b5061037f6004803603602081101561035357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a65565b005b34801561038d57600080fd5b506103d0600480360360208110156103a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c57565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060608373ffffffffffffffffffffffffffffffffffffffff1660405180807f5c60da1b000000000000000000000000000000000000000000000000000000008152506004019050600060405180830381855afa9150503d8060008114610481576040519150601f19603f3d011682016040523d82523d6000602084013e610486565b606091505b50915091508161049557600080fd5b8080602001905160208110156104aa57600080fd5b810190808051906020019092919050505092505050919050565b6104cc610d1f565b73ffffffffffffffffffffffffffffffffffffffff166104ea610765565b73ffffffffffffffffffffffffffffffffffffffff1614610573576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610639610d1f565b73ffffffffffffffffffffffffffffffffffffffff16610657610765565b73ffffffffffffffffffffffffffffffffffffffff16146106e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16638f283970826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561074957600080fd5b505af115801561075d573d6000803e3d6000fd5b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610796610d1f565b73ffffffffffffffffffffffffffffffffffffffff166107b4610765565b73ffffffffffffffffffffffffffffffffffffffff161461083d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff16634f1ef2863484846040518463ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156108c75780820151818401526020810190506108ac565b50505050905090810190601f1680156108f45780820380516001836020036101000a031916815260200191505b5093505050506000604051808303818588803b15801561091357600080fd5b505af1158015610927573d6000803e3d6000fd5b5050505050505050565b610939610d1f565b73ffffffffffffffffffffffffffffffffffffffff16610957610765565b73ffffffffffffffffffffffffffffffffffffffff16146109e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16633659cfe6826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610a4957600080fd5b505af1158015610a5d573d6000803e3d6000fd5b505050505050565b610a6d610d1f565b73ffffffffffffffffffffffffffffffffffffffff16610a8b610765565b73ffffffffffffffffffffffffffffffffffffffff1614610b14576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610d286026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060608373ffffffffffffffffffffffffffffffffffffffff1660405180807ff851a440000000000000000000000000000000000000000000000000000000008152506004019050600060405180830381855afa9150503d8060008114610cdc576040519150601f19603f3d011682016040523d82523d6000602084013e610ce1565b606091505b509150915081610cf057600080fd5b808060200190516020811015610d0557600080fd5b810190808051906020019092919050505092505050919050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122044c29b7df610315a76f07ae049bc52885c90b2e1cd582c6b6bd75aa4b0711cfe64736f6c63430007040033","deployedBytecode":"0x60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d146101c457806399a88ec4146102bf578063f2fde38b14610330578063f3b7dead146103815761007b565b8063204e1c7a14610080578063715018a6146100fb5780637eff275e146101125780638da5cb5b14610183575b600080fd5b34801561008c57600080fd5b506100cf600480360360208110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103fc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561010757600080fd5b506101106104c4565b005b34801561011e57600080fd5b506101816004803603604081101561013557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610631565b005b34801561018f57600080fd5b50610198610765565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102bd600480360360608110156101da57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561023757600080fd5b82018360208201111561024957600080fd5b8035906020019184600183028401116401000000008311171561026b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061078e565b005b3480156102cb57600080fd5b5061032e600480360360408110156102e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610931565b005b34801561033c57600080fd5b5061037f6004803603602081101561035357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a65565b005b34801561038d57600080fd5b506103d0600480360360208110156103a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c57565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060608373ffffffffffffffffffffffffffffffffffffffff1660405180807f5c60da1b000000000000000000000000000000000000000000000000000000008152506004019050600060405180830381855afa9150503d8060008114610481576040519150601f19603f3d011682016040523d82523d6000602084013e610486565b606091505b50915091508161049557600080fd5b8080602001905160208110156104aa57600080fd5b810190808051906020019092919050505092505050919050565b6104cc610d1f565b73ffffffffffffffffffffffffffffffffffffffff166104ea610765565b73ffffffffffffffffffffffffffffffffffffffff1614610573576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610639610d1f565b73ffffffffffffffffffffffffffffffffffffffff16610657610765565b73ffffffffffffffffffffffffffffffffffffffff16146106e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16638f283970826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561074957600080fd5b505af115801561075d573d6000803e3d6000fd5b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610796610d1f565b73ffffffffffffffffffffffffffffffffffffffff166107b4610765565b73ffffffffffffffffffffffffffffffffffffffff161461083d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff16634f1ef2863484846040518463ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156108c75780820151818401526020810190506108ac565b50505050905090810190601f1680156108f45780820380516001836020036101000a031916815260200191505b5093505050506000604051808303818588803b15801561091357600080fd5b505af1158015610927573d6000803e3d6000fd5b5050505050505050565b610939610d1f565b73ffffffffffffffffffffffffffffffffffffffff16610957610765565b73ffffffffffffffffffffffffffffffffffffffff16146109e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16633659cfe6826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610a4957600080fd5b505af1158015610a5d573d6000803e3d6000fd5b505050505050565b610a6d610d1f565b73ffffffffffffffffffffffffffffffffffffffff16610a8b610765565b73ffffffffffffffffffffffffffffffffffffffff1614610b14576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610d286026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060608373ffffffffffffffffffffffffffffffffffffffff1660405180807ff851a440000000000000000000000000000000000000000000000000000000008152506004019050600060405180830381855afa9150503d8060008114610cdc576040519150601f19603f3d011682016040523d82523d6000602084013e610ce1565b606091505b509150915081610cf057600080fd5b808060200190516020811015610d0557600080fd5b810190808051906020019092919050505092505050919050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122044c29b7df610315a76f07ae049bc52885c90b2e1cd582c6b6bd75aa4b0711cfe64736f6c63430007040033","linkReferences":{},"deployedLinkReferences":{}}') }, 4854: T => { "use strict"; T.exports = JSON.parse('{"contractName":"TransparentUpgradeableProxy","abi":[{"inputs":[{"internalType":"address","name":"_logic","type":"address"},{"internalType":"address","name":"admin_","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"payable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"admin_","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAdmin","type":"address"}],"name":"changeAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"implementation_","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"stateMutability":"payable","type":"receive"}],"bytecode":"","deployedBytecode":"0x60806040526004361061004e5760003560e01c80633659cfe6146100675780634f1ef286146100b85780635c60da1b146101515780638f28397014610192578063f851a440146101e35761005d565b3661005d5761005b610224565b005b610065610224565b005b34801561007357600080fd5b506100b66004803603602081101561008a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061023e565b005b61014f600480360360408110156100ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561010b57600080fd5b82018360208201111561011d57600080fd5b8035906020019184600183028401116401000000008311171561013f57600080fd5b9091929391929390505050610293565b005b34801561015d57600080fd5b50610166610339565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561019e57600080fd5b506101e1600480360360208110156101b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610391565b005b3480156101ef57600080fd5b506101f86104de565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61022c610576565b61023c61023761060c565b61063d565b565b610246610663565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156102875761028281610694565b610290565b61028f610224565b5b50565b61029b610663565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561032b576102d783610694565b6103258383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610536565b50610334565b610333610224565b5b505050565b6000610343610663565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156103855761037e61060c565b905061038e565b61038d610224565b5b90565b610399610663565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156104d257600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610452576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a81526020018061099d603a913960400191505060405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61047b610663565b82604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a16104cd816106e3565b6104db565b6104da610224565b5b50565b60006104e8610663565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561052a57610523610663565b9050610533565b610532610224565b5b90565b606061055b83836040518060600160405280602781526020016109d760279139610712565b905092915050565b600080823b905060008111915050919050565b61057e610663565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610602576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526042815260200180610a5a6042913960600191505060405180910390fd5b61060a610841565b565b6000807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b9050805491505090565b3660008037600080366000845af43d6000803e806000811461065e573d6000f35b3d6000fd5b6000807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b9050805491505090565b61069d81610843565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b90508181555050565b606061071d84610563565b610772576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610a346026913960400191505060405180910390fd5b600060608573ffffffffffffffffffffffffffffffffffffffff16856040518082805190602001908083835b602083106107c1578051825260208201915060208101905060208303925061079e565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610821576040519150601f19603f3d011682016040523d82523d6000602084013e610826565b606091505b50915091506108368282866108d0565b925050509392505050565b565b61084c81610563565b6108a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806109fe6036913960400191505060405180910390fd5b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b90508181555050565b606083156108e057829050610995565b6000835111156108f35782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561095a57808201518184015260208101905061093f565b50505050905090810190601f1680156109875780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe5472616e73706172656e745570677261646561626c6550726f78793a206e65772061646d696e20697320746865207a65726f2061646472657373416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65645570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e74726163745472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574a2646970667358221220fd9b2152b5d399e050a6b2f373dcfc8ba2c1ce1d3e2edb5a229fb19e4868b83064736f6c63430007040033","linkReferences":{},"deployedLinkReferences":{}}') }, 3492: T => { "use strict"; T.exports = JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"SwapRouter02","sourceName":"contracts/SwapRouter02.sol","abi":[{"inputs":[{"internalType":"address","name":"_factoryV2","type":"address"},{"internalType":"address","name":"factoryV3","type":"address"},{"internalType":"address","name":"_positionManager","type":"address"},{"internalType":"address","name":"_WETH9","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"WETH9","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"approveMax","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"approveMaxMinusOne","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"approveZeroThenMax","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"approveZeroThenMaxMinusOne","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"callPositionManager","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"paths","type":"bytes[]"},{"internalType":"uint128[]","name":"amounts","type":"uint128[]"},{"internalType":"uint24","name":"maximumTickDivergence","type":"uint24"},{"internalType":"uint32","name":"secondsAgo","type":"uint32"}],"name":"checkOracleSlippage","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"uint24","name":"maximumTickDivergence","type":"uint24"},{"internalType":"uint32","name":"secondsAgo","type":"uint32"}],"name":"checkOracleSlippage","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"}],"internalType":"struct IV3SwapRouter.ExactInputParams","name":"params","type":"tuple"}],"name":"exactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct IV3SwapRouter.ExactInputSingleParams","name":"params","type":"tuple"}],"name":"exactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"}],"internalType":"struct IV3SwapRouter.ExactOutputParams","name":"params","type":"tuple"}],"name":"exactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct IV3SwapRouter.ExactOutputSingleParams","name":"params","type":"tuple"}],"name":"exactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factoryV2","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getApprovalType","outputs":[{"internalType":"enum IApproveAndCall.ApprovalType","name":"","type":"uint8"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount0Min","type":"uint256"},{"internalType":"uint256","name":"amount1Min","type":"uint256"}],"internalType":"struct IApproveAndCall.IncreaseLiquidityParams","name":"params","type":"tuple"}],"name":"increaseLiquidity","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint256","name":"amount0Min","type":"uint256"},{"internalType":"uint256","name":"amount1Min","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"internalType":"struct IApproveAndCall.MintParams","name":"params","type":"tuple"}],"name":"mint","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"previousBlockhash","type":"bytes32"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"positionManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"pull","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"refundETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermitAllowed","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermitAllowedIfNecessary","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermitIfNecessary","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"}],"name":"swapExactTokensForTokens","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMax","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"}],"name":"swapTokensForExactTokens","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"sweepToken","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountMinimum","type":"uint256"}],"name":"sweepToken","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"uint256","name":"feeBips","type":"uint256"},{"internalType":"address","name":"feeRecipient","type":"address"}],"name":"sweepTokenWithFee","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"feeBips","type":"uint256"},{"internalType":"address","name":"feeRecipient","type":"address"}],"name":"sweepTokenWithFee","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"unwrapWETH9","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountMinimum","type":"uint256"}],"name":"unwrapWETH9","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"feeBips","type":"uint256"},{"internalType":"address","name":"feeRecipient","type":"address"}],"name":"unwrapWETH9WithFee","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"uint256","name":"feeBips","type":"uint256"},{"internalType":"address","name":"feeRecipient","type":"address"}],"name":"unwrapWETH9WithFee","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"wrapETH","outputs":[],"stateMutability":"payable","type":"function"},{"stateMutability":"payable","type":"receive"}],"bytecode":"","deployedBytecode":"0x6080604052600436106102a45760003560e01c80639b2c0a371161016e578063dee00f35116100cb578063f100b2051161007f578063f2d5d56b11610064578063f2d5d56b1461066e578063f3995c6714610681578063fa461e33146106945761034f565b8063f100b2051461063b578063f25801a71461064e5761034f565b8063e0e189a0116100b0578063e0e189a0146105f5578063e90a182f14610608578063efdeed8e1461061b5761034f565b8063dee00f35146105b5578063df2ab5bb146105e25761034f565b8063b858183f11610122578063c45a015511610107578063c45a01551461057a578063cab372ce1461058f578063d4ef38de146105a25761034f565b8063b858183f14610554578063c2e3140a146105675761034f565b8063ab3fdd5011610153578063ab3fdd501461051b578063ac9650d81461052e578063b3a2af13146105415761034f565b80639b2c0a37146104f5578063a4a78f0c146105085761034f565b8063472b43f31161021c578063571ac8b0116101d0578063639d71a9116101b5578063639d71a9146104b857806368e0d4e1146104cb578063791b98bc146104e05761034f565b8063571ac8b0146104925780635ae401dc146104a55761034f565b80634961699711610201578063496169971461044a5780634aa4a4fc1461045d5780635023b4df1461047f5761034f565b8063472b43f31461042457806349404b7c146104375761034f565b80631c58db4f116102735780633068c554116102585780633068c554146103eb57806342712a67146103fe5780634659a494146104115761034f565b80631c58db4f146103b85780631f0464d1146103cb5761034f565b806304e45aaf1461035457806309b813461461037d57806311ed56c91461039057806312210e8a146103b05761034f565b3661034f573373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461034d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f742057455448390000000000000000000000000000000000000000000000604482015290519081900360640190fd5b005b600080fd5b610367610362366004615543565b6106b4565b6040516103749190615dfd565b60405180910390f35b61036761038b3660046155de565b61083c565b6103a361039e366004615638565b61091c565b6040516103749190615b7a565b61034d610b28565b61034d6103c63660046157bb565b610b3a565b6103de6103d93660046152a7565b610bbe565b6040516103749190615afc565b61034d6103f93660046150d8565b610c48565b61036761040c366004615885565b610c5b565b61034d61041f366004615121565b610e35565b610367610432366004615885565b610ef5565b61034d6104453660046157eb565b6112a9565b61034d6104583660046157bb565b61146f565b34801561046957600080fd5b5061047261147c565b6040516103749190615a3c565b61036761048d366004615616565b6114a0565b61034d6104a0366004614feb565b611589565b6103de6104b33660046152a7565b6115bc565b61034d6104c6366004614feb565b611635565b3480156104d757600080fd5b50610472611649565b3480156104ec57600080fd5b5061047261166d565b61034d61050336600461581a565b611691565b61034d610516366004615121565b6118a7565b61034d610529366004614feb565b61197c565b6103de61053c36600461517c565b6119ba565b6103a361054f3660046152f1565b611b14565b61036761056236600461549d565b611bd2565b61034d610575366004615121565b611d95565b34801561058657600080fd5b50610472611e4a565b61034d61059d366004614feb565b611990565b61034d6105b0366004615858565b611e6e565b3480156105c157600080fd5b506105d56105d036600461500e565b611e7a565b6040516103749190615b8d565b61034d6105f0366004615039565b612027565b61034d61060336600461507a565b61213e565b61034d61061636600461500e565b6122a4565b34801561062757600080fd5b5061034d6106363660046151bc565b6122b3565b6103a3610649366004615627565b612305565b34801561065a57600080fd5b5061034d610669366004615324565b6123a5565b61034d61067c36600461500e565b6123f6565b61034d61068f366004615121565b612402565b3480156106a057600080fd5b5061034d6106af3660046153b8565b61249a565b600080600083608001511415610771575081516040517f70a0823100000000000000000000000000000000000000000000000000000000815260019173ffffffffffffffffffffffffffffffffffffffff16906370a082319061071b903090600401615a3c565b60206040518083038186803b15801561073357600080fd5b505afa158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b91906157d3565b60808401525b6107ed836080015184606001518560c001516040518060400160405280886000015189604001518a602001516040516020016107af939291906159aa565b6040516020818303038152906040528152602001866107ce57336107d0565b305b73ffffffffffffffffffffffffffffffffffffffff1690526125de565b91508260a00151821015610836576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90615c7d565b60405180910390fd5b50919050565b60006108b0604083018035906108559060208601614feb565b604080518082019091526000908061086d8880615e41565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252503360209091015261278f565b505060005460608201358111156108f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90615c0f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600055919050565b604080516101608101909152606090610b20907f8831645600000000000000000000000000000000000000000000000000000000908061095f6020870187614feb565b73ffffffffffffffffffffffffffffffffffffffff16815260200185602001602081019061098d9190614feb565b73ffffffffffffffffffffffffffffffffffffffff1681526020016109b860608701604088016157a1565b62ffffff1681526020016109d26080870160608801615379565b60020b81526020016109ea60a0870160808801615379565b60020b8152602090810190610a0a90610a0590880188614feb565b612976565b8152602001610a25866020016020810190610a059190614feb565b815260a0860135602082015260c08601356040820152606001610a4f610100870160e08801614feb565b73ffffffffffffffffffffffffffffffffffffffff1681526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff815250604051602401610a9e9190615cf8565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611b14565b90505b919050565b4715610b3857610b383347612a1b565b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015610ba257600080fd5b505af1158015610bb6573d6000803e3d6000fd5b505050505050565b60608380600143034014610c3357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f426c6f636b686173680000000000000000000000000000000000000000000000604482015290519081900360640190fd5b610c3d84846119ba565b91505b509392505050565b610c55848433858561213e565b50505050565b6000610cbb7f000000000000000000000000000000000000000000000000000000000000000087868680806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250612b6992505050565b600081518110610cc757fe5b6020026020010151905084811115610d0b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90615c0f565b610da484846000818110610d1b57fe5b9050602002016020810190610d309190614feb565b33610d9e7f000000000000000000000000000000000000000000000000000000000000000088886000818110610d6257fe5b9050602002016020810190610d779190614feb565b89896001818110610d8457fe5b9050602002016020810190610d999190614feb565b612ca2565b84612d8d565b73ffffffffffffffffffffffffffffffffffffffff821660011415610dcb57339150610dee565b73ffffffffffffffffffffffffffffffffffffffff821660021415610dee573091505b610e2c848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250869250612f6b915050565b95945050505050565b604080517f8fcbaf0c00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101879052606481018690526001608482015260ff851660a482015260c4810184905260e48101839052905173ffffffffffffffffffffffffffffffffffffffff881691638fcbaf0c9161010480830192600092919082900301818387803b158015610ed557600080fd5b505af1158015610ee9573d6000803e3d6000fd5b50505050505050505050565b60008086610fab575060018484600081610f0b57fe5b9050602002016020810190610f209190614feb565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610f589190615a3c565b60206040518083038186803b158015610f7057600080fd5b505afa158015610f84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa891906157d3565b96505b61103685856000818110610fbb57fe5b9050602002016020810190610fd09190614feb565b82610fdb5733610fdd565b305b6110307f00000000000000000000000000000000000000000000000000000000000000008989600081811061100e57fe5b90506020020160208101906110239190614feb565b8a8a6001818110610d8457fe5b8a612d8d565b73ffffffffffffffffffffffffffffffffffffffff83166001141561105d57339250611080565b73ffffffffffffffffffffffffffffffffffffffff831660021415611080573092505b600085857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81018181106110b057fe5b90506020020160208101906110c59190614feb565b73ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b81526004016110fd9190615a3c565b60206040518083038186803b15801561111557600080fd5b505afa158015611129573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114d91906157d3565b905061118d868680806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250889250612f6b915050565b6112628187877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81018181106111bf57fe5b90506020020160208101906111d49190614feb565b73ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b815260040161120c9190615a3c565b60206040518083038186803b15801561122457600080fd5b505afa158015611238573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125c91906157d3565b90613270565b92508683101561129e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90615c7d565b505095945050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561133257600080fd5b505afa158015611346573d6000803e3d6000fd5b505050506040513d602081101561135c57600080fd5b50519050828110156113cf57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e742057455448390000000000000000000000000000604482015290519081900360640190fd5b801561146a577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561144857600080fd5b505af115801561145c573d6000803e3d6000fd5b5050505061146a8282612a1b565b505050565b61147981336112a9565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000611549608083018035906114b99060608601614feb565b6114c960e0860160c08701614feb565b60405180604001604052808760200160208101906114e79190614feb565b6114f760608a0160408b016157a1565b61150460208b018b614feb565b604051602001611516939291906159aa565b60405160208183030381529060405281526020013373ffffffffffffffffffffffffffffffffffffffff1681525061278f565b90508160a001358111156108f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90615c0f565b6115b3817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff613280565b61147957600080fd5b606083806115c86133cc565b1115610c3357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b611640816000613280565b61158957600080fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000821180156116a2575060648211155b6116ab57600080fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561173457600080fd5b505afa158015611748573d6000803e3d6000fd5b505050506040513d602081101561175e57600080fd5b50519050848110156117d157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e742057455448390000000000000000000000000000604482015290519081900360640190fd5b80156118a0577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561184a57600080fd5b505af115801561185e573d6000803e3d6000fd5b50505050600061271061187a85846133d090919063ffffffff16565b8161188157fe5b0490508015611894576118948382612a1b565b610bb685828403612a1b565b5050505050565b604080517fdd62ed3e00000000000000000000000000000000000000000000000000000000815233600482015230602482015290517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9173ffffffffffffffffffffffffffffffffffffffff89169163dd62ed3e91604480820192602092909190829003018186803b15801561193c57600080fd5b505afa158015611950573d6000803e3d6000fd5b505050506040513d602081101561196657600080fd5b50511015610bb657610bb6868686868686610e35565b611987816000613280565b61199057600080fd5b6115b3817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe613280565b60608167ffffffffffffffff811180156119d357600080fd5b50604051908082528060200260200182016040528015611a0757816020015b60608152602001906001900390816119f25790505b50905060005b82811015611b0d5760008030868685818110611a2557fe5b9050602002810190611a379190615e41565b604051611a45929190615a10565b600060405180830381855af49150503d8060008114611a80576040519150601f19603f3d011682016040523d82523d6000602084013e611a85565b606091505b509150915081611aeb57604481511015611a9e57600080fd5b60048101905080806020019051810190611ab89190615433565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d9190615b7a565b80848481518110611af857fe5b60209081029190910101525050600101611a0d565b5092915050565b606060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1683604051611b5d9190615a20565b6000604051808303816000865af19150503d8060008114611b9a576040519150601f19603f3d011682016040523d82523d6000602084013e611b9f565b606091505b50925090508061083657604482511015611bb857600080fd5b60048201915081806020019051810190611ab89190615433565b600080600083604001511415611ca357600190506000611bf584600001516133f4565b50506040517f70a0823100000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff8216906370a0823190611c4c903090600401615a3c565b60206040518083038186803b158015611c6457600080fd5b505afa158015611c78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c9c91906157d3565b6040850152505b600081611cb05733611cb2565b305b90505b6000611cc48560000151613425565b9050611d1d856040015182611cdd578660200151611cdf565b305b60006040518060400160405280611cf98b6000015161342d565b81526020018773ffffffffffffffffffffffffffffffffffffffff168152506125de565b60408601528015611d3d578451309250611d369061343c565b8552611d4a565b8460400151935050611d50565b50611cb5565b8360600151831015611d8e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90615c7d565b5050919050565b604080517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523360048201523060248201529051869173ffffffffffffffffffffffffffffffffffffffff89169163dd62ed3e91604480820192602092909190829003018186803b158015611e0a57600080fd5b505afa158015611e1e573d6000803e3d6000fd5b505050506040513d6020811015611e3457600080fd5b50511015610bb657610bb6868686868686612402565b7f000000000000000000000000000000000000000000000000000000000000000081565b61146a83338484611691565b6000818373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e307f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401611ed8929190615a5d565b60206040518083038186803b158015611ef057600080fd5b505afa158015611f04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f2891906157d3565b10611f3557506000612021565b611f5f837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff613280565b15611f6c57506001612021565b611f96837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe613280565b15611fa357506002612021565b611fae836000613280565b611fb757600080fd5b611fe1837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff613280565b15611fee57506003612021565b612018837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe613280565b1561034f575060045b92915050565b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561209057600080fd5b505afa1580156120a4573d6000803e3d6000fd5b505050506040513d60208110156120ba57600080fd5b505190508281101561212d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e7420746f6b656e0000000000000000000000000000604482015290519081900360640190fd5b8015610c5557610c55848383613471565b60008211801561214f575060648211155b61215857600080fd5b60008573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156121c157600080fd5b505afa1580156121d5573d6000803e3d6000fd5b505050506040513d60208110156121eb57600080fd5b505190508481101561225e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e7420746f6b656e0000000000000000000000000000604482015290519081900360640190fd5b8015610bb657600061271061227383866133d0565b8161227a57fe5b049050801561228e5761228e878483613471565b61229b8786838503613471565b50505050505050565b6122af828233612027565b5050565b6000806122c1868685613646565b915091508362ffffff1681830312610bb6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90615c46565b6060610b2063219f5d1760e01b6040518060c001604052808560400135815260200161233d866000016020810190610a059190614feb565b8152602001612358866020016020810190610a059190614feb565b815260200185606001358152602001856080013581526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff815250604051602401610a9e9190615cb4565b6000806123b28584613859565b915091508362ffffff16818303126118a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90615c46565b6122af82333084613ae1565b604080517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c48101839052905173ffffffffffffffffffffffffffffffffffffffff88169163d505accf9160e480830192600092919082900301818387803b158015610ed557600080fd5b60008413806124a95750600083135b6124b257600080fd5b60006124c08284018461564a565b905060008060006124d484600001516133f4565b9250925092506125067f0000000000000000000000000000000000000000000000000000000000000000848484613cbe565b5060008060008a13612547578473ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161089612578565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16108a5b915091508115612597576125928587602001513384612d8d565b610ee9565b85516125a290613425565b156125c75785516125b29061343c565b86526125c1813360008961278f565b50610ee9565b80600081905550610ee98487602001513384612d8d565b600073ffffffffffffffffffffffffffffffffffffffff8416600114156126075733935061262a565b73ffffffffffffffffffffffffffffffffffffffff84166002141561262a573093505b600080600061263c85600001516133f4565b9194509250905073ffffffffffffffffffffffffffffffffffffffff8083169084161060008061266d868686613cd4565b73ffffffffffffffffffffffffffffffffffffffff1663128acb088b856126938f613d12565b73ffffffffffffffffffffffffffffffffffffffff8e16156126b5578d6126db565b876126d45773fffd8963efd1fc6a506488495d951d5263988d256126db565b6401000276a45b8d6040516020016126ec9190615da6565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161271b959493929190615a84565b6040805180830381600087803b15801561273457600080fd5b505af1158015612748573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061276c9190615395565b915091508261277b578161277d565b805b6000039b9a5050505050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff8416600114156127b8573393506127db565b73ffffffffffffffffffffffffffffffffffffffff8416600214156127db573093505b60008060006127ed85600001516133f4565b9194509250905073ffffffffffffffffffffffffffffffffffffffff8084169083161060008061281e858786613cd4565b73ffffffffffffffffffffffffffffffffffffffff1663128acb088b856128448f613d12565b60000373ffffffffffffffffffffffffffffffffffffffff8e1615612869578d61288f565b876128885773fffd8963efd1fc6a506488495d951d5263988d2561288f565b6401000276a45b8d6040516020016128a09190615da6565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016128cf959493929190615a84565b6040805180830381600087803b1580156128e857600080fd5b505af11580156128fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129209190615395565b9150915060008361293557818360000361293b565b82826000035b909850905073ffffffffffffffffffffffffffffffffffffffff8a16612967578b811461296757600080fd5b50505050505050949350505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8316906370a08231906129cb903090600401615a3c565b60206040518083038186803b1580156129e357600080fd5b505afa1580156129f7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2091906157d3565b6040805160008082526020820190925273ffffffffffffffffffffffffffffffffffffffff84169083906040518082805190602001908083835b60208310612a9257805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101612a55565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612af4576040519150601f19603f3d011682016040523d82523d6000602084013e612af9565b606091505b505090508061146a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f5354450000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6060600282511015612b7a57600080fd5b815167ffffffffffffffff81118015612b9257600080fd5b50604051908082528060200260200182016040528015612bbc578160200160208202803683370190505b5090508281600183510381518110612bd057fe5b602090810291909101015281517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff015b8015610c4057600080612c3d87866001860381518110612c1c57fe5b6020026020010151878681518110612c3057fe5b6020026020010151613d44565b91509150612c5f848481518110612c5057fe5b60200260200101518383613e2c565b846001850381518110612c6e57fe5b602090810291909101015250507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01612c00565b6000806000612cb18585613f02565b604080517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606094851b811660208084019190915293851b81166034830152825160288184030181526048830184528051908501207fff0000000000000000000000000000000000000000000000000000000000000060688401529a90941b9093166069840152607d8301989098527f96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f609d808401919091528851808403909101815260bd909201909752805196019590952095945050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148015612de85750804710155b15612f31577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015612e5557600080fd5b505af1158015612e69573d6000803e3d6000fd5b50505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612eff57600080fd5b505af1158015612f13573d6000803e3d6000fd5b505050506040513d6020811015612f2957600080fd5b50610c559050565b73ffffffffffffffffffffffffffffffffffffffff8316301415612f5f57612f5a848383613471565b610c55565b610c5584848484613ae1565b60005b600183510381101561146a57600080848381518110612f8957fe5b6020026020010151858460010181518110612fa057fe5b6020026020010151915091506000612fb88383613f02565b5090506000612fe87f00000000000000000000000000000000000000000000000000000000000000008585612ca2565b90506000806000808473ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561303657600080fd5b505afa15801561304a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061306e91906156da565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691506000808773ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16146130d05782846130d3565b83835b91509150613114828b73ffffffffffffffffffffffffffffffffffffffff166370a082318a6040518263ffffffff1660e01b815260040161120c9190615a3c565b9550613121868383613fa7565b9450505050506000808573ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461316557826000613169565b6000835b91509150600060028c51038a10613180578a6131c1565b6131c17f0000000000000000000000000000000000000000000000000000000000000000898e8d600201815181106131b457fe5b6020026020010151612ca2565b604080516000815260208101918290527f022c0d9f0000000000000000000000000000000000000000000000000000000090915290915073ffffffffffffffffffffffffffffffffffffffff87169063022c0d9f906132299086908690869060248101615e06565b600060405180830381600087803b15801561324357600080fd5b505af1158015613257573d6000803e3d6000fd5b50506001909b019a50612f6e9950505050505050505050565b8082038281111561202157600080fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b7f0000000000000000000000000000000000000000000000000000000000000000866040516024016132d7929190615ad6565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516133609190615a20565b6000604051808303816000865af19150503d806000811461339d576040519150601f19603f3d011682016040523d82523d6000602084013e6133a2565b606091505b5091509150818015610e2c575080511580610e2c575080806020019051810190610e2c919061528d565b4290565b60008215806133eb575050818102818382816133e857fe5b04145b61202157600080fd5b60008080613402848261407d565b925061340f84601461417d565b905061341c84601761407d565b91509193909250565b516042111590565b6060610b20826000602b61426d565b8051606090610b209083906017907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe90161426d565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b6020831061354657805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101613509565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146135a8576040519150601f19603f3d011682016040523d82523d6000602084013e6135ad565b606091505b50915091508180156135db5750805115806135db57508080602001905160208110156135d857600080fd5b50515b6118a057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f5354000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600080835185511461365757600080fd5b6000855167ffffffffffffffff8111801561367157600080fd5b506040519080825280602002602001820160405280156136ab57816020015b613698614e34565b8152602001906001900390816136905790505b5090506000865167ffffffffffffffff811180156136c857600080fd5b5060405190808252806020026020018201604052801561370257816020015b6136ef614e34565b8152602001906001900390816136e75790505b50905060005b8751811015613832576000806137318a848151811061372357fe5b602002602001015189613859565b9150915061373e82614454565b85848151811061374a57fe5b60200260200101516000019060020b908160020b8152505061376b81614454565b84848151811061377757fe5b60200260200101516000019060020b908160020b8152505088838151811061379b57fe5b60200260200101518584815181106137af57fe5b6020026020010151602001906fffffffffffffffffffffffffffffffff1690816fffffffffffffffffffffffffffffffff16815250508883815181106137f157fe5b602002602001015184848151811061380557fe5b6020908102919091018101516fffffffffffffffffffffffffffffffff9092169101525050600101613708565b5061383c82614465565b60020b935061384a81614465565b60020b92505050935093915050565b6000806000806138688661454d565b90506000805b82811015613a865760008060006138848b6133f4565b9250925092506000613897848484613cd4565b905060008063ffffffff8d166138c0576138b083614578565b600291820b9350900b9050613962565b6138ca838e614810565b8160020b915050809250508273ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561391b57600080fd5b505afa15801561392f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139539190615715565b50505060029290920b93505050505b600189038714156139a3578473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161099506139b2565b6139ac8e61343c565b9d508597505b6000871580613a5357508673ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1610613a23578673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1610613a53565b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16105b90508015613a68579b82019b9a81019a613a73565b828d039c50818c039b505b50506001909501945061386e9350505050565b5082613ad7577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff850294507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff840293505b5050509250929050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000178152925182516000948594938a169392918291908083835b60208310613bbe57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101613b81565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114613c20576040519150601f19603f3d011682016040523d82523d6000602084013e613c25565b606091505b5091509150818015613c53575080511580613c535750808060200190516020811015613c5057600080fd5b50515b610bb657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f5354460000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6000610e2c85613ccf868686614c41565b614cbe565b6000613d0a7f0000000000000000000000000000000000000000000000000000000000000000613d05868686614c41565b614cee565b949350505050565b60007f80000000000000000000000000000000000000000000000000000000000000008210613d4057600080fd5b5090565b6000806000613d538585613f02565b509050600080613d64888888612ca2565b73ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b158015613da957600080fd5b505afa158015613dbd573d6000803e3d6000fd5b505050506040513d6060811015613dd357600080fd5b5080516020909101516dffffffffffffffffffffffffffff918216935016905073ffffffffffffffffffffffffffffffffffffffff87811690841614613e1a578082613e1d565b81815b90999098509650505050505050565b6000808411613e9c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f494e53554646494349454e545f4f55545055545f414d4f554e54000000000000604482015290519081900360640190fd5b600083118015613eac5750600082115b613eb557600080fd5b6000613ecd6103e8613ec786886133d0565b906133d0565b90506000613ee16103e5613ec78689613270565b9050613ef86001828481613ef157fe5b0490614e24565b9695505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415613f3e57600080fd5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1610613f78578284613f7b565b83835b909250905073ffffffffffffffffffffffffffffffffffffffff8216613fa057600080fd5b9250929050565b600080841161401757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f494e53554646494349454e545f494e5055545f414d4f554e5400000000000000604482015290519081900360640190fd5b6000831180156140275750600082115b61403057600080fd5b600061403e856103e56133d0565b9050600061404c82856133d0565b9050600061406683614060886103e86133d0565b90614e24565b905080828161407157fe5b04979650505050505050565b6000818260140110156140f157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f746f416464726573735f6f766572666c6f770000000000000000000000000000604482015290519081900360640190fd5b816014018351101561416457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e64730000000000000000000000604482015290519081900360640190fd5b5001602001516c01000000000000000000000000900490565b6000818260030110156141f157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f746f55696e7432345f6f766572666c6f77000000000000000000000000000000604482015290519081900360640190fd5b816003018351101561426457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f746f55696e7432345f6f75744f66426f756e6473000000000000000000000000604482015290519081900360640190fd5b50016003015190565b60608182601f0110156142e157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b82828401101561435257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b818301845110156143c457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e6473000000000000000000000000000000604482015290519081900360640190fd5b6060821580156143e3576040519150600082526020820160405261444b565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561441c578051835260209283019201614404565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b80600281900b8114610b2357600080fd5b6000806000805b84518110156144fa5784818151811061448157fe5b6020026020010151602001516fffffffffffffffffffffffffffffffff168582815181106144ab57fe5b60200260200101516000015160020b02830192508481815181106144cb57fe5b6020026020010151602001516fffffffffffffffffffffffffffffffff1682019150808060010191505061446c565b5080828161450457fe5b05925060008212801561451f575080828161451b57fe5b0715155b15611d8e5750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01919050565b5160177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec9091010490565b6000806000808473ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b1580156145c457600080fd5b505afa1580156145d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145fc9190615715565b50939750919550935050600161ffff84161191506146489050576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90615bd8565b6000808673ffffffffffffffffffffffffffffffffffffffff1663252c09d7856040518263ffffffff1660e01b81526004016146849190615dee565b60806040518083038186803b15801561469c57600080fd5b505afa1580156146b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906146d491906158e0565b5050915091506146e26133cc565b63ffffffff168263ffffffff16146146fc57849550614807565b60008361ffff1660018561ffff168761ffff1601038161471857fe5b06905060008060008a73ffffffffffffffffffffffffffffffffffffffff1663252c09d7856040518263ffffffff1660e01b81526004016147599190615dfd565b60806040518083038186803b15801561477157600080fd5b505afa158015614785573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906147a991906158e0565b93505092509250806147e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90615ba1565b82860363ffffffff811683870360060b816147fe57fe5b059a5050505050505b50505050915091565b60008063ffffffff831661488557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f4250000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60408051600280825260608201835260009260208301908036833701905050905083816000815181106148b457fe5b602002602001019063ffffffff16908163ffffffff16815250506000816001815181106148dd57fe5b63ffffffff9092166020928302919091018201526040517f883bdbfd00000000000000000000000000000000000000000000000000000000815260048101828152835160248301528351600093849373ffffffffffffffffffffffffffffffffffffffff8b169363883bdbfd9388939192839260449091019185820191028083838b5b83811015614978578181015183820152602001614960565b505050509050019250505060006040518083038186803b15801561499b57600080fd5b505afa1580156149af573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160409081528110156149f657600080fd5b8101908080516040519392919084640100000000821115614a1657600080fd5b908301906020820185811115614a2b57600080fd5b8251866020820283011164010000000082111715614a4857600080fd5b82525081516020918201928201910280838360005b83811015614a75578181015183820152602001614a5d565b5050505090500160405260200180516040519392919084640100000000821115614a9e57600080fd5b908301906020820185811115614ab357600080fd5b8251866020820283011164010000000082111715614ad057600080fd5b82525081516020918201928201910280838360005b83811015614afd578181015183820152602001614ae5565b5050505090500160405250505091509150600082600081518110614b1d57fe5b602002602001015183600181518110614b3257fe5b6020026020010151039050600082600081518110614b4c57fe5b602002602001015183600181518110614b6157fe5b60200260200101510390508763ffffffff168260060b81614b7e57fe5b05965060008260060b128015614ba857508763ffffffff168260060b81614ba157fe5b0760060b15155b15614bd3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909601955b63ffffffff881673ffffffffffffffffffffffffffffffffffffffff0277ffffffffffffffffffffffffffffffffffffffff00000000602083901b1677ffffffffffffffffffffffffffffffffffffffffffffffff821681614c3157fe5b0496505050505050509250929050565b614c49614e4b565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161115614c81579192915b506040805160608101825273ffffffffffffffffffffffffffffffffffffffff948516815292909316602083015262ffffff169181019190915290565b6000614cca8383614cee565b90503373ffffffffffffffffffffffffffffffffffffffff82161461202157600080fd5b6000816020015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff1610614d3057600080fd5b508051602080830151604093840151845173ffffffffffffffffffffffffffffffffffffffff94851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b8082018281101561202157600080fd5b604080518082019091526000808252602082015290565b604080516060810182526000808252602082018190529181019190915290565b8035610b2381615f52565b60008083601f840112614e87578182fd5b50813567ffffffffffffffff811115614e9e578182fd5b6020830191508360208083028501011115613fa057600080fd5b600082601f830112614ec8578081fd5b81356020614edd614ed883615ec8565b615ea4565b8281528181019085830183850287018401881015614ef9578586fd5b855b85811015614f345781356fffffffffffffffffffffffffffffffff81168114614f22578788fd5b84529284019290840190600101614efb565b5090979650505050505050565b80518015158114610b2357600080fd5b600082601f830112614f61578081fd5b8135614f6f614ed882615ee6565b818152846020838601011115614f83578283fd5b816020850160208301379081016020019190915292915050565b80516dffffffffffffffffffffffffffff81168114610b2357600080fd5b805161ffff81168114610b2357600080fd5b803562ffffff81168114610b2357600080fd5b8035610b2381615f83565b600060208284031215614ffc578081fd5b813561500781615f52565b9392505050565b60008060408385031215615020578081fd5b823561502b81615f52565b946020939093013593505050565b60008060006060848603121561504d578081fd5b833561505881615f52565b925060208401359150604084013561506f81615f52565b809150509250925092565b600080600080600060a08688031215615091578283fd5b853561509c81615f52565b94506020860135935060408601356150b381615f52565b92506060860135915060808601356150ca81615f52565b809150509295509295909350565b600080600080608085870312156150ed578182fd5b84356150f881615f52565b93506020850135925060408501359150606085013561511681615f52565b939692955090935050565b60008060008060008060c08789031215615139578384fd5b863561514481615f52565b95506020870135945060408701359350606087013561516281615f95565b9598949750929560808101359460a0909101359350915050565b6000806020838503121561518e578182fd5b823567ffffffffffffffff8111156151a4578283fd5b6151b085828601614e76565b90969095509350505050565b600080600080608085870312156151d1578182fd5b843567ffffffffffffffff808211156151e8578384fd5b818701915087601f8301126151fb578384fd5b8135602061520b614ed883615ec8565b82815281810190858301885b858110156152405761522e8e8684358b0101614f51565b84529284019290840190600101615217565b50909950505088013592505080821115615258578384fd5b5061526587828801614eb8565b93505061527460408601614fcd565b915061528260608601614fe0565b905092959194509250565b60006020828403121561529e578081fd5b61500782614f41565b6000806000604084860312156152bb578081fd5b83359250602084013567ffffffffffffffff8111156152d8578182fd5b6152e486828701614e76565b9497909650939450505050565b600060208284031215615302578081fd5b813567ffffffffffffffff811115615318578182fd5b613d0a84828501614f51565b600080600060608486031215615338578081fd5b833567ffffffffffffffff81111561534e578182fd5b61535a86828701614f51565b93505061536960208501614fcd565b9150604084013561506f81615f83565b60006020828403121561538a578081fd5b813561500781615f74565b600080604083850312156153a7578182fd5b505080516020909101519092909150565b600080600080606085870312156153cd578182fd5b8435935060208501359250604085013567ffffffffffffffff808211156153f2578384fd5b818701915087601f830112615405578384fd5b813581811115615413578485fd5b886020828501011115615424578485fd5b95989497505060200194505050565b600060208284031215615444578081fd5b815167ffffffffffffffff81111561545a578182fd5b8201601f8101841361546a578182fd5b8051615478614ed882615ee6565b81815285602083850101111561548c578384fd5b610e2c826020830160208601615f26565b6000602082840312156154ae578081fd5b813567ffffffffffffffff808211156154c5578283fd5b90830190608082860312156154d8578283fd5b6040516080810181811083821117156154ed57fe5b6040528235828111156154fe578485fd5b61550a87828601614f51565b8252506020830135915061551d82615f52565b816020820152604083013560408201526060830135606082015280935050505092915050565b600060e08284031215615554578081fd5b60405160e0810181811067ffffffffffffffff8211171561557157fe5b60405261557d83614e6b565b815261558b60208401614e6b565b602082015261559c60408401614fcd565b60408201526155ad60608401614e6b565b60608201526080830135608082015260a083013560a08201526155d260c08401614e6b565b60c08201529392505050565b6000602082840312156155ef578081fd5b813567ffffffffffffffff811115615605578182fd5b820160808185031215615007578182fd5b600060e08284031215610836578081fd5b600060a08284031215610836578081fd5b60006101008284031215610836578081fd5b60006020828403121561565b578081fd5b813567ffffffffffffffff80821115615672578283fd5b9083019060408286031215615685578283fd5b60405160408101818110838211171561569a57fe5b6040528235828111156156ab578485fd5b6156b787828601614f51565b825250602083013592506156ca83615f52565b6020810192909252509392505050565b6000806000606084860312156156ee578081fd5b6156f784614f9d565b925061570560208501614f9d565b9150604084015161506f81615f83565b600080600080600080600060e0888a03121561572f578485fd5b875161573a81615f52565b602089015190975061574b81615f74565b955061575960408901614fbb565b945061576760608901614fbb565b935061577560808901614fbb565b925060a088015161578581615f95565b915061579360c08901614f41565b905092959891949750929550565b6000602082840312156157b2578081fd5b61500782614fcd565b6000602082840312156157cc578081fd5b5035919050565b6000602082840312156157e4578081fd5b5051919050565b600080604083850312156157fd578182fd5b82359150602083013561580f81615f52565b809150509250929050565b6000806000806080858703121561582f578182fd5b84359350602085013561584181615f52565b925060408501359150606085013561511681615f52565b60008060006060848603121561586c578081fd5b8335925060208401359150604084013561506f81615f52565b60008060008060006080868803121561589c578283fd5b8535945060208601359350604086013567ffffffffffffffff8111156158c0578384fd5b6158cc88828901614e76565b90945092505060608601356150ca81615f52565b600080600080608085870312156158f5578182fd5b845161590081615f83565b8094505060208501518060060b8114615917578283fd5b604086015190935061592881615f52565b915061528260608601614f41565b73ffffffffffffffffffffffffffffffffffffffff169052565b60008151808452615968816020860160208601615f26565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60020b9052565b62ffffff169052565b606093841b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116825260e89390931b7fffffff0000000000000000000000000000000000000000000000000000000000166014820152921b166017820152602b0190565b6000828483379101908152919050565b60008251615a32818460208701615f26565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b600073ffffffffffffffffffffffffffffffffffffffff8088168352861515602084015285604084015280851660608401525060a06080830152615acb60a0830184615950565b979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015615b6d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452615b5b858351615950565b94509285019290850190600101615b21565b5092979650505050505050565b6000602082526150076020830184615950565b6020810160058310615b9b57fe5b91905290565b60208082526003908201527f4f4e490000000000000000000000000000000000000000000000000000000000604082015260600190565b60208082526003908201527f4e454f0000000000000000000000000000000000000000000000000000000000604082015260600190565b60208082526012908201527f546f6f206d756368207265717565737465640000000000000000000000000000604082015260600190565b60208082526002908201527f5444000000000000000000000000000000000000000000000000000000000000604082015260600190565b60208082526013908201527f546f6f206c6974746c6520726563656976656400000000000000000000000000604082015260600190565b600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b600061016082019050615d0c828451615936565b6020830151615d1e6020840182615936565b506040830151615d3160408401826159a1565b506060830151615d44606084018261599a565b506080830151615d57608084018261599a565b5060a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151615d9582850182615936565b505061014092830151919092015290565b600060208252825160406020840152615dc26060840182615950565b905073ffffffffffffffffffffffffffffffffffffffff60208501511660408401528091505092915050565b61ffff91909116815260200190565b90815260200190565b600085825284602083015273ffffffffffffffffffffffffffffffffffffffff8416604083015260806060830152613ef86080830184615950565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112615e75578283fd5b83018035915067ffffffffffffffff821115615e8f578283fd5b602001915036819003821315613fa057600080fd5b60405181810167ffffffffffffffff81118282101715615ec057fe5b604052919050565b600067ffffffffffffffff821115615edc57fe5b5060209081020190565b600067ffffffffffffffff821115615efa57fe5b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60005b83811015615f41578181015183820152602001615f29565b83811115610c555750506000910152565b73ffffffffffffffffffffffffffffffffffffffff8116811461147957600080fd5b8060020b811461147957600080fd5b63ffffffff8116811461147957600080fd5b60ff8116811461147957600080fdfea164736f6c6343000706000a","linkReferences":{},"deployedLinkReferences":{}}') }, 9917: T => { "use strict"; T.exports = JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"QuoterV2","sourceName":"contracts/lens/QuoterV2.sol","abi":[{"inputs":[{"internalType":"address","name":"_factory","type":"address"},{"internalType":"address","name":"_WETH9","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"WETH9","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"uint256","name":"amountIn","type":"uint256"}],"name":"quoteExactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint160[]","name":"sqrtPriceX96AfterList","type":"uint160[]"},{"internalType":"uint32[]","name":"initializedTicksCrossedList","type":"uint32[]"},{"internalType":"uint256","name":"gasEstimate","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct IQuoterV2.QuoteExactInputSingleParams","name":"params","type":"tuple"}],"name":"quoteExactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceX96After","type":"uint160"},{"internalType":"uint32","name":"initializedTicksCrossed","type":"uint32"},{"internalType":"uint256","name":"gasEstimate","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"quoteExactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint160[]","name":"sqrtPriceX96AfterList","type":"uint160[]"},{"internalType":"uint32[]","name":"initializedTicksCrossedList","type":"uint32[]"},{"internalType":"uint256","name":"gasEstimate","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct IQuoterV2.QuoteExactOutputSingleParams","name":"params","type":"tuple"}],"name":"quoteExactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceX96After","type":"uint160"},{"internalType":"uint32","name":"initializedTicksCrossed","type":"uint32"},{"internalType":"uint256","name":"gasEstimate","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"path","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"view","type":"function"}],"bytecode":"0x60c06040523480156200001157600080fd5b506040516200212c3803806200212c833981016040819052620000349162000070565b6001600160601b0319606092831b8116608052911b1660a052620000a7565b80516001600160a01b03811681146200006b57600080fd5b919050565b6000806040838503121562000083578182fd5b6200008e8362000053565b91506200009e6020840162000053565b90509250929050565b60805160601c60a05160601c612051620000db60003980610321525080610577528061095d5280610b9252506120516000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c45a01551161005b578063c45a0155146100e6578063c6a5026a146100ee578063cdca175314610101578063fa461e33146101145761007d565b80632f80bb1d146100825780634aa4a4fc146100ae578063bd21704a146100c3575b600080fd5b610095610090366004611b2b565b610129565b6040516100a59493929190611eac565b60405180910390f35b6100b661031f565b6040516100a59190611def565b6100d66100d1366004611c49565b610343565b6040516100a59493929190611f54565b6100b6610575565b6100d66100fc366004611c49565b610599565b61009561010f366004611b2b565b610754565b610127610122366004611b91565b61092c565b005b6000606080600061013986610ae8565b67ffffffffffffffff8111801561014f57600080fd5b50604051908082528060200260200182016040528015610179578160200160208202803683370190505b50925061018586610ae8565b67ffffffffffffffff8111801561019b57600080fd5b506040519080825280602002602001820160405280156101c5578160200160208202803683370190505b50915060005b60008060006101d98a610b17565b92509250925060008060008061025c6040518060a001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018f81526020018762ffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815250610343565b9350935093509350828b898151811061027157fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050818a89815181106102b857fe5b63ffffffff90921660209283029190910190910152929b50968201966001909601958b926102e58e610b48565b156102fa576102f38e610b50565b9d5061030a565b8c9b505050505050505050610316565b505050505050506101cb565b92959194509250565b7f000000000000000000000000000000000000000000000000000000000000000081565b60208101518151606083015160009283928392839273ffffffffffffffffffffffffffffffffffffffff808216908416109284926103819290610b8b565b9050866080015173ffffffffffffffffffffffffffffffffffffffff16600014156103af5760408701516000555b60005a90508173ffffffffffffffffffffffffffffffffffffffff1663128acb0830856103df8c60400151610bc9565b6000038c6080015173ffffffffffffffffffffffffffffffffffffffff1660001461040e578c60800151610434565b8761042d5773fffd8963efd1fc6a506488495d951d5263988d25610434565b6401000276a45b8d602001518e606001518f6000015160405160200161045593929190611d89565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401610484959493929190611e10565b6040805180830381600087803b15801561049d57600080fd5b505af19250505080156104eb575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526104e891810190611b6e565b60015b610568573d808015610519576040519150601f19603f3d011682016040523d82523d6000602084013e61051e565b606091505b505a82039450886080015173ffffffffffffffffffffffffffffffffffffffff166000141561054c57600080555b610557818487610bfb565b97509750975097505050505061056e565b50505050505b9193509193565b7f000000000000000000000000000000000000000000000000000000000000000081565b60208101518151606083015160009283928392839273ffffffffffffffffffffffffffffffffffffffff808216908416109284926105d79290610b8b565b905060005a90508173ffffffffffffffffffffffffffffffffffffffff1663128acb0830856106098c60400151610bc9565b60808d015173ffffffffffffffffffffffffffffffffffffffff1615610633578c60800151610659565b876106525773fffd8963efd1fc6a506488495d951d5263988d25610659565b6401000276a45b8d600001518e606001518f6020015160405160200161067a93929190611d89565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016106a9959493929190611e10565b6040805180830381600087803b1580156106c257600080fd5b505af1925050508015610710575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261070d91810190611b6e565b60015b610568573d80801561073e576040519150601f19603f3d011682016040523d82523d6000602084013e610743565b606091505b505a82039450610557818487610bfb565b6000606080600061076486610ae8565b67ffffffffffffffff8111801561077a57600080fd5b506040519080825280602002602001820160405280156107a4578160200160208202803683370190505b5092506107b086610ae8565b67ffffffffffffffff811180156107c657600080fd5b506040519080825280602002602001820160405280156107f0578160200160208202803683370190505b50915060005b60008060006108048a610b17565b9250925092506000806000806108876040518060a001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018f81526020018762ffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815250610599565b9350935093509350828b898151811061089c57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050818a89815181106108e357fe5b63ffffffff90921660209283029190910190910152929b50968201966001909601958b926109108e610b48565b156102fa5761091e8e610b50565b9d50505050505050506107f6565b600083138061093b5750600082135b61094457600080fd5b600080600061095284610b17565b9250925092506109847f0000000000000000000000000000000000000000000000000000000000000000848484610ccf565b5060008060008089136109ca578573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610888a6000036109ff565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161089896000035b9250925092506000610a12878787610b8b565b90506000808273ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610a5d57600080fd5b505afa158015610a71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a959190611c6b565b5050505050915091508515610abb57604051848152826020820152816040820152606081fd5b60005415610ad1576000548414610ad157600080fd5b604051858152826020820152816040820152606081fd5b805160177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec909101045b919050565b60008080610b258482610cee565b9250610b32846014610dee565b9050610b3f846017610cee565b91509193909250565b516042111590565b8051606090610b859083906017907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe901610ede565b92915050565b6000610bc17f0000000000000000000000000000000000000000000000000000000000000000610bbc8686866110c5565b611142565b949350505050565b60007f80000000000000000000000000000000000000000000000000000000000000008210610bf757600080fd5b5090565b6000806000806000808773ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610c4a57600080fd5b505afa158015610c5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c829190611c6b565b50939650610c9794508d935061127892505050565b91975095509050610cbf73ffffffffffffffffffffffffffffffffffffffff89168383611339565b9350869250505093509350935093565b6000610ce585610ce08686866110c5565b611991565b95945050505050565b600081826014011015610d6257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f746f416464726573735f6f766572666c6f770000000000000000000000000000604482015290519081900360640190fd5b8160140183511015610dd557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e64730000000000000000000000604482015290519081900360640190fd5b5001602001516c01000000000000000000000000900490565b600081826003011015610e6257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f746f55696e7432345f6f766572666c6f77000000000000000000000000000000604482015290519081900360640190fd5b8160030183511015610ed557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f746f55696e7432345f6f75744f66426f756e6473000000000000000000000000604482015290519081900360640190fd5b50016003015190565b60608182601f011015610f5257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b828284011015610fc357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b8183018451101561103557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e6473000000000000000000000000000000604482015290519081900360640190fd5b60608215801561105457604051915060008252602082016040526110bc565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561108d578051835260209283019201611075565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6110cd6119fa565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161115611105579192915b506040805160608101825273ffffffffffffffffffffffffffffffffffffffff948516815292909316602083015262ffffff169181019190915290565b6000816020015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff161061118457600080fd5b508051602080830151604093840151845173ffffffffffffffffffffffffffffffffffffffff94851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b60008060008351606014611318576044845110156112cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c290611e75565b60405180910390fd5b600484019350838060200190518101906112e59190611bdf565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c29190611e62565b8380602001905181019061132c9190611d02565b9250925092509193909250565b60008060008060008060008060088b73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561138d57600080fd5b505afa1580156113a1573d6000803e3d6000fd5b505050506040513d60208110156113b757600080fd5b5051600290810b908c900b816113c957fe5b0560020b901d905060006101008c73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561141c57600080fd5b505afa158015611430573d6000803e3d6000fd5b505050506040513d602081101561144657600080fd5b5051600290810b908d900b8161145857fe5b0560020b8161146357fe5b079050600060088d73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156114b057600080fd5b505afa1580156114c4573d6000803e3d6000fd5b505050506040513d60208110156114da57600080fd5b5051600290810b908d900b816114ec57fe5b0560020b901d905060006101008e73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561153f57600080fd5b505afa158015611553573d6000803e3d6000fd5b505050506040513d602081101561156957600080fd5b5051600290810b908e900b8161157b57fe5b0560020b8161158657fe5b07905060008160ff166001901b8f73ffffffffffffffffffffffffffffffffffffffff16635339c296856040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b1580156115e757600080fd5b505afa1580156115fb573d6000803e3d6000fd5b505050506040513d602081101561161157600080fd5b5051161180156116a457508d73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561166257600080fd5b505afa158015611676573d6000803e3d6000fd5b505050506040513d602081101561168c57600080fd5b5051600290810b908d900b8161169e57fe5b0760020b155b80156116b557508b60020b8d60020b135b945060008360ff166001901b8f73ffffffffffffffffffffffffffffffffffffffff16635339c296876040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b15801561171557600080fd5b505afa158015611729573d6000803e3d6000fd5b505050506040513d602081101561173f57600080fd5b5051161180156117d257508d73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561179057600080fd5b505afa1580156117a4573d6000803e3d6000fd5b505050506040513d60208110156117ba57600080fd5b5051600290810b908e900b816117cc57fe5b0760020b155b80156117e357508b60020b8d60020b125b95508160010b8460010b128061180f57508160010b8460010b14801561180f57508060ff168360ff1611155b1561182557839950829750819850809650611832565b8199508097508398508296505b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff87161b9150505b8560010b8760010b13611969578560010b8760010b14156118a3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff858103161c165b6000818c73ffffffffffffffffffffffffffffffffffffffff16635339c2968a6040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b1580156118fa57600080fd5b505afa15801561190e573d6000803e3d6000fd5b505050506040513d602081101561192457600080fd5b5051169050611932816119c1565b61ffff16989098019750506001909501947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61185e565b8115611976576001880397505b8215611983576001880397505b505050505050509392505050565b600061199d8383611142565b90503373ffffffffffffffffffffffffffffffffffffffff821614610b8557600080fd5b6000805b8215610b85577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8301909216916001016119c5565b604080516060810182526000808252602082018190529181019190915290565b600082601f830112611a2a578081fd5b8135611a3d611a3882611faf565b611f8b565b818152846020838601011115611a51578283fd5b816020850160208301379081016020019190915292915050565b8051600281900b8114610b1257600080fd5b600060a08284031215611a8e578081fd5b60405160a0810181811067ffffffffffffffff82111715611aab57fe5b6040529050808235611abc8161201f565b81526020830135611acc8161201f565b602082015260408381013590820152606083013562ffffff81168114611af157600080fd5b6060820152611b0260808401611b0e565b60808201525092915050565b8035610b128161201f565b805161ffff81168114610b1257600080fd5b60008060408385031215611b3d578182fd5b823567ffffffffffffffff811115611b53578283fd5b611b5f85828601611a1a565b95602094909401359450505050565b60008060408385031215611b80578182fd5b505080516020909101519092909150565b600080600060608486031215611ba5578081fd5b8335925060208401359150604084013567ffffffffffffffff811115611bc9578182fd5b611bd586828701611a1a565b9150509250925092565b600060208284031215611bf0578081fd5b815167ffffffffffffffff811115611c06578182fd5b8201601f81018413611c16578182fd5b8051611c24611a3882611faf565b818152856020838501011115611c38578384fd5b610ce5826020830160208601611fef565b600060a08284031215611c5a578081fd5b611c648383611a7d565b9392505050565b600080600080600080600060e0888a031215611c85578283fd5b8751611c908161201f565b9650611c9e60208901611a6b565b9550611cac60408901611b19565b9450611cba60608901611b19565b9350611cc860808901611b19565b925060a088015160ff81168114611cdd578283fd5b60c08901519092508015158114611cf2578182fd5b8091505092959891949750929550565b600080600060608486031215611d16578081fd5b835192506020840151611d288161201f565b9150611d3660408501611a6b565b90509250925092565b60008151808452611d57816020860160208601611fef565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b606093841b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116825260e89390931b7fffffff0000000000000000000000000000000000000000000000000000000000166014820152921b166017820152602b0190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600073ffffffffffffffffffffffffffffffffffffffff8088168352861515602084015285604084015280851660608401525060a06080830152611e5760a0830184611d3f565b979650505050505050565b600060208252611c646020830184611d3f565b60208082526010908201527f556e6578706563746564206572726f7200000000000000000000000000000000604082015260600190565b600060808201868352602060808185015281875180845260a0860191508289019350845b81811015611f0257845173ffffffffffffffffffffffffffffffffffffffff1683529383019391830191600101611ed0565b505084810360408601528651808252908201925081870190845b81811015611f3e57825163ffffffff1685529383019391830191600101611f1c565b5050505060609290920192909252949350505050565b93845273ffffffffffffffffffffffffffffffffffffffff92909216602084015263ffffffff166040830152606082015260800190565b60405181810167ffffffffffffffff81118282101715611fa757fe5b604052919050565b600067ffffffffffffffff821115611fc357fe5b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60005b8381101561200a578181015183820152602001611ff2565b83811115612019576000848401525b50505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461204157600080fd5b5056fea164736f6c6343000706000a","deployedBytecode":"0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c45a01551161005b578063c45a0155146100e6578063c6a5026a146100ee578063cdca175314610101578063fa461e33146101145761007d565b80632f80bb1d146100825780634aa4a4fc146100ae578063bd21704a146100c3575b600080fd5b610095610090366004611b2b565b610129565b6040516100a59493929190611eac565b60405180910390f35b6100b661031f565b6040516100a59190611def565b6100d66100d1366004611c49565b610343565b6040516100a59493929190611f54565b6100b6610575565b6100d66100fc366004611c49565b610599565b61009561010f366004611b2b565b610754565b610127610122366004611b91565b61092c565b005b6000606080600061013986610ae8565b67ffffffffffffffff8111801561014f57600080fd5b50604051908082528060200260200182016040528015610179578160200160208202803683370190505b50925061018586610ae8565b67ffffffffffffffff8111801561019b57600080fd5b506040519080825280602002602001820160405280156101c5578160200160208202803683370190505b50915060005b60008060006101d98a610b17565b92509250925060008060008061025c6040518060a001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018f81526020018762ffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815250610343565b9350935093509350828b898151811061027157fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050818a89815181106102b857fe5b63ffffffff90921660209283029190910190910152929b50968201966001909601958b926102e58e610b48565b156102fa576102f38e610b50565b9d5061030a565b8c9b505050505050505050610316565b505050505050506101cb565b92959194509250565b7f000000000000000000000000000000000000000000000000000000000000000081565b60208101518151606083015160009283928392839273ffffffffffffffffffffffffffffffffffffffff808216908416109284926103819290610b8b565b9050866080015173ffffffffffffffffffffffffffffffffffffffff16600014156103af5760408701516000555b60005a90508173ffffffffffffffffffffffffffffffffffffffff1663128acb0830856103df8c60400151610bc9565b6000038c6080015173ffffffffffffffffffffffffffffffffffffffff1660001461040e578c60800151610434565b8761042d5773fffd8963efd1fc6a506488495d951d5263988d25610434565b6401000276a45b8d602001518e606001518f6000015160405160200161045593929190611d89565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401610484959493929190611e10565b6040805180830381600087803b15801561049d57600080fd5b505af19250505080156104eb575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526104e891810190611b6e565b60015b610568573d808015610519576040519150601f19603f3d011682016040523d82523d6000602084013e61051e565b606091505b505a82039450886080015173ffffffffffffffffffffffffffffffffffffffff166000141561054c57600080555b610557818487610bfb565b97509750975097505050505061056e565b50505050505b9193509193565b7f000000000000000000000000000000000000000000000000000000000000000081565b60208101518151606083015160009283928392839273ffffffffffffffffffffffffffffffffffffffff808216908416109284926105d79290610b8b565b905060005a90508173ffffffffffffffffffffffffffffffffffffffff1663128acb0830856106098c60400151610bc9565b60808d015173ffffffffffffffffffffffffffffffffffffffff1615610633578c60800151610659565b876106525773fffd8963efd1fc6a506488495d951d5263988d25610659565b6401000276a45b8d600001518e606001518f6020015160405160200161067a93929190611d89565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016106a9959493929190611e10565b6040805180830381600087803b1580156106c257600080fd5b505af1925050508015610710575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261070d91810190611b6e565b60015b610568573d80801561073e576040519150601f19603f3d011682016040523d82523d6000602084013e610743565b606091505b505a82039450610557818487610bfb565b6000606080600061076486610ae8565b67ffffffffffffffff8111801561077a57600080fd5b506040519080825280602002602001820160405280156107a4578160200160208202803683370190505b5092506107b086610ae8565b67ffffffffffffffff811180156107c657600080fd5b506040519080825280602002602001820160405280156107f0578160200160208202803683370190505b50915060005b60008060006108048a610b17565b9250925092506000806000806108876040518060a001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018f81526020018762ffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815250610599565b9350935093509350828b898151811061089c57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050818a89815181106108e357fe5b63ffffffff90921660209283029190910190910152929b50968201966001909601958b926109108e610b48565b156102fa5761091e8e610b50565b9d50505050505050506107f6565b600083138061093b5750600082135b61094457600080fd5b600080600061095284610b17565b9250925092506109847f0000000000000000000000000000000000000000000000000000000000000000848484610ccf565b5060008060008089136109ca578573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610888a6000036109ff565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161089896000035b9250925092506000610a12878787610b8b565b90506000808273ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610a5d57600080fd5b505afa158015610a71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a959190611c6b565b5050505050915091508515610abb57604051848152826020820152816040820152606081fd5b60005415610ad1576000548414610ad157600080fd5b604051858152826020820152816040820152606081fd5b805160177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec909101045b919050565b60008080610b258482610cee565b9250610b32846014610dee565b9050610b3f846017610cee565b91509193909250565b516042111590565b8051606090610b859083906017907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe901610ede565b92915050565b6000610bc17f0000000000000000000000000000000000000000000000000000000000000000610bbc8686866110c5565b611142565b949350505050565b60007f80000000000000000000000000000000000000000000000000000000000000008210610bf757600080fd5b5090565b6000806000806000808773ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610c4a57600080fd5b505afa158015610c5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c829190611c6b565b50939650610c9794508d935061127892505050565b91975095509050610cbf73ffffffffffffffffffffffffffffffffffffffff89168383611339565b9350869250505093509350935093565b6000610ce585610ce08686866110c5565b611991565b95945050505050565b600081826014011015610d6257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f746f416464726573735f6f766572666c6f770000000000000000000000000000604482015290519081900360640190fd5b8160140183511015610dd557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e64730000000000000000000000604482015290519081900360640190fd5b5001602001516c01000000000000000000000000900490565b600081826003011015610e6257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f746f55696e7432345f6f766572666c6f77000000000000000000000000000000604482015290519081900360640190fd5b8160030183511015610ed557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f746f55696e7432345f6f75744f66426f756e6473000000000000000000000000604482015290519081900360640190fd5b50016003015190565b60608182601f011015610f5257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b828284011015610fc357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b8183018451101561103557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e6473000000000000000000000000000000604482015290519081900360640190fd5b60608215801561105457604051915060008252602082016040526110bc565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561108d578051835260209283019201611075565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6110cd6119fa565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161115611105579192915b506040805160608101825273ffffffffffffffffffffffffffffffffffffffff948516815292909316602083015262ffffff169181019190915290565b6000816020015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff161061118457600080fd5b508051602080830151604093840151845173ffffffffffffffffffffffffffffffffffffffff94851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b60008060008351606014611318576044845110156112cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c290611e75565b60405180910390fd5b600484019350838060200190518101906112e59190611bdf565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c29190611e62565b8380602001905181019061132c9190611d02565b9250925092509193909250565b60008060008060008060008060088b73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561138d57600080fd5b505afa1580156113a1573d6000803e3d6000fd5b505050506040513d60208110156113b757600080fd5b5051600290810b908c900b816113c957fe5b0560020b901d905060006101008c73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561141c57600080fd5b505afa158015611430573d6000803e3d6000fd5b505050506040513d602081101561144657600080fd5b5051600290810b908d900b8161145857fe5b0560020b8161146357fe5b079050600060088d73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156114b057600080fd5b505afa1580156114c4573d6000803e3d6000fd5b505050506040513d60208110156114da57600080fd5b5051600290810b908d900b816114ec57fe5b0560020b901d905060006101008e73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561153f57600080fd5b505afa158015611553573d6000803e3d6000fd5b505050506040513d602081101561156957600080fd5b5051600290810b908e900b8161157b57fe5b0560020b8161158657fe5b07905060008160ff166001901b8f73ffffffffffffffffffffffffffffffffffffffff16635339c296856040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b1580156115e757600080fd5b505afa1580156115fb573d6000803e3d6000fd5b505050506040513d602081101561161157600080fd5b5051161180156116a457508d73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561166257600080fd5b505afa158015611676573d6000803e3d6000fd5b505050506040513d602081101561168c57600080fd5b5051600290810b908d900b8161169e57fe5b0760020b155b80156116b557508b60020b8d60020b135b945060008360ff166001901b8f73ffffffffffffffffffffffffffffffffffffffff16635339c296876040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b15801561171557600080fd5b505afa158015611729573d6000803e3d6000fd5b505050506040513d602081101561173f57600080fd5b5051161180156117d257508d73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561179057600080fd5b505afa1580156117a4573d6000803e3d6000fd5b505050506040513d60208110156117ba57600080fd5b5051600290810b908e900b816117cc57fe5b0760020b155b80156117e357508b60020b8d60020b125b95508160010b8460010b128061180f57508160010b8460010b14801561180f57508060ff168360ff1611155b1561182557839950829750819850809650611832565b8199508097508398508296505b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff87161b9150505b8560010b8760010b13611969578560010b8760010b14156118a3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff858103161c165b6000818c73ffffffffffffffffffffffffffffffffffffffff16635339c2968a6040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b1580156118fa57600080fd5b505afa15801561190e573d6000803e3d6000fd5b505050506040513d602081101561192457600080fd5b5051169050611932816119c1565b61ffff16989098019750506001909501947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61185e565b8115611976576001880397505b8215611983576001880397505b505050505050509392505050565b600061199d8383611142565b90503373ffffffffffffffffffffffffffffffffffffffff821614610b8557600080fd5b6000805b8215610b85577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8301909216916001016119c5565b604080516060810182526000808252602082018190529181019190915290565b600082601f830112611a2a578081fd5b8135611a3d611a3882611faf565b611f8b565b818152846020838601011115611a51578283fd5b816020850160208301379081016020019190915292915050565b8051600281900b8114610b1257600080fd5b600060a08284031215611a8e578081fd5b60405160a0810181811067ffffffffffffffff82111715611aab57fe5b6040529050808235611abc8161201f565b81526020830135611acc8161201f565b602082015260408381013590820152606083013562ffffff81168114611af157600080fd5b6060820152611b0260808401611b0e565b60808201525092915050565b8035610b128161201f565b805161ffff81168114610b1257600080fd5b60008060408385031215611b3d578182fd5b823567ffffffffffffffff811115611b53578283fd5b611b5f85828601611a1a565b95602094909401359450505050565b60008060408385031215611b80578182fd5b505080516020909101519092909150565b600080600060608486031215611ba5578081fd5b8335925060208401359150604084013567ffffffffffffffff811115611bc9578182fd5b611bd586828701611a1a565b9150509250925092565b600060208284031215611bf0578081fd5b815167ffffffffffffffff811115611c06578182fd5b8201601f81018413611c16578182fd5b8051611c24611a3882611faf565b818152856020838501011115611c38578384fd5b610ce5826020830160208601611fef565b600060a08284031215611c5a578081fd5b611c648383611a7d565b9392505050565b600080600080600080600060e0888a031215611c85578283fd5b8751611c908161201f565b9650611c9e60208901611a6b565b9550611cac60408901611b19565b9450611cba60608901611b19565b9350611cc860808901611b19565b925060a088015160ff81168114611cdd578283fd5b60c08901519092508015158114611cf2578182fd5b8091505092959891949750929550565b600080600060608486031215611d16578081fd5b835192506020840151611d288161201f565b9150611d3660408501611a6b565b90509250925092565b60008151808452611d57816020860160208601611fef565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b606093841b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116825260e89390931b7fffffff0000000000000000000000000000000000000000000000000000000000166014820152921b166017820152602b0190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600073ffffffffffffffffffffffffffffffffffffffff8088168352861515602084015285604084015280851660608401525060a06080830152611e5760a0830184611d3f565b979650505050505050565b600060208252611c646020830184611d3f565b60208082526010908201527f556e6578706563746564206572726f7200000000000000000000000000000000604082015260600190565b600060808201868352602060808185015281875180845260a0860191508289019350845b81811015611f0257845173ffffffffffffffffffffffffffffffffffffffff1683529383019391830191600101611ed0565b505084810360408601528651808252908201925081870190845b81811015611f3e57825163ffffffff1685529383019391830191600101611f1c565b5050505060609290920192909252949350505050565b93845273ffffffffffffffffffffffffffffffffffffffff92909216602084015263ffffffff166040830152606082015260800190565b60405181810167ffffffffffffffff81118282101715611fa757fe5b604052919050565b600067ffffffffffffffff821115611fc357fe5b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60005b8381101561200a578181015183820152602001611ff2565b83811115612019576000848401525b50505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461204157600080fd5b5056fea164736f6c6343000706000a","linkReferences":{},"deployedLinkReferences":{}}') }, 760: T => { "use strict"; T.exports = JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"UniswapV3Factory","sourceName":"contracts/UniswapV3Factory.sol","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":true,"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"FeeAmountEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":false,"internalType":"int24","name":"tickSpacing","type":"int24"},{"indexed":false,"internalType":"address","name":"pool","type":"address"}],"name":"PoolCreated","type":"event"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"enableFeeAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"","type":"uint24"}],"name":"feeAmountTickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint24","name":"","type":"uint24"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"parameters","outputs":[{"internalType":"address","name":"factory","type":"address"},{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"","deployedBytecode":"0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063890357301161005b578063890357301461013b5780638a7c195f146101855780638da5cb5b146101b0578063a1671295146101b85761007d565b806313af4035146100825780631698ee82146100aa57806322afcccb14610102575b600080fd5b6100a86004803603602081101561009857600080fd5b50356001600160a01b03166101f4565b005b6100e6600480360360608110156100c057600080fd5b5080356001600160a01b03908116916020810135909116906040013562ffffff16610267565b604080516001600160a01b039092168252519081900360200190f35b6101246004803603602081101561011857600080fd5b503562ffffff16610293565b6040805160029290920b8252519081900360200190f35b6101436102a8565b604080516001600160a01b0396871681529486166020860152929094168383015262ffffff16606083015260029290920b608082015290519081900360a00190f35b6100a86004803603604081101561019b57600080fd5b5062ffffff813516906020013560020b6102de565b6100e66103a1565b6100e6600480360360608110156101ce57600080fd5b5080356001600160a01b03908116916020810135909116906040013562ffffff166103b0565b6003546001600160a01b0316331461020b57600080fd5b6003546040516001600160a01b038084169216907fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c90600090a3600380546001600160a01b0319166001600160a01b0392909216919091179055565b60056020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b60046020526000908152604090205460020b81565b600054600154600280546001600160a01b03938416939283169281169162ffffff600160a01b83041691600160b81b9004900b85565b6003546001600160a01b031633146102f557600080fd5b620f42408262ffffff161061030957600080fd5b60008160020b13801561032057506140008160020b125b61032957600080fd5b62ffffff8216600090815260046020526040902054600290810b900b1561034f57600080fd5b62ffffff828116600081815260046020526040808220805462ffffff1916600287900b958616179055517fc66a3fdf07232cdd185febcc6579d408c241b47ae2f9907d84be655141eeaecc9190a35050565b6003546001600160a01b031681565b60006103ba610546565b826001600160a01b0316846001600160a01b031614156103d957600080fd5b600080846001600160a01b0316866001600160a01b0316106103fc5784866103ff565b85855b90925090506001600160a01b03821661041757600080fd5b62ffffff8416600090815260046020526040902054600290810b9081900b61043e57600080fd5b6001600160a01b0383811660009081526005602090815260408083208685168452825280832062ffffff8a168452909152902054161561047d57600080fd5b61048a308484888561057d565b6001600160a01b03808516600081815260056020818152604080842089871680865290835281852062ffffff8e168087529084528286208054988a166001600160a01b0319998a1681179091558287529484528286208787528452828620818752845294829020805490971684179096558051600289900b815291820192909252815195995091947f783cca1c0412dd0d695e784568c96da2e9c22ff989357a2e8b1d9b2b4e6b71189281900390910190a45050509392505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461057b57600080fd5b565b6040805160a0810182526001600160a01b03878116808352878216602080850182905292881684860181905262ffffff888116606080880182905260028a810b6080998a01819052600080546001600160a01b03199081169099178155600180548a1689179055825490981686177fffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffff16600160a01b8502177fffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffff16600160b81b91830b9095160293909317909255875180870194909452838801929092528281019190915285518083039091018152930193849052825192909101919091209091610686906106f5565b8190604051809103906000f59050801580156106a6573d6000803e3d6000fd5b50600080546001600160a01b0319908116909155600180549091169055600280547fffffffffffff00000000000000000000000000000000000000000000000000001690559695505050505050565b6158c8806107038339019056fe6101606040523480156200001257600080fd5b503060601b60805260408051630890357360e41b81529051600091339163890357309160048082019260a092909190829003018186803b1580156200005657600080fd5b505afa1580156200006b573d6000803e3d6000fd5b505050506040513d60a08110156200008257600080fd5b508051602080830151604084015160608086015160809096015160e896871b6001600160e81b0319166101005291811b6001600160601b031990811660e05292811b831660c0529390931b1660a052600282810b900b90921b610120529150620000f79082906200010f811b62002b8417901c565b60801b6001600160801b03191661014052506200017d565b60008082600281900b620d89e719816200012557fe5b05029050600083600281900b620d89e8816200013d57fe5b0502905060008460020b83830360020b816200015557fe5b0560010190508062ffffff166001600160801b038016816200017357fe5b0495945050505050565b60805160601c60a05160601c60c05160601c60e05160601c6101005160e81c6101205160e81c6101405160801c61567e6200024a60003980611fee5280614b5f5280614b96525080610c0052806128fd5280614bca5280614bfc525080610cef52806119cb5280611a0252806129455250806111c75280611a855280611ef4528061244452806129215280613e6b5250806108d252806112f55280611a545280611e8e52806123be5280613d2252508061207b528061227d52806128d9525080612bfb525061567e6000f3fe608060405234801561001057600080fd5b50600436106101ae5760003560e01c806370cf754a116100ee578063c45a015511610097578063ddca3f4311610071578063ddca3f4314610800578063f305839914610820578063f30dba9314610828578063f637731d146108aa576101ae565b8063c45a0155146107d1578063d0c93a7c146107d9578063d21220a7146107f8576101ae565b8063883bdbfd116100c8578063883bdbfd14610633578063a34123a71461073c578063a38807f214610776576101ae565b806370cf754a146105c65780638206a4d1146105ce57806385b66729146105f6576101ae565b80633850c7bd1161015b578063490e6cbc11610135578063490e6cbc146104705780634f1eb3d8146104fc578063514ea4bf1461054d5780635339c296146105a6576101ae565b80633850c7bd1461035b5780633c8a7d8d146103b45780634614131914610456576101ae565b80631ad8b03b1161018c5780631ad8b03b146102aa578063252c09d7146102e157806332148f6714610338576101ae565b80630dfe1681146101b3578063128acb08146101d75780631a68650214610286575b600080fd5b6101bb6108d0565b604080516001600160a01b039092168252519081900360200190f35b61026d600480360360a08110156101ed57600080fd5b6001600160a01b0382358116926020810135151592604082013592606083013516919081019060a08101608082013564010000000081111561022e57600080fd5b82018360208201111561024057600080fd5b8035906020019184600183028401116401000000008311171561026257600080fd5b5090925090506108f4565b6040805192835260208301919091528051918290030190f35b61028e6114ad565b604080516001600160801b039092168252519081900360200190f35b6102b26114bc565b60405180836001600160801b03168152602001826001600160801b031681526020019250505060405180910390f35b6102fe600480360360208110156102f757600080fd5b50356114d6565b6040805163ffffffff909516855260069390930b60208501526001600160a01b039091168383015215156060830152519081900360800190f35b6103596004803603602081101561034e57600080fd5b503561ffff1661151c565b005b610363611616565b604080516001600160a01b03909816885260029690960b602088015261ffff9485168787015292841660608701529216608085015260ff90911660a0840152151560c0830152519081900360e00190f35b61026d600480360360a08110156103ca57600080fd5b6001600160a01b03823516916020810135600290810b92604083013590910b916001600160801b036060820135169181019060a08101608082013564010000000081111561041757600080fd5b82018360208201111561042957600080fd5b8035906020019184600183028401116401000000008311171561044b57600080fd5b509092509050611666565b61045e611922565b60408051918252519081900360200190f35b6103596004803603608081101561048657600080fd5b6001600160a01b0382351691602081013591604082013591908101906080810160608201356401000000008111156104bd57600080fd5b8201836020820111156104cf57600080fd5b803590602001918460018302840111640100000000831117156104f157600080fd5b509092509050611928565b6102b2600480360360a081101561051257600080fd5b506001600160a01b03813516906020810135600290810b91604081013590910b906001600160801b0360608201358116916080013516611d83565b61056a6004803603602081101561056357600080fd5b5035611f9d565b604080516001600160801b0396871681526020810195909552848101939093529084166060840152909216608082015290519081900360a00190f35b61045e600480360360208110156105bc57600080fd5b503560010b611fda565b61028e611fec565b610359600480360360408110156105e457600080fd5b5060ff81358116916020013516612010565b6102b26004803603606081101561060c57600080fd5b506001600160a01b03813516906001600160801b036020820135811691604001351661220f565b6106a36004803603602081101561064957600080fd5b81019060208101813564010000000081111561066457600080fd5b82018360208201111561067657600080fd5b8035906020019184602083028401116401000000008311171561069857600080fd5b5090925090506124dc565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156106e75781810151838201526020016106cf565b50505050905001838103825284818151815260200191508051906020019060200280838360005b8381101561072657818101518382015260200161070e565b5050505090500194505050505060405180910390f35b61026d6004803603606081101561075257600080fd5b508035600290810b91602081013590910b90604001356001600160801b0316612569565b6107a06004803603604081101561078c57600080fd5b508035600290810b9160200135900b6126e0565b6040805160069490940b84526001600160a01b03909216602084015263ffffffff1682820152519081900360600190f35b6101bb6128d7565b6107e16128fb565b6040805160029290920b8252519081900360200190f35b6101bb61291f565b610808612943565b6040805162ffffff9092168252519081900360200190f35b61045e612967565b6108486004803603602081101561083e57600080fd5b503560020b61296d565b604080516001600160801b039099168952600f9790970b602089015287870195909552606087019390935260069190910b60808601526001600160a01b031660a085015263ffffffff1660c0840152151560e083015251908190036101000190f35b610359600480360360208110156108c057600080fd5b50356001600160a01b03166129db565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806108ff612bf0565b85610936576040805162461bcd60e51b8152602060048201526002602482015261415360f01b604482015290519081900360640190fd5b6040805160e0810182526000546001600160a01b0381168252600160a01b8104600290810b810b900b602083015261ffff600160b81b8204811693830193909352600160c81b810483166060830152600160d81b8104909216608082015260ff600160e81b8304811660a0830152600160f01b909204909116151560c082018190526109ef576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b87610a3a5780600001516001600160a01b0316866001600160a01b0316118015610a35575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038716105b610a6c565b80600001516001600160a01b0316866001600160a01b0316108015610a6c57506401000276a36001600160a01b038716115b610aa3576040805162461bcd60e51b815260206004820152600360248201526214d41360ea1b604482015290519081900360640190fd5b6000805460ff60f01b191681556040805160c08101909152808a610ad25760048460a0015160ff16901c610ae5565b60108460a0015160ff1681610ae357fe5b065b60ff1681526004546001600160801b03166020820152604001610b06612c27565b63ffffffff168152602001600060060b815260200160006001600160a01b031681526020016000151581525090506000808913905060006040518060e001604052808b81526020016000815260200185600001516001600160a01b03168152602001856020015160020b81526020018c610b8257600254610b86565b6001545b815260200160006001600160801b0316815260200184602001516001600160801b031681525090505b805115801590610bd55750886001600160a01b031681604001516001600160a01b031614155b15610f9f57610be261560e565b60408201516001600160a01b031681526060820151610c25906006907f00000000000000000000000000000000000000000000000000000000000000008f612c2b565b15156040830152600290810b810b60208301819052620d89e719910b1215610c5657620d89e7196020820152610c75565b6020810151620d89e860029190910b1315610c7557620d89e860208201525b610c828160200151612d6d565b6001600160a01b031660608201526040820151610d13908d610cbc578b6001600160a01b031683606001516001600160a01b031611610cd6565b8b6001600160a01b031683606001516001600160a01b0316105b610ce4578260600151610ce6565b8b5b60c085015185517f000000000000000000000000000000000000000000000000000000000000000061309f565b60c085015260a084015260808301526001600160a01b031660408301528215610d7557610d498160c00151826080015101613291565b825103825260a0810151610d6b90610d6090613291565b6020840151906132a7565b6020830152610db0565b610d828160a00151613291565b825101825260c08101516080820151610daa91610d9f9101613291565b6020840151906132c3565b60208301525b835160ff1615610df6576000846000015160ff168260c0015181610dd057fe5b60c0840180519290910491829003905260a0840180519091016001600160801b03169052505b60c08201516001600160801b031615610e3557610e298160c00151600160801b8460c001516001600160801b03166132d9565b60808301805190910190525b80606001516001600160a01b031682604001516001600160a01b03161415610f5e57806040015115610f35578360a00151610ebf57610e9d846040015160008760200151886040015188602001518a606001516008613389909695949392919063ffffffff16565b6001600160a01b03166080860152600690810b900b6060850152600160a08501525b6000610f0b82602001518e610ed657600154610edc565b84608001515b8f610eeb578560800151610eef565b6002545b608089015160608a015160408b0151600595949392919061351c565b90508c15610f17576000035b610f258360c00151826135ef565b6001600160801b031660c0840152505b8b610f44578060200151610f4d565b60018160200151035b600290810b900b6060830152610f99565b80600001516001600160a01b031682604001516001600160a01b031614610f9957610f8c82604001516136a5565b600290810b900b60608301525b50610baf565b836020015160020b816060015160020b1461107a57600080610fed86604001518660400151886020015188602001518a606001518b6080015160086139d1909695949392919063ffffffff16565b604085015160608601516000805461ffff60c81b1916600160c81b61ffff958616021761ffff60b81b1916600160b81b95909416949094029290921762ffffff60a01b1916600160a01b62ffffff60029490940b93909316929092029190911773ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909116179055506110ac9050565b60408101516000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039092169190911790555b8060c001516001600160801b031683602001516001600160801b0316146110f25760c0810151600480546001600160801b0319166001600160801b039092169190911790555b8a1561114257608081015160015560a08101516001600160801b03161561113d5760a0810151600380546001600160801b031981166001600160801b03918216909301169190911790555b611188565b608081015160025560a08101516001600160801b0316156111885760a0810151600380546001600160801b03808216600160801b92839004821690940116029190911790555b8115158b1515146111a157602081015181518b036111ae565b80600001518a0381602001515b90965094508a156112e75760008512156111f0576111f07f00000000000000000000000000000000000000000000000000000000000000008d87600003613b86565b60006111fa613cd4565b9050336001600160a01b031663fa461e3388888c8c6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b15801561127e57600080fd5b505af1158015611292573d6000803e3d6000fd5b5050505061129e613cd4565b6112a88289613e0d565b11156112e1576040805162461bcd60e51b815260206004820152600360248201526249494160e81b604482015290519081900360640190fd5b50611411565b600086121561131e5761131e7f00000000000000000000000000000000000000000000000000000000000000008d88600003613b86565b6000611328613e1d565b9050336001600160a01b031663fa461e3388888c8c6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b1580156113ac57600080fd5b505af11580156113c0573d6000803e3d6000fd5b505050506113cc613e1d565b6113d68288613e0d565b111561140f576040805162461bcd60e51b815260206004820152600360248201526249494160e81b604482015290519081900360640190fd5b505b60408082015160c083015160608085015184518b8152602081018b90526001600160a01b03948516818701526001600160801b039093169183019190915260020b60808201529151908e169133917fc42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca679181900360a00190a350506000805460ff60f01b1916600160f01b17905550919890975095505050505050565b6004546001600160801b031681565b6003546001600160801b0380821691600160801b90041682565b60088161ffff81106114e757600080fd5b015463ffffffff81169150640100000000810460060b90600160581b81046001600160a01b031690600160f81b900460ff1684565b600054600160f01b900460ff16611560576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b19169055611575612bf0565b60008054600160d81b900461ffff169061159160088385613eb5565b6000805461ffff808416600160d81b810261ffff60d81b19909316929092179092559192508316146115fe576040805161ffff80851682528316602082015281517fac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a929181900390910190a15b50506000805460ff60f01b1916600160f01b17905550565b6000546001600160a01b03811690600160a01b810460020b9061ffff600160b81b8204811691600160c81b8104821691600160d81b8204169060ff600160e81b8204811691600160f01b90041687565b600080548190600160f01b900460ff166116ad576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b191690556001600160801b0385166116cd57600080fd5b60008061171b60405180608001604052808c6001600160a01b031681526020018b60020b81526020018a60020b81526020016117118a6001600160801b0316613f58565b600f0b9052613f69565b9250925050819350809250600080600086111561173d5761173a613cd4565b91505b841561174e5761174b613e1d565b90505b336001600160a01b031663d348799787878b8b6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b1580156117d057600080fd5b505af11580156117e4573d6000803e3d6000fd5b50505050600086111561183b576117f9613cd4565b6118038388613e0d565b111561183b576040805162461bcd60e51b815260206004820152600260248201526104d360f41b604482015290519081900360640190fd5b841561188b57611849613e1d565b6118538287613e0d565b111561188b576040805162461bcd60e51b81526020600482015260026024820152614d3160f01b604482015290519081900360640190fd5b8960020b8b60020b8d6001600160a01b03167f7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde338d8b8b60405180856001600160a01b03168152602001846001600160801b0316815260200183815260200182815260200194505050505060405180910390a450506000805460ff60f01b1916600160f01b17905550919890975095505050505050565b60025481565b600054600160f01b900460ff1661196c576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b19169055611981612bf0565b6004546001600160801b0316806119c3576040805162461bcd60e51b81526020600482015260016024820152601360fa1b604482015290519081900360640190fd5b60006119f8867f000000000000000000000000000000000000000000000000000000000000000062ffffff16620f42406141a9565b90506000611a2f867f000000000000000000000000000000000000000000000000000000000000000062ffffff16620f42406141a9565b90506000611a3b613cd4565b90506000611a47613e1d565b90508815611a7a57611a7a7f00000000000000000000000000000000000000000000000000000000000000008b8b613b86565b8715611aab57611aab7f00000000000000000000000000000000000000000000000000000000000000008b8a613b86565b336001600160a01b031663e9cbafb085858a8a6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b158015611b2d57600080fd5b505af1158015611b41573d6000803e3d6000fd5b505050506000611b4f613cd4565b90506000611b5b613e1d565b905081611b688588613e0d565b1115611ba0576040805162461bcd60e51b8152602060048201526002602482015261046360f41b604482015290519081900360640190fd5b80611bab8487613e0d565b1115611be3576040805162461bcd60e51b8152602060048201526002602482015261463160f01b604482015290519081900360640190fd5b8382038382038115611c725760008054600160e81b9004600f16908115611c16578160ff168481611c1057fe5b04611c19565b60005b90506001600160801b03811615611c4c57600380546001600160801b038082168401166001600160801b03199091161790555b611c66818503600160801b8d6001600160801b03166132d9565b60018054909101905550505b8015611cfd5760008054600160e81b900460041c600f16908115611ca2578160ff168381611c9c57fe5b04611ca5565b60005b90506001600160801b03811615611cd757600380546001600160801b03600160801b8083048216850182160291161790555b611cf1818403600160801b8d6001600160801b03166132d9565b60028054909101905550505b8d6001600160a01b0316336001600160a01b03167fbdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca6338f8f86866040518085815260200184815260200183815260200182815260200194505050505060405180910390a350506000805460ff60f01b1916600160f01b179055505050505050505050505050565b600080548190600160f01b900460ff16611dca576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b19168155611de460073389896141e3565b60038101549091506001600160801b0390811690861611611e055784611e14565b60038101546001600160801b03165b60038201549093506001600160801b03600160801b909104811690851611611e3c5783611e52565b6003810154600160801b90046001600160801b03165b91506001600160801b03831615611eb7576003810180546001600160801b031981166001600160801b03918216869003821617909155611eb7907f0000000000000000000000000000000000000000000000000000000000000000908a908616613b86565b6001600160801b03821615611f1d576003810180546001600160801b03600160801b808304821686900382160291811691909117909155611f1d907f0000000000000000000000000000000000000000000000000000000000000000908a908516613b86565b604080516001600160a01b038a1681526001600160801b0380861660208301528416818301529051600288810b92908a900b9133917f70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0919081900360600190a4506000805460ff60f01b1916600160f01b17905590969095509350505050565b60076020526000908152604090208054600182015460028301546003909301546001600160801b0392831693919281811691600160801b90041685565b60066020526000908152604090205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600054600160f01b900460ff16612054576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b1916905560408051638da5cb5b60e01b815290516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691638da5cb5b916004808301926020929190829003018186803b1580156120c157600080fd5b505afa1580156120d5573d6000803e3d6000fd5b505050506040513d60208110156120eb57600080fd5b50516001600160a01b0316331461210157600080fd5b60ff82161580612124575060048260ff16101580156121245750600a8260ff1611155b801561214e575060ff8116158061214e575060048160ff161015801561214e5750600a8160ff1611155b61215757600080fd5b60008054610ff0600484901b16840160ff908116600160e81b9081027fffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff841617909355919004167f973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b1336010826040805160ff9390920683168252600f600486901c16602083015286831682820152918516606082015290519081900360800190a150506000805460ff60f01b1916600160f01b17905550565b600080548190600160f01b900460ff16612256576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b1916905560408051638da5cb5b60e01b815290516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691638da5cb5b916004808301926020929190829003018186803b1580156122c357600080fd5b505afa1580156122d7573d6000803e3d6000fd5b505050506040513d60208110156122ed57600080fd5b50516001600160a01b0316331461230357600080fd5b6003546001600160801b039081169085161161231f578361232c565b6003546001600160801b03165b6003549092506001600160801b03600160801b9091048116908416116123525782612366565b600354600160801b90046001600160801b03165b90506001600160801b038216156123e7576003546001600160801b038381169116141561239557600019909101905b600380546001600160801b031981166001600160801b039182168590038216179091556123e7907f00000000000000000000000000000000000000000000000000000000000000009087908516613b86565b6001600160801b0381161561246d576003546001600160801b03828116600160801b90920416141561241857600019015b600380546001600160801b03600160801b80830482168590038216029181169190911790915561246d907f00000000000000000000000000000000000000000000000000000000000000009087908416613b86565b604080516001600160801b0380851682528316602082015281516001600160a01b0388169233927f596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151929081900390910190a36000805460ff60f01b1916600160f01b1790559094909350915050565b6060806124e7612bf0565b61255e6124f2612c27565b858580806020026020016040519081016040528093929190818152602001838360200280828437600092018290525054600454600896959450600160a01b820460020b935061ffff600160b81b8304811693506001600160801b0390911691600160c81b900416614247565b915091509250929050565b600080548190600160f01b900460ff166125b0576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6000805460ff60f01b1916815560408051608081018252338152600288810b602083015287900b918101919091528190819061260990606081016125fc6001600160801b038a16613f58565b600003600f0b9052613f69565b925092509250816000039450806000039350600085118061262a5750600084115b15612669576003830180546001600160801b038082168089018216600160801b93849004831689019092169092029091176001600160801b0319161790555b604080516001600160801b0388168152602081018790528082018690529051600289810b92908b900b9133917f0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c919081900360600190a450506000805460ff60f01b1916600160f01b179055509094909350915050565b60008060006126ed612bf0565b6126f785856143a1565b600285810b810b60009081526005602052604080822087840b90930b825281206003830154600681900b9367010000000000000082046001600160a01b0316928492600160d81b810463ffffffff169284929091600160f81b900460ff168061275f57600080fd5b6003820154600681900b985067010000000000000081046001600160a01b03169650600160d81b810463ffffffff169450600160f81b900460ff16806127a457600080fd5b50506040805160e0810182526000546001600160a01b0381168252600160a01b8104600290810b810b810b6020840181905261ffff600160b81b8404811695850195909552600160c81b830485166060850152600160d81b8304909416608084015260ff600160e81b8304811660a0850152600160f01b909204909116151560c08301529093508e810b91900b1215905061284d575093909403965090039350900390506128d0565b8a60020b816020015160020b12156128c1576000612869612c27565b602083015160408401516004546060860151939450600093849361289f936008938893879392916001600160801b031690613389565b9a9003989098039b5050949096039290920396509091030392506128d0915050565b50949093039650039350900390505b9250925092565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60015481565b60056020526000908152604090208054600182015460028301546003909301546001600160801b03831693600160801b909304600f0b9290600681900b9067010000000000000081046001600160a01b031690600160d81b810463ffffffff1690600160f81b900460ff1688565b6000546001600160a01b031615612a1e576040805162461bcd60e51b8152602060048201526002602482015261414960f01b604482015290519081900360640190fd5b6000612a29826136a5565b9050600080612a41612a39612c27565b60089061446a565b6040805160e0810182526001600160a01b038816808252600288810b6020808501829052600085870181905261ffff898116606088018190529089166080880181905260a08801839052600160c0909801979097528154600160f01b73ffffffffffffffffffffffffffffffffffffffff19909116871762ffffff60a01b1916600160a01b62ffffff9787900b9790971696909602959095177fffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffff16600160c81b9091021761ffff60d81b1916600160d81b909602959095177fff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1692909217909355835191825281019190915281519395509193507f98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c9592918290030190a150505050565b60008082600281900b620d89e71981612b9957fe5b05029050600083600281900b620d89e881612bb057fe5b0502905060008460020b83830360020b81612bc757fe5b0560010190508062ffffff166001600160801b03801681612be457fe5b0493505050505b919050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614612c2557600080fd5b565b4290565b60008060008460020b8660020b81612c3f57fe5b05905060008660020b128015612c6657508460020b8660020b81612c5f57fe5b0760020b15155b15612c7057600019015b8315612ce557600080612c82836144b6565b600182810b810b600090815260208d9052604090205460ff83169190911b80016000190190811680151597509294509092509085612cc757888360ff16860302612cda565b88612cd1826144c8565b840360ff168603025b965050505050612d63565b600080612cf4836001016144b6565b91509150600060018260ff166001901b031990506000818b60008660010b60010b8152602001908152602001600020541690508060001415955085612d4657888360ff0360ff16866001010102612d5c565b8883612d5183614568565b0360ff168660010101025b9650505050505b5094509492505050565b60008060008360020b12612d84578260020b612d8c565b8260020b6000035b9050620d89e8811115612dca576040805162461bcd60e51b81526020600482015260016024820152601560fa1b604482015290519081900360640190fd5b600060018216612dde57600160801b612df0565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615612e24576ffff97272373d413259a46990580e213a0260801c5b6004821615612e43576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615612e62576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615612e81576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615612ea0576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615612ebf576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615612ede576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615612efe576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615612f1e576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615612f3e576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615612f5e576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615612f7e576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615612f9e576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615612fbe576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615612fde576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615612fff576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561301f576e5d6af8dedb81196699c329225ee6040260801c5b6204000082161561303e576d2216e584f5fa1ea926041bedfe980260801c5b6208000082161561305b576b048a170391f7dc42444e8fa20260801c5b60008460020b131561307657806000198161307257fe5b0490505b64010000000081061561308a57600161308d565b60005b60ff16602082901c0192505050919050565b60008080806001600160a01b03808916908a1610158187128015906131245760006130d88989620f42400362ffffff16620f42406132d9565b9050826130f1576130ec8c8c8c6001614652565b6130fe565b6130fe8b8d8c60016146cd565b955085811061310f578a965061311e565b61311b8c8b838661478a565b96505b5061316e565b8161313b576131368b8b8b60006146cd565b613148565b6131488a8c8b6000614652565b935083886000031061315c5789955061316e565b61316b8b8a8a600003856147d6565b95505b6001600160a01b038a81169087161482156131d15780801561318d5750815b6131a35761319e878d8c60016146cd565b6131a5565b855b95508080156131b2575081155b6131c8576131c3878d8c6000614652565b6131ca565b845b945061321b565b8080156131db5750815b6131f1576131ec8c888c6001614652565b6131f3565b855b9550808015613200575081155b613216576132118c888c60006146cd565b613218565b845b94505b8115801561322b57508860000385115b15613237578860000394505b81801561325657508a6001600160a01b0316876001600160a01b031614155b15613265578589039350613282565b61327f868962ffffff168a620f42400362ffffff166141a9565b93505b50505095509550955095915050565b6000600160ff1b82106132a357600080fd5b5090565b808203828113156000831215146132bd57600080fd5b92915050565b818101828112156000831215146132bd57600080fd5b600080806000198587098686029250828110908390030390508061330f576000841161330457600080fd5b508290049050613382565b80841161331b57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b60008063ffffffff8716613430576000898661ffff1661ffff81106133aa57fe5b60408051608081018252919092015463ffffffff8082168084526401000000008304600690810b810b900b6020850152600160581b83046001600160a01b031694840194909452600160f81b90910460ff16151560608301529092508a161461341c57613419818a8988614822565b90505b806020015181604001519250925050613510565b8688036000806134458c8c858c8c8c8c6148d2565b91509150816000015163ffffffff168363ffffffff161415613477578160200151826040015194509450505050613510565b805163ffffffff8481169116141561349f578060200151816040015194509450505050613510565b8151815160208085015190840151918390039286039163ffffffff80841692908516910360060b816134cd57fe5b05028460200151018263ffffffff168263ffffffff1686604001518660400151036001600160a01b031602816134ff57fe5b048560400151019650965050505050505b97509795505050505050565b600295860b860b60009081526020979097526040909620600181018054909503909455938301805490920390915560038201805463ffffffff600160d81b6001600160a01b036701000000000000008085048216909603169094027fffffffffff0000000000000000000000000000000000000000ffffffffffffff90921691909117600681810b90960390950b66ffffffffffffff1666ffffffffffffff199095169490941782810485169095039093160263ffffffff60d81b1990931692909217905554600160801b9004600f0b90565b60008082600f0b121561365457826001600160801b03168260000384039150816001600160801b03161061364f576040805162461bcd60e51b81526020600482015260026024820152614c5360f01b604482015290519081900360640190fd5b6132bd565b826001600160801b03168284019150816001600160801b031610156132bd576040805162461bcd60e51b81526020600482015260026024820152614c4160f01b604482015290519081900360640190fd5b60006401000276a36001600160a01b038316108015906136e1575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b613716576040805162461bcd60e51b81526020600482015260016024820152602960f91b604482015290519081900360640190fd5b77ffffffffffffffffffffffffffffffffffffffff00000000602083901b166001600160801b03811160071b81811c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c979088119617909417909217179091171717608081106137b757607f810383901c91506137c1565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c670100000000000000161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b146139c257886001600160a01b03166139a682612d6d565b6001600160a01b031611156139bb57816139bd565b805b6139c4565b815b9998505050505050505050565b6000806000898961ffff1661ffff81106139e757fe5b60408051608081018252919092015463ffffffff8082168084526401000000008304600690810b810b900b6020850152600160581b83046001600160a01b031694840194909452600160f81b90910460ff161515606083015290925089161415613a575788859250925050613510565b8461ffff168461ffff16118015613a7857506001850361ffff168961ffff16145b15613a8557839150613a89565b8491505b8161ffff168960010161ffff1681613a9d57fe5b069250613aac81898989614822565b8a8461ffff1661ffff8110613abd57fe5b825191018054602084015160408501516060909501511515600160f81b027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6001600160a01b03909616600160581b027fff0000000000000000000000000000000000000000ffffffffffffffffffffff60069390930b66ffffffffffffff16640100000000026affffffffffffff000000001963ffffffff90971663ffffffff199095169490941795909516929092171692909217929092161790555097509795505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009485949389169392918291908083835b60208310613c025780518252601f199092019160209182019101613be3565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114613c64576040519150601f19603f3d011682016040523d82523d6000602084013e613c69565b606091505b5091509150818015613c97575080511580613c975750808060200190516020811015613c9457600080fd5b50515b613ccd576040805162461bcd60e51b81526020600482015260026024820152612a2360f11b604482015290519081900360640190fd5b5050505050565b604080513060248083019190915282518083039091018152604490910182526020810180516001600160e01b03166370a0823160e01b17815291518151600093849384936001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001693919290918291908083835b60208310613d6d5780518252601f199092019160209182019101613d4e565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114613dcd576040519150601f19603f3d011682016040523d82523d6000602084013e613dd2565b606091505b5091509150818015613de657506020815110155b613def57600080fd5b808060200190516020811015613e0457600080fd5b50519250505090565b808201828110156132bd57600080fd5b604080513060248083019190915282518083039091018152604490910182526020810180516001600160e01b03166370a0823160e01b17815291518151600093849384936001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016939192909182919080838360208310613d6d5780518252601f199092019160209182019101613d4e565b6000808361ffff1611613ef3576040805162461bcd60e51b81526020600482015260016024820152604960f81b604482015290519081900360640190fd5b8261ffff168261ffff1611613f09575081613382565b825b8261ffff168161ffff161015613f4f576001858261ffff1661ffff8110613f2e57fe5b01805463ffffffff191663ffffffff92909216919091179055600101613f0b565b50909392505050565b80600f81900b8114612beb57600080fd5b6000806000613f76612bf0565b613f88846020015185604001516143a1565b6040805160e0810182526000546001600160a01b0381168252600160a01b8104600290810b810b900b602080840182905261ffff600160b81b8404811685870152600160c81b84048116606080870191909152600160d81b8504909116608086015260ff600160e81b8504811660a0870152600160f01b909404909316151560c08501528851908901519489015192890151939461402c9491939092909190614acf565b93508460600151600f0b6000146141a157846020015160020b816020015160020b12156140815761407a6140638660200151612d6d565b6140708760400151612d6d565b8760600151614c84565b92506141a1565b846040015160020b816020015160020b12156141775760045460408201516001600160801b03909116906140d3906140b7612c27565b60208501516060860151608087015160089493929187916139d1565b6000805461ffff60c81b1916600160c81b61ffff938416021761ffff60b81b1916600160b81b939092169290920217905581516040870151614123919061411990612d6d565b8860600151614c84565b93506141416141358760200151612d6d565b83516060890151614cc8565b92506141518187606001516135ef565b600480546001600160801b0319166001600160801b0392909216919091179055506141a1565b61419e6141878660200151612d6d565b6141948760400151612d6d565b8760600151614cc8565b91505b509193909250565b60006141b68484846132d9565b9050600082806141c257fe5b84860911156133825760001981106141d957600080fd5b6001019392505050565b6040805160609490941b6bffffffffffffffffffffffff1916602080860191909152600293840b60e890811b60348701529290930b90911b60378401528051808403601a018152603a90930181528251928201929092206000908152929052902090565b60608060008361ffff1611614287576040805162461bcd60e51b81526020600482015260016024820152604960f81b604482015290519081900360640190fd5b865167ffffffffffffffff8111801561429f57600080fd5b506040519080825280602002602001820160405280156142c9578160200160208202803683370190505b509150865167ffffffffffffffff811180156142e457600080fd5b5060405190808252806020026020018201604052801561430e578160200160208202803683370190505b50905060005b87518110156143945761433f8a8a8a848151811061432e57fe5b60200260200101518a8a8a8a613389565b84838151811061434b57fe5b6020026020010184848151811061435e57fe5b60200260200101826001600160a01b03166001600160a01b03168152508260060b60060b81525050508080600101915050614314565b5097509795505050505050565b8060020b8260020b126143e1576040805162461bcd60e51b8152602060048201526003602482015262544c5560e81b604482015290519081900360640190fd5b620d89e719600283900b1215614424576040805162461bcd60e51b8152602060048201526003602482015262544c4d60e81b604482015290519081900360640190fd5b620d89e8600282900b1315614466576040805162461bcd60e51b815260206004820152600360248201526254554d60e81b604482015290519081900360640190fd5b5050565b6040805160808101825263ffffffff9283168082526000602083018190529282019290925260016060909101819052835463ffffffff1916909117909116600160f81b17909155908190565b60020b600881901d9161010090910790565b60008082116144d657600080fd5b600160801b82106144e957608091821c91015b68010000000000000000821061450157604091821c91015b640100000000821061451557602091821c91015b62010000821061452757601091821c91015b610100821061453857600891821c91015b6010821061454857600491821c91015b6004821061455857600291821c91015b60028210612beb57600101919050565b600080821161457657600080fd5b5060ff6001600160801b0382161561459157607f1901614599565b608082901c91505b67ffffffffffffffff8216156145b257603f19016145ba565b604082901c91505b63ffffffff8216156145cf57601f19016145d7565b602082901c91505b61ffff8216156145ea57600f19016145f2565b601082901c91505b60ff821615614604576007190161460c565b600882901c91505b600f82161561461e5760031901614626565b600482901c91505b60038216156146385760011901614640565b600282901c91505b6001821615612beb5760001901919050565b6000836001600160a01b0316856001600160a01b03161115614672579293925b8161469f5761469a836001600160801b03168686036001600160a01b0316600160601b6132d9565b6146c2565b6146c2836001600160801b03168686036001600160a01b0316600160601b6141a9565b90505b949350505050565b6000836001600160a01b0316856001600160a01b031611156146ed579293925b7bffffffffffffffffffffffffffffffff000000000000000000000000606084901b166001600160a01b03868603811690871661472957600080fd5b8361475957866001600160a01b031661474c8383896001600160a01b03166132d9565b8161475357fe5b0461477f565b61477f6147708383896001600160a01b03166141a9565b886001600160a01b0316614cf7565b979650505050505050565b600080856001600160a01b0316116147a157600080fd5b6000846001600160801b0316116147b757600080fd5b816147c95761469a8585856001614d02565b6146c28585856001614de3565b600080856001600160a01b0316116147ed57600080fd5b6000846001600160801b03161161480357600080fd5b816148155761469a8585856000614de3565b6146c28585856000614d02565b61482a61564a565b600085600001518503905060405180608001604052808663ffffffff1681526020018263ffffffff168660020b0288602001510160060b81526020016000856001600160801b03161161487e576001614880565b845b6001600160801b031673ffffffff00000000000000000000000000000000608085901b16816148ab57fe5b048860400151016001600160a01b0316815260200160011515815250915050949350505050565b6148da61564a565b6148e261564a565b888561ffff1661ffff81106148f357fe5b60408051608081018252919092015463ffffffff81168083526401000000008204600690810b810b900b6020840152600160581b82046001600160a01b031693830193909352600160f81b900460ff1615156060820152925061495890899089614ed8565b15614990578663ffffffff16826000015163ffffffff16141561497a57613510565b8161498783898988614822565b91509150613510565b888361ffff168660010161ffff16816149a557fe5b0661ffff1661ffff81106149b557fe5b60408051608081018252929091015463ffffffff811683526401000000008104600690810b810b900b60208401526001600160a01b03600160581b8204169183019190915260ff600160f81b90910416151560608201819052909250614a6c57604080516080810182528a5463ffffffff811682526401000000008104600690810b810b900b6020830152600160581b81046001600160a01b031692820192909252600160f81b90910460ff161515606082015291505b614a7b88836000015189614ed8565b614ab2576040805162461bcd60e51b815260206004820152600360248201526213d31160ea1b604482015290519081900360640190fd5b614abf8989898887614f9b565b9150915097509795505050505050565b6000614ade60078787876141e3565b60015460025491925090600080600f87900b15614c24576000614aff612c27565b6000805460045492935090918291614b499160089186918591600160a01b810460020b9161ffff600160b81b83048116926001600160801b0390921691600160c81b900416613389565b9092509050614b8360058d8b8d8b8b87898b60007f000000000000000000000000000000000000000000000000000000000000000061513b565b9450614bba60058c8b8d8b8b87898b60017f000000000000000000000000000000000000000000000000000000000000000061513b565b93508415614bee57614bee60068d7f0000000000000000000000000000000000000000000000000000000000000000615325565b8315614c2057614c2060068c7f0000000000000000000000000000000000000000000000000000000000000000615325565b5050505b600080614c3660058c8c8b8a8a61538b565b9092509050614c47878a8484615437565b600089600f0b1215614c75578315614c6457614c6460058c6155cc565b8215614c7557614c7560058b6155cc565b50505050505095945050505050565b60008082600f0b12614caa57614ca5614ca085858560016146cd565b613291565b6146c5565b614cbd614ca085858560000360006146cd565b600003949350505050565b60008082600f0b12614ce457614ca5614ca08585856001614652565b614cbd614ca08585856000036000614652565b808204910615150190565b60008115614d755760006001600160a01b03841115614d3857614d3384600160601b876001600160801b03166132d9565b614d50565b6001600160801b038516606085901b81614d4e57fe5b045b9050614d6d614d686001600160a01b03881683613e0d565b6155f8565b9150506146c5565b60006001600160a01b03841115614da357614d9e84600160601b876001600160801b03166141a9565b614dba565b614dba606085901b6001600160801b038716614cf7565b905080866001600160a01b031611614dd157600080fd5b6001600160a01b0386160390506146c5565b600082614df15750836146c5565b7bffffffffffffffffffffffffffffffff000000000000000000000000606085901b168215614e91576001600160a01b03861684810290858281614e3157fe5b041415614e6257818101828110614e6057614e5683896001600160a01b0316836141a9565b93505050506146c5565b505b614e8882614e83878a6001600160a01b03168681614e7c57fe5b0490613e0d565b614cf7565b925050506146c5565b6001600160a01b03861684810290858281614ea857fe5b04148015614eb557508082115b614ebe57600080fd5b808203614e56614d68846001600160a01b038b16846141a9565b60008363ffffffff168363ffffffff1611158015614f0257508363ffffffff168263ffffffff1611155b15614f1e578163ffffffff168363ffffffff1611159050613382565b60008463ffffffff168463ffffffff1611614f46578363ffffffff1664010000000001614f4e565b8363ffffffff165b64ffffffffff16905060008563ffffffff168463ffffffff1611614f7f578363ffffffff1664010000000001614f87565b8363ffffffff165b64ffffffffff169091111595945050505050565b614fa361564a565b614fab61564a565b60008361ffff168560010161ffff1681614fc157fe5b0661ffff169050600060018561ffff16830103905060005b506002818301048961ffff87168281614fee57fe5b0661ffff8110614ffa57fe5b60408051608081018252929091015463ffffffff811683526401000000008104600690810b810b900b60208401526001600160a01b03600160581b8204169183019190915260ff600160f81b9091041615156060820181905290955061506557806001019250614fd9565b898661ffff16826001018161507657fe5b0661ffff811061508257fe5b60408051608081018252929091015463ffffffff811683526401000000008104600690810b810b900b60208401526001600160a01b03600160581b8204169183019190915260ff600160f81b909104161515606082015285519094506000906150ed908b908b614ed8565b905080801561510657506151068a8a8760000151614ed8565b15615111575061512e565b8061512157600182039250615128565b8160010193505b50614fd9565b5050509550959350505050565b60028a810b900b600090815260208c90526040812080546001600160801b031682615166828d6135ef565b9050846001600160801b0316816001600160801b031611156151b4576040805162461bcd60e51b81526020600482015260026024820152614c4f60f01b604482015290519081900360640190fd5b6001600160801b03828116159082161581141594501561528a578c60020b8e60020b1361525a57600183018b9055600283018a90556003830180547fffffffffff0000000000000000000000000000000000000000ffffffffffffff166701000000000000006001600160a01b038c16021766ffffffffffffff191666ffffffffffffff60068b900b161763ffffffff60d81b1916600160d81b63ffffffff8a16021790555b6003830180547effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16600160f81b1790555b82546001600160801b0319166001600160801b038216178355856152d35782546152ce906152c990600160801b9004600f90810b810b908f900b6132c3565b613f58565b6152f4565b82546152f4906152c990600160801b9004600f90810b810b908f900b6132a7565b8354600f9190910b6001600160801b03908116600160801b0291161790925550909c9b505050505050505050505050565b8060020b8260020b8161533457fe5b0760020b1561534257600080fd5b60008061535d8360020b8560020b8161535757fe5b056144b6565b600191820b820b60009081526020979097526040909620805460ff9097169190911b90951890945550505050565b600285810b80820b60009081526020899052604080822088850b850b83529082209193849391929184918291908a900b126153d1575050600182015460028301546153e4565b8360010154880391508360020154870390505b6000808b60020b8b60020b121561540657505060018301546002840154615419565b84600101548a0391508460020154890390505b92909803979097039b96909503949094039850939650505050505050565b6040805160a08101825285546001600160801b0390811682526001870154602083015260028701549282019290925260038601548083166060830152600160801b900490911660808201526000600f85900b6154d65781516001600160801b03166154ce576040805162461bcd60e51b815260206004820152600260248201526104e560f41b604482015290519081900360640190fd5b5080516154e5565b81516154e290866135ef565b90505b60006155098360200151860384600001516001600160801b0316600160801b6132d9565b9050600061552f8460400151860385600001516001600160801b0316600160801b6132d9565b905086600f0b6000146155565787546001600160801b0319166001600160801b0384161788555b60018801869055600288018590556001600160801b03821615158061558457506000816001600160801b0316115b156155c2576003880180546001600160801b031981166001600160801b039182168501821617808216600160801b9182900483168501909216021790555b5050505050505050565b600290810b810b6000908152602092909252604082208281556001810183905590810182905560030155565b806001600160a01b0381168114612beb57600080fd5b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b6040805160808101825260008082526020820181905291810182905260608101919091529056fea164736f6c6343000706000aa164736f6c6343000706000a","linkReferences":{},"deployedLinkReferences":{}}') }, 6907: T => { "use strict"; T.exports = JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"NonfungiblePositionManager","sourceName":"contracts/NonfungiblePositionManager.sol","abi":[{"inputs":[{"internalType":"address","name":"_factory","type":"address"},{"internalType":"address","name":"_WETH9","type":"address"},{"internalType":"address","name":"_tokenDescriptor_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Collect","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"DecreaseLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"IncreaseLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WETH9","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount0Max","type":"uint128"},{"internalType":"uint128","name":"amount1Max","type":"uint128"}],"internalType":"struct INonfungiblePositionManager.CollectParams","name":"params","type":"tuple"}],"name":"collect","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"name":"createAndInitializePoolIfNecessary","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"amount0Min","type":"uint256"},{"internalType":"uint256","name":"amount1Min","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct INonfungiblePositionManager.DecreaseLiquidityParams","name":"params","type":"tuple"}],"name":"decreaseLiquidity","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount0Desired","type":"uint256"},{"internalType":"uint256","name":"amount1Desired","type":"uint256"},{"internalType":"uint256","name":"amount0Min","type":"uint256"},{"internalType":"uint256","name":"amount1Min","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct INonfungiblePositionManager.IncreaseLiquidityParams","name":"params","type":"tuple"}],"name":"increaseLiquidity","outputs":[{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint256","name":"amount0Desired","type":"uint256"},{"internalType":"uint256","name":"amount1Desired","type":"uint256"},{"internalType":"uint256","name":"amount0Min","type":"uint256"},{"internalType":"uint256","name":"amount1Min","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct INonfungiblePositionManager.MintParams","name":"params","type":"tuple"}],"name":"mint","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"positions","outputs":[{"internalType":"uint96","name":"nonce","type":"uint96"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"feeGrowthInside0LastX128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthInside1LastX128","type":"uint256"},{"internalType":"uint128","name":"tokensOwed0","type":"uint128"},{"internalType":"uint128","name":"tokensOwed1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"refundETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermitAllowed","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermitAllowedIfNecessary","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermitIfNecessary","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"sweepToken","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount0Owed","type":"uint256"},{"internalType":"uint256","name":"amount1Owed","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3MintCallback","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"unwrapWETH9","outputs":[],"stateMutability":"payable","type":"function"},{"stateMutability":"payable","type":"receive"}],"bytecode":"0x610120604052600d80546001600160b01b0319166001176001600160b01b0316600160b01b1790553480156200003457600080fd5b50604051620062e9380380620062e98339810160408190526200005791620002db565b82826040518060400160405280601b81526020017f556e697377617020563320506f736974696f6e73204e46542d563100000000008152506040518060400160405280600a815260200169554e492d56332d504f5360b01b815250604051806040016040528060018152602001603160f81b8152508282620000e66301ffc9a760e01b6200018d60201b60201c565b8151620000fb90600690602085019062000212565b5080516200011190600790602084019062000212565b50620001246380ac58cd60e01b6200018d565b62000136635b5e139f60e01b6200018d565b6200014863780e9d6360e01b6200018d565b50508251602093840120608052805192019190912060a052506001600160601b0319606092831b811660c05290821b811660e05291901b166101005250620003249050565b6001600160e01b03198082161415620001ed576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200024a576000855562000295565b82601f106200026557805160ff191683800117855562000295565b8280016001018555821562000295579182015b828111156200029557825182559160200191906001019062000278565b50620002a3929150620002a7565b5090565b5b80821115620002a35760008155600101620002a8565b80516001600160a01b0381168114620002d657600080fd5b919050565b600080600060608486031215620002f0578283fd5b620002fb84620002be565b92506200030b60208501620002be565b91506200031b60408501620002be565b90509250925092565b60805160a05160c05160601c60e05160601c6101005160601c615f40620003a960003980612a835250806102995280611718528061180e52806118965280613e5d5280613ea35280613f17525080610aa75280610dde5280610ea55280612a1d5280612b235280612e4452806136e15250806114ff5250806114de5250615f406000f3fe6080604052600436106102895760003560e01c80636352211e11610153578063ac9650d8116100cb578063d34879971161007f578063e985e9c511610064578063e985e9c5146106f5578063f3995c6714610715578063fc6f7865146107285761030d565b8063d3487997146106c2578063df2ab5bb146106e25761030d565b8063c2e3140a116100b0578063c2e3140a1461067a578063c45a01551461068d578063c87b56dd146106a25761030d565b8063ac9650d81461063a578063b88d4fde1461065a5761030d565b8063883164561161012257806399fbab881161010757806399fbab88146105cf578063a22cb46514610607578063a4a78f0c146106275761030d565b8063883164561461059757806395d89b41146105ba5761030d565b80636352211e1461052f5780636c0360eb1461054f57806370a08231146105645780637ac2ff7b146105845761030d565b806323b872dd1161020157806342966c68116101b557806349404b7c1161019a57806349404b7c146104e75780634aa4a4fc146104fa5780634f6ccce71461050f5761030d565b806342966c68146104c15780634659a494146104d45761030d565b806330adf81f116101e657806330adf81f146104775780633644e5151461048c57806342842e0e146104a15761030d565b806323b872dd146104375780632f745c59146104575761030d565b80630c49ccbe1161025857806313ead5621161023d57806313ead562146103e057806318160ddd146103f3578063219f5d17146104155761030d565b80630c49ccbe146103b757806312210e8a146103d85761030d565b806301ffc9a71461031257806306fdde0314610348578063081812fc1461036a578063095ea7b3146103975761030d565b3661030d57336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461030b576040805162461bcd60e51b815260206004820152600960248201527f4e6f742057455448390000000000000000000000000000000000000000000000604482015290519081900360640190fd5b005b600080fd5b34801561031e57600080fd5b5061033261032d3660046153a6565b61073b565b60405161033f919061591e565b60405180910390f35b34801561035457600080fd5b5061035d610776565b60405161033f9190615971565b34801561037657600080fd5b5061038a6103853660046156b8565b61080c565b60405161033f91906157e2565b3480156103a357600080fd5b5061030b6103b2366004615270565b610868565b6103ca6103c5366004615483565b61093e565b60405161033f929190615b42565b61030b610daa565b61038a6103ee366004615103565b610dbc565b3480156103ff57600080fd5b506104086110c9565b60405161033f9190615929565b610428610423366004615494565b6110da565b60405161033f93929190615afd565b34801561044357600080fd5b5061030b61045236600461515c565b611413565b34801561046357600080fd5b50610408610472366004615270565b61146a565b34801561048357600080fd5b50610408611495565b34801561049857600080fd5b506104086114b9565b3480156104ad57600080fd5b5061030b6104bc36600461515c565b611577565b61030b6104cf3660046156b8565b611592565b61030b6104e23660046152dc565b611661565b61030b6104f53660046156d0565b611714565b34801561050657600080fd5b5061038a611894565b34801561051b57600080fd5b5061040861052a3660046156b8565b6118b8565b34801561053b57600080fd5b5061038a61054a3660046156b8565b6118ce565b34801561055b57600080fd5b5061035d6118f6565b34801561057057600080fd5b5061040861057f3660046150af565b6118fb565b61030b6105923660046152dc565b611963565b6105aa6105a5366004615550565b611e0f565b60405161033f9493929190615b1e565b3480156105c657600080fd5b5061035d612370565b3480156105db57600080fd5b506105ef6105ea3660046156b8565b6123d1565b60405161033f9c9b9a99989796959493929190615b50565b34801561061357600080fd5b5061030b610622366004615243565b612600565b61030b6106353660046152dc565b612723565b61064d610648366004615337565b6127d5565b60405161033f91906158a0565b34801561066657600080fd5b5061030b61067536600461519c565b612915565b61030b6106883660046152dc565b612973565b34801561069957600080fd5b5061038a612a1b565b3480156106ae57600080fd5b5061035d6106bd3660046156b8565b612a3f565b3480156106ce57600080fd5b5061030b6106dd366004615717565b612b0e565b61030b6106f036600461529b565b612b8c565b34801561070157600080fd5b506103326107103660046150cb565b612c6f565b61030b6107233660046152dc565b612c9d565b6103ca61073636600461546c565b612d28565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081526020819052604090205460ff165b919050565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108025780601f106107d757610100808354040283529160200191610802565b820191906000526020600020905b8154815290600101906020018083116107e557829003601f168201915b5050505050905090565b600061081782613246565b61083c5760405162461bcd60e51b8152600401610833906159bb565b60405180910390fd5b506000908152600c60205260409020546c0100000000000000000000000090046001600160a01b031690565b6000610873826118ce565b9050806001600160a01b0316836001600160a01b031614156108c65760405162461bcd60e51b8152600401808060200182810382526021815260200180615ee26021913960400191505060405180910390fd5b806001600160a01b03166108d8613253565b6001600160a01b031614806108f457506108f481610710613253565b61092f5760405162461bcd60e51b8152600401808060200182810382526038815260200180615e0c6038913960400191505060405180910390fd5b6109398383613257565b505050565b600080823561094d33826132db565b6109695760405162461bcd60e51b815260040161083390615984565b836080013580610977613377565b11156109ca576040805162461bcd60e51b815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b60006109dc6040870160208801615562565b6001600160801b0316116109ef57600080fd5b84356000908152600c602090815260409182902060018101549092600160801b9091046001600160801b031691610a2a918901908901615562565b6001600160801b0316816001600160801b03161015610a4857600080fd5b60018281015469ffffffffffffffffffff166000908152600b60209081526040808320815160608101835281546001600160a01b039081168252919095015490811692850192909252600160a01b90910462ffffff1690830152610acc7f00000000000000000000000000000000000000000000000000000000000000008361337b565b60018501549091506001600160a01b0382169063a34123a7906a01000000000000000000008104600290810b91600160681b9004900b610b1260408e0160208f01615562565b6040518463ffffffff1660e01b8152600401610b309392919061594b565b6040805180830381600087803b158015610b4957600080fd5b505af1158015610b5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8191906156f4565b909850965060408901358810801590610b9e575088606001358710155b610bba5760405162461bcd60e51b815260040161083390615a18565b6001840154600090610bea9030906a01000000000000000000008104600290810b91600160681b9004900b613477565b9050600080836001600160a01b031663514ea4bf846040518263ffffffff1660e01b8152600401610c1b9190615929565b60a06040518083038186803b158015610c3357600080fd5b505afa158015610c47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6b91906155ac565b50509250925050610c9087600201548303876001600160801b0316600160801b6134d1565b6004880180546fffffffffffffffffffffffffffffffff198116928e016001600160801b039182160181169290921790556003880154610cda91908303908816600160801b6134d1565b6004880180546001600160801b03808216938e01600160801b9283900482160116029190911790556002870182905560038701819055610d2060408d0160208e01615562565b86038760010160106101000a8154816001600160801b0302191690836001600160801b031602179055508b600001357f26f6a048ee9138f2c0ce266f322cb99228e8d619ae2bff30c67f8dcf9d2377b48d6020016020810190610d839190615562565b8d8d604051610d9493929190615afd565b60405180910390a2505050505050505050915091565b4715610dba57610dba3347613580565b565b6000836001600160a01b0316856001600160a01b031610610ddc57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631698ee828686866040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018262ffffff168152602001935050505060206040518083038186803b158015610e6757600080fd5b505afa158015610e7b573d6000803e3d6000fd5b505050506040513d6020811015610e9157600080fd5b505190506001600160a01b038116610fe0577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a16712958686866040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018262ffffff1681526020019350505050602060405180830381600087803b158015610f3057600080fd5b505af1158015610f44573d6000803e3d6000fd5b505050506040513d6020811015610f5a57600080fd5b5051604080517ff637731d0000000000000000000000000000000000000000000000000000000081526001600160a01b03858116600483015291519293509083169163f637731d9160248082019260009290919082900301818387803b158015610fc357600080fd5b505af1158015610fd7573d6000803e3d6000fd5b505050506110c1565b6000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561101b57600080fd5b505afa15801561102f573d6000803e3d6000fd5b505050506040513d60e081101561104557600080fd5b505190506001600160a01b0381166110bf57816001600160a01b031663f637731d846040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b1580156110a657600080fd5b505af11580156110ba573d6000803e3d6000fd5b505050505b505b949350505050565b60006110d56002613689565b905090565b60008060008360a00135806110ed613377565b1115611140576040805162461bcd60e51b815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b84356000908152600c6020908152604080832060018082015469ffffffffffffffffffff81168652600b855283862084516060808201875282546001600160a01b039081168352929094015480831682890190815262ffffff600160a01b9092048216838901908152885161014081018a528451861681529151909416818a01529251168287015230828501526a01000000000000000000008304600290810b810b608080850191909152600160681b909404810b900b60a0830152958c013560c0820152938b013560e0850152908a0135610100840152890135610120830152929061122c90613694565b6001870154939a50919850965091506000906112669030906a01000000000000000000008104600290810b91600160681b9004900b613477565b9050600080836001600160a01b031663514ea4bf846040518263ffffffff1660e01b81526004016112979190615929565b60a06040518083038186803b1580156112af57600080fd5b505afa1580156112c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e791906155ac565b50509250925050611323866002015483038760010160109054906101000a90046001600160801b03166001600160801b0316600160801b6134d1565b6004870180546001600160801b0380821690930183166fffffffffffffffffffffffffffffffff19909116179055600387015460018801546113739291840391600160801b9182900416906134d1565b6004870180546001600160801b03600160801b80830482169094018116840291811691909117909155600288018490556003880183905560018801805483810483168e018316909302929091169190911790556040518b35907f3067048beee31b25b2f1681f88dac838c8bba36af25bfb2b7cf7473a5847e35f906113fd908d908d908d90615afd565b60405180910390a2505050505050509193909250565b61142461141e613253565b826132db565b61145f5760405162461bcd60e51b8152600401808060200182810382526031815260200180615f036031913960400191505060405180910390fd5b6109398383836138cf565b6001600160a01b038216600090815260016020526040812061148c9083613a1b565b90505b92915050565b7f49ecf333e5b8c95c40fdafc95c1ad136e8914a8fb55e9dc8bb01eaa83a2df9ad81565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611526613a27565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b031681526020019550505050505060405160208183030381529060405280519060200120905090565b61093983838360405180602001604052806000815250612915565b8061159d33826132db565b6115b95760405162461bcd60e51b815260040161083390615984565b6000828152600c602052604090206001810154600160801b90046001600160801b03161580156115f4575060048101546001600160801b0316155b801561161257506004810154600160801b90046001600160801b0316155b61162e5760405162461bcd60e51b815260040161083390615a86565b6000838152600c602052604081208181556001810182905560028101829055600381018290556004015561093983613a2b565b604080517f8fcbaf0c00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101879052606481018690526001608482015260ff851660a482015260c4810184905260e4810183905290516001600160a01b03881691638fcbaf0c9161010480830192600092919082900301818387803b1580156116f457600080fd5b505af1158015611708573d6000803e3d6000fd5b50505050505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561178357600080fd5b505afa158015611797573d6000803e3d6000fd5b505050506040513d60208110156117ad57600080fd5b5051905082811015611806576040805162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742057455448390000000000000000000000000000604482015290519081900360640190fd5b8015610939577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561187257600080fd5b505af1158015611886573d6000803e3d6000fd5b505050506109398282613580565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806118c6600284613af8565b509392505050565b600061148f82604051806060016040528060298152602001615e6e6029913960029190613b16565b606090565b60006001600160a01b0382166119425760405162461bcd60e51b815260040180806020018281038252602a815260200180615e44602a913960400191505060405180910390fd5b6001600160a01b038216600090815260016020526040902061148f90613689565b8361196c613377565b11156119bf576040805162461bcd60e51b815260206004820152600e60248201527f5065726d69742065787069726564000000000000000000000000000000000000604482015290519081900360640190fd5b60006119c96114b9565b7f49ecf333e5b8c95c40fdafc95c1ad136e8914a8fb55e9dc8bb01eaa83a2df9ad88886119f581613b23565b604080516020808201969096526001600160a01b03909416848201526060840192909252608083015260a08083018a90528151808403909101815260c0830182528051908401207f190100000000000000000000000000000000000000000000000000000000000060e084015260e283019490945261010280830194909452805180830390940184526101229091019052815191012090506000611a98876118ce565b9050806001600160a01b0316886001600160a01b03161415611aeb5760405162461bcd60e51b8152600401808060200182810382526027815260200180615d6f6027913960400191505060405180910390fd5b611af481613b62565b15611ccf576040805160208082018790528183018690527fff0000000000000000000000000000000000000000000000000000000000000060f889901b16606083015282516041818403018152606183018085527f1626ba7e0000000000000000000000000000000000000000000000000000000090526065830186815260858401948552815160a585015281516001600160a01b03871695631626ba7e958995919260c59091019185019080838360005b83811015611bbe578181015183820152602001611ba6565b50505050905090810190601f168015611beb5780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b158015611c0957600080fd5b505afa158015611c1d573d6000803e3d6000fd5b505050506040513d6020811015611c3357600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f1626ba7e0000000000000000000000000000000000000000000000000000000014611cca576040805162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a65640000000000000000000000000000000000000000604482015290519081900360640190fd5b611dfb565b600060018387878760405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611d2b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611d93576040805162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e6174757265000000000000000000000000000000604482015290519081900360640190fd5b816001600160a01b0316816001600160a01b031614611df9576040805162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a65640000000000000000000000000000000000000000604482015290519081900360640190fd5b505b611e058888613257565b5050505050505050565b60008060008084610140013580611e24613377565b1115611e77576040805162461bcd60e51b815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b604080516101408101909152600090611f439080611e9860208b018b6150af565b6001600160a01b03168152602001896020016020810190611eb991906150af565b6001600160a01b03168152602001611ed760608b0160408c0161569e565b62ffffff168152306020820152604001611ef760808b0160608c016153e6565b60020b8152602001611f0f60a08b0160808c016153e6565b60020b81526020018960a0013581526020018960c0013581526020018960e001358152602001896101000135815250613694565b92975090955093509050611fb7611f6261014089016101208a016150af565b600d80547fffffffffffffffffffff000000000000000000000000000000000000000000008116600175ffffffffffffffffffffffffffffffffffffffffffff92831690810190921617909155975087613b68565b6000611fe230611fcd60808b0160608c016153e6565b611fdd60a08c0160808d016153e6565b613477565b9050600080836001600160a01b031663514ea4bf846040518263ffffffff1660e01b81526004016120139190615929565b60a06040518083038186803b15801561202b57600080fd5b505afa15801561203f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061206391906155ac565b5050925092505060006120dc8560405180606001604052808e600001602081019061208e91906150af565b6001600160a01b031681526020018e60200160208101906120af91906150af565b6001600160a01b031681526020018e60400160208101906120d0919061569e565b62ffffff169052613c96565b905060405180610140016040528060006bffffffffffffffffffffffff16815260200160006001600160a01b031681526020018269ffffffffffffffffffff1681526020018c606001602081019061213491906153e6565b60020b815260200161214c60a08e0160808f016153e6565b60020b81526020018a6001600160801b0316815260200184815260200183815260200160006001600160801b0316815260200160006001600160801b0316815250600c60008c815260200190815260200160002060008201518160000160006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550602082015181600001600c6101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160006101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff160217905550606082015181600101600a6101000a81548162ffffff021916908360020b62ffffff160217905550608082015181600101600d6101000a81548162ffffff021916908360020b62ffffff16021790555060a08201518160010160106101000a8154816001600160801b0302191690836001600160801b0316021790555060c0820151816002015560e082015181600301556101008201518160040160006101000a8154816001600160801b0302191690836001600160801b031602179055506101208201518160040160106101000a8154816001600160801b0302191690836001600160801b03160217905550905050897f3067048beee31b25b2f1681f88dac838c8bba36af25bfb2b7cf7473a5847e35f8a8a8a60405161235b93929190615afd565b60405180910390a25050505050509193509193565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108025780601f106107d757610100808354040283529160200191610802565b6000818152600c6020908152604080832081516101408101835281546bffffffffffffffffffffffff811682526001600160a01b036c010000000000000000000000009091041693810193909352600181015469ffffffffffffffffffff81169284018390526a01000000000000000000008104600290810b810b810b6060860152600160681b8204810b810b810b60808601526001600160801b03600160801b92839004811660a08701529083015460c0860152600383015460e0860152600490920154808316610100860152041661012083015282918291829182918291829182918291829182918291906124da5760405162461bcd60e51b815260040161083390615a4f565b6000600b6000836040015169ffffffffffffffffffff1669ffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160149054906101000a900462ffffff1662ffffff1662ffffff1681525050905081600001518260200151826000015183602001518460400151866060015187608001518860a001518960c001518a60e001518b61010001518c61012001519d509d509d509d509d509d509d509d509d509d509d509d50505091939597999b5091939597999b565b612608613253565b6001600160a01b0316826001600160a01b0316141561266e576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b806005600061267b613253565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016921515929092179091556126dd613253565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b604080517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523360048201523060248201529051600019916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b15801561278d57600080fd5b505afa1580156127a1573d6000803e3d6000fd5b505050506040513d60208110156127b757600080fd5b505110156127cd576127cd868686868686611661565b505050505050565b60608167ffffffffffffffff811180156127ee57600080fd5b5060405190808252806020026020018201604052801561282257816020015b606081526020019060019003908161280d5790505b50905060005b8281101561290e576000803086868581811061284057fe5b90506020028101906128529190615bef565b6040516128609291906157d2565b600060405180830381855af49150503d806000811461289b576040519150601f19603f3d011682016040523d82523d6000602084013e6128a0565b606091505b5091509150816128ec576044815110156128b957600080fd5b600481019050808060200190518101906128d39190615402565b60405162461bcd60e51b81526004016108339190615971565b808484815181106128f957fe5b60209081029190910101525050600101612828565b5092915050565b612926612920613253565b836132db565b6129615760405162461bcd60e51b8152600401808060200182810382526031815260200180615f036031913960400191505060405180910390fd5b61296d84848484613de6565b50505050565b604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152336004820152306024820152905186916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b1580156129db57600080fd5b505afa1580156129ef573d6000803e3d6000fd5b505050506040513d6020811015612a0557600080fd5b505110156127cd576127cd868686868686612c9d565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060612a4a82613246565b612a5357600080fd5b6040517fe9dc63750000000000000000000000000000000000000000000000000000000081526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e9dc637590612aba9030908690600401615932565b60006040518083038186803b158015612ad257600080fd5b505afa158015612ae6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261148f9190810190615402565b6000612b1c828401846154a5565b9050612b4c7f00000000000000000000000000000000000000000000000000000000000000008260000151613e38565b508415612b67578051516020820151612b6791903388613e5b565b8315612b8557612b8581600001516020015182602001513387613e5b565b5050505050565b6000836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015612bdb57600080fd5b505afa158015612bef573d6000803e3d6000fd5b505050506040513d6020811015612c0557600080fd5b5051905082811015612c5e576040805162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e7420746f6b656e0000000000000000000000000000604482015290519081900360640190fd5b801561296d5761296d848383613feb565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b604080517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c4810183905290516001600160a01b0388169163d505accf9160e480830192600092919082900301818387803b1580156116f457600080fd5b6000808235612d3733826132db565b612d535760405162461bcd60e51b815260040161083390615984565b6000612d656060860160408701615562565b6001600160801b03161180612d9257506000612d876080860160608701615562565b6001600160801b0316115b612d9b57600080fd5b600080612dae60408701602088016150af565b6001600160a01b031614612dd157612dcc60408601602087016150af565b612dd3565b305b85356000908152600c6020908152604080832060018082015469ffffffffffffffffffff168552600b8452828520835160608101855281546001600160a01b039081168252919092015490811694820194909452600160a01b90930462ffffff169183019190915292935090612e697f00000000000000000000000000000000000000000000000000000000000000008361337b565b600484015460018501549192506001600160801b0380821692600160801b92839004821692900416156130865760018501546040517fa34123a70000000000000000000000000000000000000000000000000000000081526001600160a01b0385169163a34123a791612f00916a01000000000000000000008104600290810b92600160681b909204900b9060009060040161594b565b6040805180830381600087803b158015612f1957600080fd5b505af1158015612f2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f5191906156f4565b5050600185015460009081906001600160a01b0386169063514ea4bf90612f969030906a01000000000000000000008104600290810b91600160681b9004900b613477565b6040518263ffffffff1660e01b8152600401612fb29190615929565b60a06040518083038186803b158015612fca57600080fd5b505afa158015612fde573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061300291906155ac565b5050925092505061303e876002015483038860010160109054906101000a90046001600160801b03166001600160801b0316600160801b6134d1565b84019350613077876003015482038860010160109054906101000a90046001600160801b03166001600160801b0316600160801b6134d1565b60028801929092556003870155015b6000806001600160801b0384166130a360608e0160408f01615562565b6001600160801b0316116130c6576130c160608d0160408e01615562565b6130c8565b835b836001600160801b03168d60600160208101906130e59190615562565b6001600160801b0316116131085761310360808e0160608f01615562565b61310a565b835b60018901546040517f4f1eb3d80000000000000000000000000000000000000000000000000000000081529294509092506001600160a01b03871691634f1eb3d89161317d918c916a01000000000000000000008104600290810b92600160681b909204900b9088908890600401615839565b6040805180830381600087803b15801561319657600080fd5b505af11580156131aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131ce919061557e565b6004890180546fffffffffffffffffffffffffffffffff196001600160801b03918216600160801b878a0384160217168689038216179091556040519281169d50169a508c35907f40d0efd1a53d60ecbf40971b9daf7dc90178c3aadc7aab1765632738fa8b8f0190610d94908b9086908690615876565b600061148f60028361417b565b3390565b6000818152600c6020526040902080546bffffffffffffffffffffffff166c010000000000000000000000006001600160a01b0385169081029190911790915581906132a2826118ce565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006132e682613246565b6133215760405162461bcd60e51b815260040180806020018281038252602c815260200180615de0602c913960400191505060405180910390fd5b600061332c836118ce565b9050806001600160a01b0316846001600160a01b031614806133675750836001600160a01b031661335c8461080c565b6001600160a01b0316145b806110c157506110c18185612c6f565b4290565b600081602001516001600160a01b031682600001516001600160a01b0316106133a357600080fd5b50805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b6bffffffffffffffffffffffff191660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b604080516bffffffffffffffffffffffff19606086901b16602080830191909152600285810b60e890811b60348501529085900b901b60378301528251601a818403018152603a90920190925280519101205b9392505050565b600080806000198587098686029250828110908390030390508061350757600084116134fc57600080fd5b5082900490506134ca565b80841161351357600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b604080516000808252602082019092526001600160a01b0384169083906040518082805190602001908083835b602083106135cc5780518252601f1990920191602091820191016135ad565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461362e576040519150601f19603f3d011682016040523d82523d6000602084013e613633565b606091505b5050905080610939576040805162461bcd60e51b815260206004820152600360248201527f5354450000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600061148f82614187565b6000806000806000604051806060016040528087600001516001600160a01b0316815260200187602001516001600160a01b03168152602001876040015162ffffff1681525090506137067f00000000000000000000000000000000000000000000000000000000000000008261337b565b91506000826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561374357600080fd5b505afa158015613757573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061377b919061560d565b50505050505090506000613792886080015161418b565b905060006137a38960a0015161418b565b90506137ba8383838c60c001518d60e001516144d9565b9750505050816001600160a01b0316633c8a7d8d876060015188608001518960a00151896040518060400160405280888152602001336001600160a01b031681525060405160200161380c9190615abd565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161383b9594939291906157f6565b6040805180830381600087803b15801561385457600080fd5b505af1158015613868573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061388c91906156f4565b610100880151919550935084108015906138ab57508561012001518310155b6138c75760405162461bcd60e51b815260040161083390615a18565b509193509193565b826001600160a01b03166138e2826118ce565b6001600160a01b0316146139275760405162461bcd60e51b8152600401808060200182810382526029815260200180615eb96029913960400191505060405180910390fd5b6001600160a01b03821661396c5760405162461bcd60e51b8152600401808060200182810382526024815260200180615d966024913960400191505060405180910390fd5b613977838383610939565b613982600082613257565b6001600160a01b03831660009081526001602052604090206139a4908261459d565b506001600160a01b03821660009081526001602052604090206139c790826145a9565b506139d4600282846145b5565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061148c83836145cb565b4690565b6000613a36826118ce565b9050613a4481600084610939565b613a4f600083613257565b6000828152600860205260409020546002600019610100600184161502019091160415613a8d576000828152600860205260408120613a8d9161501f565b6001600160a01b0381166000908152600160205260409020613aaf908361459d565b50613abb60028361462f565b5060405182906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000808080613b07868661463b565b909450925050505b9250929050565b60006110c18484846146b6565b6000908152600c6020526040902080546bffffffffffffffffffffffff19811660016bffffffffffffffffffffffff9283169081019092161790915590565b3b151590565b6001600160a01b038216613bc3576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b613bcc81613246565b15613c1e576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b613c2a60008383610939565b6001600160a01b0382166000908152600160205260409020613c4c90826145a9565b50613c59600282846145b5565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160a01b0382166000908152600a602052604090205469ffffffffffffffffffff168061148f5750600d8054600169ffffffffffffffffffff76010000000000000000000000000000000000000000000080840482168381019092160275ffffffffffffffffffffffffffffffffffffffffffff909316929092179092556001600160a01b038085166000908152600a6020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffff000000000000000000001686179055848352600b825291829020865181549085167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617825591870151950180549287015162ffffff16600160a01b027fffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffff969094169290911691909117939093161790915592915050565b613df18484846138cf565b613dfd84848484614780565b61296d5760405162461bcd60e51b8152600401808060200182810382526032815260200180615d3d6032913960400191505060405180910390fd5b6000613e44838361337b565b9050336001600160a01b0382161461148f57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316148015613e9c5750804710155b15613fbe577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015613efc57600080fd5b505af1158015613f10573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015613f8c57600080fd5b505af1158015613fa0573d6000803e3d6000fd5b505050506040513d6020811015613fb657600080fd5b5061296d9050565b6001600160a01b038316301415613fdf57613fda848383613feb565b61296d565b61296d8484848461495c565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b602083106140955780518252601f199092019160209182019101614076565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146140f7576040519150601f19603f3d011682016040523d82523d6000602084013e6140fc565b606091505b509150915081801561412a57508051158061412a575080806020019051602081101561412757600080fd5b50515b612b85576040805162461bcd60e51b815260206004820152600260248201527f5354000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600061148c8383614af4565b5490565b60008060008360020b126141a2578260020b6141aa565b8260020b6000035b9050620d89e8811115614204576040805162461bcd60e51b815260206004820152600160248201527f5400000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60006001821661421857600160801b61422a565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600282161561425e576ffff97272373d413259a46990580e213a0260801c5b600482161561427d576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561429c576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156142bb576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156142da576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156142f9576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615614318576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615614338576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615614358576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615614378576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615614398576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156143b8576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156143d8576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156143f8576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615614418576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615614439576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615614459576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615614478576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615614495576b048a170391f7dc42444e8fa20260801c5b60008460020b13156144b05780600019816144ac57fe5b0490505b6401000000008106156144c45760016144c7565b60005b60ff16602082901c0192505050919050565b6000836001600160a01b0316856001600160a01b031611156144f9579293925b846001600160a01b0316866001600160a01b0316116145245761451d858585614b0c565b9050614594565b836001600160a01b0316866001600160a01b0316101561458657600061454b878686614b0c565b9050600061455a878986614b78565b9050806001600160801b0316826001600160801b03161061457b578061457d565b815b92505050614594565b614591858584614b78565b90505b95945050505050565b600061148c8383614bbe565b600061148c8383614c84565b60006110c184846001600160a01b038516614cce565b8154600090821061460d5760405162461bcd60e51b8152600401808060200182810382526022815260200180615d1b6022913960400191505060405180910390fd5b82600001828154811061461c57fe5b9060005260206000200154905092915050565b600061148c8383614d65565b81546000908190831061467f5760405162461bcd60e51b8152600401808060200182810382526022815260200180615e976022913960400191505060405180910390fd5b600084600001848154811061469057fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816147515760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156147165781810151838201526020016146fe565b50505050905090810190601f1680156147435780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5084600001600182038154811061476457fe5b9060005260206000209060020201600101549150509392505050565b6000614794846001600160a01b0316613b62565b6147a0575060016110c1565b60006148f17f150b7a02000000000000000000000000000000000000000000000000000000006147ce613253565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561483557818101518382015260200161481d565b50505050905090810190601f1680156148625780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051806060016040528060328152602001615d3d603291396001600160a01b0388169190614e39565b9050600081806020019051602081101561490a57600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a02000000000000000000000000000000000000000000000000000000001492505050949350505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000178152925182516000948594938a169392918291908083835b60208310614a0e5780518252601f1990920191602091820191016149ef565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114614a70576040519150601f19603f3d011682016040523d82523d6000602084013e614a75565b606091505b5091509150818015614aa3575080511580614aa35750808060200190516020811015614aa057600080fd5b50515b6127cd576040805162461bcd60e51b815260206004820152600360248201527f5354460000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60009081526001919091016020526040902054151590565b6000826001600160a01b0316846001600160a01b03161115614b2c579192915b6000614b58856001600160a01b0316856001600160a01b03166c010000000000000000000000006134d1565b9050614594614b7384838888036001600160a01b03166134d1565b614e48565b6000826001600160a01b0316846001600160a01b03161115614b98579192915b6110c1614b73836c010000000000000000000000008787036001600160a01b03166134d1565b60008181526001830160205260408120548015614c7a5783546000198083019190810190600090879083908110614bf157fe5b9060005260206000200154905080876000018481548110614c0e57fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080614c3e57fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061148f565b600091505061148f565b6000614c908383614af4565b614cc65750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561148f565b50600061148f565b600082815260018401602052604081205480614d335750506040805180820182528381526020808201848152865460018181018955600089815284812095516002909302909501918255915190820155865486845281880190925292909120556134ca565b82856000016001830381548110614d4657fe5b90600052602060002090600202016001018190555060009150506134ca565b60008181526001830160205260408120548015614c7a5783546000198083019190810190600090879083908110614d9857fe5b9060005260206000209060020201905080876000018481548110614db857fe5b600091825260208083208454600290930201918255600193840154918401919091558354825289830190526040902090840190558654879080614df757fe5b600082815260208082206002600019909401938402018281556001908101839055929093558881528982019092526040822091909155945061148f9350505050565b60606110c18484600085614e5e565b806001600160801b038116811461077157600080fd5b606082471015614e9f5760405162461bcd60e51b8152600401808060200182810382526026815260200180615dba6026913960400191505060405180910390fd5b614ea885613b62565b614ef9576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310614f375780518252601f199092019160209182019101614f18565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114614f99576040519150601f19603f3d011682016040523d82523d6000602084013e614f9e565b606091505b5091509150614fae828286614fb9565b979650505050505050565b60608315614fc85750816134ca565b825115614fd85782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156147165781810151838201526020016146fe565b50805460018160011615610100020316600290046000825580601f106150455750615063565b601f0160209004906000526020600020908101906150639190615066565b50565b5b8082111561507b5760008155600101615067565b5090565b803561077181615cc4565b805161ffff8116811461077157600080fd5b803562ffffff8116811461077157600080fd5b6000602082840312156150c0578081fd5b81356134ca81615cc4565b600080604083850312156150dd578081fd5b82356150e881615cc4565b915060208301356150f881615cc4565b809150509250929050565b60008060008060808587031215615118578182fd5b843561512381615cc4565b9350602085013561513381615cc4565b92506151416040860161509c565b9150606085013561515181615cc4565b939692955090935050565b600080600060608486031215615170578081fd5b833561517b81615cc4565b9250602084013561518b81615cc4565b929592945050506040919091013590565b600080600080608085870312156151b1578182fd5b84356151bc81615cc4565b935060208501356151cc81615cc4565b925060408501359150606085013567ffffffffffffffff8111156151ee578182fd5b8501601f810187136151fe578182fd5b803561521161520c82615c76565b615c52565b818152886020838501011115615225578384fd5b81602084016020830137908101602001929092525092959194509250565b60008060408385031215615255578182fd5b823561526081615cc4565b915060208301356150f881615cd9565b60008060408385031215615282578182fd5b823561528d81615cc4565b946020939093013593505050565b6000806000606084860312156152af578081fd5b83356152ba81615cc4565b92506020840135915060408401356152d181615cc4565b809150509250925092565b60008060008060008060c087890312156152f4578384fd5b86356152ff81615cc4565b95506020870135945060408701359350606087013561531d81615d0b565b9598949750929560808101359460a0909101359350915050565b60008060208385031215615349578182fd5b823567ffffffffffffffff80821115615360578384fd5b818501915085601f830112615373578384fd5b813581811115615381578485fd5b8660208083028501011115615394578485fd5b60209290920196919550909350505050565b6000602082840312156153b7578081fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146134ca578182fd5b6000602082840312156153f7578081fd5b81356134ca81615ce7565b600060208284031215615413578081fd5b815167ffffffffffffffff811115615429578182fd5b8201601f81018413615439578182fd5b805161544761520c82615c76565b81815285602083850101111561545b578384fd5b614594826020830160208601615c98565b60006080828403121561547d578081fd5b50919050565b600060a0828403121561547d578081fd5b600060c0828403121561547d578081fd5b600081830360808112156154b7578182fd5b6040516040810167ffffffffffffffff82821081831117156154d557fe5b8160405260608412156154e6578485fd5b60a08301935081841081851117156154fa57fe5b50826040528435925061550c83615cc4565b91825260208401359161551e83615cc4565b8260608301526155306040860161509c565b608083015281526155436060850161507f565b6020820152949350505050565b6000610160828403121561547d578081fd5b600060208284031215615573578081fd5b81356134ca81615cf6565b60008060408385031215615590578182fd5b825161559b81615cf6565b60208401519092506150f881615cf6565b600080600080600060a086880312156155c3578283fd5b85516155ce81615cf6565b80955050602086015193506040860151925060608601516155ee81615cf6565b60808701519092506155ff81615cf6565b809150509295509295909350565b600080600080600080600060e0888a031215615627578485fd5b875161563281615cc4565b602089015190975061564381615ce7565b95506156516040890161508a565b945061565f6060890161508a565b935061566d6080890161508a565b925060a088015161567d81615d0b565b60c089015190925061568e81615cd9565b8091505092959891949750929550565b6000602082840312156156af578081fd5b61148c8261509c565b6000602082840312156156c9578081fd5b5035919050565b600080604083850312156156e2578182fd5b8235915060208301356150f881615cc4565b60008060408385031215615706578182fd5b505080516020909101519092909150565b6000806000806060858703121561572c578182fd5b8435935060208501359250604085013567ffffffffffffffff80821115615751578384fd5b818701915087601f830112615764578384fd5b813581811115615772578485fd5b886020828501011115615783578485fd5b95989497505060200194505050565b600081518084526157aa816020860160208601615c98565b601f01601f19169290920160200192915050565b60020b9052565b6001600160801b03169052565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b60006001600160a01b03871682528560020b60208301528460020b60408301526001600160801b038416606083015260a06080830152614fae60a0830184615792565b6001600160a01b03959095168552600293840b60208601529190920b60408401526001600160801b03918216606084015216608082015260a00190565b6001600160a01b039390931683526001600160801b03918216602084015216604082015260600190565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015615911577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526158ff858351615792565b945092850192908501906001016158c5565b5092979650505050505050565b901515815260200190565b90815260200190565b6001600160a01b03929092168252602082015260400190565b600293840b81529190920b60208201526001600160801b03909116604082015260600190565b60006020825261148c6020830184615792565b6020808252600c908201527f4e6f7420617070726f7665640000000000000000000000000000000000000000604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201527f697374656e7420746f6b656e0000000000000000000000000000000000000000606082015260800190565b60208082526014908201527f507269636520736c69707061676520636865636b000000000000000000000000604082015260600190565b60208082526010908201527f496e76616c696420746f6b656e20494400000000000000000000000000000000604082015260600190565b6020808252600b908201527f4e6f7420636c6561726564000000000000000000000000000000000000000000604082015260600190565b815180516001600160a01b03908116835260208083015182168185015260409283015162ffffff1692840192909252920151909116606082015260800190565b6001600160801b039390931683526020830191909152604082015260600190565b9384526001600160801b039290921660208401526040830152606082015260800190565b918252602082015260400190565b6bffffffffffffffffffffffff8d1681526001600160a01b038c811660208301528b811660408301528a16606082015262ffffff89166080820152600288900b60a08201526101808101615ba760c08301896157be565b615bb460e08301886157c5565b8561010083015284610120830152615bd06101408301856157c5565b615bde6101608301846157c5565b9d9c50505050505050505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112615c23578283fd5b83018035915067ffffffffffffffff821115615c3d578283fd5b602001915036819003821315613b0f57600080fd5b60405181810167ffffffffffffffff81118282101715615c6e57fe5b604052919050565b600067ffffffffffffffff821115615c8a57fe5b50601f01601f191660200190565b60005b83811015615cb3578181015183820152602001615c9b565b8381111561296d5750506000910152565b6001600160a01b038116811461506357600080fd5b801515811461506357600080fd5b8060020b811461506357600080fd5b6001600160801b038116811461506357600080fd5b60ff8116811461506357600080fdfe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732315065726d69743a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e7366657220746f20746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a164736f6c6343000706000a","deployedBytecode":"0x6080604052600436106102895760003560e01c80636352211e11610153578063ac9650d8116100cb578063d34879971161007f578063e985e9c511610064578063e985e9c5146106f5578063f3995c6714610715578063fc6f7865146107285761030d565b8063d3487997146106c2578063df2ab5bb146106e25761030d565b8063c2e3140a116100b0578063c2e3140a1461067a578063c45a01551461068d578063c87b56dd146106a25761030d565b8063ac9650d81461063a578063b88d4fde1461065a5761030d565b8063883164561161012257806399fbab881161010757806399fbab88146105cf578063a22cb46514610607578063a4a78f0c146106275761030d565b8063883164561461059757806395d89b41146105ba5761030d565b80636352211e1461052f5780636c0360eb1461054f57806370a08231146105645780637ac2ff7b146105845761030d565b806323b872dd1161020157806342966c68116101b557806349404b7c1161019a57806349404b7c146104e75780634aa4a4fc146104fa5780634f6ccce71461050f5761030d565b806342966c68146104c15780634659a494146104d45761030d565b806330adf81f116101e657806330adf81f146104775780633644e5151461048c57806342842e0e146104a15761030d565b806323b872dd146104375780632f745c59146104575761030d565b80630c49ccbe1161025857806313ead5621161023d57806313ead562146103e057806318160ddd146103f3578063219f5d17146104155761030d565b80630c49ccbe146103b757806312210e8a146103d85761030d565b806301ffc9a71461031257806306fdde0314610348578063081812fc1461036a578063095ea7b3146103975761030d565b3661030d57336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461030b576040805162461bcd60e51b815260206004820152600960248201527f4e6f742057455448390000000000000000000000000000000000000000000000604482015290519081900360640190fd5b005b600080fd5b34801561031e57600080fd5b5061033261032d3660046153a6565b61073b565b60405161033f919061591e565b60405180910390f35b34801561035457600080fd5b5061035d610776565b60405161033f9190615971565b34801561037657600080fd5b5061038a6103853660046156b8565b61080c565b60405161033f91906157e2565b3480156103a357600080fd5b5061030b6103b2366004615270565b610868565b6103ca6103c5366004615483565b61093e565b60405161033f929190615b42565b61030b610daa565b61038a6103ee366004615103565b610dbc565b3480156103ff57600080fd5b506104086110c9565b60405161033f9190615929565b610428610423366004615494565b6110da565b60405161033f93929190615afd565b34801561044357600080fd5b5061030b61045236600461515c565b611413565b34801561046357600080fd5b50610408610472366004615270565b61146a565b34801561048357600080fd5b50610408611495565b34801561049857600080fd5b506104086114b9565b3480156104ad57600080fd5b5061030b6104bc36600461515c565b611577565b61030b6104cf3660046156b8565b611592565b61030b6104e23660046152dc565b611661565b61030b6104f53660046156d0565b611714565b34801561050657600080fd5b5061038a611894565b34801561051b57600080fd5b5061040861052a3660046156b8565b6118b8565b34801561053b57600080fd5b5061038a61054a3660046156b8565b6118ce565b34801561055b57600080fd5b5061035d6118f6565b34801561057057600080fd5b5061040861057f3660046150af565b6118fb565b61030b6105923660046152dc565b611963565b6105aa6105a5366004615550565b611e0f565b60405161033f9493929190615b1e565b3480156105c657600080fd5b5061035d612370565b3480156105db57600080fd5b506105ef6105ea3660046156b8565b6123d1565b60405161033f9c9b9a99989796959493929190615b50565b34801561061357600080fd5b5061030b610622366004615243565b612600565b61030b6106353660046152dc565b612723565b61064d610648366004615337565b6127d5565b60405161033f91906158a0565b34801561066657600080fd5b5061030b61067536600461519c565b612915565b61030b6106883660046152dc565b612973565b34801561069957600080fd5b5061038a612a1b565b3480156106ae57600080fd5b5061035d6106bd3660046156b8565b612a3f565b3480156106ce57600080fd5b5061030b6106dd366004615717565b612b0e565b61030b6106f036600461529b565b612b8c565b34801561070157600080fd5b506103326107103660046150cb565b612c6f565b61030b6107233660046152dc565b612c9d565b6103ca61073636600461546c565b612d28565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081526020819052604090205460ff165b919050565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108025780601f106107d757610100808354040283529160200191610802565b820191906000526020600020905b8154815290600101906020018083116107e557829003601f168201915b5050505050905090565b600061081782613246565b61083c5760405162461bcd60e51b8152600401610833906159bb565b60405180910390fd5b506000908152600c60205260409020546c0100000000000000000000000090046001600160a01b031690565b6000610873826118ce565b9050806001600160a01b0316836001600160a01b031614156108c65760405162461bcd60e51b8152600401808060200182810382526021815260200180615ee26021913960400191505060405180910390fd5b806001600160a01b03166108d8613253565b6001600160a01b031614806108f457506108f481610710613253565b61092f5760405162461bcd60e51b8152600401808060200182810382526038815260200180615e0c6038913960400191505060405180910390fd5b6109398383613257565b505050565b600080823561094d33826132db565b6109695760405162461bcd60e51b815260040161083390615984565b836080013580610977613377565b11156109ca576040805162461bcd60e51b815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b60006109dc6040870160208801615562565b6001600160801b0316116109ef57600080fd5b84356000908152600c602090815260409182902060018101549092600160801b9091046001600160801b031691610a2a918901908901615562565b6001600160801b0316816001600160801b03161015610a4857600080fd5b60018281015469ffffffffffffffffffff166000908152600b60209081526040808320815160608101835281546001600160a01b039081168252919095015490811692850192909252600160a01b90910462ffffff1690830152610acc7f00000000000000000000000000000000000000000000000000000000000000008361337b565b60018501549091506001600160a01b0382169063a34123a7906a01000000000000000000008104600290810b91600160681b9004900b610b1260408e0160208f01615562565b6040518463ffffffff1660e01b8152600401610b309392919061594b565b6040805180830381600087803b158015610b4957600080fd5b505af1158015610b5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8191906156f4565b909850965060408901358810801590610b9e575088606001358710155b610bba5760405162461bcd60e51b815260040161083390615a18565b6001840154600090610bea9030906a01000000000000000000008104600290810b91600160681b9004900b613477565b9050600080836001600160a01b031663514ea4bf846040518263ffffffff1660e01b8152600401610c1b9190615929565b60a06040518083038186803b158015610c3357600080fd5b505afa158015610c47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6b91906155ac565b50509250925050610c9087600201548303876001600160801b0316600160801b6134d1565b6004880180546fffffffffffffffffffffffffffffffff198116928e016001600160801b039182160181169290921790556003880154610cda91908303908816600160801b6134d1565b6004880180546001600160801b03808216938e01600160801b9283900482160116029190911790556002870182905560038701819055610d2060408d0160208e01615562565b86038760010160106101000a8154816001600160801b0302191690836001600160801b031602179055508b600001357f26f6a048ee9138f2c0ce266f322cb99228e8d619ae2bff30c67f8dcf9d2377b48d6020016020810190610d839190615562565b8d8d604051610d9493929190615afd565b60405180910390a2505050505050505050915091565b4715610dba57610dba3347613580565b565b6000836001600160a01b0316856001600160a01b031610610ddc57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631698ee828686866040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018262ffffff168152602001935050505060206040518083038186803b158015610e6757600080fd5b505afa158015610e7b573d6000803e3d6000fd5b505050506040513d6020811015610e9157600080fd5b505190506001600160a01b038116610fe0577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a16712958686866040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018262ffffff1681526020019350505050602060405180830381600087803b158015610f3057600080fd5b505af1158015610f44573d6000803e3d6000fd5b505050506040513d6020811015610f5a57600080fd5b5051604080517ff637731d0000000000000000000000000000000000000000000000000000000081526001600160a01b03858116600483015291519293509083169163f637731d9160248082019260009290919082900301818387803b158015610fc357600080fd5b505af1158015610fd7573d6000803e3d6000fd5b505050506110c1565b6000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561101b57600080fd5b505afa15801561102f573d6000803e3d6000fd5b505050506040513d60e081101561104557600080fd5b505190506001600160a01b0381166110bf57816001600160a01b031663f637731d846040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b1580156110a657600080fd5b505af11580156110ba573d6000803e3d6000fd5b505050505b505b949350505050565b60006110d56002613689565b905090565b60008060008360a00135806110ed613377565b1115611140576040805162461bcd60e51b815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b84356000908152600c6020908152604080832060018082015469ffffffffffffffffffff81168652600b855283862084516060808201875282546001600160a01b039081168352929094015480831682890190815262ffffff600160a01b9092048216838901908152885161014081018a528451861681529151909416818a01529251168287015230828501526a01000000000000000000008304600290810b810b608080850191909152600160681b909404810b900b60a0830152958c013560c0820152938b013560e0850152908a0135610100840152890135610120830152929061122c90613694565b6001870154939a50919850965091506000906112669030906a01000000000000000000008104600290810b91600160681b9004900b613477565b9050600080836001600160a01b031663514ea4bf846040518263ffffffff1660e01b81526004016112979190615929565b60a06040518083038186803b1580156112af57600080fd5b505afa1580156112c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e791906155ac565b50509250925050611323866002015483038760010160109054906101000a90046001600160801b03166001600160801b0316600160801b6134d1565b6004870180546001600160801b0380821690930183166fffffffffffffffffffffffffffffffff19909116179055600387015460018801546113739291840391600160801b9182900416906134d1565b6004870180546001600160801b03600160801b80830482169094018116840291811691909117909155600288018490556003880183905560018801805483810483168e018316909302929091169190911790556040518b35907f3067048beee31b25b2f1681f88dac838c8bba36af25bfb2b7cf7473a5847e35f906113fd908d908d908d90615afd565b60405180910390a2505050505050509193909250565b61142461141e613253565b826132db565b61145f5760405162461bcd60e51b8152600401808060200182810382526031815260200180615f036031913960400191505060405180910390fd5b6109398383836138cf565b6001600160a01b038216600090815260016020526040812061148c9083613a1b565b90505b92915050565b7f49ecf333e5b8c95c40fdafc95c1ad136e8914a8fb55e9dc8bb01eaa83a2df9ad81565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611526613a27565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b031681526020019550505050505060405160208183030381529060405280519060200120905090565b61093983838360405180602001604052806000815250612915565b8061159d33826132db565b6115b95760405162461bcd60e51b815260040161083390615984565b6000828152600c602052604090206001810154600160801b90046001600160801b03161580156115f4575060048101546001600160801b0316155b801561161257506004810154600160801b90046001600160801b0316155b61162e5760405162461bcd60e51b815260040161083390615a86565b6000838152600c602052604081208181556001810182905560028101829055600381018290556004015561093983613a2b565b604080517f8fcbaf0c00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101879052606481018690526001608482015260ff851660a482015260c4810184905260e4810183905290516001600160a01b03881691638fcbaf0c9161010480830192600092919082900301818387803b1580156116f457600080fd5b505af1158015611708573d6000803e3d6000fd5b50505050505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561178357600080fd5b505afa158015611797573d6000803e3d6000fd5b505050506040513d60208110156117ad57600080fd5b5051905082811015611806576040805162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742057455448390000000000000000000000000000604482015290519081900360640190fd5b8015610939577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561187257600080fd5b505af1158015611886573d6000803e3d6000fd5b505050506109398282613580565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806118c6600284613af8565b509392505050565b600061148f82604051806060016040528060298152602001615e6e6029913960029190613b16565b606090565b60006001600160a01b0382166119425760405162461bcd60e51b815260040180806020018281038252602a815260200180615e44602a913960400191505060405180910390fd5b6001600160a01b038216600090815260016020526040902061148f90613689565b8361196c613377565b11156119bf576040805162461bcd60e51b815260206004820152600e60248201527f5065726d69742065787069726564000000000000000000000000000000000000604482015290519081900360640190fd5b60006119c96114b9565b7f49ecf333e5b8c95c40fdafc95c1ad136e8914a8fb55e9dc8bb01eaa83a2df9ad88886119f581613b23565b604080516020808201969096526001600160a01b03909416848201526060840192909252608083015260a08083018a90528151808403909101815260c0830182528051908401207f190100000000000000000000000000000000000000000000000000000000000060e084015260e283019490945261010280830194909452805180830390940184526101229091019052815191012090506000611a98876118ce565b9050806001600160a01b0316886001600160a01b03161415611aeb5760405162461bcd60e51b8152600401808060200182810382526027815260200180615d6f6027913960400191505060405180910390fd5b611af481613b62565b15611ccf576040805160208082018790528183018690527fff0000000000000000000000000000000000000000000000000000000000000060f889901b16606083015282516041818403018152606183018085527f1626ba7e0000000000000000000000000000000000000000000000000000000090526065830186815260858401948552815160a585015281516001600160a01b03871695631626ba7e958995919260c59091019185019080838360005b83811015611bbe578181015183820152602001611ba6565b50505050905090810190601f168015611beb5780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b158015611c0957600080fd5b505afa158015611c1d573d6000803e3d6000fd5b505050506040513d6020811015611c3357600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f1626ba7e0000000000000000000000000000000000000000000000000000000014611cca576040805162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a65640000000000000000000000000000000000000000604482015290519081900360640190fd5b611dfb565b600060018387878760405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611d2b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611d93576040805162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e6174757265000000000000000000000000000000604482015290519081900360640190fd5b816001600160a01b0316816001600160a01b031614611df9576040805162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a65640000000000000000000000000000000000000000604482015290519081900360640190fd5b505b611e058888613257565b5050505050505050565b60008060008084610140013580611e24613377565b1115611e77576040805162461bcd60e51b815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b604080516101408101909152600090611f439080611e9860208b018b6150af565b6001600160a01b03168152602001896020016020810190611eb991906150af565b6001600160a01b03168152602001611ed760608b0160408c0161569e565b62ffffff168152306020820152604001611ef760808b0160608c016153e6565b60020b8152602001611f0f60a08b0160808c016153e6565b60020b81526020018960a0013581526020018960c0013581526020018960e001358152602001896101000135815250613694565b92975090955093509050611fb7611f6261014089016101208a016150af565b600d80547fffffffffffffffffffff000000000000000000000000000000000000000000008116600175ffffffffffffffffffffffffffffffffffffffffffff92831690810190921617909155975087613b68565b6000611fe230611fcd60808b0160608c016153e6565b611fdd60a08c0160808d016153e6565b613477565b9050600080836001600160a01b031663514ea4bf846040518263ffffffff1660e01b81526004016120139190615929565b60a06040518083038186803b15801561202b57600080fd5b505afa15801561203f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061206391906155ac565b5050925092505060006120dc8560405180606001604052808e600001602081019061208e91906150af565b6001600160a01b031681526020018e60200160208101906120af91906150af565b6001600160a01b031681526020018e60400160208101906120d0919061569e565b62ffffff169052613c96565b905060405180610140016040528060006bffffffffffffffffffffffff16815260200160006001600160a01b031681526020018269ffffffffffffffffffff1681526020018c606001602081019061213491906153e6565b60020b815260200161214c60a08e0160808f016153e6565b60020b81526020018a6001600160801b0316815260200184815260200183815260200160006001600160801b0316815260200160006001600160801b0316815250600c60008c815260200190815260200160002060008201518160000160006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550602082015181600001600c6101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160006101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff160217905550606082015181600101600a6101000a81548162ffffff021916908360020b62ffffff160217905550608082015181600101600d6101000a81548162ffffff021916908360020b62ffffff16021790555060a08201518160010160106101000a8154816001600160801b0302191690836001600160801b0316021790555060c0820151816002015560e082015181600301556101008201518160040160006101000a8154816001600160801b0302191690836001600160801b031602179055506101208201518160040160106101000a8154816001600160801b0302191690836001600160801b03160217905550905050897f3067048beee31b25b2f1681f88dac838c8bba36af25bfb2b7cf7473a5847e35f8a8a8a60405161235b93929190615afd565b60405180910390a25050505050509193509193565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108025780601f106107d757610100808354040283529160200191610802565b6000818152600c6020908152604080832081516101408101835281546bffffffffffffffffffffffff811682526001600160a01b036c010000000000000000000000009091041693810193909352600181015469ffffffffffffffffffff81169284018390526a01000000000000000000008104600290810b810b810b6060860152600160681b8204810b810b810b60808601526001600160801b03600160801b92839004811660a08701529083015460c0860152600383015460e0860152600490920154808316610100860152041661012083015282918291829182918291829182918291829182918291906124da5760405162461bcd60e51b815260040161083390615a4f565b6000600b6000836040015169ffffffffffffffffffff1669ffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160149054906101000a900462ffffff1662ffffff1662ffffff1681525050905081600001518260200151826000015183602001518460400151866060015187608001518860a001518960c001518a60e001518b61010001518c61012001519d509d509d509d509d509d509d509d509d509d509d509d50505091939597999b5091939597999b565b612608613253565b6001600160a01b0316826001600160a01b0316141561266e576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b806005600061267b613253565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016921515929092179091556126dd613253565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b604080517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523360048201523060248201529051600019916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b15801561278d57600080fd5b505afa1580156127a1573d6000803e3d6000fd5b505050506040513d60208110156127b757600080fd5b505110156127cd576127cd868686868686611661565b505050505050565b60608167ffffffffffffffff811180156127ee57600080fd5b5060405190808252806020026020018201604052801561282257816020015b606081526020019060019003908161280d5790505b50905060005b8281101561290e576000803086868581811061284057fe5b90506020028101906128529190615bef565b6040516128609291906157d2565b600060405180830381855af49150503d806000811461289b576040519150601f19603f3d011682016040523d82523d6000602084013e6128a0565b606091505b5091509150816128ec576044815110156128b957600080fd5b600481019050808060200190518101906128d39190615402565b60405162461bcd60e51b81526004016108339190615971565b808484815181106128f957fe5b60209081029190910101525050600101612828565b5092915050565b612926612920613253565b836132db565b6129615760405162461bcd60e51b8152600401808060200182810382526031815260200180615f036031913960400191505060405180910390fd5b61296d84848484613de6565b50505050565b604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152336004820152306024820152905186916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b1580156129db57600080fd5b505afa1580156129ef573d6000803e3d6000fd5b505050506040513d6020811015612a0557600080fd5b505110156127cd576127cd868686868686612c9d565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060612a4a82613246565b612a5357600080fd5b6040517fe9dc63750000000000000000000000000000000000000000000000000000000081526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e9dc637590612aba9030908690600401615932565b60006040518083038186803b158015612ad257600080fd5b505afa158015612ae6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261148f9190810190615402565b6000612b1c828401846154a5565b9050612b4c7f00000000000000000000000000000000000000000000000000000000000000008260000151613e38565b508415612b67578051516020820151612b6791903388613e5b565b8315612b8557612b8581600001516020015182602001513387613e5b565b5050505050565b6000836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015612bdb57600080fd5b505afa158015612bef573d6000803e3d6000fd5b505050506040513d6020811015612c0557600080fd5b5051905082811015612c5e576040805162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e7420746f6b656e0000000000000000000000000000604482015290519081900360640190fd5b801561296d5761296d848383613feb565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b604080517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c4810183905290516001600160a01b0388169163d505accf9160e480830192600092919082900301818387803b1580156116f457600080fd5b6000808235612d3733826132db565b612d535760405162461bcd60e51b815260040161083390615984565b6000612d656060860160408701615562565b6001600160801b03161180612d9257506000612d876080860160608701615562565b6001600160801b0316115b612d9b57600080fd5b600080612dae60408701602088016150af565b6001600160a01b031614612dd157612dcc60408601602087016150af565b612dd3565b305b85356000908152600c6020908152604080832060018082015469ffffffffffffffffffff168552600b8452828520835160608101855281546001600160a01b039081168252919092015490811694820194909452600160a01b90930462ffffff169183019190915292935090612e697f00000000000000000000000000000000000000000000000000000000000000008361337b565b600484015460018501549192506001600160801b0380821692600160801b92839004821692900416156130865760018501546040517fa34123a70000000000000000000000000000000000000000000000000000000081526001600160a01b0385169163a34123a791612f00916a01000000000000000000008104600290810b92600160681b909204900b9060009060040161594b565b6040805180830381600087803b158015612f1957600080fd5b505af1158015612f2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f5191906156f4565b5050600185015460009081906001600160a01b0386169063514ea4bf90612f969030906a01000000000000000000008104600290810b91600160681b9004900b613477565b6040518263ffffffff1660e01b8152600401612fb29190615929565b60a06040518083038186803b158015612fca57600080fd5b505afa158015612fde573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061300291906155ac565b5050925092505061303e876002015483038860010160109054906101000a90046001600160801b03166001600160801b0316600160801b6134d1565b84019350613077876003015482038860010160109054906101000a90046001600160801b03166001600160801b0316600160801b6134d1565b60028801929092556003870155015b6000806001600160801b0384166130a360608e0160408f01615562565b6001600160801b0316116130c6576130c160608d0160408e01615562565b6130c8565b835b836001600160801b03168d60600160208101906130e59190615562565b6001600160801b0316116131085761310360808e0160608f01615562565b61310a565b835b60018901546040517f4f1eb3d80000000000000000000000000000000000000000000000000000000081529294509092506001600160a01b03871691634f1eb3d89161317d918c916a01000000000000000000008104600290810b92600160681b909204900b9088908890600401615839565b6040805180830381600087803b15801561319657600080fd5b505af11580156131aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131ce919061557e565b6004890180546fffffffffffffffffffffffffffffffff196001600160801b03918216600160801b878a0384160217168689038216179091556040519281169d50169a508c35907f40d0efd1a53d60ecbf40971b9daf7dc90178c3aadc7aab1765632738fa8b8f0190610d94908b9086908690615876565b600061148f60028361417b565b3390565b6000818152600c6020526040902080546bffffffffffffffffffffffff166c010000000000000000000000006001600160a01b0385169081029190911790915581906132a2826118ce565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006132e682613246565b6133215760405162461bcd60e51b815260040180806020018281038252602c815260200180615de0602c913960400191505060405180910390fd5b600061332c836118ce565b9050806001600160a01b0316846001600160a01b031614806133675750836001600160a01b031661335c8461080c565b6001600160a01b0316145b806110c157506110c18185612c6f565b4290565b600081602001516001600160a01b031682600001516001600160a01b0316106133a357600080fd5b50805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b6bffffffffffffffffffffffff191660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b604080516bffffffffffffffffffffffff19606086901b16602080830191909152600285810b60e890811b60348501529085900b901b60378301528251601a818403018152603a90920190925280519101205b9392505050565b600080806000198587098686029250828110908390030390508061350757600084116134fc57600080fd5b5082900490506134ca565b80841161351357600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b604080516000808252602082019092526001600160a01b0384169083906040518082805190602001908083835b602083106135cc5780518252601f1990920191602091820191016135ad565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461362e576040519150601f19603f3d011682016040523d82523d6000602084013e613633565b606091505b5050905080610939576040805162461bcd60e51b815260206004820152600360248201527f5354450000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600061148f82614187565b6000806000806000604051806060016040528087600001516001600160a01b0316815260200187602001516001600160a01b03168152602001876040015162ffffff1681525090506137067f00000000000000000000000000000000000000000000000000000000000000008261337b565b91506000826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561374357600080fd5b505afa158015613757573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061377b919061560d565b50505050505090506000613792886080015161418b565b905060006137a38960a0015161418b565b90506137ba8383838c60c001518d60e001516144d9565b9750505050816001600160a01b0316633c8a7d8d876060015188608001518960a00151896040518060400160405280888152602001336001600160a01b031681525060405160200161380c9190615abd565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161383b9594939291906157f6565b6040805180830381600087803b15801561385457600080fd5b505af1158015613868573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061388c91906156f4565b610100880151919550935084108015906138ab57508561012001518310155b6138c75760405162461bcd60e51b815260040161083390615a18565b509193509193565b826001600160a01b03166138e2826118ce565b6001600160a01b0316146139275760405162461bcd60e51b8152600401808060200182810382526029815260200180615eb96029913960400191505060405180910390fd5b6001600160a01b03821661396c5760405162461bcd60e51b8152600401808060200182810382526024815260200180615d966024913960400191505060405180910390fd5b613977838383610939565b613982600082613257565b6001600160a01b03831660009081526001602052604090206139a4908261459d565b506001600160a01b03821660009081526001602052604090206139c790826145a9565b506139d4600282846145b5565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061148c83836145cb565b4690565b6000613a36826118ce565b9050613a4481600084610939565b613a4f600083613257565b6000828152600860205260409020546002600019610100600184161502019091160415613a8d576000828152600860205260408120613a8d9161501f565b6001600160a01b0381166000908152600160205260409020613aaf908361459d565b50613abb60028361462f565b5060405182906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000808080613b07868661463b565b909450925050505b9250929050565b60006110c18484846146b6565b6000908152600c6020526040902080546bffffffffffffffffffffffff19811660016bffffffffffffffffffffffff9283169081019092161790915590565b3b151590565b6001600160a01b038216613bc3576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b613bcc81613246565b15613c1e576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b613c2a60008383610939565b6001600160a01b0382166000908152600160205260409020613c4c90826145a9565b50613c59600282846145b5565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160a01b0382166000908152600a602052604090205469ffffffffffffffffffff168061148f5750600d8054600169ffffffffffffffffffff76010000000000000000000000000000000000000000000080840482168381019092160275ffffffffffffffffffffffffffffffffffffffffffff909316929092179092556001600160a01b038085166000908152600a6020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffff000000000000000000001686179055848352600b825291829020865181549085167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617825591870151950180549287015162ffffff16600160a01b027fffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffff969094169290911691909117939093161790915592915050565b613df18484846138cf565b613dfd84848484614780565b61296d5760405162461bcd60e51b8152600401808060200182810382526032815260200180615d3d6032913960400191505060405180910390fd5b6000613e44838361337b565b9050336001600160a01b0382161461148f57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316148015613e9c5750804710155b15613fbe577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015613efc57600080fd5b505af1158015613f10573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015613f8c57600080fd5b505af1158015613fa0573d6000803e3d6000fd5b505050506040513d6020811015613fb657600080fd5b5061296d9050565b6001600160a01b038316301415613fdf57613fda848383613feb565b61296d565b61296d8484848461495c565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b602083106140955780518252601f199092019160209182019101614076565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146140f7576040519150601f19603f3d011682016040523d82523d6000602084013e6140fc565b606091505b509150915081801561412a57508051158061412a575080806020019051602081101561412757600080fd5b50515b612b85576040805162461bcd60e51b815260206004820152600260248201527f5354000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600061148c8383614af4565b5490565b60008060008360020b126141a2578260020b6141aa565b8260020b6000035b9050620d89e8811115614204576040805162461bcd60e51b815260206004820152600160248201527f5400000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60006001821661421857600160801b61422a565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600282161561425e576ffff97272373d413259a46990580e213a0260801c5b600482161561427d576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561429c576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156142bb576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156142da576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156142f9576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615614318576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615614338576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615614358576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615614378576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615614398576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156143b8576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156143d8576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156143f8576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615614418576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615614439576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615614459576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615614478576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615614495576b048a170391f7dc42444e8fa20260801c5b60008460020b13156144b05780600019816144ac57fe5b0490505b6401000000008106156144c45760016144c7565b60005b60ff16602082901c0192505050919050565b6000836001600160a01b0316856001600160a01b031611156144f9579293925b846001600160a01b0316866001600160a01b0316116145245761451d858585614b0c565b9050614594565b836001600160a01b0316866001600160a01b0316101561458657600061454b878686614b0c565b9050600061455a878986614b78565b9050806001600160801b0316826001600160801b03161061457b578061457d565b815b92505050614594565b614591858584614b78565b90505b95945050505050565b600061148c8383614bbe565b600061148c8383614c84565b60006110c184846001600160a01b038516614cce565b8154600090821061460d5760405162461bcd60e51b8152600401808060200182810382526022815260200180615d1b6022913960400191505060405180910390fd5b82600001828154811061461c57fe5b9060005260206000200154905092915050565b600061148c8383614d65565b81546000908190831061467f5760405162461bcd60e51b8152600401808060200182810382526022815260200180615e976022913960400191505060405180910390fd5b600084600001848154811061469057fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816147515760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156147165781810151838201526020016146fe565b50505050905090810190601f1680156147435780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5084600001600182038154811061476457fe5b9060005260206000209060020201600101549150509392505050565b6000614794846001600160a01b0316613b62565b6147a0575060016110c1565b60006148f17f150b7a02000000000000000000000000000000000000000000000000000000006147ce613253565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561483557818101518382015260200161481d565b50505050905090810190601f1680156148625780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051806060016040528060328152602001615d3d603291396001600160a01b0388169190614e39565b9050600081806020019051602081101561490a57600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a02000000000000000000000000000000000000000000000000000000001492505050949350505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000178152925182516000948594938a169392918291908083835b60208310614a0e5780518252601f1990920191602091820191016149ef565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114614a70576040519150601f19603f3d011682016040523d82523d6000602084013e614a75565b606091505b5091509150818015614aa3575080511580614aa35750808060200190516020811015614aa057600080fd5b50515b6127cd576040805162461bcd60e51b815260206004820152600360248201527f5354460000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60009081526001919091016020526040902054151590565b6000826001600160a01b0316846001600160a01b03161115614b2c579192915b6000614b58856001600160a01b0316856001600160a01b03166c010000000000000000000000006134d1565b9050614594614b7384838888036001600160a01b03166134d1565b614e48565b6000826001600160a01b0316846001600160a01b03161115614b98579192915b6110c1614b73836c010000000000000000000000008787036001600160a01b03166134d1565b60008181526001830160205260408120548015614c7a5783546000198083019190810190600090879083908110614bf157fe5b9060005260206000200154905080876000018481548110614c0e57fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080614c3e57fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061148f565b600091505061148f565b6000614c908383614af4565b614cc65750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561148f565b50600061148f565b600082815260018401602052604081205480614d335750506040805180820182528381526020808201848152865460018181018955600089815284812095516002909302909501918255915190820155865486845281880190925292909120556134ca565b82856000016001830381548110614d4657fe5b90600052602060002090600202016001018190555060009150506134ca565b60008181526001830160205260408120548015614c7a5783546000198083019190810190600090879083908110614d9857fe5b9060005260206000209060020201905080876000018481548110614db857fe5b600091825260208083208454600290930201918255600193840154918401919091558354825289830190526040902090840190558654879080614df757fe5b600082815260208082206002600019909401938402018281556001908101839055929093558881528982019092526040822091909155945061148f9350505050565b60606110c18484600085614e5e565b806001600160801b038116811461077157600080fd5b606082471015614e9f5760405162461bcd60e51b8152600401808060200182810382526026815260200180615dba6026913960400191505060405180910390fd5b614ea885613b62565b614ef9576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310614f375780518252601f199092019160209182019101614f18565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114614f99576040519150601f19603f3d011682016040523d82523d6000602084013e614f9e565b606091505b5091509150614fae828286614fb9565b979650505050505050565b60608315614fc85750816134ca565b825115614fd85782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156147165781810151838201526020016146fe565b50805460018160011615610100020316600290046000825580601f106150455750615063565b601f0160209004906000526020600020908101906150639190615066565b50565b5b8082111561507b5760008155600101615067565b5090565b803561077181615cc4565b805161ffff8116811461077157600080fd5b803562ffffff8116811461077157600080fd5b6000602082840312156150c0578081fd5b81356134ca81615cc4565b600080604083850312156150dd578081fd5b82356150e881615cc4565b915060208301356150f881615cc4565b809150509250929050565b60008060008060808587031215615118578182fd5b843561512381615cc4565b9350602085013561513381615cc4565b92506151416040860161509c565b9150606085013561515181615cc4565b939692955090935050565b600080600060608486031215615170578081fd5b833561517b81615cc4565b9250602084013561518b81615cc4565b929592945050506040919091013590565b600080600080608085870312156151b1578182fd5b84356151bc81615cc4565b935060208501356151cc81615cc4565b925060408501359150606085013567ffffffffffffffff8111156151ee578182fd5b8501601f810187136151fe578182fd5b803561521161520c82615c76565b615c52565b818152886020838501011115615225578384fd5b81602084016020830137908101602001929092525092959194509250565b60008060408385031215615255578182fd5b823561526081615cc4565b915060208301356150f881615cd9565b60008060408385031215615282578182fd5b823561528d81615cc4565b946020939093013593505050565b6000806000606084860312156152af578081fd5b83356152ba81615cc4565b92506020840135915060408401356152d181615cc4565b809150509250925092565b60008060008060008060c087890312156152f4578384fd5b86356152ff81615cc4565b95506020870135945060408701359350606087013561531d81615d0b565b9598949750929560808101359460a0909101359350915050565b60008060208385031215615349578182fd5b823567ffffffffffffffff80821115615360578384fd5b818501915085601f830112615373578384fd5b813581811115615381578485fd5b8660208083028501011115615394578485fd5b60209290920196919550909350505050565b6000602082840312156153b7578081fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146134ca578182fd5b6000602082840312156153f7578081fd5b81356134ca81615ce7565b600060208284031215615413578081fd5b815167ffffffffffffffff811115615429578182fd5b8201601f81018413615439578182fd5b805161544761520c82615c76565b81815285602083850101111561545b578384fd5b614594826020830160208601615c98565b60006080828403121561547d578081fd5b50919050565b600060a0828403121561547d578081fd5b600060c0828403121561547d578081fd5b600081830360808112156154b7578182fd5b6040516040810167ffffffffffffffff82821081831117156154d557fe5b8160405260608412156154e6578485fd5b60a08301935081841081851117156154fa57fe5b50826040528435925061550c83615cc4565b91825260208401359161551e83615cc4565b8260608301526155306040860161509c565b608083015281526155436060850161507f565b6020820152949350505050565b6000610160828403121561547d578081fd5b600060208284031215615573578081fd5b81356134ca81615cf6565b60008060408385031215615590578182fd5b825161559b81615cf6565b60208401519092506150f881615cf6565b600080600080600060a086880312156155c3578283fd5b85516155ce81615cf6565b80955050602086015193506040860151925060608601516155ee81615cf6565b60808701519092506155ff81615cf6565b809150509295509295909350565b600080600080600080600060e0888a031215615627578485fd5b875161563281615cc4565b602089015190975061564381615ce7565b95506156516040890161508a565b945061565f6060890161508a565b935061566d6080890161508a565b925060a088015161567d81615d0b565b60c089015190925061568e81615cd9565b8091505092959891949750929550565b6000602082840312156156af578081fd5b61148c8261509c565b6000602082840312156156c9578081fd5b5035919050565b600080604083850312156156e2578182fd5b8235915060208301356150f881615cc4565b60008060408385031215615706578182fd5b505080516020909101519092909150565b6000806000806060858703121561572c578182fd5b8435935060208501359250604085013567ffffffffffffffff80821115615751578384fd5b818701915087601f830112615764578384fd5b813581811115615772578485fd5b886020828501011115615783578485fd5b95989497505060200194505050565b600081518084526157aa816020860160208601615c98565b601f01601f19169290920160200192915050565b60020b9052565b6001600160801b03169052565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b60006001600160a01b03871682528560020b60208301528460020b60408301526001600160801b038416606083015260a06080830152614fae60a0830184615792565b6001600160a01b03959095168552600293840b60208601529190920b60408401526001600160801b03918216606084015216608082015260a00190565b6001600160a01b039390931683526001600160801b03918216602084015216604082015260600190565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015615911577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526158ff858351615792565b945092850192908501906001016158c5565b5092979650505050505050565b901515815260200190565b90815260200190565b6001600160a01b03929092168252602082015260400190565b600293840b81529190920b60208201526001600160801b03909116604082015260600190565b60006020825261148c6020830184615792565b6020808252600c908201527f4e6f7420617070726f7665640000000000000000000000000000000000000000604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201527f697374656e7420746f6b656e0000000000000000000000000000000000000000606082015260800190565b60208082526014908201527f507269636520736c69707061676520636865636b000000000000000000000000604082015260600190565b60208082526010908201527f496e76616c696420746f6b656e20494400000000000000000000000000000000604082015260600190565b6020808252600b908201527f4e6f7420636c6561726564000000000000000000000000000000000000000000604082015260600190565b815180516001600160a01b03908116835260208083015182168185015260409283015162ffffff1692840192909252920151909116606082015260800190565b6001600160801b039390931683526020830191909152604082015260600190565b9384526001600160801b039290921660208401526040830152606082015260800190565b918252602082015260400190565b6bffffffffffffffffffffffff8d1681526001600160a01b038c811660208301528b811660408301528a16606082015262ffffff89166080820152600288900b60a08201526101808101615ba760c08301896157be565b615bb460e08301886157c5565b8561010083015284610120830152615bd06101408301856157c5565b615bde6101608301846157c5565b9d9c50505050505050505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112615c23578283fd5b83018035915067ffffffffffffffff821115615c3d578283fd5b602001915036819003821315613b0f57600080fd5b60405181810167ffffffffffffffff81118282101715615c6e57fe5b604052919050565b600067ffffffffffffffff821115615c8a57fe5b50601f01601f191660200190565b60005b83811015615cb3578181015183820152602001615c9b565b8381111561296d5750506000910152565b6001600160a01b038116811461506357600080fd5b801515811461506357600080fd5b8060020b811461506357600080fd5b6001600160801b038116811461506357600080fd5b60ff8116811461506357600080fdfe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732315065726d69743a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e7366657220746f20746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a164736f6c6343000706000a","linkReferences":{},"deployedLinkReferences":{}}') }, 1173: T => { "use strict"; T.exports = JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"V3Migrator","sourceName":"contracts/V3Migrator.sol","abi":[{"inputs":[{"internalType":"address","name":"_factory","type":"address"},{"internalType":"address","name":"_WETH9","type":"address"},{"internalType":"address","name":"_nonfungiblePositionManager","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"WETH9","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"name":"createAndInitializePoolIfNecessary","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"pair","type":"address"},{"internalType":"uint256","name":"liquidityToMigrate","type":"uint256"},{"internalType":"uint8","name":"percentageToMigrate","type":"uint8"},{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint256","name":"amount0Min","type":"uint256"},{"internalType":"uint256","name":"amount1Min","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"refundAsETH","type":"bool"}],"internalType":"struct IV3Migrator.MigrateParams","name":"params","type":"tuple"}],"name":"migrate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"nonfungiblePositionManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermitAllowed","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermitAllowedIfNecessary","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermitIfNecessary","outputs":[],"stateMutability":"payable","type":"function"},{"stateMutability":"payable","type":"receive"}],"bytecode":"0x60e06040523480156200001157600080fd5b5060405162001f4238038062001f42833981016040819052620000349162000079565b6001600160601b0319606093841b811660805291831b821660a05290911b1660c052620000c2565b80516001600160a01b03811681146200007457600080fd5b919050565b6000806000606084860312156200008e578283fd5b62000099846200005c565b9250620000a9602085016200005c565b9150620000b9604085016200005c565b90509250925092565b60805160601c60a05160601c60c05160601c611e146200012e6000398061090d5280610c4c5280610c865280610cb05280610e8d52508060d252806106b25280610ee65280610f70528061105852806110e2525080610269528061036452806109e65250611e146000f3fe6080604052600436106100b55760003560e01c8063b44a272211610069578063c45a01551161004e578063c45a0155146101e5578063d44f2bf2146101fa578063f3995c671461021a57610134565b8063b44a2722146101bd578063c2e3140a146101d257610134565b80634aa4a4fc1161009a5780634aa4a4fc14610175578063a4a78f0c1461018a578063ac9650d81461019d57610134565b806313ead562146101395780634659a4941461016257610134565b36610134573373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610132576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012990611c15565b60405180910390fd5b005b600080fd5b61014c610147366004611788565b61022d565b6040516101599190611afb565b60405180910390f35b6101326101703660046117e1565b6105f0565b34801561018157600080fd5b5061014c6106b0565b6101326101983660046117e1565b6106d4565b6101b06101ab36600461183a565b6107b1565b6040516101599190611b4d565b3480156101c957600080fd5b5061014c61090b565b6101326101e03660046117e1565b61092f565b3480156101f157600080fd5b5061014c6109e4565b34801561020657600080fd5b506101326102153660046119b7565b610a08565b6101326102283660046117e1565b611176565b60008373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161061026757600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631698ee828686866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018262ffffff168152602001935050505060206040518083038186803b15801561031957600080fd5b505afa15801561032d573d6000803e3d6000fd5b505050506040513d602081101561034357600080fd5b5051905073ffffffffffffffffffffffffffffffffffffffff81166104d3577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a16712958686866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018262ffffff1681526020019350505050602060405180830381600087803b15801561041657600080fd5b505af115801561042a573d6000803e3d6000fd5b505050506040513d602081101561044057600080fd5b5051604080517ff637731d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015291519293509083169163f637731d9160248082019260009290919082900301818387803b1580156104b657600080fd5b505af11580156104ca573d6000803e3d6000fd5b505050506105e8565b60008173ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561051b57600080fd5b505afa15801561052f573d6000803e3d6000fd5b505050506040513d60e081101561054557600080fd5b5051905073ffffffffffffffffffffffffffffffffffffffff81166105e6578173ffffffffffffffffffffffffffffffffffffffff1663f637731d846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156105cd57600080fd5b505af11580156105e1573d6000803e3d6000fd5b505050505b505b949350505050565b604080517f8fcbaf0c00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101879052606481018690526001608482015260ff851660a482015260c4810184905260e48101839052905173ffffffffffffffffffffffffffffffffffffffff881691638fcbaf0c9161010480830192600092919082900301818387803b15801561069057600080fd5b505af11580156106a4573d6000803e3d6000fd5b50505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b604080517fdd62ed3e00000000000000000000000000000000000000000000000000000000815233600482015230602482015290517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9173ffffffffffffffffffffffffffffffffffffffff89169163dd62ed3e91604480820192602092909190829003018186803b15801561076957600080fd5b505afa15801561077d573d6000803e3d6000fd5b505050506040513d602081101561079357600080fd5b505110156107a9576107a98686868686866105f0565b505050505050565b60608167ffffffffffffffff811180156107ca57600080fd5b506040519080825280602002602001820160405280156107fe57816020015b60608152602001906001900390816107e95790505b50905060005b82811015610904576000803086868581811061081c57fe5b905060200281019061082e9190611d3a565b60405161083c929190611aeb565b600060405180830381855af49150503d8060008114610877576040519150601f19603f3d011682016040523d82523d6000602084013e61087c565b606091505b5091509150816108e25760448151101561089557600080fd5b600481019050808060200190518101906108af9190611902565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101299190611bcb565b808484815181106108ef57fe5b60209081029190910101525050600101610804565b5092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b604080517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523360048201523060248201529051869173ffffffffffffffffffffffffffffffffffffffff89169163dd62ed3e91604480820192602092909190829003018186803b1580156109a457600080fd5b505afa1580156109b8573d6000803e3d6000fd5b505050506040513d60208110156109ce57600080fd5b505110156107a9576107a9868686868686611176565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610a1a6060830160408401611a5d565b60ff1611610a54576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012990611bde565b6064610a666060830160408401611a5d565b60ff161115610aa1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012990611c4c565b610aae6020820182611765565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd33610ad76020850185611765565b84602001356040518463ffffffff1660e01b8152600401610afa93929190611b1c565b602060405180830381600087803b158015610b1457600080fd5b505af1158015610b28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4c91906118c5565b50600080610b5d6020840184611765565b73ffffffffffffffffffffffffffffffffffffffff166389afcb44306040518263ffffffff1660e01b8152600401610b959190611afb565b6040805180830381600087803b158015610bae57600080fd5b505af1158015610bc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be69190611a3a565b909250905060006064610c0c610c026060870160408801611a5d565b859060ff1661120e565b81610c1357fe5b04905060006064610c2d610c026060880160408901611a5d565b81610c3457fe5b049050610c71610c4a6080870160608801611765565b7f000000000000000000000000000000000000000000000000000000000000000084611238565b610cab610c8460a0870160808801611765565b7f000000000000000000000000000000000000000000000000000000000000000083611238565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663883164566040518061016001604052808a6060016020810190610d099190611765565b73ffffffffffffffffffffffffffffffffffffffff168152602001610d3460a08c0160808d01611765565b73ffffffffffffffffffffffffffffffffffffffff168152602001610d5f60c08c0160a08d016119cf565b62ffffff168152602001610d7960e08c0160c08d016118e1565b60020b8152602001610d926101008c0160e08d016118e1565b60020b815260208101889052604081018790526101008b013560608201526101208b0135608082015260a001610dd06101608c016101408d01611765565b73ffffffffffffffffffffffffffffffffffffffff1681526020018a61016001358152506040518263ffffffff1660e01b8152600401610e109190611c83565b608060405180830381600087803b158015610e2a57600080fd5b505af1158015610e3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6291906119e9565b935093505050858210156110025783821015610eb357610eb3610e8b6080890160608a01611765565b7f00000000000000000000000000000000000000000000000000000000000000006000611238565b818603610ec86101a089016101808a016118a9565b8015610f2e575073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016610f1660808a0160608b01611765565b73ffffffffffffffffffffffffffffffffffffffff16145b15610fe6576040517f2e1a7d4d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d90610fa5908490600401611d31565b600060405180830381600087803b158015610fbf57600080fd5b505af1158015610fd3573d6000803e3d6000fd5b50505050610fe13382611414565b611000565b611000610ff960808a0160608b01611765565b3383611567565b505b8481101561116d578281101561102557611025610e8b60a0890160808a01611765565b80850361103a6101a089016101808a016118a9565b80156110a0575073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001661108860a08a0160808b01611765565b73ffffffffffffffffffffffffffffffffffffffff16145b15611158576040517f2e1a7d4d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d90611117908490600401611d31565b600060405180830381600087803b15801561113157600080fd5b505af1158015611145573d6000803e3d6000fd5b505050506111533382611414565b61116b565b61116b610ff960a08a0160808b01611765565b505b50505050505050565b604080517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c48101839052905173ffffffffffffffffffffffffffffffffffffffff88169163d505accf9160e480830192600092919082900301818387803b15801561069057600080fd5b60008215806112295750508181028183828161122657fe5b04145b61123257600080fd5b92915050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b6020831061130d57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016112d0565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461136f576040519150601f19603f3d011682016040523d82523d6000602084013e611374565b606091505b50915091508180156113a25750805115806113a2575080806020019051602081101561139f57600080fd5b50515b61140d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f5341000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b5050505050565b6040805160008082526020820190925273ffffffffffffffffffffffffffffffffffffffff84169083906040518082805190602001908083835b6020831061148b57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909201916020918201910161144e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146114ed576040519150601f19603f3d011682016040523d82523d6000602084013e6114f2565b606091505b505090508061156257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f5354450000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b6020831061163c57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016115ff565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461169e576040519150601f19603f3d011682016040523d82523d6000602084013e6116a3565b606091505b50915091508180156116d15750805115806116d157508080602001905160208110156116ce57600080fd5b50515b61140d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f5354000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b803562ffffff8116811461174f57600080fd5b919050565b803560ff8116811461174f57600080fd5b600060208284031215611776578081fd5b813561178181611dd4565b9392505050565b6000806000806080858703121561179d578283fd5b84356117a881611dd4565b935060208501356117b881611dd4565b92506117c66040860161173c565b915060608501356117d681611dd4565b939692955090935050565b60008060008060008060c087890312156117f9578182fd5b863561180481611dd4565b9550602087013594506040870135935061182060608801611754565b92506080870135915060a087013590509295509295509295565b6000806020838503121561184c578182fd5b823567ffffffffffffffff80821115611863578384fd5b818501915085601f830112611876578384fd5b813581811115611884578485fd5b8660208083028501011115611897578485fd5b60209290920196919550909350505050565b6000602082840312156118ba578081fd5b813561178181611df9565b6000602082840312156118d6578081fd5b815161178181611df9565b6000602082840312156118f2578081fd5b81358060020b8114611781578182fd5b600060208284031215611913578081fd5b815167ffffffffffffffff8082111561192a578283fd5b818401915084601f83011261193d578283fd5b81518181111561194957fe5b60405160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116820101818110848211171561198557fe5b60405281815283820160200187101561199c578485fd5b6119ad826020830160208701611da4565b9695505050505050565b60006101a082840312156119c9578081fd5b50919050565b6000602082840312156119e0578081fd5b6117818261173c565b600080600080608085870312156119fe578384fd5b8451935060208501516fffffffffffffffffffffffffffffffff81168114611a24578384fd5b6040860151606090960151949790965092505050565b60008060408385031215611a4c578182fd5b505080516020909101519092909150565b600060208284031215611a6e578081fd5b61178182611754565b73ffffffffffffffffffffffffffffffffffffffff169052565b60008151808452611aa9816020860160208601611da4565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60020b9052565b62ffffff169052565b6000828483379101908152919050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015611bbe577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452611bac858351611a91565b94509285019290850190600101611b72565b5092979650505050505050565b6000602082526117816020830184611a91565b60208082526014908201527f50657263656e7461676520746f6f20736d616c6c000000000000000000000000604082015260600190565b60208082526009908201527f4e6f742057455448390000000000000000000000000000000000000000000000604082015260600190565b60208082526014908201527f50657263656e7461676520746f6f206c61726765000000000000000000000000604082015260600190565b600061016082019050611c97828451611a77565b6020830151611ca96020840182611a77565b506040830151611cbc6040840182611ae2565b506060830151611ccf6060840182611adb565b506080830151611ce26080840182611adb565b5060a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151611d2082850182611a77565b505061014092830151919092015290565b90815260200190565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611d6e578283fd5b83018035915067ffffffffffffffff821115611d88578283fd5b602001915036819003821315611d9d57600080fd5b9250929050565b60005b83811015611dbf578181015183820152602001611da7565b83811115611dce576000848401525b50505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611df657600080fd5b50565b8015158114611df657600080fdfea164736f6c6343000706000a","deployedBytecode":"0x6080604052600436106100b55760003560e01c8063b44a272211610069578063c45a01551161004e578063c45a0155146101e5578063d44f2bf2146101fa578063f3995c671461021a57610134565b8063b44a2722146101bd578063c2e3140a146101d257610134565b80634aa4a4fc1161009a5780634aa4a4fc14610175578063a4a78f0c1461018a578063ac9650d81461019d57610134565b806313ead562146101395780634659a4941461016257610134565b36610134573373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610132576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012990611c15565b60405180910390fd5b005b600080fd5b61014c610147366004611788565b61022d565b6040516101599190611afb565b60405180910390f35b6101326101703660046117e1565b6105f0565b34801561018157600080fd5b5061014c6106b0565b6101326101983660046117e1565b6106d4565b6101b06101ab36600461183a565b6107b1565b6040516101599190611b4d565b3480156101c957600080fd5b5061014c61090b565b6101326101e03660046117e1565b61092f565b3480156101f157600080fd5b5061014c6109e4565b34801561020657600080fd5b506101326102153660046119b7565b610a08565b6101326102283660046117e1565b611176565b60008373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161061026757600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631698ee828686866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018262ffffff168152602001935050505060206040518083038186803b15801561031957600080fd5b505afa15801561032d573d6000803e3d6000fd5b505050506040513d602081101561034357600080fd5b5051905073ffffffffffffffffffffffffffffffffffffffff81166104d3577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a16712958686866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018262ffffff1681526020019350505050602060405180830381600087803b15801561041657600080fd5b505af115801561042a573d6000803e3d6000fd5b505050506040513d602081101561044057600080fd5b5051604080517ff637731d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015291519293509083169163f637731d9160248082019260009290919082900301818387803b1580156104b657600080fd5b505af11580156104ca573d6000803e3d6000fd5b505050506105e8565b60008173ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561051b57600080fd5b505afa15801561052f573d6000803e3d6000fd5b505050506040513d60e081101561054557600080fd5b5051905073ffffffffffffffffffffffffffffffffffffffff81166105e6578173ffffffffffffffffffffffffffffffffffffffff1663f637731d846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156105cd57600080fd5b505af11580156105e1573d6000803e3d6000fd5b505050505b505b949350505050565b604080517f8fcbaf0c00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101879052606481018690526001608482015260ff851660a482015260c4810184905260e48101839052905173ffffffffffffffffffffffffffffffffffffffff881691638fcbaf0c9161010480830192600092919082900301818387803b15801561069057600080fd5b505af11580156106a4573d6000803e3d6000fd5b50505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b604080517fdd62ed3e00000000000000000000000000000000000000000000000000000000815233600482015230602482015290517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9173ffffffffffffffffffffffffffffffffffffffff89169163dd62ed3e91604480820192602092909190829003018186803b15801561076957600080fd5b505afa15801561077d573d6000803e3d6000fd5b505050506040513d602081101561079357600080fd5b505110156107a9576107a98686868686866105f0565b505050505050565b60608167ffffffffffffffff811180156107ca57600080fd5b506040519080825280602002602001820160405280156107fe57816020015b60608152602001906001900390816107e95790505b50905060005b82811015610904576000803086868581811061081c57fe5b905060200281019061082e9190611d3a565b60405161083c929190611aeb565b600060405180830381855af49150503d8060008114610877576040519150601f19603f3d011682016040523d82523d6000602084013e61087c565b606091505b5091509150816108e25760448151101561089557600080fd5b600481019050808060200190518101906108af9190611902565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101299190611bcb565b808484815181106108ef57fe5b60209081029190910101525050600101610804565b5092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b604080517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523360048201523060248201529051869173ffffffffffffffffffffffffffffffffffffffff89169163dd62ed3e91604480820192602092909190829003018186803b1580156109a457600080fd5b505afa1580156109b8573d6000803e3d6000fd5b505050506040513d60208110156109ce57600080fd5b505110156107a9576107a9868686868686611176565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610a1a6060830160408401611a5d565b60ff1611610a54576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012990611bde565b6064610a666060830160408401611a5d565b60ff161115610aa1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012990611c4c565b610aae6020820182611765565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd33610ad76020850185611765565b84602001356040518463ffffffff1660e01b8152600401610afa93929190611b1c565b602060405180830381600087803b158015610b1457600080fd5b505af1158015610b28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4c91906118c5565b50600080610b5d6020840184611765565b73ffffffffffffffffffffffffffffffffffffffff166389afcb44306040518263ffffffff1660e01b8152600401610b959190611afb565b6040805180830381600087803b158015610bae57600080fd5b505af1158015610bc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be69190611a3a565b909250905060006064610c0c610c026060870160408801611a5d565b859060ff1661120e565b81610c1357fe5b04905060006064610c2d610c026060880160408901611a5d565b81610c3457fe5b049050610c71610c4a6080870160608801611765565b7f000000000000000000000000000000000000000000000000000000000000000084611238565b610cab610c8460a0870160808801611765565b7f000000000000000000000000000000000000000000000000000000000000000083611238565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663883164566040518061016001604052808a6060016020810190610d099190611765565b73ffffffffffffffffffffffffffffffffffffffff168152602001610d3460a08c0160808d01611765565b73ffffffffffffffffffffffffffffffffffffffff168152602001610d5f60c08c0160a08d016119cf565b62ffffff168152602001610d7960e08c0160c08d016118e1565b60020b8152602001610d926101008c0160e08d016118e1565b60020b815260208101889052604081018790526101008b013560608201526101208b0135608082015260a001610dd06101608c016101408d01611765565b73ffffffffffffffffffffffffffffffffffffffff1681526020018a61016001358152506040518263ffffffff1660e01b8152600401610e109190611c83565b608060405180830381600087803b158015610e2a57600080fd5b505af1158015610e3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6291906119e9565b935093505050858210156110025783821015610eb357610eb3610e8b6080890160608a01611765565b7f00000000000000000000000000000000000000000000000000000000000000006000611238565b818603610ec86101a089016101808a016118a9565b8015610f2e575073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016610f1660808a0160608b01611765565b73ffffffffffffffffffffffffffffffffffffffff16145b15610fe6576040517f2e1a7d4d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d90610fa5908490600401611d31565b600060405180830381600087803b158015610fbf57600080fd5b505af1158015610fd3573d6000803e3d6000fd5b50505050610fe13382611414565b611000565b611000610ff960808a0160608b01611765565b3383611567565b505b8481101561116d578281101561102557611025610e8b60a0890160808a01611765565b80850361103a6101a089016101808a016118a9565b80156110a0575073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001661108860a08a0160808b01611765565b73ffffffffffffffffffffffffffffffffffffffff16145b15611158576040517f2e1a7d4d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d90611117908490600401611d31565b600060405180830381600087803b15801561113157600080fd5b505af1158015611145573d6000803e3d6000fd5b505050506111533382611414565b61116b565b61116b610ff960a08a0160808b01611765565b505b50505050505050565b604080517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c48101839052905173ffffffffffffffffffffffffffffffffffffffff88169163d505accf9160e480830192600092919082900301818387803b15801561069057600080fd5b60008215806112295750508181028183828161122657fe5b04145b61123257600080fd5b92915050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b6020831061130d57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016112d0565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461136f576040519150601f19603f3d011682016040523d82523d6000602084013e611374565b606091505b50915091508180156113a25750805115806113a2575080806020019051602081101561139f57600080fd5b50515b61140d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f5341000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b5050505050565b6040805160008082526020820190925273ffffffffffffffffffffffffffffffffffffffff84169083906040518082805190602001908083835b6020831061148b57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909201916020918201910161144e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146114ed576040519150601f19603f3d011682016040523d82523d6000602084013e6114f2565b606091505b505090508061156257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f5354450000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b6020831061163c57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016115ff565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461169e576040519150601f19603f3d011682016040523d82523d6000602084013e6116a3565b606091505b50915091508180156116d15750805115806116d157508080602001905160208110156116ce57600080fd5b50515b61140d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f5354000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b803562ffffff8116811461174f57600080fd5b919050565b803560ff8116811461174f57600080fd5b600060208284031215611776578081fd5b813561178181611dd4565b9392505050565b6000806000806080858703121561179d578283fd5b84356117a881611dd4565b935060208501356117b881611dd4565b92506117c66040860161173c565b915060608501356117d681611dd4565b939692955090935050565b60008060008060008060c087890312156117f9578182fd5b863561180481611dd4565b9550602087013594506040870135935061182060608801611754565b92506080870135915060a087013590509295509295509295565b6000806020838503121561184c578182fd5b823567ffffffffffffffff80821115611863578384fd5b818501915085601f830112611876578384fd5b813581811115611884578485fd5b8660208083028501011115611897578485fd5b60209290920196919550909350505050565b6000602082840312156118ba578081fd5b813561178181611df9565b6000602082840312156118d6578081fd5b815161178181611df9565b6000602082840312156118f2578081fd5b81358060020b8114611781578182fd5b600060208284031215611913578081fd5b815167ffffffffffffffff8082111561192a578283fd5b818401915084601f83011261193d578283fd5b81518181111561194957fe5b60405160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116820101818110848211171561198557fe5b60405281815283820160200187101561199c578485fd5b6119ad826020830160208701611da4565b9695505050505050565b60006101a082840312156119c9578081fd5b50919050565b6000602082840312156119e0578081fd5b6117818261173c565b600080600080608085870312156119fe578384fd5b8451935060208501516fffffffffffffffffffffffffffffffff81168114611a24578384fd5b6040860151606090960151949790965092505050565b60008060408385031215611a4c578182fd5b505080516020909101519092909150565b600060208284031215611a6e578081fd5b61178182611754565b73ffffffffffffffffffffffffffffffffffffffff169052565b60008151808452611aa9816020860160208601611da4565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60020b9052565b62ffffff169052565b6000828483379101908152919050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015611bbe577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452611bac858351611a91565b94509285019290850190600101611b72565b5092979650505050505050565b6000602082526117816020830184611a91565b60208082526014908201527f50657263656e7461676520746f6f20736d616c6c000000000000000000000000604082015260600190565b60208082526009908201527f4e6f742057455448390000000000000000000000000000000000000000000000604082015260600190565b60208082526014908201527f50657263656e7461676520746f6f206c61726765000000000000000000000000604082015260600190565b600061016082019050611c97828451611a77565b6020830151611ca96020840182611a77565b506040830151611cbc6040840182611ae2565b506060830151611ccf6060840182611adb565b506080830151611ce26080840182611adb565b5060a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151611d2082850182611a77565b505061014092830151919092015290565b90815260200190565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611d6e578283fd5b83018035915067ffffffffffffffff821115611d88578283fd5b602001915036819003821315611d9d57600080fd5b9250929050565b60005b83811015611dbf578181015183820152602001611da7565b83811115611dce576000848401525b50505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611df657600080fd5b50565b8015158114611df657600080fdfea164736f6c6343000706000a","linkReferences":{},"deployedLinkReferences":{}}') }, 9788: T => { "use strict"; T.exports = JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"TickLens","sourceName":"contracts/lens/TickLens.sol","abi":[{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"int16","name":"tickBitmapIndex","type":"int16"}],"name":"getPopulatedTicksInWord","outputs":[{"components":[{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"int128","name":"liquidityNet","type":"int128"},{"internalType":"uint128","name":"liquidityGross","type":"uint128"}],"internalType":"struct ITickLens.PopulatedTick[]","name":"populatedTicks","type":"tuple[]"}],"stateMutability":"view","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b50610569806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063351fb47814610030575b600080fd5b61004361003e36600461037c565b610059565b60405161005091906104aa565b60405180910390f35b606060008373ffffffffffffffffffffffffffffffffffffffff16635339c296846040518263ffffffff1660e01b8152600401610096919061051b565b60206040518083038186803b1580156100ae57600080fd5b505afa1580156100c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e69190610492565b90506000805b610100811015610110576001811b831615610108576001909101905b6001016100ec565b5060008573ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561015957600080fd5b505afa15801561016d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019191906103ba565b90508167ffffffffffffffff811180156101aa57600080fd5b506040519080825280602002602001820160405280156101e457816020015b6101d1610328565b8152602001906001900390816101c95790505b50935060005b61010081101561031e576001811b841615610316576040517ff30dba93000000000000000000000000000000000000000000000000000000008152600187900b60020b60081b8201830290600090819073ffffffffffffffffffffffffffffffffffffffff8b169063f30dba9390610266908690600401610529565b6101006040518083038186803b15801561027f57600080fd5b505afa158015610293573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b791906103e2565b5050505050509150915060405180606001604052808460020b815260200182600f0b8152602001836fffffffffffffffffffffffffffffffff168152508887600190039750878151811061030757fe5b60200260200101819052505050505b6001016101ea565b5050505092915050565b604080516060810182526000808252602082018190529181019190915290565b8051801515811461035857600080fd5b919050565b805161035881610537565b805163ffffffff8116811461035857600080fd5b6000806040838503121561038e578182fd5b823561039981610537565b91506020830135600181900b81146103af578182fd5b809150509250929050565b6000602082840312156103cb578081fd5b81518060020b81146103db578182fd5b9392505050565b600080600080600080600080610100898b0312156103fe578384fd5b88516fffffffffffffffffffffffffffffffff8116811461041d578485fd5b80985050602089015180600f0b8114610434578485fd5b80975050604089015195506060890151945060808901518060060b8114610459578485fd5b935061046760a08a0161035d565b925061047560c08a01610368565b915061048360e08a01610348565b90509295985092959890939650565b6000602082840312156104a3578081fd5b5051919050565b602080825282518282018190526000919060409081850190868401855b8281101561050e578151805160020b855286810151600f0b878601528501516fffffffffffffffffffffffffffffffff1685850152606090930192908501906001016104c7565b5091979650505050505050565b60019190910b815260200190565b60029190910b815260200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461055957600080fd5b5056fea164736f6c6343000706000a","deployedBytecode":"0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063351fb47814610030575b600080fd5b61004361003e36600461037c565b610059565b60405161005091906104aa565b60405180910390f35b606060008373ffffffffffffffffffffffffffffffffffffffff16635339c296846040518263ffffffff1660e01b8152600401610096919061051b565b60206040518083038186803b1580156100ae57600080fd5b505afa1580156100c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e69190610492565b90506000805b610100811015610110576001811b831615610108576001909101905b6001016100ec565b5060008573ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561015957600080fd5b505afa15801561016d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019191906103ba565b90508167ffffffffffffffff811180156101aa57600080fd5b506040519080825280602002602001820160405280156101e457816020015b6101d1610328565b8152602001906001900390816101c95790505b50935060005b61010081101561031e576001811b841615610316576040517ff30dba93000000000000000000000000000000000000000000000000000000008152600187900b60020b60081b8201830290600090819073ffffffffffffffffffffffffffffffffffffffff8b169063f30dba9390610266908690600401610529565b6101006040518083038186803b15801561027f57600080fd5b505afa158015610293573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b791906103e2565b5050505050509150915060405180606001604052808460020b815260200182600f0b8152602001836fffffffffffffffffffffffffffffffff168152508887600190039750878151811061030757fe5b60200260200101819052505050505b6001016101ea565b5050505092915050565b604080516060810182526000808252602082018190529181019190915290565b8051801515811461035857600080fd5b919050565b805161035881610537565b805163ffffffff8116811461035857600080fd5b6000806040838503121561038e578182fd5b823561039981610537565b91506020830135600181900b81146103af578182fd5b809150509250929050565b6000602082840312156103cb578081fd5b81518060020b81146103db578182fd5b9392505050565b600080600080600080600080610100898b0312156103fe578384fd5b88516fffffffffffffffffffffffffffffffff8116811461041d578485fd5b80985050602089015180600f0b8114610434578485fd5b80975050604089015195506060890151945060808901518060060b8114610459578485fd5b935061046760a08a0161035d565b925061047560c08a01610368565b915061048360e08a01610348565b90509295985092959890939650565b6000602082840312156104a3578081fd5b5051919050565b602080825282518282018190526000919060409081850190868401855b8281101561050e578151805160020b855286810151600f0b878601528501516fffffffffffffffffffffffffffffffff1685850152606090930192908501906001016104c7565b5091979650505050505050565b60019190910b815260200190565b60029190910b815260200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461055957600080fd5b5056fea164736f6c6343000706000a","linkReferences":{},"deployedLinkReferences":{}}') }, 4704: T => { "use strict"; T.exports = JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"UniswapInterfaceMulticall","sourceName":"contracts/lens/UniswapInterfaceMulticall.sol","abi":[{"inputs":[],"name":"getCurrentBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"getEthBalance","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"gasLimit","type":"uint256"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct UniswapInterfaceMulticall.Call[]","name":"calls","type":"tuple[]"}],"name":"multicall","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"uint256","name":"gasUsed","type":"uint256"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"internalType":"struct UniswapInterfaceMulticall.Result[]","name":"returnData","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b50610567806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630f28c97d146100465780631749e1e3146100645780634d2301cc14610085575b600080fd5b61004e610098565b60405161005b919061041f565b60405180910390f35b6100776100723660046102a7565b61009c565b60405161005b929190610428565b61004e610093366004610286565b610220565b4290565b8051439060609067ffffffffffffffff811180156100b957600080fd5b506040519080825280602002602001820160405280156100f357816020015b6100e061023a565b8152602001906001900390816100d85790505b50905060005b835181101561021a57600080600086848151811061011357fe5b60200260200101516000015187858151811061012b57fe5b60200260200101516020015188868151811061014357fe5b60200260200101516040015192509250925060005a90506000808573ffffffffffffffffffffffffffffffffffffffff1685856040516101839190610403565b60006040518083038160008787f1925050503d80600081146101c1576040519150601f19603f3d011682016040523d82523d6000602084013e6101c6565b606091505b509150915060005a8403905060405180606001604052808415158152602001828152602001838152508989815181106101fb57fe5b60200260200101819052505050505050505080806001019150506100f9565b50915091565b73ffffffffffffffffffffffffffffffffffffffff163190565b604051806060016040528060001515815260200160008152602001606081525090565b803573ffffffffffffffffffffffffffffffffffffffff8116811461028157600080fd5b919050565b600060208284031215610297578081fd5b6102a08261025d565b9392505050565b600060208083850312156102b9578182fd5b823567ffffffffffffffff808211156102d0578384fd5b818501915085601f8301126102e3578384fd5b8135818111156102ef57fe5b6102fc8485830201610506565b81815284810190848601875b848110156103f457813587017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0606081838f03011215610346578a8bfd5b60408051606081018181108b8211171561035c57fe5b8252610369848d0161025d565b8152818401358c82015260608401358a811115610384578d8efd5b8085019450508e603f850112610398578c8dfd5b8b8401358a8111156103a657fe5b6103b68d85601f84011601610506565b93508084528f838287010111156103cb578d8efd5b808386018e86013783018c018d9052908101919091528552509287019290870190600101610308565b50909998505050505050505050565b6000825161041581846020870161052a565b9190910192915050565b90815260200190565b600060408083018584526020828186015281865180845260609350838701915083838202880101838901875b838110156104f6578983037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa001855281518051151584528681015187850152880151888401889052805188850181905260806104b582828801858c0161052a565b96880196601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01694909401909301925090850190600101610454565b50909a9950505050505050505050565b60405181810167ffffffffffffffff8111828210171561052257fe5b604052919050565b60005b8381101561054557818101518382015260200161052d565b83811115610554576000848401525b5050505056fea164736f6c6343000706000a","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100415760003560e01c80630f28c97d146100465780631749e1e3146100645780634d2301cc14610085575b600080fd5b61004e610098565b60405161005b919061041f565b60405180910390f35b6100776100723660046102a7565b61009c565b60405161005b929190610428565b61004e610093366004610286565b610220565b4290565b8051439060609067ffffffffffffffff811180156100b957600080fd5b506040519080825280602002602001820160405280156100f357816020015b6100e061023a565b8152602001906001900390816100d85790505b50905060005b835181101561021a57600080600086848151811061011357fe5b60200260200101516000015187858151811061012b57fe5b60200260200101516020015188868151811061014357fe5b60200260200101516040015192509250925060005a90506000808573ffffffffffffffffffffffffffffffffffffffff1685856040516101839190610403565b60006040518083038160008787f1925050503d80600081146101c1576040519150601f19603f3d011682016040523d82523d6000602084013e6101c6565b606091505b509150915060005a8403905060405180606001604052808415158152602001828152602001838152508989815181106101fb57fe5b60200260200101819052505050505050505080806001019150506100f9565b50915091565b73ffffffffffffffffffffffffffffffffffffffff163190565b604051806060016040528060001515815260200160008152602001606081525090565b803573ffffffffffffffffffffffffffffffffffffffff8116811461028157600080fd5b919050565b600060208284031215610297578081fd5b6102a08261025d565b9392505050565b600060208083850312156102b9578182fd5b823567ffffffffffffffff808211156102d0578384fd5b818501915085601f8301126102e3578384fd5b8135818111156102ef57fe5b6102fc8485830201610506565b81815284810190848601875b848110156103f457813587017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0606081838f03011215610346578a8bfd5b60408051606081018181108b8211171561035c57fe5b8252610369848d0161025d565b8152818401358c82015260608401358a811115610384578d8efd5b8085019450508e603f850112610398578c8dfd5b8b8401358a8111156103a657fe5b6103b68d85601f84011601610506565b93508084528f838287010111156103cb578d8efd5b808386018e86013783018c018d9052908101919091528552509287019290870190600101610308565b50909998505050505050505050565b6000825161041581846020870161052a565b9190910192915050565b90815260200190565b600060408083018584526020828186015281865180845260609350838701915083838202880101838901875b838110156104f6578983037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa001855281518051151584528681015187850152880151888401889052805188850181905260806104b582828801858c0161052a565b96880196601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01694909401909301925090850190600101610454565b50909a9950505050505050505050565b60405181810167ffffffffffffffff8111828210171561052257fe5b604052919050565b60005b8381101561054557818101518382015260200161052d565b83811115610554576000848401525b5050505056fea164736f6c6343000706000a","linkReferences":{},"deployedLinkReferences":{}}') }, 3465: T => { "use strict"; T.exports = JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"UniswapV3Staker","sourceName":"contracts/UniswapV3Staker.sol","abi":[{"inputs":[{"internalType":"contract IUniswapV3Factory","name":"_factory","type":"address"},{"internalType":"contract INonfungiblePositionManager","name":"_nonfungiblePositionManager","type":"address"},{"internalType":"uint256","name":"_maxIncentiveStartLeadTime","type":"uint256"},{"internalType":"uint256","name":"_maxIncentiveDuration","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"oldOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"DepositTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IERC20Minimal","name":"rewardToken","type":"address"},{"indexed":true,"internalType":"contract IUniswapV3Pool","name":"pool","type":"address"},{"indexed":false,"internalType":"uint256","name":"startTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"},{"indexed":false,"internalType":"address","name":"refundee","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"IncentiveCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"incentiveId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"refund","type":"uint256"}],"name":"IncentiveEnded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"incentiveId","type":"bytes32"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"}],"name":"TokenStaked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"incentiveId","type":"bytes32"}],"name":"TokenUnstaked","type":"event"},{"inputs":[{"internalType":"contract IERC20Minimal","name":"rewardToken","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amountRequested","type":"uint256"}],"name":"claimReward","outputs":[{"internalType":"uint256","name":"reward","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"contract IERC20Minimal","name":"rewardToken","type":"address"},{"internalType":"contract IUniswapV3Pool","name":"pool","type":"address"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"address","name":"refundee","type":"address"}],"internalType":"struct IUniswapV3Staker.IncentiveKey","name":"key","type":"tuple"},{"internalType":"uint256","name":"reward","type":"uint256"}],"name":"createIncentive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"deposits","outputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint48","name":"numberOfStakes","type":"uint48"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"contract IERC20Minimal","name":"rewardToken","type":"address"},{"internalType":"contract IUniswapV3Pool","name":"pool","type":"address"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"address","name":"refundee","type":"address"}],"internalType":"struct IUniswapV3Staker.IncentiveKey","name":"key","type":"tuple"}],"name":"endIncentive","outputs":[{"internalType":"uint256","name":"refund","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"contract IUniswapV3Factory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"contract IERC20Minimal","name":"rewardToken","type":"address"},{"internalType":"contract IUniswapV3Pool","name":"pool","type":"address"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"address","name":"refundee","type":"address"}],"internalType":"struct IUniswapV3Staker.IncentiveKey","name":"key","type":"tuple"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getRewardInfo","outputs":[{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint160","name":"secondsInsideX128","type":"uint160"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"incentives","outputs":[{"internalType":"uint256","name":"totalRewardUnclaimed","type":"uint256"},{"internalType":"uint160","name":"totalSecondsClaimedX128","type":"uint160"},{"internalType":"uint96","name":"numberOfStakes","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxIncentiveDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxIncentiveStartLeadTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"nonfungiblePositionManager","outputs":[{"internalType":"contract INonfungiblePositionManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20Minimal","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"rewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"contract IERC20Minimal","name":"rewardToken","type":"address"},{"internalType":"contract IUniswapV3Pool","name":"pool","type":"address"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"address","name":"refundee","type":"address"}],"internalType":"struct IUniswapV3Staker.IncentiveKey","name":"key","type":"tuple"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"stakeToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes32","name":"incentiveId","type":"bytes32"}],"name":"stakes","outputs":[{"internalType":"uint160","name":"secondsPerLiquidityInsideInitialX128","type":"uint160"},{"internalType":"uint128","name":"liquidity","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"transferDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"contract IERC20Minimal","name":"rewardToken","type":"address"},{"internalType":"contract IUniswapV3Pool","name":"pool","type":"address"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"address","name":"refundee","type":"address"}],"internalType":"struct IUniswapV3Staker.IncentiveKey","name":"key","type":"tuple"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"unstakeToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"withdrawToken","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"","deployedBytecode":"","linkReferences":{},"deployedLinkReferences":{}}') }, 1636: T => { "use strict"; T.exports = { rE: "6.6.1" } }, 9906: T => { "use strict"; T.exports = JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"NonfungibleTokenPositionDescriptor","sourceName":"contracts/NonfungibleTokenPositionDescriptor.sol","abi":[{"inputs":[{"internalType":"address","name":"_WETH9","type":"address"},{"internalType":"bytes32","name":"_nativeCurrencyLabelBytes","type":"bytes32"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"WETH9","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint256","name":"chainId","type":"uint256"}],"name":"flipRatio","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nativeCurrencyLabel","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nativeCurrencyLabelBytes","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"chainId","type":"uint256"}],"name":"tokenRatioPriority","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract INonfungiblePositionManager","name":"positionManager","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"bytecode":"0x60c060405234801561001057600080fd5b5060405161158038038061158083398101604081905261002f9161004a565b60609190911b6001600160601b03191660805260a052610082565b6000806040838503121561005c578182fd5b82516001600160a01b0381168114610072578283fd5b6020939093015192949293505050565b60805160601c60a0516114bf6100c16000398061028f52806102c35280610377525080610107528061014c528061061a528061066e52506114bf6000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063a18246e211610050578063a18246e2146100d5578063b7af3cdc146100dd578063e9dc6375146100f257610072565b80634aa4a4fc146100775780637e5af771146100955780639d7b0ea8146100b5575b600080fd5b61007f610105565b60405161008c9190611311565b60405180910390f35b6100a86100a3366004611017565b610129565b60405161008c9190611325565b6100c86100c3366004611057565b610148565b60405161008c9190611330565b6100c861028d565b6100e56102b1565b60405161008c9190611339565b6100e5610100366004611057565b6103d7565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006101358383610148565b61013f8584610148565b13949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316141561018d5750606319610287565b8160011415610283576001600160a01b03831673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4814156101c4575061012c610287565b6001600160a01b03831673dac17f958d2ee523a2206206994597c13d831ec714156101f1575060c8610287565b6001600160a01b038316736b175474e89094c44da98b954eedeac495271d0f141561021e57506064610287565b6001600160a01b038316738daebade922df735c38c80c7ebd708af50815faa141561024c575060c719610287565b6001600160a01b038316732260fac5e5542a773aa44fbcfedf7c193bc2c599141561027b575061012b19610287565b506000610287565b5060005b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b606060005b60208110801561031657507f000000000000000000000000000000000000000000000000000000000000000081602081106102ed57fe5b1a60f81b7fff000000000000000000000000000000000000000000000000000000000000001615155b15610323576001016102b6565b60008167ffffffffffffffff8111801561033c57600080fd5b506040519080825280601f01601f191660200182016040528015610367576020820181803683370190505b50905060005b828110156103d0577f000000000000000000000000000000000000000000000000000000000000000081602081106103a157fe5b1a60f81b8282815181106103b157fe5b60200101906001600160f81b031916908160001a90535060010161036d565b5091505090565b60606000806000806000876001600160a01b03166399fbab88886040518263ffffffff1660e01b815260040161040d9190611330565b6101806040518083038186803b15801561042657600080fd5b505afa15801561043a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045e91906111dc565b5050505050965096509650965096505050600061051c896001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156104ad57600080fd5b505afa1580156104c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e59190610ff4565b6040518060600160405280896001600160a01b03168152602001886001600160a01b031681526020018762ffffff168152506108e7565b9050600061052d87876100a36109e3565b90506000811561053d578761053f565b865b90506000821561054f5787610551565b885b90506000846001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561058e57600080fd5b505afa1580156105a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c69190611133565b505050505091505073__$cea9be979eee3d87fb124d6cbb244bb0b5$__63c49917d7604051806101c001604052808f8152602001866001600160a01b03168152602001856001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316876001600160a01b03161461065f5761065a876109e7565b610667565b6106676102b1565b81526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316146106b3576106ae866109e7565b6106bb565b6106bb6102b1565b8152602001866001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156106f957600080fd5b505afa15801561070d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073191906111c2565b60ff168152602001856001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561077257600080fd5b505afa158015610786573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107aa91906111c2565b60ff16815260200187151581526020018a60020b81526020018960020b81526020018460020b8152602001886001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561080e57600080fd5b505afa158015610822573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108469190611082565b60020b81526020018b62ffffff168152602001886001600160a01b03168152506040518263ffffffff1660e01b8152600401610882919061134c565b60006040518083038186803b15801561089a57600080fd5b505af41580156108ae573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108d6919081019061109c565b9d9c50505050505050505050505050565b600081602001516001600160a01b031682600001516001600160a01b03161061090f57600080fd5b50805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b6bffffffffffffffffffffffff191660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b4690565b60606000610a15837f95d89b4100000000000000000000000000000000000000000000000000000000610a3a565b9050805160001415610a3257610a2a83610c8f565b915050610a35565b90505b919050565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000085161781529151815160609360009384936001600160a01b03891693919290918291908083835b60208310610ad35780518252601f199092019160209182019101610ab4565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610b33576040519150601f19603f3d011682016040523d82523d6000602084013e610b38565b606091505b5091509150811580610b4957508051155b15610b67576040518060200160405280600081525092505050610287565b805160201415610b9f576000818060200190516020811015610b8857600080fd5b50519050610b9581610c9c565b9350505050610287565b604081511115610c7757808060200190516020811015610bbe57600080fd5b8101908080516040519392919084640100000000821115610bde57600080fd5b908301906020820185811115610bf357600080fd5b8251640100000000811182820188101715610c0d57600080fd5b82525081516020918201929091019080838360005b83811015610c3a578181015183820152602001610c22565b50505050905090810190601f168015610c675780820380516001836020036101000a031916815260200191505b5060405250505092505050610287565b50506040805160208101909152600081529392505050565b6060610a32826006610ddc565b604080516020808252818301909252606091600091906020820181803683370190505090506000805b6020811015610d3e576000858260208110610cdc57fe5b1a60f81b90507fff00000000000000000000000000000000000000000000000000000000000000811615610d355780848481518110610d1757fe5b60200101906001600160f81b031916908160001a9053506001909201915b50600101610cc5565b5060008167ffffffffffffffff81118015610d5857600080fd5b506040519080825280601f01601f191660200182016040528015610d83576020820181803683370190505b50905060005b82811015610dd357838181518110610d9d57fe5b602001015160f81c60f81b828281518110610db457fe5b60200101906001600160f81b031916908160001a905350600101610d89565b50949350505050565b606060028206158015610def5750600082115b8015610dfc575060288211155b610e6757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f41646472657373537472696e675574696c3a20494e56414c49445f4c454e0000604482015290519081900360640190fd5b60008267ffffffffffffffff81118015610e8057600080fd5b506040519080825280601f01601f191660200182016040528015610eab576020820181803683370190505b5090506001600160a01b03841660005b60028504811015610f4f57600860138290030282901c600f600482901c1660f082168203610ee882610f59565b868560020281518110610ef757fe5b60200101906001600160f81b031916908160001a905350610f1781610f59565b868560020260010181518110610f2957fe5b60200101906001600160f81b031916908160001a9053505060019092019150610ebb9050565b5090949350505050565b6000600a8260ff161015610f7457506030810160f81b610a35565b506037810160f81b610a35565b8051610a358161149a565b8051600281900b8114610a3557600080fd5b80516fffffffffffffffffffffffffffffffff81168114610a3557600080fd5b805161ffff81168114610a3557600080fd5b805162ffffff81168114610a3557600080fd5b805160ff81168114610a3557600080fd5b600060208284031215611005578081fd5b81516110108161149a565b9392505050565b60008060006060848603121561102b578182fd5b83356110368161149a565b925060208401356110468161149a565b929592945050506040919091013590565b60008060408385031215611069578182fd5b82356110748161149a565b946020939093013593505050565b600060208284031215611093578081fd5b61101082610f8c565b6000602082840312156110ad578081fd5b815167ffffffffffffffff808211156110c4578283fd5b818401915084601f8301126110d7578283fd5b8151818111156110e357fe5b604051601f8201601f19168101602001838111828210171561110157fe5b604052818152838201602001871015611118578485fd5b61112982602083016020870161146a565b9695505050505050565b600080600080600080600060e0888a03121561114d578283fd5b87516111588161149a565b965061116660208901610f8c565b955061117460408901610fbe565b945061118260608901610fbe565b935061119060808901610fbe565b925061119e60a08901610fe3565b915060c088015180151581146111b2578182fd5b8091505092959891949750929550565b6000602082840312156111d3578081fd5b61101082610fe3565b6000806000806000806000806000806000806101808d8f0312156111fe578485fd5b8c516bffffffffffffffffffffffff81168114611219578586fd5b9b5061122760208e01610f81565b9a5061123560408e01610f81565b995061124360608e01610f81565b985061125160808e01610fd0565b975061125f60a08e01610f8c565b965061126d60c08e01610f8c565b955061127b60e08e01610f9e565b94506101008d015193506101208d0151925061129a6101408e01610f9e565b91506112a96101608e01610f9e565b90509295989b509295989b509295989b565b6001600160a01b03169052565b15159052565b60020b9052565b600081518084526112ed81602086016020860161146a565b601f01601f19169290920160200192915050565b62ffffff169052565b60ff169052565b6001600160a01b0391909116815260200190565b901515815260200190565b90815260200190565b60006020825261101060208301846112d5565b60006020825282516020830152602083015161136b60408401826112bb565b50604083015161137e60608401826112bb565b5060608301516101c080608085015261139b6101e08501836112d5565b91506080850151601f198584030160a08601526113b883826112d5565b92505060a08501516113cd60c086018261130a565b5060c08501516113e060e086018261130a565b5060e08501516101006113f5818701836112c8565b8601519050610120611409868201836112ce565b860151905061014061141d868201836112ce565b8601519050610160611431868201836112ce565b8601519050610180611445868201836112ce565b86015190506101a061145986820183611301565b8601519050610f4f858301826112bb565b60005b8381101561148557818101518382015260200161146d565b83811115611494576000848401525b50505050565b6001600160a01b03811681146114af57600080fd5b5056fea164736f6c6343000706000a","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100725760003560e01c8063a18246e211610050578063a18246e2146100d5578063b7af3cdc146100dd578063e9dc6375146100f257610072565b80634aa4a4fc146100775780637e5af771146100955780639d7b0ea8146100b5575b600080fd5b61007f610105565b60405161008c9190611311565b60405180910390f35b6100a86100a3366004611017565b610129565b60405161008c9190611325565b6100c86100c3366004611057565b610148565b60405161008c9190611330565b6100c861028d565b6100e56102b1565b60405161008c9190611339565b6100e5610100366004611057565b6103d7565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006101358383610148565b61013f8584610148565b13949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316141561018d5750606319610287565b8160011415610283576001600160a01b03831673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4814156101c4575061012c610287565b6001600160a01b03831673dac17f958d2ee523a2206206994597c13d831ec714156101f1575060c8610287565b6001600160a01b038316736b175474e89094c44da98b954eedeac495271d0f141561021e57506064610287565b6001600160a01b038316738daebade922df735c38c80c7ebd708af50815faa141561024c575060c719610287565b6001600160a01b038316732260fac5e5542a773aa44fbcfedf7c193bc2c599141561027b575061012b19610287565b506000610287565b5060005b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b606060005b60208110801561031657507f000000000000000000000000000000000000000000000000000000000000000081602081106102ed57fe5b1a60f81b7fff000000000000000000000000000000000000000000000000000000000000001615155b15610323576001016102b6565b60008167ffffffffffffffff8111801561033c57600080fd5b506040519080825280601f01601f191660200182016040528015610367576020820181803683370190505b50905060005b828110156103d0577f000000000000000000000000000000000000000000000000000000000000000081602081106103a157fe5b1a60f81b8282815181106103b157fe5b60200101906001600160f81b031916908160001a90535060010161036d565b5091505090565b60606000806000806000876001600160a01b03166399fbab88886040518263ffffffff1660e01b815260040161040d9190611330565b6101806040518083038186803b15801561042657600080fd5b505afa15801561043a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045e91906111dc565b5050505050965096509650965096505050600061051c896001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156104ad57600080fd5b505afa1580156104c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e59190610ff4565b6040518060600160405280896001600160a01b03168152602001886001600160a01b031681526020018762ffffff168152506108e7565b9050600061052d87876100a36109e3565b90506000811561053d578761053f565b865b90506000821561054f5787610551565b885b90506000846001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561058e57600080fd5b505afa1580156105a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c69190611133565b505050505091505073__$cea9be979eee3d87fb124d6cbb244bb0b5$__63c49917d7604051806101c001604052808f8152602001866001600160a01b03168152602001856001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316876001600160a01b03161461065f5761065a876109e7565b610667565b6106676102b1565b81526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316146106b3576106ae866109e7565b6106bb565b6106bb6102b1565b8152602001866001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156106f957600080fd5b505afa15801561070d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073191906111c2565b60ff168152602001856001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561077257600080fd5b505afa158015610786573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107aa91906111c2565b60ff16815260200187151581526020018a60020b81526020018960020b81526020018460020b8152602001886001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561080e57600080fd5b505afa158015610822573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108469190611082565b60020b81526020018b62ffffff168152602001886001600160a01b03168152506040518263ffffffff1660e01b8152600401610882919061134c565b60006040518083038186803b15801561089a57600080fd5b505af41580156108ae573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108d6919081019061109c565b9d9c50505050505050505050505050565b600081602001516001600160a01b031682600001516001600160a01b03161061090f57600080fd5b50805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b6bffffffffffffffffffffffff191660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b4690565b60606000610a15837f95d89b4100000000000000000000000000000000000000000000000000000000610a3a565b9050805160001415610a3257610a2a83610c8f565b915050610a35565b90505b919050565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000085161781529151815160609360009384936001600160a01b03891693919290918291908083835b60208310610ad35780518252601f199092019160209182019101610ab4565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610b33576040519150601f19603f3d011682016040523d82523d6000602084013e610b38565b606091505b5091509150811580610b4957508051155b15610b67576040518060200160405280600081525092505050610287565b805160201415610b9f576000818060200190516020811015610b8857600080fd5b50519050610b9581610c9c565b9350505050610287565b604081511115610c7757808060200190516020811015610bbe57600080fd5b8101908080516040519392919084640100000000821115610bde57600080fd5b908301906020820185811115610bf357600080fd5b8251640100000000811182820188101715610c0d57600080fd5b82525081516020918201929091019080838360005b83811015610c3a578181015183820152602001610c22565b50505050905090810190601f168015610c675780820380516001836020036101000a031916815260200191505b5060405250505092505050610287565b50506040805160208101909152600081529392505050565b6060610a32826006610ddc565b604080516020808252818301909252606091600091906020820181803683370190505090506000805b6020811015610d3e576000858260208110610cdc57fe5b1a60f81b90507fff00000000000000000000000000000000000000000000000000000000000000811615610d355780848481518110610d1757fe5b60200101906001600160f81b031916908160001a9053506001909201915b50600101610cc5565b5060008167ffffffffffffffff81118015610d5857600080fd5b506040519080825280601f01601f191660200182016040528015610d83576020820181803683370190505b50905060005b82811015610dd357838181518110610d9d57fe5b602001015160f81c60f81b828281518110610db457fe5b60200101906001600160f81b031916908160001a905350600101610d89565b50949350505050565b606060028206158015610def5750600082115b8015610dfc575060288211155b610e6757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f41646472657373537472696e675574696c3a20494e56414c49445f4c454e0000604482015290519081900360640190fd5b60008267ffffffffffffffff81118015610e8057600080fd5b506040519080825280601f01601f191660200182016040528015610eab576020820181803683370190505b5090506001600160a01b03841660005b60028504811015610f4f57600860138290030282901c600f600482901c1660f082168203610ee882610f59565b868560020281518110610ef757fe5b60200101906001600160f81b031916908160001a905350610f1781610f59565b868560020260010181518110610f2957fe5b60200101906001600160f81b031916908160001a9053505060019092019150610ebb9050565b5090949350505050565b6000600a8260ff161015610f7457506030810160f81b610a35565b506037810160f81b610a35565b8051610a358161149a565b8051600281900b8114610a3557600080fd5b80516fffffffffffffffffffffffffffffffff81168114610a3557600080fd5b805161ffff81168114610a3557600080fd5b805162ffffff81168114610a3557600080fd5b805160ff81168114610a3557600080fd5b600060208284031215611005578081fd5b81516110108161149a565b9392505050565b60008060006060848603121561102b578182fd5b83356110368161149a565b925060208401356110468161149a565b929592945050506040919091013590565b60008060408385031215611069578182fd5b82356110748161149a565b946020939093013593505050565b600060208284031215611093578081fd5b61101082610f8c565b6000602082840312156110ad578081fd5b815167ffffffffffffffff808211156110c4578283fd5b818401915084601f8301126110d7578283fd5b8151818111156110e357fe5b604051601f8201601f19168101602001838111828210171561110157fe5b604052818152838201602001871015611118578485fd5b61112982602083016020870161146a565b9695505050505050565b600080600080600080600060e0888a03121561114d578283fd5b87516111588161149a565b965061116660208901610f8c565b955061117460408901610fbe565b945061118260608901610fbe565b935061119060808901610fbe565b925061119e60a08901610fe3565b915060c088015180151581146111b2578182fd5b8091505092959891949750929550565b6000602082840312156111d3578081fd5b61101082610fe3565b6000806000806000806000806000806000806101808d8f0312156111fe578485fd5b8c516bffffffffffffffffffffffff81168114611219578586fd5b9b5061122760208e01610f81565b9a5061123560408e01610f81565b995061124360608e01610f81565b985061125160808e01610fd0565b975061125f60a08e01610f8c565b965061126d60c08e01610f8c565b955061127b60e08e01610f9e565b94506101008d015193506101208d0151925061129a6101408e01610f9e565b91506112a96101608e01610f9e565b90509295989b509295989b509295989b565b6001600160a01b03169052565b15159052565b60020b9052565b600081518084526112ed81602086016020860161146a565b601f01601f19169290920160200192915050565b62ffffff169052565b60ff169052565b6001600160a01b0391909116815260200190565b901515815260200190565b90815260200190565b60006020825261101060208301846112d5565b60006020825282516020830152602083015161136b60408401826112bb565b50604083015161137e60608401826112bb565b5060608301516101c080608085015261139b6101e08501836112d5565b91506080850151601f198584030160a08601526113b883826112d5565b92505060a08501516113cd60c086018261130a565b5060c08501516113e060e086018261130a565b5060e08501516101006113f5818701836112c8565b8601519050610120611409868201836112ce565b860151905061014061141d868201836112ce565b8601519050610160611431868201836112ce565b8601519050610180611445868201836112ce565b86015190506101a061145986820183611301565b8601519050610f4f858301826112bb565b60005b8381101561148557818101518382015260200161146d565b83811115611494576000848401525b50505050565b6001600160a01b03811681146114af57600080fd5b5056fea164736f6c6343000706000a","linkReferences":{"contracts/libraries/NFTDescriptor.sol":{"NFTDescriptor":[{"length":20,"start":1681}]}},"deployedLinkReferences":{"contracts/libraries/NFTDescriptor.sol":{"NFTDescriptor":[{"length":20,"start":1488}]}}}') }, 8728: T => { "use strict"; T.exports = JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"NFTDescriptor","sourceName":"contracts/libraries/NFTDescriptor.sol","abi":[{"inputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"quoteTokenAddress","type":"address"},{"internalType":"address","name":"baseTokenAddress","type":"address"},{"internalType":"string","name":"quoteTokenSymbol","type":"string"},{"internalType":"string","name":"baseTokenSymbol","type":"string"},{"internalType":"uint8","name":"quoteTokenDecimals","type":"uint8"},{"internalType":"uint8","name":"baseTokenDecimals","type":"uint8"},{"internalType":"bool","name":"flipRatio","type":"bool"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"int24","name":"tickCurrent","type":"int24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"poolAddress","type":"address"}],"internalType":"struct NFTDescriptor.ConstructTokenURIParams","name":"params","type":"tuple"}],"name":"constructTokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"}],"bytecode":"","deployedBytecode":"","linkReferences":{},"deployedLinkReferences":{}}') }, 8330: T => { "use strict"; T.exports = JSON.parse('{"name":"@uniswap/deploy-v3","version":"1.0.4","description":"Deploy Uniswap V3 smart contracts","bin":"dist/index.js","publishConfig":{"access":"restricted"},"main":"dist/index.js","scripts":{"test":"mocha","build":"ncc build index.ts -o dist -m","postbuild":"cat shebang.txt dist/index.js > dist/index.cmd.js && mv dist/index.cmd.js dist/index.js","prestart":"yarn build","start":"node dist/index.js","prepublishOnly":"yarn build"},"files":["dist/"],"engines":{"node":">=12.18.3"},"repository":{"type":"git","url":"git+https://github.com/Uniswap/deploy-v3.git"},"author":{"email":"contact@uniswap.org","name":"Uniswap Labs","url":"https://uniswap.org"},"license":"GPL-3.0-or-later","bugs":{"url":"https://github.com/Uniswap/deploy-v3/issues"},"homepage":"https://uniswap.org","devDependencies":{"@ethersproject/abstract-signer":"^5.5.0","@ethersproject/address":"^5.5.0","@ethersproject/bignumber":"^5.5.0","@ethersproject/constants":"^5.5.0","@ethersproject/contracts":"^5.5.0","@ethersproject/providers":"^5.5.1","@ethersproject/wallet":"^5.5.0","@openzeppelin/contracts":"3.4.1-solc-0.7-2","@types/chai":"^4.2.12","@types/mocha":"^8.0.3","@types/node":"^14.6.3","@uniswap/sdk-core":"^1.0.8","@uniswap/swap-router-contracts":"1.1.0","@uniswap/v3-core":"1.0.0","@uniswap/v3-periphery":"1.1.1","@uniswap/v3-staker":"1.0.2","@vercel/ncc":"^0.38.3","chai":"^4.2.0","commander":"^6.1.0","ganache-cli":"^6.10.1","immer":"^7.0.8","mocha":"^8.1.3","prettier":"^2.1.1","ts-node":"^10.9.2","typescript":"4.8.4","v3-periphery-1_3_0":"npm:@uniswap/v3-periphery@1.3.0"},"dependencies":{"ts-node-dev":"^2.0.0"}}') }
    }; var __webpack_module_cache__ = {}; function __nccwpck_require__(T) { var B = __webpack_module_cache__[T]; if (B !== undefined) { return B.exports } var N = __webpack_module_cache__[T] = { id: T, loaded: false, exports: {} }; var L = true; try { __webpack_modules__[T].call(N.exports, N, N.exports, __nccwpck_require__); L = false } finally { if (L) delete __webpack_module_cache__[T] } N.loaded = true; return N.exports } (() => { __nccwpck_require__.nmd = T => { T.paths = []; if (!T.children) T.children = []; return T } })(); if (typeof __nccwpck_require__ !== "undefined") __nccwpck_require__.ab = __dirname + "/"; var __webpack_exports__ = __nccwpck_require__(98); module.exports = __webpack_exports__
})();